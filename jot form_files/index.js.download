(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define("index", ["react", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["index"] = factory(require("react"), require("react-dom"));
	else
		root["FormFields"] = root["FormFields"] || {}, root["FormFields"]["index"] = factory(root["React"], root["ReactDOM"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_424__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.FieldUtils = undefined;

	var _Address = __webpack_require__(83);

	var _Address2 = _interopRequireDefault(_Address);

	var _Authnet = __webpack_require__(91);

	var _Authnet2 = _interopRequireDefault(_Authnet);

	var _Autocomp = __webpack_require__(93);

	var _Autocomp2 = _interopRequireDefault(_Autocomp);

	var _Autoincrement = __webpack_require__(94);

	var _Autoincrement2 = _interopRequireDefault(_Autoincrement);

	var _Appointment = __webpack_require__(90);

	var _Appointment2 = _interopRequireDefault(_Appointment);

	var _Birthdate = __webpack_require__(95);

	var _Birthdate2 = _interopRequireDefault(_Birthdate);

	var _Bluepay = __webpack_require__(96);

	var _Bluepay2 = _interopRequireDefault(_Bluepay);

	var _Bluesnap = __webpack_require__(97);

	var _Bluesnap2 = _interopRequireDefault(_Bluesnap);

	var _Braintree = __webpack_require__(98);

	var _Braintree2 = _interopRequireDefault(_Braintree);

	var _Button = __webpack_require__(99);

	var _Button2 = _interopRequireDefault(_Button);

	var _Calculation = __webpack_require__(103);

	var _Calculation2 = _interopRequireDefault(_Calculation);

	var _Captcha = __webpack_require__(104);

	var _Captcha2 = _interopRequireDefault(_Captcha);

	var _Cardconnect = __webpack_require__(107);

	var _Cardconnect2 = _interopRequireDefault(_Cardconnect);

	var _Chargify = __webpack_require__(108);

	var _Chargify2 = _interopRequireDefault(_Chargify);

	var _Checkbox = __webpack_require__(109);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	var _Clear = __webpack_require__(113);

	var _Clear2 = _interopRequireDefault(_Clear);

	var _Clickbank = __webpack_require__(114);

	var _Clickbank2 = _interopRequireDefault(_Clickbank);

	var _Collapse = __webpack_require__(115);

	var _Collapse2 = _interopRequireDefault(_Collapse);

	var _Datetime = __webpack_require__(117);

	var _Datetime2 = _interopRequireDefault(_Datetime);

	var _Dropdown = __webpack_require__(122);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	var _Dwolla = __webpack_require__(126);

	var _Dwolla2 = _interopRequireDefault(_Dwolla);

	var _Email = __webpack_require__(128);

	var _Email2 = _interopRequireDefault(_Email);

	var _Echeck = __webpack_require__(127);

	var _Echeck2 = _interopRequireDefault(_Echeck);

	var _Eway = __webpack_require__(129);

	var _Eway2 = _interopRequireDefault(_Eway);

	var _Firstdata = __webpack_require__(186);

	var _Firstdata2 = _interopRequireDefault(_Firstdata);

	var _PaypalInvoicing = __webpack_require__(449);

	var _PaypalInvoicing2 = _interopRequireDefault(_PaypalInvoicing);

	var _Payu = __webpack_require__(457);

	var _Payu2 = _interopRequireDefault(_Payu);

	var _Pagseguro = __webpack_require__(437);

	var _Pagseguro2 = _interopRequireDefault(_Pagseguro);

	var _Moneris = __webpack_require__(433);

	var _Moneris2 = _interopRequireDefault(_Moneris);

	var _Mollie = __webpack_require__(431);

	var _Mollie2 = _interopRequireDefault(_Mollie);

	var _FilepickerIO = __webpack_require__(130);

	var _FilepickerIO2 = _interopRequireDefault(_FilepickerIO);

	var _Fileupload = __webpack_require__(131);

	var _Fileupload2 = _interopRequireDefault(_Fileupload);

	var _Footer = __webpack_require__(187);

	var _Footer2 = _interopRequireDefault(_Footer);

	var _Fullname = __webpack_require__(188);

	var _Fullname2 = _interopRequireDefault(_Fullname);

	var _Geolocation = __webpack_require__(189);

	var _Geolocation2 = _interopRequireDefault(_Geolocation);

	var _Gocardless = __webpack_require__(190);

	var _Gocardless2 = _interopRequireDefault(_Gocardless);

	var _Googleco = __webpack_require__(191);

	var _Googleco2 = _interopRequireDefault(_Googleco);

	var _Grading = __webpack_require__(192);

	var _Grading2 = _interopRequireDefault(_Grading);

	var _Habit = __webpack_require__(193);

	var _Habit2 = _interopRequireDefault(_Habit);

	var _Head = __webpack_require__(194);

	var _Head2 = _interopRequireDefault(_Head);

	var _Helper = __webpack_require__(195);

	var _Helper2 = _interopRequireDefault(_Helper);

	var _Hidden = __webpack_require__(196);

	var _Hidden2 = _interopRequireDefault(_Hidden);

	var _Image = __webpack_require__(197);

	var _Image2 = _interopRequireDefault(_Image);

	var _Inline = __webpack_require__(201);

	var _Inline2 = _interopRequireDefault(_Inline);

	var _Location = __webpack_require__(428);

	var _Location2 = _interopRequireDefault(_Location);

	var _Matrix = __webpack_require__(429);

	var _Matrix2 = _interopRequireDefault(_Matrix);

	var _Number = __webpack_require__(435);

	var _Number2 = _interopRequireDefault(_Number);

	var _Onebip = __webpack_require__(436);

	var _Onebip2 = _interopRequireDefault(_Onebip);

	var _Pagebreak = __webpack_require__(101);

	var _Pagebreak2 = _interopRequireDefault(_Pagebreak);

	var _Passwordbox = __webpack_require__(438);

	var _Passwordbox2 = _interopRequireDefault(_Passwordbox);

	var _Payjunction = __webpack_require__(439);

	var _Payjunction2 = _interopRequireDefault(_Payjunction);

	var _Payment = __webpack_require__(440);

	var _Payment2 = _interopRequireDefault(_Payment);

	var _Paymentwall = __webpack_require__(446);

	var _Paymentwall2 = _interopRequireDefault(_Paymentwall);

	var _Payoneer = __webpack_require__(447);

	var _Payoneer2 = _interopRequireDefault(_Payoneer);

	var _Paypal = __webpack_require__(448);

	var _Paypal2 = _interopRequireDefault(_Paypal);

	var _Paypalexpress = __webpack_require__(453);

	var _Paypalexpress2 = _interopRequireDefault(_Paypalexpress);

	var _Paypalpro = __webpack_require__(454);

	var _Paypalpro2 = _interopRequireDefault(_Paypalpro);

	var _Paypalcomplete = __webpack_require__(452);

	var _Paypalcomplete2 = _interopRequireDefault(_Paypalcomplete);

	var _Cybersource = __webpack_require__(116);

	var _Cybersource2 = _interopRequireDefault(_Cybersource);

	var _PaypalSPB = __webpack_require__(450);

	var _PaypalSPB2 = _interopRequireDefault(_PaypalSPB);

	var _Paysafe = __webpack_require__(456);

	var _Paysafe2 = _interopRequireDefault(_Paysafe);

	var _Phone = __webpack_require__(458);

	var _Phone2 = _interopRequireDefault(_Phone);

	var _Radio = __webpack_require__(461);

	var _Radio2 = _interopRequireDefault(_Radio);

	var _Range = __webpack_require__(462);

	var _Range2 = _interopRequireDefault(_Range);

	var _Rating = __webpack_require__(463);

	var _Rating2 = _interopRequireDefault(_Rating);

	var _Scale = __webpack_require__(465);

	var _Scale2 = _interopRequireDefault(_Scale);

	var _Screenshot = __webpack_require__(467);

	var _Screenshot2 = _interopRequireDefault(_Screenshot);

	var _Separator = __webpack_require__(468);

	var _Separator2 = _interopRequireDefault(_Separator);

	var _Signature = __webpack_require__(469);

	var _Signature2 = _interopRequireDefault(_Signature);

	var _Slider = __webpack_require__(471);

	var _Slider2 = _interopRequireDefault(_Slider);

	var _Sofort = __webpack_require__(472);

	var _Sofort2 = _interopRequireDefault(_Sofort);

	var _Skrill = __webpack_require__(470);

	var _Skrill2 = _interopRequireDefault(_Skrill);

	var _Spinner = __webpack_require__(473);

	var _Spinner2 = _interopRequireDefault(_Spinner);

	var _Square = __webpack_require__(474);

	var _Square2 = _interopRequireDefault(_Square);

	var _Stripe = __webpack_require__(475);

	var _Stripe2 = _interopRequireDefault(_Stripe);

	var _StripeACH = __webpack_require__(476);

	var _StripeACH2 = _interopRequireDefault(_StripeACH);

	var _StripeACHManual = __webpack_require__(477);

	var _StripeACHManual2 = _interopRequireDefault(_StripeACHManual);

	var _Text = __webpack_require__(478);

	var _Text2 = _interopRequireDefault(_Text);

	var _Textarea = __webpack_require__(479);

	var _Textarea2 = _interopRequireDefault(_Textarea);

	var _Textbox = __webpack_require__(480);

	var _Textbox2 = _interopRequireDefault(_Textbox);

	var _Time = __webpack_require__(481);

	var _Time2 = _interopRequireDefault(_Time);

	var _co = __webpack_require__(1);

	var _co2 = _interopRequireDefault(_co);

	var _Widget = __webpack_require__(483);

	var _Widget2 = _interopRequireDefault(_Widget);

	var _Wepay = __webpack_require__(482);

	var _Wepay2 = _interopRequireDefault(_Wepay);

	var _Worldpay = __webpack_require__(487);

	var _Worldpay2 = _interopRequireDefault(_Worldpay);

	var _Worldpayus = __webpack_require__(488);

	var _Worldpayus2 = _interopRequireDefault(_Worldpayus);

	var _Divider = __webpack_require__(121);

	var _Divider2 = _interopRequireDefault(_Divider);

	var _Mixed = __webpack_require__(430);

	var _Mixed2 = _interopRequireDefault(_Mixed);

	var _Imagechoice = __webpack_require__(200);

	var _Imagechoice2 = _interopRequireDefault(_Imagechoice);

	var _Paymentmethods = __webpack_require__(443);

	var _Paymentmethods2 = _interopRequireDefault(_Paymentmethods);

	var _Utils = __webpack_require__(16);

	var Utils = _interopRequireWildcard(_Utils);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Fields = {
	  Address: _Address2.default,
	  Authnet: _Authnet2.default,
	  Autocomp: _Autocomp2.default,
	  Autoincrement: _Autoincrement2.default,
	  Appointment: _Appointment2.default,
	  Birthdate: _Birthdate2.default,
	  Bluepay: _Bluepay2.default,
	  Bluesnap: _Bluesnap2.default,
	  Braintree: _Braintree2.default,
	  Button: _Button2.default,
	  Calculation: _Calculation2.default,
	  Captcha: _Captcha2.default,
	  Cardconnect: _Cardconnect2.default,
	  Checkbox: _Checkbox2.default,
	  Clear: _Clear2.default,
	  Clickbank: _Clickbank2.default,
	  Collapse: _Collapse2.default,
	  Datetime: _Datetime2.default,
	  Dropdown: _Dropdown2.default,
	  Dwolla: _Dwolla2.default,
	  Email: _Email2.default,
	  Echeck: _Echeck2.default,
	  Eway: _Eway2.default,
	  FilepickerIO: _FilepickerIO2.default,
	  Fileupload: _Fileupload2.default,
	  Firstdata: _Firstdata2.default,
	  PaypalInvoicing: _PaypalInvoicing2.default,
	  Gocardless: _Gocardless2.default,
	  Payu: _Payu2.default,
	  Pagseguro: _Pagseguro2.default,
	  Moneris: _Moneris2.default,
	  Mollie: _Mollie2.default,
	  Footer: _Footer2.default,
	  Fullname: _Fullname2.default,
	  Geolocation: _Geolocation2.default,
	  Googleco: _Googleco2.default,
	  Grading: _Grading2.default,
	  Habit: _Habit2.default,
	  Head: _Head2.default,
	  Helper: _Helper2.default,
	  Hidden: _Hidden2.default,
	  Image: _Image2.default,
	  Inline: _Inline2.default,
	  Location: _Location2.default,
	  Matrix: _Matrix2.default,
	  Number: _Number2.default,
	  Onebip: _Onebip2.default,
	  Pagebreak: _Pagebreak2.default,
	  Passwordbox: _Passwordbox2.default,
	  Payjunction: _Payjunction2.default,
	  Chargify: _Chargify2.default,
	  Payment: _Payment2.default,
	  Paymentwall: _Paymentwall2.default,
	  Payoneer: _Payoneer2.default,
	  Paypal: _Paypal2.default,
	  Paypalexpress: _Paypalexpress2.default,
	  Paypalpro: _Paypalpro2.default,
	  Paypalcomplete: _Paypalcomplete2.default,
	  CyberSource: _Cybersource2.default,
	  PaypalSPB: _PaypalSPB2.default,
	  Paysafe: _Paysafe2.default,
	  Phone: _Phone2.default,
	  Radio: _Radio2.default,
	  Range: _Range2.default,
	  Rating: _Rating2.default,
	  Scale: _Scale2.default,
	  Screenshot: _Screenshot2.default,
	  Separator: _Separator2.default,
	  Signature: _Signature2.default,
	  Slider: _Slider2.default,
	  Spinner: _Spinner2.default,
	  Square: _Square2.default,
	  Sofort: _Sofort2.default,
	  Skrill: _Skrill2.default,
	  Stripe: _Stripe2.default,
	  StripeACH: _StripeACH2.default,
	  StripeACHManual: _StripeACHManual2.default,
	  Text: _Text2.default,
	  Textarea: _Textarea2.default,
	  Textbox: _Textbox2.default,
	  Time: _Time2.default,
	  TwoCO: _co2.default,
	  Widget: _Widget2.default,
	  Wepay: _Wepay2.default,
	  Worldpay: _Worldpay2.default,
	  Worldpayus: _Worldpayus2.default,
	  Divider: _Divider2.default,
	  Mixed: _Mixed2.default,
	  Imagechoice: _Imagechoice2.default,
	  Paymentmethods: _Paymentmethods2.default
	};

	var FieldUtils = exports.FieldUtils = Utils;
	exports.default = Fields;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TwoCO = function (_Component) {
	  _inherits(TwoCO, _Component);

	  function TwoCO() {
	    _classCallCheck(this, TwoCO);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  TwoCO.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_2co'
	    }));
	  };

	  return TwoCO;
	}(_react.Component);

	exports.default = TwoCO;


	TwoCO.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	TwoCO.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	TwoCO.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _blueimpMd = __webpack_require__(14);

	var _blueimpMd2 = _interopRequireDefault(_blueimpMd);

	var _FormatPrice = __webpack_require__(15);

	var _FormatPrice2 = _interopRequireDefault(_FormatPrice);

	var _MakeProductText = __webpack_require__(79);

	var _MakeProductText2 = _interopRequireDefault(_MakeProductText);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Utils = __webpack_require__(16);

	var _ImageOverlay = __webpack_require__(81);

	var _ImageOverlay2 = _interopRequireDefault(_ImageOverlay);

	var _MultiSelectDropdown = __webpack_require__(82);

	var _MultiSelectDropdown2 = _interopRequireDefault(_MultiSelectDropdown);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ProductContainer = function (_Component) {
	  _inherits(ProductContainer, _Component);

	  function ProductContainer(props) {
	    _classCallCheck(this, ProductContainer);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	    _this.openToPaymentWizard = _this.openToPaymentWizard.bind(_this);
	    _this.handlePaymentSettingsText = _this.handlePaymentSettingsText.bind(_this);
	    _this.sortProductsByCategories = _this.sortProductsByCategories.bind(_this);
	    _this.getFilteredProducts = _this.getFilteredProducts.bind(_this);
	    _this.handleCollapsible = _this.handleCollapsible.bind(_this);
	    _this.isPaymentNewUi = _this.isPaymentNewUi.bind(_this);
	    _this.isProductActive = _this.isProductActive.bind(_this);

	    _this.reorderedProducts = [];
	    return _this;
	  }

	  // eslint-disable-next-line react/sort-comp


	  ProductContainer.prototype.openToPaymentWizard = function openToPaymentWizard(e) {
	    var _props = this.props,
	        type = _props.type,
	        _props$formProperties = _props.formProperties,
	        updateRightPanelMode = _props$formProperties.updateRightPanelMode,
	        rightPanelToggle = _props$formProperties.rightPanelToggle;

	    var prettifyGatewayName = type && type.value ? type.value.replace('control_', '') : '';
	    var isForceToGatewaySettings = e.target.getAttribute('isForce') === 'true';

	    /* eslint-disable */
	    updateRightPanelMode('paymentsettings', true);

	    var rightPanelMode = JotForm.gatewayConfirmed !== true || isForceToGatewaySettings ? 'gateway_' + prettifyGatewayName : 'launcher';

	    setTimeout(function () {
	      if (window.paymentStore) {
	        window.paymentStore.changeMode(rightPanelMode);
	      }
	    }, 0);

	    rightPanelToggle(true);
	    /* eslint-enable */
	  };

	  ProductContainer.prototype.handlePaymentSettingsText = function handlePaymentSettingsText(text) {
	    var forceToGatewaySettings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	    // Dear Developer: I need to add click event to a part of the text without breaking translation.

	    var dom = null;
	    var matches = text.split(/<a>(.*)<\/a>/);
	    var aIndex = matches.findIndex(function (el) {
	      return el === '';
	    });

	    switch (aIndex) {
	      case 0:
	        dom = _react2.default.createElement(
	          'span',
	          null,
	          _react2.default.createElement(
	            'a',
	            { isForce: forceToGatewaySettings.toString(), onClick: this.openToPaymentWizard },
	            matches[1]
	          ),
	          matches[2]
	        );
	        break;
	      case -1:
	        dom = _react2.default.createElement(
	          'span',
	          null,
	          matches[0],
	          _react2.default.createElement(
	            'a',
	            { isForce: forceToGatewaySettings.toString(), onClick: this.openToPaymentWizard },
	            matches[1]
	          ),
	          matches[2]
	        );
	        break;
	      case 2:
	        dom = _react2.default.createElement(
	          'span',
	          null,
	          matches[0],
	          _react2.default.createElement(
	            'a',
	            { isForce: forceToGatewaySettings.toString(), onClick: this.openToPaymentWizard },
	            matches[1]
	          )
	        );
	        break;
	      default:
	        dom = text;
	        break;
	    }

	    return dom;
	  };

	  ProductContainer.prototype.renderDonationPart = function renderDonationPart() {
	    var additionalClass = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props, 'Numeric');
	    var donationAmountFilled = this.props.donationAmountField && this.props.donationAmountField.value > 0;
	    var minValueFilled = this.props.requireMinimum && this.props.requireMinimum.value === 'Yes' && this.props.suggestedDonation.value > 0;
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'donationText',
	        'for': this.props.qid.value + '_donation',
	        labelValue: this.props.donationText.value,
	        link: this.props.currency.value,
	        wrapAlways: true
	      }),
	      _react2.default.createElement('input', {
	        type: 'text',
	        className: additionalClass,
	        id: this.props.qid.value + '_donation',
	        name: this.props.qname.value + '[price]',
	        value: this.props.suggestedDonation.value,
	        readOnly: donationAmountFilled,
	        'data-custom-amount-field': donationAmountFilled ? this.props.donationAmountField.value : null,
	        'data-min-amount': minValueFilled ? this.props.suggestedDonation.value : null,
	        'data-component': 'paymentDonation'
	      })
	    );
	  };

	  ProductContainer.prototype.sortProductsByCategories = function sortProductsByCategories() {
	    var _props$formProperties2 = this.props.formProperties,
	        paymentListSettings = _props$formProperties2.paymentListSettings,
	        products = _props$formProperties2.products;

	    var newProducts = {
	      jf_uncategorized: []
	    };
	    var orderedProducts = [];
	    var productCategories = null;

	    if (!paymentListSettings || paymentListSettings[0] === undefined) {
	      return products;
	    }

	    productCategories = (0, _Utils.parseJSON)(paymentListSettings[0].productCategories);

	    if (!productCategories || productCategories && productCategories.length === 0) {
	      return products;
	    }

	    products.forEach(function (p) {
	      if (p.disabled === 'hide') {
	        return;
	      }
	      if (!p.cid) {
	        newProducts.jf_uncategorized.push(p);
	      } else if (p.cid && newProducts[p.cid]) {
	        newProducts[p.cid].push(p);
	      } else if (p.cid && !newProducts[p.cid]) {
	        newProducts[p.cid] = [p];
	      }
	    });

	    orderedProducts.push.apply(orderedProducts, newProducts.jf_uncategorized);

	    productCategories.forEach(function (category) {
	      var categoryProducts = newProducts[category.id];
	      if (!categoryProducts || categoryProducts && categoryProducts.length === 0) {
	        return;
	      }

	      // Push category name
	      orderedProducts.push({ isCategory: true, categoryName: category.name, cid: category.id });

	      // Push oredered category products
	      orderedProducts.push.apply(orderedProducts, categoryProducts.sort(function (a, b) {
	        return Number(a.corder) - Number(b.corder);
	      }));
	    });

	    this.reorderedProducts = orderedProducts;
	    if (!ProductContainer.staticVars.reorderedProducts) {
	      ProductContainer.staticVars.reorderedProducts = orderedProducts;
	    }
	    return orderedProducts;
	  };

	  ProductContainer.prototype.getFilteredProducts = function getFilteredProducts(products, paymentListSettings) {
	    var filteredProducts = [];
	    if (paymentListSettings && paymentListSettings.showCategory === 'Yes' && paymentListSettings.showCategoryTitle === 'Yes') {
	      filteredProducts = this.sortProductsByCategories();
	    } else if (paymentListSettings && paymentListSettings.showCategory === 'Yes' && products && products.length > 0) {
	      var blockedProductsPid = [];
	      products.forEach(function (p) {
	        if (blockedProductsPid.includes('' + p.pid)) {
	          return;
	        }

	        var connectedProducts = p.connectedProducts ? (0, _Utils.parseJSON)(p.connectedProducts) : [];
	        if (connectedProducts && connectedProducts.length > 0) {
	          filteredProducts.push(p); // Add current product
	          blockedProductsPid.push.apply(blockedProductsPid, connectedProducts);
	        } else {
	          filteredProducts.push(p);
	        }
	      });
	    } else {
	      var _blockedProductsPid = [];
	      products.forEach(function (p) {
	        if (_blockedProductsPid.includes('' + p.pid)) {
	          return;
	        }

	        var connectedProducts = p.connectedProducts ? (0, _Utils.parseJSON)(p.connectedProducts) : [];
	        if (connectedProducts && connectedProducts.length > 0) {
	          _blockedProductsPid.push.apply(_blockedProductsPid, connectedProducts);
	        }

	        filteredProducts.push(p);
	      });
	    }

	    return filteredProducts;
	  };

	  ProductContainer.prototype.renderProducts = function renderProducts(isPaymentNewUi) {
	    var _this2 = this;

	    var paymentTypeWithShipping = ['control_paypal', 'control_payment', 'control_stripe', 'control_stripeACH', 'control_stripeACHManual', 'control_authnet', 'control_bluepay', 'control_bluesnap', 'control_braintree', 'control_chargify', 'control_cardconnect', 'control_echeck', 'control_eway', 'control_2co', 'control_paypalpro', 'control_paypalcomplete', 'control_cybersource', 'control_paymentwall', 'control_paypalexpress', 'control_worldpay', 'control_dwolla', 'control_square', 'control_firstdata', 'control_paypalInvoicing', 'control_payjunction', 'control_wepay', 'control_worldpayus', 'control_payu', 'control_pagseguro', 'control_moneris', 'control_mollie', 'control_sofort', 'control_payoneer', 'control_paysafe', 'control_skrill', 'control_gocardless', 'control_paypalSPB'];
	    var paymentTypeWithTax = ['control_payment', 'control_paypal', 'control_authnet', 'control_echeck', 'control_eway', 'control_stripe', 'control_stripeACH', 'control_stripeACHManual', 'control_paypalpro', 'control_paypalcomplete', 'control_cybersource', 'control_2co', 'control_paypalexpress', 'control_braintree', 'control_dwolla', 'control_square', 'control_bluepay', 'control_bluesnap', 'control_firstdata', 'control_paypalInvoicing', 'control_payjunction', 'control_paymentwall', 'control_wepay', 'control_worldpayus', 'control_chargify', 'control_cardconnect', 'control_payu', 'control_pagseguro', 'control_moneris', 'control_mollie', 'control_sofort', 'control_payoneer', 'control_skrill', 'control_paysafe', 'control_gocardless', 'control_paypalSPB'];
	    var type = this.props.controlPaymentType;
	    var paymentListSettings = this.props.formProperties.paymentListSettings;

	    var hasShipping = false;
	    var activeProductCategory = null;
	    var brTag = _react2.default.createElement('br', null);
	    var tempTaxSurcharge = '{}';
	    if (this.props.formProperties.taxes && this.props.formProperties.taxes[0] && this.props.formProperties.taxes[0].surcharge && typeof this.props.formProperties.taxes[0].surcharge !== 'string') {
	      tempTaxSurcharge = JSON.stringify(this.props.formProperties.taxes[0].surcharge);
	    } else if (this.props.formProperties.taxes && this.props.formProperties.taxes[0] && this.props.formProperties.taxes[0].surcharge) {
	      tempTaxSurcharge = this.props.formProperties.taxes[0].surcharge;
	    }
	    var hasTax = this.props.formProperties.taxes && this.props.formProperties.taxes[0] && (this.props.formProperties.taxes[0].rate > 0 || parseInt(JSON.parse(tempTaxSurcharge).field, 10) > 0) && paymentTypeWithTax.indexOf(type) > -1 && this.props.paymentType.value === 'product';
	    var tax = {};
	    if (hasTax) {
	      tax = this.props.formProperties.taxes && this.props.formProperties.taxes[0] ? this.props.formProperties.taxes[0] : {};
	    }

	    if (paymentListSettings && paymentListSettings[0] !== undefined) {
	      paymentListSettings = paymentListSettings[0];
	    }

	    var opts = this.getFilteredProducts(this.props.formProperties.products, paymentListSettings);

	    var ptype = this.props.multiple.value === 'Yes' && this.props.paymentType.value !== 'subscription' ? 'checkbox' : 'radio';

	    var productsWithBr = [];
	    var lengthOfCategories = opts.reduce(function (acc, currentValue) {
	      return currentValue.isCategory ? acc + 1 : acc;
	    }, 0);
	    var lineCounter = 0;
	    var categoryIndex = 0;
	    try {
	      var products = opts ? opts.map(function (p, pc) {
	        // skip disabled products
	        if (p.disabled && p.disabled === 'hide') {
	          return null;
	        }
	        var hasSpecialPricing = false;
	        var highlight = _this2.props.formProperties.highlightLine !== 'Disabled' ? 'hover-product-item' : '';
	        var formProductImage = null;
	        var formProductImageUrl = null;
	        var imageClassName = null;
	        var sliderImage = void 0;
	        var categoryIds = [];
	        var isCategoriesLastProduct = typeof opts[pc].isCategory === 'undefined' && typeof opts[pc + 1] !== 'undefined' && typeof opts[pc + 1].isCategory !== 'undefined';
	        if (p.isCategory) {
	          lineCounter = 0;
	          categoryIndex++;
	          activeProductCategory = p.cid;
	          if (paymentListSettings && paymentListSettings.showCategoryTitle === 'Yes') {
	            var isLastCategory = categoryIndex === lengthOfCategories;
	            return _react2.default.createElement(
	              'span',
	              {
	                className: 'form-product-category-item ' + (_this2.isProductActive(activeProductCategory) ? '' : 'title_collapsed') + ' ' + (isLastCategory ? 'last_p_category' : ''),
	                category: activeProductCategory,
	                onClick: function onClick() {
	                  return _this2.handleCollapsible(p);
	                }
	              },
	              _react2.default.createElement(
	                'b',
	                null,
	                p.categoryName
	              ),
	              _react2.default.createElement('span', { className: 'selected-items-icon' })
	            );
	          }

	          return null;
	        }

	        if (p.cid) {
	          categoryIds.push(p.cid);
	          if (p.connectedProducts && (0, _Utils.parseJSON)(p.connectedProducts).length > 0) {
	            _this2.props.formProperties.products.forEach(function (product) {
	              if ((0, _Utils.parseJSON)(p.connectedProducts).includes('' + product.pid)) {
	                categoryIds.push(product.cid);
	              }
	            });
	          }
	        }

	        try {
	          if (p.images && Array.isArray(p.images)) {
	            sliderImage = p.images[0];
	          } else if (p.images && typeof p.images === 'string' && JSON.parse(p.images)) {
	            sliderImage = JSON.parse(p.images)[0];
	          }
	        } catch (err) {
	          console.log('Slider image parse error..');
	        }

	        if (sliderImage || p.icon) {
	          var productImage = sliderImage ? encodeURI(sliderImage) : p.icon.split('"').join("'");
	          // TODO ADD ONCLICK EVENT
	          // const imageClassName = hasOptions ? 'form-product-image-with-options' : 'form-product-image';
	          imageClassName = 'form-product-image-with-options';
	          formProductImage = _react2.default.createElement('img', { src: productImage, alt: 'product', className: imageClassName, width: '50', style: { height: 'auto', verticalAlign: 'middle' } });
	          formProductImageUrl = productImage;
	        }

	        var additionalClasses = '';
	        var inputName = _this2.props.qname.value + '[][id]';
	        var pid = p.pid;

	        if (p.hasExpandedOption) {
	          // add class for checkbox with subproducts
	          additionalClasses = 'form-product-has-subproducts';
	          // change pid for this product checkbox
	          pid = p.pid + '_expanded';
	        }

	        ProductContainer.staticVars.productID[pc] = _this2.props.qid.value + '_' + p.pid;
	        // set calculation object if this product has no expanded option
	        if (!p.hasExpandedOption) {
	          // If subscription has setup fee, use it as the price when displaying total
	          ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid] = {};
	          if (p.setupfee && p.setupfee > 0 && _this2.props.paymentType.value === 'subscription') {
	            ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid].price = p.setupfee;
	            ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid].recurring = p.price;
	          } else {
	            ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid].price = p.price;
	          }
	          // add braintree subscription add-on prices to calculation
	          if (_this2.props.paymentType.value === 'subscription' && type === 'control_braintree') {
	            if (_typeof(p.addOns) === 'object' && p.addOns.length > 0 || typeof p.addOns === 'string' && p.addOns !== '[]') {
	              var addOnsVal = _typeof(p.addOns) === 'object' ? p.addOns : JSON.parse(p.addOns);
	              ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid].addons = 0;
	              for (var i = 0; i < addOnsVal.length; i += 1) {
	                var addOn = addOnsVal[i]._attributes;
	                ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid].addons += parseFloat(addOn.amount, 10);
	              }
	            }
	          }
	          // for subscriptions with custom price
	          if (p.customPrice && _this2.props.paymentType.value === 'subscription') {
	            ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid] = { price: 'custom' };
	          }
	          // set shipping variables for totalcounter
	          var pShipping = '';
	          if (p.shipping) {
	            if (typeof p.shipping !== 'string') {
	              pShipping = JSON.stringify(p.shipping);
	            } else {
	              pShipping = p.shipping;
	            }
	          }
	          if (pShipping.indexOf('{') !== -1 && paymentTypeWithShipping.indexOf(type) > -1 && (!_this2.props.digitalGoods || _this2.props.digitalGoods.value !== 'Yes')) {
	            var ship = JSON.parse(pShipping);
	            if (ship.firstItem || ship.flatRate) {
	              hasShipping = true;
	              ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid].shipping = ship;
	            }
	          }
	          // set tax variables
	          if (hasTax && _this2.props.formProperties.taxes && tax.exemptions.indexOf(p.pid) === -1) {
	            var taxSurcharge = '{}';
	            if (tax.surcharge && typeof tax.surcharge !== 'string') {
	              taxSurcharge = JSON.stringify(tax.surcharge);
	            } else {
	              taxSurcharge = tax.surcharge ? tax.surcharge : taxSurcharge;
	            }
	            ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid].tax = { rate: tax.rate, surcharge: JSON.parse(taxSurcharge) };
	          }
	        }
	        var noPrice = p.hasExpandedOption && p.hasSpecialPricing;

	        var productNameHTML = void 0;
	        if (isPaymentNewUi) {
	          productNameHTML = _react2.default.createElement(
	            'div',
	            { className: 'title_description' },
	            _react2.default.createElement(
	              'span',
	              {
	                className: 'form-product-name',
	                id: 'product-name-' + _this2.props.qid.value + '_' + p.pid
	              },
	              p.name
	            ),
	            _react2.default.createElement(
	              'span',
	              {
	                className: 'form-product-description',
	                id: 'product-name-description-' + _this2.props.qid.value + '_' + p.pid
	              },
	              p.description
	            )
	          );
	        } else {
	          productNameHTML = _react2.default.createElement(
	            'span',
	            {
	              className: 'form-product-name',
	              id: 'product-name-' + _this2.props.qid.value + '_' + p.pid
	            },
	            p.name
	          );
	        }

	        var subscriptionText = null;

	        if (_this2.props.paymentType.value === 'product') {
	          var useDecimal = !(_this2.props.useDecimal && _this2.props.useDecimal.value === 'No');

	          var interval = void 0;
	          if (type === 'control_authnet') {
	            interval = p.period;
	          } else {
	            interval = p.trial;
	          }

	          subscriptionText = _react2.default.createElement(
	            _MakeProductText2.default,
	            {
	              price: p.price,
	              hasSpecialPricing: p.hasSpecialPricing,
	              options: p.options,
	              curr: _this2.props.currency.value,
	              id: ProductContainer.staticVars.productID[pc] + '_price',
	              noPrice: noPrice,
	              passive: _this2.props.passive,
	              useDecimal: useDecimal,
	              interval: interval,
	              gateway: _this2.props.type,
	              isNewUi: isPaymentNewUi
	            },
	            productNameHTML
	          );
	        } else if (_this2.props.paymentType.value === 'subscription' && type === 'control_braintree') {
	          // special case for braintree subscription
	          var subsBrainTreeHasTrialPeriod = null;
	          if (p.trialPeriod && p.trialPeriod !== '0') {
	            subsBrainTreeHasTrialPeriod = _react2.default.createElement(
	              'span',
	              { 'data-wrapper-react': 'true' },
	              _react2.default.createElement(
	                'b',
	                null,
	                'Free'
	              ),
	              ' for ',
	              _react2.default.createElement(
	                'u',
	                null,
	                p.trialDuration,
	                ' ',
	                p.trialDurationUnit,
	                's'
	              ),
	              ', then'
	            );
	          }

	          var subsBrainTreeHasBillingFreq = p.billingFrequency === '1' ? _react2.default.createElement(
	            'u',
	            null,
	            'month'
	          ) : _react2.default.createElement(
	            'u',
	            null,
	            'months'
	          );

	          var subsBrainTreeHasAddons = null;
	          if (_typeof(p.addOns) === 'object' && p.addOns.length > 0 || typeof p.addOns === 'string' && p.addOns !== '[]') {
	            var subsBrainTreeaddOnsVal = _typeof(p.addOns) === 'object' ? JSON.parse(JSON.stringify(p.addOns)) : JSON.parse(p.addOns);

	            var subsBrainTreeaddOnsArray = [];
	            for (var _i = 0; _i < subsBrainTreeaddOnsVal.length; _i += 1) {
	              if (_i > 0) {
	                subsBrainTreeaddOnsArray.push(brTag);
	              }
	              var subsBrainTreeaddOn = subsBrainTreeaddOnsVal[_i]._attributes;
	              var subsBrainTreeaddOnElement = _react2.default.createElement(
	                'span',
	                { 'data-wrapper-react': 'true' },
	                '+ ',
	                subsBrainTreeaddOn.name,
	                ':\xA0',
	                _react2.default.createElement(_FormatPrice2.default, {
	                  priceAmount: subsBrainTreeaddOn.amount,
	                  currency: p.currencyIsoCode
	                })
	              );
	              subsBrainTreeaddOnsArray.push(subsBrainTreeaddOnElement);
	            }
	            subsBrainTreeHasAddons = _react2.default.createElement(
	              'p',
	              { className: 'braintree-addons-box' },
	              subsBrainTreeaddOnsArray
	            );
	          }

	          subscriptionText = _react2.default.createElement(
	            'span',
	            { 'data-wrapper-react': 'true' },
	            productNameHTML,
	            _react2.default.createElement(
	              'span',
	              { className: 'form-product-details' },
	              '(',
	              subsBrainTreeHasTrialPeriod,
	              _react2.default.createElement(
	                'b',
	                null,
	                _react2.default.createElement(_FormatPrice2.default, {
	                  priceAmount: p.price,
	                  currency: p.currencyIsoCode,
	                  priceID: ProductContainer.staticVars.productID[pc] + '_price'
	                })
	              ),
	              'for each\xA0',
	              p.billingFrequency === '1' ? '' : p.billingFrequency,
	              subsBrainTreeHasBillingFreq,
	              ')',
	              subsBrainTreeHasAddons
	            )
	          );
	        } else if (_this2.props.paymentType.value === 'subscription' && type === 'control_stripe' && p.interval) {
	          var subsStripeTrialPeriod = null;
	          if (p.trial_period_days) {
	            subsStripeTrialPeriod = _react2.default.createElement(
	              'span',
	              { 'data-wrapper-react': 'true' },
	              _react2.default.createElement(
	                'b',
	                null,
	                'Free'
	              ),
	              ' for ',
	              _react2.default.createElement(
	                'u',
	                null,
	                p.trial_period_days,
	                ' days'
	              ),
	              ', then\xA0'
	            );
	          }

	          var intervalCount = _react2.default.createElement(
	            'u',
	            null,
	            p.interval_count,
	            ' ',
	            p.interval,
	            's'
	          );
	          if (p.interval_count === 1) {
	            intervalCount = _react2.default.createElement(
	              'u',
	              null,
	              '$',
	              p.interval
	            );
	          }

	          subscriptionText = _react2.default.createElement(
	            'span',
	            { 'data-wrapper-react': 'true' },
	            productNameHTML,
	            _react2.default.createElement(
	              'span',
	              { className: 'form-product-details' },
	              '(',
	              subsStripeTrialPeriod,
	              _react2.default.createElement(
	                'b',
	                null,
	                _react2.default.createElement(_FormatPrice2.default, {
	                  priceAmount: p.price,
	                  currency: p.currency.toUpperCase(),
	                  priceID: ProductContainer.staticVars.productID[pc] + '_price'
	                })
	              ),
	              'for each\xA0',
	              intervalCount,
	              ')'
	            )
	          );
	        } else {
	          var _interval = void 0;
	          if (type === 'control_authnet') {
	            switch (p.period) {
	              case 'Monthly':
	                _interval = 'month';
	                break;

	              case 'Daily':
	                _interval = 'day';
	                break;

	              case 'Bi-Weekly':
	                _interval = 'two weeks';
	                break;

	              case 'Bi-Monthly':
	                _interval = 'two months';
	                break;

	              case 'Quarterly':
	                _interval = '3 months';
	                break;

	              case 'Semi-Yearly':
	                _interval = 'six months';
	                break;

	              case 'Yearly':
	                _interval = 'year';
	                break;

	              case 'Bi-Yearly':
	                _interval = 'two years';
	                break;

	              default:
	                _interval = p.period;
	            }
	          } else {
	            _interval = p.trial;
	          }

	          subscriptionText = _react2.default.createElement(
	            _MakeProductText2.default,
	            {
	              price: p.price,
	              hasSpecialPricing: p.hasSpecialPricing,
	              options: p.options,
	              curr: _this2.props.currency.value,
	              useDecimal: _this2.props.useDecimal.value === 'Yes',
	              duration: p.period,
	              setupfee: p.setupfee,
	              setupfeePeriod: p.setupfeePeriod === '' ? 'None' : p.setupfeePeriod,
	              productTrial: p.trial,
	              id: ProductContainer.staticVars.productID[pc] + '_price',
	              times: p.recurringtimes,
	              noPrice: false,
	              passive: _this2.props.passive,
	              customPrice: p.customPrice,
	              customPriceSource: p.customPriceSource,
	              customPriceName: p.customPrice ? _this2.props.qname.value + '[custom_price_' + p.pid + ']' : '',
	              customFirstPaymentPrice: p.customFirstPaymentPrice === '1',
	              customFirstPaymentPriceSource: p.customFirstPaymentPriceSource,
	              customFirstPaymentName: p.customFirstPaymentPrice ? _this2.props.qname.value + '[custom_first_payment_price_' + p.pid + ']' : '',
	              interval: _interval,
	              gateway: _this2.props.type.value,
	              themeVersion: _this2.props.themeVersion,
	              isNewUi: isPaymentNewUi
	            },
	            productNameHTML
	          );
	        }

	        var optionsArray = [];
	        var productOptionsArray = [];
	        if (p.options && typeof p.options === 'string') {
	          try {
	            productOptionsArray = JSON.parse(p.options);
	          } catch (error) {
	            console.log(error);
	          }
	        } else if (p.options && Array.isArray(p.options)) {
	          productOptionsArray = p.options;
	        }

	        if (productOptionsArray.length > 0) {
	          /*
	           * For products with an option that is expanded and turned into subproducts
	           */
	          if (p.hasExpandedOption) {
	            var pOptions = typeof p.options === 'string' ? JSON.parse(p.options) : JSON.parse(JSON.stringify(p.options));

	            var eopts = []; // expanded option's properties
	            var expandedOption = void 0; // expanded option object
	            var eoptsIndex = void 0; // the expanded option's order

	            // find the option to expand
	            for (var _i2 = 0; _i2 < pOptions.length; _i2 += 1) {
	              if (pOptions[_i2].expanded) {
	                // assign to var then delete from the options list
	                eopts = pOptions[_i2].properties.split('\n');
	                expandedOption = pOptions[_i2];
	                eoptsIndex = _i2;
	                // remove it from the list of (cloned) product options
	                delete pOptions[_i2];
	              }
	            }

	            var rowhtml = []; // row html
	            var headinghtml = [];
	            var headingHtmlInitial = [];
	            if (expandedOption) {
	              // heading for the other options
	              headingHtmlInitial = _react2.default.createElement(
	                'th',
	                { style: { textAlign: 'left' } },
	                _react2.default.createElement(
	                  'span',
	                  { className: 'form-sub-label' },
	                  expandedOption.name
	                )
	              );
	            }

	            // add price column if there are special prices for this product
	            var headingHtmlSpecial = p.hasSpecialPricing ? _react2.default.createElement(
	              'th',
	              { style: { textAlign: 'right' } },
	              _react2.default.createElement(
	                'span',
	                { className: 'form-sub-label' },
	                'Price'.locale()
	              )
	            ) : null;

	            headinghtml.push(headingHtmlInitial);

	            for (var poo = 0; poo < pOptions.length; poo += 1) {
	              var headingOption = null;
	              if (pOptions[poo]) {
	                headingOption = _react2.default.createElement(
	                  'th',
	                  { style: { textAlign: 'left' } },
	                  _react2.default.createElement(
	                    'span',
	                    { className: 'form-product-options-text form-sub-label' },
	                    pOptions[poo].name
	                  )
	                );
	              }
	              headinghtml.push(headingOption);
	            }

	            headinghtml.push(headingHtmlSpecial);

	            var returnHeadingValue = _react2.default.createElement(
	              'tr',
	              null,
	              headinghtml
	            );
	            rowhtml.push(returnHeadingValue);

	            for (var _i3 = 0; _i3 < eopts.length; _i3 += 1) {
	              var optshtml = [];
	              ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid + '_' + _i3] = {};
	              ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid + '_' + _i3].price = p.price;

	              // if this has special pricing, set the calculation object
	              var specialPrice = null;
	              if (expandedOption.specialPricing && expandedOption.specialPrices) {
	                var eid = _this2.props.qid.value + '_' + p.pid + '_' + _i3;
	                var splist = expandedOption.specialPrices.split(',');
	                specialPrice = splist[_i3];
	                ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid + '_' + _i3].child = true;
	                ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid + '_' + _i3].specialPriceField = eid;
	                ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid + '_' + _i3].specialPriceList = splist;
	              }

	              var eoptprice = specialPrice || p.price;
	              // heading for sub-products

	              // set shipping variables for total counter
	              // this is for sub products
	              var _pShipping = '';
	              if (p.shipping) {
	                if (typeof p.shipping !== 'string') {
	                  _pShipping = JSON.stringify(p.shipping);
	                } else {
	                  _pShipping = p.shipping;
	                }
	              }
	              if (_pShipping.indexOf('{') !== -1 && paymentTypeWithShipping.indexOf(type) > -1 && (!_this2.props.digitalGoods || _this2.props.digitalGoods.value !== 'Yes')) {
	                var _ship = JSON.parse(_pShipping);
	                if (_ship.firstItem || _ship.flatRate) {
	                  hasShipping = true;
	                  ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid + '_' + _i3].shipping = _ship;
	                }
	              }

	              // set tax for total counter
	              // for sub products
	              if (hasTax && _this2.props.formProperties.taxes && tax && tax.exemptions.indexOf(p.pid) === -1) {
	                var _taxSurcharge = '{}';
	                if (tax.surcharge && typeof tax.surcharge !== 'string') {
	                  _taxSurcharge = JSON.stringify(tax.surcharge);
	                } else {
	                  _taxSurcharge = tax.surcharge ? tax.surcharge : _taxSurcharge;
	                }
	                ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid + '_' + _i3].tax = { rate: tax.rate, surcharge: JSON.parse(_taxSurcharge) };
	              }

	              for (var po = 0; po < pOptions.length; po += 1) {
	                var opt = pOptions[po];
	                if (!opt) {
	                  continue;
	                }
	                var sid = _this2.props.qid.value + '_' + opt.type + '_' + p.pid + '_' + _i3 + '_' + po;
	                if (opt.type === 'quantity') {
	                  ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid + '_' + _i3].quantityField = sid;
	                }

	                var sopts = opt.properties.split('\n');
	                // if product has special pricing, collect special pricing arrays
	                if (opt.specialPricing && opt.specialPrices) {
	                  var _splist = opt.specialPrices.split(',');
	                  ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid + '_' + _i3].specialPriceField = sid;
	                  ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid + '_' + _i3].specialPriceList = _splist;
	                }

	                var opthtmlInput = null;
	                if (opt.properties === 'Custom Quantity' && sopts.length === 1) {
	                  // TODO ADD PASSIVE MODE
	                  opthtmlInput = _react2.default.createElement('input', {
	                    type: 'text',
	                    size: '3',
	                    value: '0',
	                    className: (0, _Utils.addValidation)(_Utils.classNames.textbox, _this2.props) + ' form-subproduct-quantity form-subproduct-option form-product-custom_quantity',
	                    name: _this2.props.qname.value + '[special_' + p.pid + '_' + _i3 + '][item_' + po + ']',
	                    id: sid
	                  });
	                } else {
	                  var className = opt.type === 'quantity' ? ' form-subproduct-quantity' : '';
	                  var defaultOption = opt.type === 'quantity' ? _react2.default.createElement('option', { value: '0' }) : null;
	                  var selectOptions = [];

	                  for (var vv = 0; vv < sopts.length; vv += 1) {
	                    var selectOption = _react2.default.createElement(
	                      'option',
	                      { value: sopts[vv] },
	                      sopts[vv]
	                    );
	                    selectOptions.push(selectOption);
	                  }

	                  if (isPaymentNewUi) {
	                    opthtmlInput = _react2.default.createElement(
	                      'span',
	                      { className: 'select_cont' },
	                      _react2.default.createElement(
	                        'select',
	                        {
	                          className: (0, _Utils.addValidation)(_Utils.classNames.dropdown, _this2.props) + ' ' + className + ' form-subproduct-option',
	                          name: _this2.props.qname.value + '[special_' + p.pid + '_' + _i3 + '][item_' + po + ']',
	                          id: sid
	                        },
	                        defaultOption,
	                        selectOptions
	                      )
	                    );
	                  } else {
	                    opthtmlInput = _react2.default.createElement(
	                      'select',
	                      {
	                        className: (0, _Utils.addValidation)(_Utils.classNames.dropdown, _this2.props) + ' ' + className + ' form-subproduct-option',
	                        name: _this2.props.qname.value + '[special_' + p.pid + '_' + _i3 + '][item_' + po + ']',
	                        id: sid
	                      },
	                      defaultOption,
	                      selectOptions
	                    );
	                  }
	                }

	                var opthtml = _react2.default.createElement(
	                  'td',
	                  { style: { textAlign: 'center' } },
	                  opthtmlInput
	                );

	                optshtml.push(opthtml);
	              }

	              var optshtmlHiddenColumn = _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement('input', {
	                  type: 'hidden',
	                  value: eopts[_i3].replace(/"/g, '&quot;'),
	                  name: _this2.props.qname.value + '[special_' + p.pid + '_' + _i3 + '][item_' + eoptsIndex + ']'

	                }),
	                _react2.default.createElement('input', {
	                  type: 'checkbox',
	                  checked: 'checked',
	                  id: _this2.props.qid.value + '_' + p.pid + '_' + _i3,
	                  style: { display: 'none' },
	                  name: _this2.props.qname.value + '[][id]',
	                  value: p.pid + '_' + _i3
	                })
	              );

	              var eopthtml = _react2.default.createElement(
	                'th',
	                { style: { textAlign: 'left' } },
	                _react2.default.createElement(
	                  'span',
	                  { className: 'form-product-child-label', style: { fontSize: '0.786em' } },
	                  eopts[_i3]
	                )
	              );
	              var eopthtmlSpecialPricing = p.hasSpecialPricing ? _react2.default.createElement(
	                'td',
	                { style: { textAlign: 'left' } },
	                _react2.default.createElement(
	                  'span',
	                  { className: 'form-product-child-price form-product-child-label' },
	                  _react2.default.createElement(_FormatPrice2.default, {
	                    priceAmount: eoptprice,
	                    currency: _this2.props.currency.value,
	                    priceID: _this2.props.qid.value + '_' + p.pid + '_' + _i3 + '_price',
	                    nofree: true
	                  })
	                )
	              ) : null;

	              var optshtmlRow = _react2.default.createElement(
	                'tr',
	                null,
	                eopthtml,
	                optshtml,
	                eopthtmlSpecialPricing,
	                optshtmlHiddenColumn
	              );
	              rowhtml.push(optshtmlRow);
	            }

	            var tableHtml = _react2.default.createElement(
	              'table',
	              {
	                id: _this2.props.qid.value + '_' + p.pid + '_subproducts',
	                className: 'form-product-child-table'
	              },
	              _react2.default.createElement(
	                'tbody',
	                null,
	                rowhtml
	              )
	            );
	            optionsArray.push(tableHtml);
	          } else {
	            if (!isPaymentNewUi) {
	              optionsArray.push(brTag);
	              optionsArray.push(brTag);
	            }
	            for (var _po = 0; _po < productOptionsArray.length; _po += 1) {
	              var _opt = productOptionsArray[_po];

	              var _sid = _this2.props.qid.value + '_' + _opt.type + '_' + p.pid + '_' + _po;

	              if (_opt.type === 'quantity') {
	                ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid].quantityField = _sid;
	              }
	              var _sopts = _opt.properties.split('\n');
	              // if product has special pricing, collect special pricing arrays
	              if (_opt.specialPricing && _opt.specialPrices) {
	                var _splist2 = _opt.specialPrices.split(',');
	                ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid].specialPriceField = _sid;
	                ProductContainer.staticVars.totalCounter[_this2.props.qid.value + '_' + p.pid].specialPriceList = _splist2;
	                hasSpecialPricing = true;
	              }

	              var customQuantity = null;

	              if (_opt.properties === 'Custom Quantity' && _sopts.length === 1) {
	                // TODO: add PASSIVE mode LOGIC
	                customQuantity = _react2.default.createElement('input', {
	                  type: 'text',
	                  size: '3',
	                  defaultValue: _opt.defaultQuantity || 0,
	                  value: _opt.defaultQuantity || 0,
	                  className: (0, _Utils.addValidation)(_Utils.classNames.textbox, _this2.props) + ' form-product-custom_quantity',
	                  name: _this2.props.qname.value + '[special_' + p.pid + '][item_' + _po + ']',
	                  id: _sid
	                });
	              } else {
	                // TODO: add escapeValue function
	                var customQuantitySelectOptions = _sopts.map(function (sopt) {
	                  return _react2.default.createElement(
	                    'option',
	                    { value: sopt },
	                    sopt
	                  );
	                });
	                if (isPaymentNewUi) {
	                  customQuantity = _react2.default.createElement(
	                    'span',
	                    { className: 'select_cont' },
	                    _react2.default.createElement(
	                      'select',
	                      {
	                        className: '' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, _this2.props),
	                        name: _this2.props.qname.value + '[special_' + p.pid + '][item_' + _po + ']',
	                        id: _sid
	                      },
	                      customQuantitySelectOptions
	                    )
	                  );
	                } else {
	                  customQuantity = _react2.default.createElement(
	                    'select',
	                    {
	                      className: '' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, _this2.props),
	                      name: _this2.props.qname.value + '[special_' + p.pid + '][item_' + _po + ']',
	                      id: _sid
	                    },
	                    customQuantitySelectOptions
	                  );
	                }
	              }

	              var subLabelCustomQuantity = _react2.default.createElement(
	                _SubLabel2.default,
	                {
	                  labelValue: _opt.name,
	                  'for': _sid,
	                  reverse: true
	                },
	                customQuantity
	              );

	              optionsArray.push(subLabelCustomQuantity);
	            }
	          }
	        }

	        // for customer-defined recurring times
	        if (p.recurringtimes && p.recurringtimes === 'customer-selected') {
	          var recurringTimesOptions = [];
	          for (var _i4 = 0; _i4 < 52; _i4 += 1) {
	            var rtOption = _react2.default.createElement(
	              'option',
	              { value: _i4 + 1 },
	              _i4 + 1
	            );
	            recurringTimesOptions.push(rtOption);
	          }
	          var recurringTimes = _react2.default.createElement(
	            'select',
	            { name: 'custom_recurringtimes[' + p.pid + ']', className: 'custom_recurringtimes[' + p.pid + ']', id: 'recurring-times_' + p.pid },
	            _react2.default.createElement(
	              'option',
	              { value: 'unlimited' },
	              'Unlimited'.locale()
	            ),
	            recurringTimesOptions
	          );

	          var recurringTimesSublabel = _react2.default.createElement(
	            _SubLabel2.default,
	            { labelValue: 'Recurring payments' },
	            recurringTimes
	          );
	          optionsArray.push(brTag);
	          optionsArray.push(brTag);
	          optionsArray.push(recurringTimesSublabel);
	        }

	        if (p.showSubtotal && p.showSubtotal !== '0' && p.showSubtotal !== 'false' && (p.hasQuantity || hasSpecialPricing || p.hasExpandedOption)) {
	          var subTotal = _react2.default.createElement(
	            'span',
	            { className: 'form-special-subtotal' },
	            _react2.default.createElement(
	              'span',
	              { className: 'form-item-subtotal' },
	              'Item subtotal:'.locale()
	            ),
	            _react2.default.createElement(_FormatPrice2.default, {
	              priceAmount: 0,
	              currency: _this2.props.currency.value,
	              priceID: ProductContainer.staticVars.productID[pc] + '_item_subtotal',
	              nofree: true
	            })
	          );
	          optionsArray.push(brTag);
	          optionsArray.push(subTotal);
	        }

	        // TODO: add first input's onClick event
	        var disabledCheckbox = ptype === 'checkbox' && !!Number(p.required) ? true : null;
	        // TODO: Open payment wizard with the correct product.
	        var paymentMode = _this2.props.paymentType.value === 'product' ? 'launcher' : 'launcher';
	        var productOnClick = _this2.props.inlineEditClass && _this2.props.formProperties.openPaymentWizard ? function () {
	          return _this2.props.formProperties.openPaymentWizard(paymentMode, p.pid);
	        } : null;
	        var quantityOption = Array.isArray(p.options) ? p.options.find(function (option) {
	          return option.type === 'quantity';
	        }) : false;
	        var canCheck = !(p.hasQuantity && !p.hasExpandedOption && quantityOption && quantityOption.properties === 'Custom Quantity' && quantityOption.defaultQuantity < 1);

	        // Grid Layout
	        var gridClass = '';
	        if (paymentListSettings && paymentListSettings.productListLayout) {
	          switch (paymentListSettings.productListLayout) {
	            case 'V2C':
	              gridClass = 'on_col' + (lineCounter % 2 + 1).toString();
	              lineCounter++;
	              break;
	            case 'V3C':
	              gridClass = 'on_col' + (lineCounter % 3 + 1).toString();
	              lineCounter++;
	              break;
	            default:
	              break;
	          }
	        }

	        var productClassName = 'form-product-item ' + highlight + ' ' + gridClass;
	        if (!_this2.isProductActive(activeProductCategory)) {
	          productClassName += ' not-category-found';
	        }

	        if (isPaymentNewUi) {
	          var isImageExist = formProductImage !== null; // Is Image Exist
	          var isQuantityOrOptionsExist = optionsArray.length !== 0; // Is Quantity or Option Exists
	          var isSubtotalDisplayed = p.showSubtotal && p.showSubtotal !== '0' ? true : false; // Is total exist
	          if (isImageExist) productClassName += ' show_image';
	          if (p.description) productClassName += ' show_desc';
	          if (isQuantityOrOptionsExist) productClassName += ' show_option';
	          if (isSubtotalDisplayed && (p.hasQuantity === '1' || hasSpecialPricing)) productClassName += ' show_subtotal';
	          if (p.hasExpandedOption) {
	            if (p.selected) {
	              productClassName += ' show_sub_product';
	            } else {
	              productClassName += ' sub_product';
	            }
	          }
	          if (p.fitImageToCanvas === 'No') {
	            productClassName += ' full_img';
	          }
	        }

	        additionalClasses += ' form-product-input';

	        var renderProduct = void 0;
	        if (isPaymentNewUi) {
	          renderProduct = _react2.default.createElement(
	            _react2.default.Fragment,
	            null,
	            _react2.default.createElement(
	              'span',
	              {
	                className: productClassName + ' new_ui',
	                onClick: productOnClick,
	                categories: categoryIds.length > 0 ? categoryIds.toString() : 'non-categorized',
	                'active-category': p.cid || activeProductCategory,
	                pid: p.pid
	              },
	              _react2.default.createElement(
	                'div',
	                { 'data-wrapper-react': 'true', className: 'form-product-item-detail new_ui' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'p_col' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'p_checkbox' },
	                    _react2.default.createElement('input', {
	                      className: (0, _Utils.addValidation)(_Utils.classNames[ptype], _this2.props) + ' ' + additionalClasses,
	                      type: ptype,
	                      id: _this2.props.qid.value + '_' + p.pid,
	                      name: inputName,
	                      value: pid,
	                      checked: !!Number(p.selected) && canCheck // canCheck: false if there is custom quantity and it is < 1
	                      , disabled: disabledCheckbox && canCheck
	                    }),
	                    _react2.default.createElement('div', { className: 'checked' }),
	                    _react2.default.createElement('div', { className: 'select_border' })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'p_image' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'image_area ' + imageClassName, style: { backgroundImage: 'url("' + formProductImageUrl + '")' } },
	                    _react2.default.createElement('div', { className: 'image_zoom' })
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  {
	                    htmlFor: _this2.props.qid.value + '_' + p.pid,
	                    className: 'form-product-container'
	                    // {onProductClickOption}
	                  },
	                  subscriptionText,
	                  optionsArray
	                )
	              )
	            ),
	            pc !== opts.length - 1 && _react2.default.createElement('div', { className: 'p_item_separator ' + (isCategoriesLastProduct ? 'last_p_seperator' : '') })
	          );
	        } else {
	          var descriptionField = void 0;
	          if (typeof p.description !== 'undefined') {
	            descriptionField = _react2.default.createElement(
	              'div',
	              {
	                className: 'form-product-description',
	                id: 'product-name-description-' + _this2.props.qid.value + '_' + p.pid
	              },
	              p.description
	            );
	          }
	          renderProduct = _react2.default.createElement(
	            'span',
	            {
	              className: '' + productClassName,
	              onClick: productOnClick,
	              categories: categoryIds.length > 0 ? categoryIds.toString() : 'non-categorized',
	              'active-category': p.cid || activeProductCategory,
	              pid: p.pid
	            },
	            formProductImage,
	            _react2.default.createElement(
	              'div',
	              { 'data-wrapper-react': 'true', className: 'form-product-item-detail' },
	              _react2.default.createElement('input', {
	                className: (0, _Utils.addValidation)(_Utils.classNames[ptype], _this2.props) + ' ' + additionalClasses,
	                type: ptype,
	                id: _this2.props.qid.value + '_' + p.pid,
	                name: inputName,
	                value: pid,
	                checked: !!Number(p.selected) && canCheck // canCheck: false if there is custom quantity and it is < 1
	                , disabled: disabledCheckbox && canCheck
	              }),
	              _react2.default.createElement(
	                'label',
	                {
	                  htmlFor: _this2.props.qid.value + '_' + p.pid,
	                  className: 'form-product-container'
	                  // {onProductClickOption}
	                },
	                subscriptionText,
	                descriptionField
	              ),
	              optionsArray
	            )
	          );
	        }
	        return renderProduct;
	      }) : null;
	      if (products) {
	        for (var _iterator = products, _isArray = Array.isArray(_iterator), _i5 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
	          var _ref;

	          if (_isArray) {
	            if (_i5 >= _iterator.length) break;
	            _ref = _iterator[_i5++];
	          } else {
	            _i5 = _iterator.next();
	            if (_i5.done) break;
	            _ref = _i5.value;
	          }

	          var el = _ref;

	          if (el) {
	            productsWithBr.push(el);

	            if (!isPaymentNewUi) {
	              productsWithBr.push(brTag);
	            }
	          }
	        }
	      }
	    } catch (e) {
	      console.log(e);
	    }
	    return { products: productsWithBr, hasShipping: hasShipping };
	  };

	  ProductContainer.prototype.handleCollapsible = function handleCollapsible(product) {
	    var formProperties = this.props.formProperties;

	    formProperties.toggleCategoryWrapper(product.cid);
	  };

	  ProductContainer.prototype.renderOtherParts = function renderOtherParts(isPaymentNewUi) {
	    var _this3 = this;

	    var type = this.props.controlPaymentType;
	    var opts = this.props.formProperties.products || false;

	    var warningMessage = '';
	    /* eslint-disable */
	    if (opts === false || Object.prototype.toString.call(opts) === '[object Array]' && opts.length === 0) {
	      if (this.props.passive) {
	        warningMessage = _react2.default.createElement(
	          'div',
	          { className: 'payment_alert wizard' },
	          _react2.default.createElement(
	            'ul',
	            null,
	            JotForm.gatewayConfirmed !== true && _react2.default.createElement(
	              'li',
	              null,
	              'You haven’t finished configuring this payment integration.'.locale()
	            ),
	            _react2.default.createElement(
	              'li',
	              null,
	              'You haven\'t added any products.'.locale()
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            null,
	            this.handlePaymentSettingsText("Go to <a>Payment Settings</a> to configure your payment details and products.".locale())
	          )
	        );

	        return warningMessage;
	      }

	      ProductContainer.staticVars.hidden = true;
	      return null;
	    }
	    /* eslint-enable */

	    var paymentTypeWithShipping = ['control_2co', 'control_authnet', 'control_bluepay', 'control_bluesnap', 'control_braintree', 'control_chargify', 'control_cardconnect', 'control_dwolla', 'control_echeck', 'control_eway', 'control_firstdata', 'control_paypalInvoicing', 'control_gocardless', 'control_payjunction', 'control_payment', 'control_paymentwall', 'control_paypalexpress', 'control_paypal', 'control_paypalpro', 'control_square', 'control_stripe', 'control_stripeACH', 'control_stripeACHManual', 'control_wepay', 'control_worldpay', 'control_worldpayus', 'control_payu', 'control_pagseguro', 'control_moneris', 'control_mollie', 'control_sofort', 'control_payoneer', 'control_paysafe', 'control_skrill', 'control_paypalSPB', 'control_paypalcomplete'];
	    var paymentTypeWithTax = ['control_2co', 'control_authnet', 'control_bluepay', 'control_bluesnap', 'control_braintree', 'control_cardconnect', 'control_chargify', 'control_dwolla', 'control_echeck', 'control_eway', 'control_firstdata', 'control_paypalInvoicing', 'control_gocardless', 'control_payjunction', 'control_payment', 'control_paymentwall', 'control_paypal', 'control_paypalexpress', 'control_paypalpro', 'control_square', 'control_stripe', 'control_stripeACH', 'control_stripeACHManual', 'control_wepay', 'control_worldpayus', 'control_payu', 'control_pagseguro', 'control_moneris', 'control_mollie', 'control_sofort', 'control_payoneer', 'control_paysafe', 'control_skrill', 'control_paypalSPB', 'control_paypalcomplete'];

	    var paymentListSettings = this.props.formProperties.paymentListSettings && typeof this.props.formProperties.paymentListSettings !== 'undefined' ? this.props.formProperties.paymentListSettings[0] : false;

	    var showMinTotalOrderAmount = paymentListSettings !== 'false' && paymentListSettings.minTotalOrderAmount > 0 && paymentListSettings.showMinTotalOrderAmount === 'Yes';
	    var minTotalOrderAmount = showMinTotalOrderAmount === true ? paymentListSettings.minTotalOrderAmount : 0;
	    var minTotalOrderAmountField = void 0;
	    if (minTotalOrderAmount) {
	      minTotalOrderAmountField = _react2.default.createElement('input', {
	        type: 'hidden',
	        name: 'minTotalOrderAmount',
	        'data-min-amount': minTotalOrderAmount ? minTotalOrderAmount : '0',
	        value: minTotalOrderAmount ? minTotalOrderAmount : '0'
	      });
	    }

	    // const opts = this.getProperty('products');
	    var subscriptionWithCoupons = ['control_paypal', 'control_paypalpro', 'control_cybersource', 'control_stripe', 'control_square'];
	    // const hasOptions = false;
	    var hasCoupons = (this.props.paymentType.value === 'product' || this.props.paymentType.value === 'subscription' && subscriptionWithCoupons.indexOf(type) > -1) && (this.props.formProperties.coupons && this.props.formProperties.coupons.length > 0 || this.props.formProperties.useStripeCoupons === '1' && this.props.showStripeCoupons && (this.props.showStripeCoupons.value === '1' || this.props.showStripeCoupons.value === '' || this.props.showStripeCoupons.value === null));
	    var tempTaxSurcharge = '{}';
	    if (this.props.formProperties.taxes && this.props.formProperties.taxes[0] && this.props.formProperties.taxes[0].surcharge && typeof this.props.formProperties.taxes[0].surcharge !== 'string') {
	      tempTaxSurcharge = JSON.stringify(this.props.formProperties.taxes[0].surcharge);
	    } else if (this.props.formProperties.taxes && this.props.formProperties.taxes[0] && this.props.formProperties.taxes[0].surcharge) {
	      tempTaxSurcharge = this.props.formProperties.taxes[0].surcharge;
	    }
	    var hasTax = this.props.formProperties.taxes && (this.props.formProperties.taxes[0].rate > 0 || parseInt(JSON.parse(tempTaxSurcharge).field, 10) > 0) && paymentTypeWithTax.indexOf(type) > -1 && this.props.paymentType.value === 'product';
	    // let tax = {};
	    if (hasTax) {
	      // tax = this.props.formProperties.taxes && this.props.formProperties.taxes[0] ? this.props.formProperties.taxes[0] : {};
	    }

	    var passiveShowSingleInfo = null;
	    if (opts.length < 2 && !hasCoupons && !hasTax && type !== 'control_authnet' && type !== 'control_bluepay' && type !== 'control_bluesnap' && type !== 'control_braintree' && type !== 'control_chargify' && type !== 'control_cardconnect' && type !== 'control_echeck' && type !== 'control_eway' && type !== 'control_firstdata' && type !== 'control_paypalInvoicing' && type !== 'control_paymentwall' && type !== 'control_payjunction' && type !== 'control_paymill' && type !== 'control_paypalexpress' && type !== 'control_paypalpro' && type !== 'control_paypalcomplete' && type !== 'control_square' && type !== 'control_stripe' && type !== 'control_stripeACH' && type !== 'control_stripeACHManual' && type !== 'control_wepay' && type !== 'control_worldpayus' && type !== 'control_payu' && type !== 'control_pagseguro' && type !== 'control_moneris' && type !== 'control_mollie' && type !== 'control_sofort' && type !== 'control_payoneer' && type !== 'control_paysafe' && type !== 'control_skrill' && type !== 'control_gocardless' && type !== 'control_paypalSPB' && type !== 'control_cybersource' && (!opts[0].options || opts[0].options && (opts[0].options.length < 1 || typeof opts[0].options === 'string' && opts[0].options === '[]')) && !opts[0].customPrice) {
	      if (this.props.passive) {
	        if (this.props.showSingle && (this.props.showSingle.value === true || this.props.showSingle.value === 'true' || this.props.showSingle.value === '1')) {
	          passiveShowSingleInfo = _react2.default.createElement(
	            'div',
	            {
	              className: 'hidden-field-warning payment_alert low',
	              style: { marginBottom: '10px' }
	            },
	            _react2.default.createElement(
	              'p',
	              { style: { margin: '0', overflow: 'auto', display: 'block' } },
	              'This payment field will be seen on the form. '.locale(),
	              _react2.default.createElement('br', null),
	              _react2.default.createElement(
	                'a',
	                {
	                  onClick: this.props.formProperties.updateQuestionProperties ? function () {
	                    return _this3.props.formProperties.updateQuestionProperties(_this3.props.id.value, { showSingle: false });
	                  } : null,
	                  style: { textDecoration: 'underline', cursor: 'pointer' }
	                },
	                'Click here to HIDE instead'.locale()
	              )
	            )
	          );
	        } else {
	          passiveShowSingleInfo = _react2.default.createElement(
	            'div',
	            {
	              className: 'hidden-field-warning payment_alert mid',
	              style: { marginBottom: '10px' }
	            },
	            _react2.default.createElement(
	              'p',
	              { style: { margin: '0', overflow: 'auto', display: 'block' } },
	              'This payment field will NOT be seen on the form. '.locale(),
	              _react2.default.createElement('br', null),
	              _react2.default.createElement(
	                'a',
	                {
	                  onClick: this.props.formProperties.updateQuestionProperties ? function () {
	                    return _this3.props.formProperties.updateQuestionProperties(_this3.props.id.value, { showSingle: true });
	                  } : null,
	                  style: { textDecoration: 'underline', cursor: 'pointer' }
	                },
	                'Click here to SHOW instead'.locale()
	              )
	            )
	          );
	        }
	      } else if (!this.props.showSingle || !this.props.showSingle.value || this.props.showSingle.value === 'false') {
	        ProductContainer.staticVars.hidden = true;
	        return _react2.default.createElement('input', { type: 'hidden', name: this.props.qname.value + '[][id]', value: opts[0].pid });
	      }
	    }

	    var products = this.renderProducts(isPaymentNewUi);
	    var hasShipping = products.hasShipping;

	    var paymentStringsDefault = {
	      couponApply: 'Apply'.locale(),
	      couponEnter: 'Enter coupon'.locale(),
	      totalSubtotal: 'Subtotal'.locale(),
	      taxTax: 'Tax'.locale(),
	      shippingShipping: 'Shipping'.locale(),
	      totalTotal: 'Total'.locale()
	    };
	    var paymentStrings = paymentStringsDefault;
	    if (this.props.passive) {
	      paymentStrings = this.props.formProperties.paymentStrings ? Object.assign({}, paymentStringsDefault, this.props.formProperties.paymentStrings[0]) : paymentStringsDefault;
	    }
	    var inlineCouponEnter = void 0;
	    var inlineCouponApply = void 0;
	    var inlineSubTotal = void 0;
	    var inlineTax = void 0;
	    var inlineShipping = void 0;
	    var inlineTotal = void 0;
	    if (this.props.inlineEditClass) {
	      inlineCouponApply = _react2.default.createElement(this.props.inlineEditClass, {
	        id: 'Form',
	        propPath: 'paymentStrings[0].couponApply',
	        text: paymentStrings.couponApply || ''
	      });
	      inlineCouponEnter = _react2.default.createElement(this.props.inlineEditClass, {
	        id: 'Form',
	        propPath: 'paymentStrings[0].couponEnter',
	        text: paymentStrings.couponEnter || ''
	      });
	      inlineSubTotal = _react2.default.createElement(this.props.inlineEditClass, {
	        id: 'Form',
	        propPath: 'paymentStrings[0].totalSubtotal',
	        text: paymentStrings.totalSubtotal || ''
	      });
	      inlineTax = _react2.default.createElement(this.props.inlineEditClass, {
	        id: 'Form',
	        propPath: 'paymentStrings[0].taxTax',
	        text: paymentStrings.taxTax || ''
	      });
	      inlineShipping = _react2.default.createElement(this.props.inlineEditClass, {
	        id: 'Form',
	        propPath: 'paymentStrings[0].shippingShipping',
	        text: paymentStrings.shippingShipping || ''
	      });
	      inlineTotal = _react2.default.createElement(this.props.inlineEditClass, {
	        id: 'Form',
	        propPath: 'paymentStrings[0].totalTotal',
	        text: paymentStrings.totalTotal || ''
	      });
	    }
	    var couponContainerArray = [];

	    if (hasCoupons) {
	      var useStripeCoupons = this.props.paymentType.value === 'subscription' && this.props.formProperties.useStripeCoupons === '1';
	      var couponStripeAttr = this.props.controlPaymentType === 'control_stripe' && useStripeCoupons ? true : null;
	      var couponInput = void 0;
	      if (isPaymentNewUi) {
	        couponInput = _react2.default.createElement('input', {
	          name: 'coupon-input', id: 'coupon-input', 'data-stripe': couponStripeAttr,
	          type: 'text', size: '15',
	          placeholder: 'Enter Coupon Code', autoComplete: 'off', 'aria-labelledby': 'coupon-header coupon-message'
	        });
	      } else {
	        couponInput = _react2.default.createElement('input', { name: 'coupon-input', id: 'coupon-input', 'data-stripe': couponStripeAttr, type: 'text', size: '15', autoComplete: 'off', 'aria-labelledby': 'coupon-header coupon-message' });
	      }
	      var couponContainer = _react2.default.createElement(
	        'div',
	        { id: 'coupon-container', style: { border: '1px solid lightgray', padding: '5px', borderRadius: '6px', width: '200px', marginTop: '8px' } },
	        _react2.default.createElement(
	          'table',
	          { id: 'coupon-table' },
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'th',
	              { colSpan: '2', style: { textAlign: 'left' } },
	              _react2.default.createElement(
	                'label',
	                { id: 'coupon-header', htmlFor: 'coupon-input' },
	                inlineCouponEnter || paymentStrings.couponEnter.locale()
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              null,
	              couponInput
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '40%', style: { textAlign: 'center' } },
	              _react2.default.createElement('img', {
	                src: this.props.cdnconfig.CDN + '/images/ajax-loader.gif',
	                alt: 'coupon loading',
	                id: 'coupon-loader',
	                style: { display: 'none', verticalAlign: 'top' }
	              }),
	              _react2.default.createElement(
	                'button',
	                { type: 'button', id: 'coupon-button', 'data-qid': this.props.qid.value, value: '' },
	                inlineCouponApply || paymentStrings.couponApply.locale()
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'th',
	              { colSpan: '2', style: { textAlign: 'left' } },
	              _react2.default.createElement('span', { id: 'coupon-message', role: 'alert' })
	            )
	          )
	        )
	      );
	      var brTag = _react2.default.createElement('br', null);
	      var couponContainerHiddenInput = _react2.default.createElement('input', { id: this.props.qid.value + '_coupon', type: 'hidden', name: 'coupon' });
	      couponContainerArray.push(couponContainer);

	      if (!isPaymentNewUi) {
	        couponContainerArray.push(brTag);
	      }
	      couponContainerArray.push(couponContainerHiddenInput);
	    }
	    var currencyVal = this.props.currency && this.props.currency.value === 'EUR' ? 'comma' : 'point';
	    var decimalMark = this.props.decimalMark ? this.props.decimalMark.value : currencyVal;

	    // let hasSubtotal = false;
	    var subTotalLabelArray = [];
	    // insert subtotal
	    if (hasShipping && paymentTypeWithShipping.indexOf(type) > -1 || hasTax) {
	      ProductContainer.staticVars.paymentLabels.push('totalSubtotal');
	      // hasSubtotal = true;
	      var subTotalLabel1 = void 0;
	      if (isPaymentNewUi) {
	        subTotalLabel1 = _react2.default.createElement('span', { className: 'form-payment-divider' });
	      } else {
	        subTotalLabel1 = _react2.default.createElement('span', { className: 'form-payment-divider', style: { margin: '0 0 8px' } });
	      }
	      var subTotalLabel2 = void 0;
	      if (isPaymentNewUi) {
	        subTotalLabel2 = _react2.default.createElement(
	          'div',
	          { className: 'form-payment-subtotal form-payment-label' },
	          _react2.default.createElement(
	            'div',
	            { id: 'subtotal-text' },
	            inlineSubTotal || paymentStrings.totalSubtotal.locale()
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'form-payment-price' },
	            _react2.default.createElement(_FormatPrice2.default, {
	              priceAmount: 0,
	              currency: this.props.currency.value,
	              priceID: 'payment_subtotal',
	              nofree: true,
	              decimalMark: decimalMark
	            })
	          )
	        );
	      } else {
	        subTotalLabel2 = _react2.default.createElement(
	          'span',
	          { className: 'form-payment-subtotal form-payment-label' },
	          _react2.default.createElement(
	            'span',
	            { id: 'subtotal-text' },
	            inlineSubTotal || paymentStrings.totalSubtotal.locale()
	          ),
	          '\xA0',
	          _react2.default.createElement(
	            'span',
	            { className: 'form-payment-price' },
	            _react2.default.createElement(_FormatPrice2.default, {
	              priceAmount: 0,
	              currency: this.props.currency.value,
	              priceID: 'payment_subtotal',
	              nofree: true,
	              decimalMark: decimalMark
	            })
	          )
	        );
	      }
	      subTotalLabelArray.push(subTotalLabel1);
	      subTotalLabelArray.push(subTotalLabel2);
	    }

	    var taxLabelArray = [];

	    if (hasTax) {
	      ProductContainer.staticVars.paymentLabels.push('taxTax');
	      var taxLabel1 = void 0;
	      if (isPaymentNewUi) {
	        taxLabel1 = _react2.default.createElement(
	          'div',
	          { className: 'form-payment-tax form-payment-label' },
	          _react2.default.createElement(
	            'div',
	            { id: 'tax-text' },
	            inlineTax || paymentStrings.taxTax.locale()
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'form-payment-price' },
	            _react2.default.createElement(_FormatPrice2.default, {
	              priceAmount: 0,
	              currency: this.props.currency.value,
	              priceID: 'payment_tax',
	              nofree: true,
	              decimalMark: decimalMark
	            })
	          )
	        );
	      } else {
	        taxLabel1 = _react2.default.createElement(
	          'span',
	          { className: 'form-payment-tax form-payment-label' },
	          _react2.default.createElement(
	            'span',
	            { id: 'tax-text' },
	            inlineTax || paymentStrings.taxTax.locale()
	          ),
	          '\xA0',
	          _react2.default.createElement(
	            'span',
	            { className: 'form-payment-price' },
	            _react2.default.createElement(_FormatPrice2.default, {
	              priceAmount: 0,
	              currency: this.props.currency.value,
	              priceID: 'payment_tax',
	              nofree: true,
	              decimalMark: decimalMark
	            })
	          )
	        );
	      }
	      taxLabelArray.push(taxLabel1);
	    }

	    var shippingLabelArray = [];
	    // insert shipping
	    if (hasShipping && paymentTypeWithShipping.indexOf(type) > -1) {
	      ProductContainer.staticVars.paymentLabels.push('shippingShipping');
	      var shippingLabel1 = void 0;
	      if (isPaymentNewUi) {
	        shippingLabel1 = _react2.default.createElement(
	          'div',
	          { className: 'form-payment-shipping form-payment-label' },
	          _react2.default.createElement(
	            'div',
	            { id: 'shipping-text' },
	            inlineShipping || paymentStrings.shippingShipping.locale()
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'form-payment-price' },
	            _react2.default.createElement(_FormatPrice2.default, {
	              priceAmount: 0,
	              currency: this.props.currency.value,
	              priceID: 'payment_shipping',
	              nofree: true,
	              decimalMark: decimalMark
	            })
	          )
	        );
	      } else {
	        shippingLabel1 = _react2.default.createElement(
	          'span',
	          { className: 'form-payment-shipping form-payment-label' },
	          _react2.default.createElement(
	            'span',
	            { id: 'shipping-text' },
	            inlineShipping || paymentStrings.shippingShipping.locale()
	          ),
	          '\xA0',
	          _react2.default.createElement(
	            'span',
	            { className: 'form-payment-price' },
	            _react2.default.createElement(_FormatPrice2.default, {
	              priceAmount: 0,
	              currency: this.props.currency.value,
	              priceID: 'payment_shipping',
	              nofree: true,
	              decimalMark: decimalMark
	            })
	          )
	        );
	      }

	      var shippingLabel2 = _react2.default.createElement('span', { className: 'form-payment-divider', style: { margin: '8px 0' } });
	      shippingLabelArray.push(shippingLabel1);
	      shippingLabelArray.push(shippingLabel2);
	    }

	    // insert total
	    var totalLabelArray = [];
	    if (this.props.showTotal && this.props.showTotal.value && this.props.showTotal.value === 'Yes' || hasShipping || hasTax) {
	      // const brTag = <br />;
	      ProductContainer.staticVars.paymentLabels.push('totalTotal');
	      // if (paymentLabels.indexOf('totalSubtotal') > -1) {
	      //   totalLabelArray.push(brTag);
	      // }
	      var totalLabel = void 0;
	      if (isPaymentNewUi) {
	        totalLabel = _react2.default.createElement(
	          'div',
	          { className: 'form-payment-total' },
	          _react2.default.createElement(
	            'div',
	            { id: 'total-text' },
	            inlineTotal || paymentStrings.totalTotal.locale()
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'form-payment-price' },
	            _react2.default.createElement(_FormatPrice2.default, {
	              priceAmount: 0,
	              currency: this.props.currency.value,
	              priceID: 'payment_total',
	              nofree: true,
	              decimalMark: decimalMark
	            })
	          )
	        );
	      } else {
	        totalLabel = _react2.default.createElement(
	          'span',
	          { className: 'form-payment-total' },
	          _react2.default.createElement(
	            'b',
	            null,
	            _react2.default.createElement(
	              'span',
	              { id: 'total-text' },
	              inlineTotal || paymentStrings.totalTotal.locale()
	            ),
	            '\xA0',
	            _react2.default.createElement(
	              'span',
	              { className: 'form-payment-price' },
	              _react2.default.createElement(_FormatPrice2.default, {
	                priceAmount: 0,
	                currency: this.props.currency.value,
	                priceID: 'payment_total',
	                nofree: true,
	                decimalMark: decimalMark
	              })
	            )
	          )
	        );
	      }

	      totalLabelArray.push(totalLabel);
	    }

	    // We should warn users when they clone a form containing PayPal products because even if the products are visible, the cloned forms are disconnected from PayPal.
	    var paypalWarningMessage = '';
	    if (type === 'control_paypalcomplete' && !(this.props.merchantId && this.props.merchantId.value) && this.props.passive) {
	      paypalWarningMessage = _react2.default.createElement(
	        'div',
	        { className: 'payment_alert high paypalcomplete_connection_warning' },
	        _react2.default.createElement(
	          'ul',
	          null,
	          _react2.default.createElement(
	            'li',
	            null,
	            'You haven’t finished configuring this payment integration.'.locale()
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          this.handlePaymentSettingsText('Go to <a>Payment Settings</a> to configure your payment details and products.'.locale())
	        )
	      );
	    }

	    var returnFinalProductUI = void 0;
	    if (isPaymentNewUi) {
	      returnFinalProductUI = _react2.default.createElement(
	        'div',
	        { 'data-wrapper-react': 'true' },
	        passiveShowSingleInfo,
	        paypalWarningMessage,
	        products.products,
	        _react2.default.createElement(
	          'div',
	          { className: 'payment_footer new_ui ' + (hasCoupons ? 'show_coupon' : '') },
	          couponContainerArray,
	          _react2.default.createElement(
	            'div',
	            { className: 'total_area' },
	            subTotalLabelArray,
	            taxLabelArray,
	            shippingLabelArray,
	            totalLabelArray,
	            minTotalOrderAmountField
	          )
	        )
	      );
	    } else {
	      returnFinalProductUI = _react2.default.createElement(
	        'div',
	        { 'data-wrapper-react': 'true' },
	        passiveShowSingleInfo,
	        paypalWarningMessage,
	        products.products,
	        couponContainerArray,
	        subTotalLabelArray,
	        taxLabelArray,
	        shippingLabelArray,
	        totalLabelArray,
	        minTotalOrderAmountField
	      );
	    }
	    // return [enableLightBox, products, couponContainerArray, subTotalLabelArray, shippingLabelArray, totalLabelArray];

	    return returnFinalProductUI;
	  };

	  ProductContainer.prototype.render = function render() {
	    var _this4 = this;

	    var _props2 = this.props,
	        formProperties = _props2.formProperties,
	        paymentType = _props2.paymentType;

	    var isPaymentNewUi = this.isPaymentNewUi();
	    var donationPart = this.props.paymentType && this.props.paymentType.value === 'donation' ? this.renderDonationPart() : null;
	    var otherParts = donationPart === null ? this.renderOtherParts(isPaymentNewUi) : null;
	    var sandboxMsg = null;
	    var type = this.props.controlPaymentType;
	    var gateway = this.props.controlPaymentType.replace('control_', '');

	    var showProductSearch = void 0;
	    var showCategory = null;
	    var showCategoryTitle = null;
	    var categories = null;
	    var productCategories = [];
	    // let showProductCatalog;
	    var paymentListSettings = this.props.formProperties.paymentListSettings && typeof this.props.formProperties.paymentListSettings !== 'undefined' ? this.props.formProperties.paymentListSettings[0] : false;

	    if (paymentListSettings) {
	      showProductSearch = paymentListSettings && paymentListSettings.showSearch ? paymentListSettings.showSearch : 'No';
	      showCategory = paymentListSettings.showCategory;
	      showCategoryTitle = paymentListSettings.showCategoryTitle;
	      categories = (0, _Utils.parseJSON)(paymentListSettings.productCategories);

	      // This code pieces will be refactored later.
	      if (this.reorderedProducts.length > 0) {
	        this.reorderedProducts.forEach(function (p) {
	          if (p.categoryName) {
	            productCategories.push({ label: p.categoryName, value: p.cid });
	          }
	        });
	      } else if (categories && categories.length > 0 && formProperties.products) {
	        var categoryIdsOfProducts = formProperties.products.map(function (p) {
	          return p.cid ? '' + p.cid : undefined;
	        });

	        categories.forEach(function (category) {
	          if (category.id && categoryIdsOfProducts.includes('' + category.id)) {
	            productCategories.push({ label: category.name, value: category.id });
	          }
	        });
	      }
	    }

	    var productSearchInput = void 0;
	    var isCustomAmountType = false;
	    if (this.props.paymentType.value === 'donation' || this.props.paymentType.value === 'custom') {
	      isCustomAmountType = true;
	    }
	    if (showProductSearch === 'Yes' && isCustomAmountType === false) {
	      productSearchInput = _react2.default.createElement('input', {
	        name: 'productSearch-input',
	        className: 'form-textbox',
	        id: 'productSearch-input',
	        type: 'text', size: '15',
	        placeholder: 'Search', autoComplete: 'off'
	      });
	    }

	    if (this.props.passive && (this.props.sandbox && this.props.sandbox.value === 'enabled' || this.props.testmodeAuth && this.props.testmodeAuth.value === 'Yes' || this.props.allowTest && String(this.props.allowTest.value) === 'true')) {
	      sandboxMsg = _react2.default.createElement(
	        'div',
	        { className: 'hidden-field-warning payment_alert mid' },
	        'Sandbox mode is enabled for this payment. '.locale(),
	        _react2.default.createElement('br', null),
	        _react2.default.createElement(
	          'a',
	          {
	            onClick: this.props.formProperties.updateQuestionProperties ? function () {
	              return _this4.props.formProperties.updateQuestionProperties(_this4.props.id.value, { sandbox: 'disabled' });
	            } : null,
	            style: { textDecoration: 'underline', cursor: 'pointer' }
	          },
	          'Click here to disable Sandbox mode'.locale()
	        )
	      );
	    }

	    var billingMessage = null;

	    if (gateway === 'cybersource' && this.props.showBillingError) {
	      billingMessage = _react2.default.createElement(
	        'div',
	        { id: 'billing-message', className: 'payment_alert high' },
	        this.handlePaymentSettingsText('<a>Address and email fields</a> are required for\n          CyberSource. Please make sure to map these fields from the Payment Settings menu.\n          You can\u2019t collect payments if you don\u2019t include these fields.'.locale(), true)
	      );
	    }

	    var usePaypalButton = null;
	    if (this.props.paypalButton && this.props.paypalButton.value === 'Yes') {
	      usePaypalButton = _react2.default.createElement('input', { type: 'hidden', id: 'use_paypal_button' });
	    }
	    var paypalExpressHiddenInput = null;
	    if (type === 'control_paypalexpress') {
	      paypalExpressHiddenInput = _react2.default.createElement('input', { id: 'express_category', type: 'hidden', 'data-digital_goods': this.props.digitalGoods.value });
	    }
	    var hr = null;
	    if (['authnet', 'paypalpro', 'stripe', 'paymill', 'braintree', 'square', 'eway', 'bluepay', 'stripeACH', 'stripeACHManual', 'paysafe'].indexOf(gateway) > -1) {
	      hr = _react2.default.createElement('hr', null);
	      if (this.props.passive && typeof jotFormxds === 'undefined') {
	        (0, _Utils.loadScript)('../js/libraries/xds-server/jotFormxds.js');
	        (0, _Utils.loadScript)('../js/wizards/stripeWizard.js');
	      }
	    }

	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(
	        'div',
	        { className: 'filter-container' },
	        showCategory === 'Yes' && ProductContainer.staticVars.hidden !== true && paymentType && paymentType.value === 'product' && _react2.default.createElement(_MultiSelectDropdown2.default, {
	          additionalClass: showCategoryTitle === 'Yes' ? 'category-title-enabled' : '',
	          uid: 'payment-category-dropdown',
	          hint: 'Categories:'.locale(),
	          showAllOption: true,
	          addSelectAll: true,
	          selectAllText: 'All',
	          selectFirstOption: true,
	          options: productCategories
	        }),
	        productSearchInput
	      ),
	      sandboxMsg,
	      billingMessage,
	      usePaypalButton,
	      _react2.default.createElement('input', {
	        type: 'hidden',
	        name: 'simple_fpc',
	        'data-payment_type': gateway,
	        defaultValue: this.props.id.value,
	        'data-component': 'payment1'
	      }),
	      _react2.default.createElement('input', {
	        type: 'hidden',
	        name: 'payment_total_checksum',
	        id: 'payment_total_checksum',
	        'data-component': 'payment2'
	      }),
	      _react2.default.createElement(_ImageOverlay2.default, { products: this.reorderedProducts.length > 0 ? this.reorderedProducts : this.props.formProperties.products }),
	      donationPart,
	      otherParts,
	      paypalExpressHiddenInput,
	      hr
	    );
	  };

	  ProductContainer.prototype.isPaymentNewUi = function isPaymentNewUi() {
	    var _props3 = this.props,
	        formProperties = _props3.formProperties,
	        themeVersion = _props3.themeVersion;

	    var isNewPaymentUi = formProperties && formProperties.newPaymentUIForNewCreatedForms === 'Yes';
	    var isComparePaymentForm = formProperties && formProperties.comparePaymentForm === 'v1';
	    var isUpcomingTheme = themeVersion === 'v2';

	    return isNewPaymentUi || isComparePaymentForm || isUpcomingTheme;
	  };

	  ProductContainer.prototype.isProductActive = function isProductActive(categoryID) {
	    var formProperties = this.props.formProperties;
	    var paymentListSettings = formProperties.paymentListSettings;


	    if (paymentListSettings && paymentListSettings[0] && paymentListSettings[0].productCategories && paymentListSettings[0].productCategories.length > 0) {
	      var productCategories = paymentListSettings[0].productCategories;
	      if (typeof productCategories === 'string') productCategories = JSON.parse(productCategories);

	      var productCategory = productCategories.find(function (element) {
	        return element.id === categoryID;
	      });

	      if (productCategory && productCategory.isWrapped === 'Yes') return false;
	    }

	    return true;
	  };

	  return ProductContainer;
	}(_react.Component);

	exports.default = ProductContainer;


	ProductContainer.getState = function () {
	  return ProductContainer.staticVars.paymentLabels;
	};

	ProductContainer.getHidden = function () {
	  return ProductContainer.staticVars.hidden;
	};

	ProductContainer.getScript = function (prop) {
	  var script = '';
	  if (prop.paymentType.value !== 'donation') {
	    var decimalMark = prop.decimalMark && prop.decimalMark.value === 'comma' ? 'comma' : 'point';

	    script += '      productID = ' + JSON.stringify(ProductContainer.staticVars.productID) + ';\n'; // see productID
	    script += '      paymentType = "' + prop.paymentType.value + '";\n';
	    script += '      JotForm.setCurrencyFormat(\'' + prop.currency.value + '\',' + (prop.useDecimal ? prop.useDecimal.value === 'Yes' : 'false') + ', \'' + decimalMark + '\');\n';
	    script += '      JotForm.totalCounter(' + JSON.stringify(ProductContainer.staticVars.totalCounter) + ');\n';
	    script += "      $$('.form-product-custom_quantity').each(function(el, i){el.observe('blur', function(){isNaN(this.value) || this.value < 1 ? this.value = '0' : this.value = parseInt(this.value)})});\n"; // eslint-disable-line max-len
	    script += "      $$('.form-product-custom_quantity').each(function(el, i){el.observe('focus', function(){this.value == 0 ? this.value = '' : this.value})});\n";

	    var paymentListSettings = prop.formProperties.paymentListSettings && prop.formProperties.paymentListSettings[0];
	    var showCategory = paymentListSettings ? paymentListSettings.showCategory === 'Yes' : false;
	    var showCategoryTitle = paymentListSettings ? paymentListSettings.showCategoryTitle === 'Yes' : false;

	    if (showCategory) {
	      script += 'JotForm.paymentCategoryHandler(' + showCategory + ', ' + showCategoryTitle + ');\n';
	    }
	  }

	  if (prop.type.value === 'control_stripe') {
	    var publishableKey = prop.apiKey.value.length > 0 || !prop.connect.value.stripeConnectLoaded ? prop.publishableKey.value : prop.connect.value.publishableKey;
	    var cleanPublishableKey = publishableKey.replace(/\s+/g, '');
	    var addressQid = typeof prop.billingAdd !== 'undefined' ? prop.billingAdd.value : 'none';
	    var shippingQid = typeof prop.shippingAdd !== 'undefined' ? prop.shippingAdd.value : 'none';
	    var emailQid = typeof prop.emailField !== 'undefined' ? prop.emailField.value : 'none';
	    var phoneQid = typeof prop.phoneField !== 'undefined' ? prop.phoneField.value : 'none';
	    var customFieldQid = typeof prop.customDataField !== 'undefined' ? prop.customDataField.value : 'none';

	    script += '      JotForm.setStripeSettings(\'' + cleanPublishableKey + '\', \'' + addressQid + '\', \'' + shippingQid + '\', \'' + emailQid + '\', \'' + phoneQid + '\', \'' + customFieldQid + '\');\n';
	  }

	  if (prop.type.value === 'control_eway') {
	    script += '      JotForm.ewayEncryptKey = \'' + prop.encryptionKey.value + '\';\n';
	  }

	  if (prop.type.value === 'control_bluepay') {
	    script += '      JotForm.bluepayAccountId = \'' + prop.accountId.value + '\';\n';
	    script += '      JotForm.bluepayApiSecret = \'' + (0, _blueimpMd2.default)(prop.apiSecret.value + prop.accountId.value) + '\';\n';
	  }

	  var opts = prop.formProperties.products || [];
	  var showSingle = prop.showSingle && (prop.showSingle.value === true || prop.showSingle.value === 'true' || prop.showSingle.value === '1');

	  if (opts && (opts.length > 0 || showSingle) && (prop.enableLightBox && prop.enableLightBox.value === '1' || !prop.enableLightBox)) {
	    script += '      JotForm.handleProductLightbox();\n';
	  }
	  var options = JSON.stringify(opts);

	  if (!(prop.paymentType && prop.paymentType.value === 'donation') && prop.formProperties.teamName && prop.formProperties.teamName === 'tucan') {
	    script += '      products = ' + options + '\n';
	  }

	  // Set initial values
	  var initialProps = [];
	  var initialPropValues = {};

	  if (prop.type.value === 'control_bluesnap') {
	    initialProps = ['sca', 'sandbox', 'currency', 'emailField', 'phoneField', 'billingAddress'];
	  } else if (prop.type.value === 'control_paypalcomplete') {
	    initialProps = ['styleColor', 'styleShape', 'styleSize', 'styleLabel', 'styleLayout', 'payLaterEnabled'];
	  } else if (prop.type.value === 'control_paypalSPB') {
	    initialProps = ['payLaterEnabled', 'payLaterLayout', 'payLaterTextColor', 'payLaterTextSize', 'payLaterLogoType', 'payLaterLogoPosition', 'payLaterRatio', 'payLaterBackgroundColor'];
	  } else if (prop.type.value === 'control_mollie') {
	    initialProps = ['sandbox', 'currency'];
	  }

	  if (initialProps.length > 0) {
	    Object.keys(prop).forEach(function (propKey) {
	      if (initialProps.includes(propKey) && prop[propKey] && prop[propKey].value) {
	        initialPropValues[propKey] = prop[propKey].value;
	      }
	    });

	    // Note for Developers: If we need to add coupon in paymentFormProperties, please be careful. The json parse error occurred at jotForm.js
	    initialPropValues.paymentFormProperties = {
	      products: prop.formProperties.products
	    };
	  }

	  if (Object.keys(initialPropValues).length > 0) {
	    script += '      JotForm.paymentProperties = ' + JSON.stringify(initialPropValues) + '\n';
	  }

	  return script;
	};

	ProductContainer.checkRenderStatus = function (prop) {
	  var opts = prop.formProperties.products || false;
	  if (!prop.inlineEditClass && prop.paymentType.value !== 'donation' && (opts === false || opts.length === 0)) {
	    return false;
	  }
	  return true;
	};

	ProductContainer.staticVars = {
	  totalCounter: {},
	  productID: {},
	  hidden: false,
	  paymentLabels: []
	};

	ProductContainer.propTypes = {
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  compoundHint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paymentType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  donationAmountField: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  donationText: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  currency: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  useDecimal: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  suggestedDonation: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  requireMinimum: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  multiple: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paypalButton: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  controlPaymentType: _propTypes2.default.string,
	  passive: _propTypes2.default.bool,
	  inlineEditClass: _propTypes2.default.func,
	  digitalGoods: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  decimalMark: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  sandbox: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  testmodeAuth: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  allowTest: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  showSingle: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool])
	  }),
	  enableLightBox: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  showTotal: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  showStripeCoupons: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  showBillingError: _propTypes2.default.shape({
	    value: _propTypes2.default.bool
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  themeVersion: _propTypes2.default.string,
	  formProperties: _propTypes2.default.shape({
	    useStripeCoupons: _propTypes2.default.string,
	    showStripeCoupons: _propTypes2.default.string,
	    updateQuestionProperties: _propTypes2.default.func,
	    coupons: _propTypes2.default.array,
	    paymentListSettings: _propTypes2.default.string,
	    taxes: _propTypes2.default.array,
	    products: _propTypes2.default.array,
	    highlightLine: _propTypes2.default.string,
	    paymentStrings: _propTypes2.default.array,
	    openPaymentWizard: _propTypes2.default.func
	  }),
	  cdnconfig: _propTypes2.default.shape({
	    CDN: _propTypes2.default.string
	  }),
	  merchantId: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	if (process.env.NODE_ENV !== 'production') {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;

	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = __webpack_require__(6)(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(13)();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 5 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(7);
	var invariant = __webpack_require__(8);
	var warning = __webpack_require__(9);
	var assign = __webpack_require__(10);

	var ReactPropTypesSecret = __webpack_require__(11);
	var checkPropTypes = __webpack_require__(12);

	module.exports = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker,
	    exact: createStrictShapeTypeChecker,
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message) {
	    this.message = message;
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (process.env.NODE_ENV !== 'production') {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          invariant(
	            false,
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            warning(
	              false,
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `%s` prop on `%s`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
	              propFullName,
	              componentName
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues);
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (propValue.hasOwnProperty(key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        warning(
	          false,
	          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
	          'received %s at index %s.',
	          getPostfixForTypeWarning(checker),
	          i
	        );
	        return emptyFunction.thatReturnsNull;
	      }
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	          return null;
	        }
	      }

	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          continue;
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createStrictShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      // We need to check all keys in case some are required but missing from
	      // props.
	      var allKeys = assign({}, props[propName], shapeTypes);
	      for (var key in allKeys) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          return new PropTypeError(
	            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
	            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
	            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
	          );
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }

	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 7 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(7);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 10 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 11 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	if (process.env.NODE_ENV !== 'production') {
	  var invariant = __webpack_require__(8);
	  var warning = __webpack_require__(9);
	  var ReactPropTypesSecret = __webpack_require__(11);
	  var loggedTypeFailures = {};
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (typeSpecs.hasOwnProperty(typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
	        }
	      }
	    }
	  }
	}

	module.exports = checkPropTypes;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(7);
	var invariant = __webpack_require__(8);
	var ReactPropTypesSecret = __webpack_require__(11);

	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    invariant(
	      false,
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim
	  };

	  ReactPropTypes.checkPropTypes = emptyFunction;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*
	 * JavaScript MD5
	 * https://github.com/blueimp/JavaScript-MD5
	 *
	 * Copyright 2011, Sebastian Tschan
	 * https://blueimp.net
	 *
	 * Licensed under the MIT license:
	 * https://opensource.org/licenses/MIT
	 *
	 * Based on
	 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
	 * Digest Algorithm, as defined in RFC 1321.
	 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for more info.
	 */

	/* global define */

	/* eslint-disable strict */

	;(function ($) {
	  'use strict'

	  /**
	   * Add integers, wrapping at 2^32.
	   * This uses 16-bit operations internally to work around bugs in interpreters.
	   *
	   * @param {number} x First integer
	   * @param {number} y Second integer
	   * @returns {number} Sum
	   */
	  function safeAdd(x, y) {
	    var lsw = (x & 0xffff) + (y & 0xffff)
	    var msw = (x >> 16) + (y >> 16) + (lsw >> 16)
	    return (msw << 16) | (lsw & 0xffff)
	  }

	  /**
	   * Bitwise rotate a 32-bit number to the left.
	   *
	   * @param {number} num 32-bit number
	   * @param {number} cnt Rotation count
	   * @returns {number} Rotated number
	   */
	  function bitRotateLeft(num, cnt) {
	    return (num << cnt) | (num >>> (32 - cnt))
	  }

	  /**
	   * Basic operation the algorithm uses.
	   *
	   * @param {number} q q
	   * @param {number} a a
	   * @param {number} b b
	   * @param {number} x x
	   * @param {number} s s
	   * @param {number} t t
	   * @returns {number} Result
	   */
	  function md5cmn(q, a, b, x, s, t) {
	    return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b)
	  }
	  /**
	   * Basic operation the algorithm uses.
	   *
	   * @param {number} a a
	   * @param {number} b b
	   * @param {number} c c
	   * @param {number} d d
	   * @param {number} x x
	   * @param {number} s s
	   * @param {number} t t
	   * @returns {number} Result
	   */
	  function md5ff(a, b, c, d, x, s, t) {
	    return md5cmn((b & c) | (~b & d), a, b, x, s, t)
	  }
	  /**
	   * Basic operation the algorithm uses.
	   *
	   * @param {number} a a
	   * @param {number} b b
	   * @param {number} c c
	   * @param {number} d d
	   * @param {number} x x
	   * @param {number} s s
	   * @param {number} t t
	   * @returns {number} Result
	   */
	  function md5gg(a, b, c, d, x, s, t) {
	    return md5cmn((b & d) | (c & ~d), a, b, x, s, t)
	  }
	  /**
	   * Basic operation the algorithm uses.
	   *
	   * @param {number} a a
	   * @param {number} b b
	   * @param {number} c c
	   * @param {number} d d
	   * @param {number} x x
	   * @param {number} s s
	   * @param {number} t t
	   * @returns {number} Result
	   */
	  function md5hh(a, b, c, d, x, s, t) {
	    return md5cmn(b ^ c ^ d, a, b, x, s, t)
	  }
	  /**
	   * Basic operation the algorithm uses.
	   *
	   * @param {number} a a
	   * @param {number} b b
	   * @param {number} c c
	   * @param {number} d d
	   * @param {number} x x
	   * @param {number} s s
	   * @param {number} t t
	   * @returns {number} Result
	   */
	  function md5ii(a, b, c, d, x, s, t) {
	    return md5cmn(c ^ (b | ~d), a, b, x, s, t)
	  }

	  /**
	   * Calculate the MD5 of an array of little-endian words, and a bit length.
	   *
	   * @param {Array} x Array of little-endian words
	   * @param {number} len Bit length
	   * @returns {Array<number>} MD5 Array
	   */
	  function binlMD5(x, len) {
	    /* append padding */
	    x[len >> 5] |= 0x80 << len % 32
	    x[(((len + 64) >>> 9) << 4) + 14] = len

	    var i
	    var olda
	    var oldb
	    var oldc
	    var oldd
	    var a = 1732584193
	    var b = -271733879
	    var c = -1732584194
	    var d = 271733878

	    for (i = 0; i < x.length; i += 16) {
	      olda = a
	      oldb = b
	      oldc = c
	      oldd = d

	      a = md5ff(a, b, c, d, x[i], 7, -680876936)
	      d = md5ff(d, a, b, c, x[i + 1], 12, -389564586)
	      c = md5ff(c, d, a, b, x[i + 2], 17, 606105819)
	      b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330)
	      a = md5ff(a, b, c, d, x[i + 4], 7, -176418897)
	      d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426)
	      c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341)
	      b = md5ff(b, c, d, a, x[i + 7], 22, -45705983)
	      a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416)
	      d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417)
	      c = md5ff(c, d, a, b, x[i + 10], 17, -42063)
	      b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162)
	      a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682)
	      d = md5ff(d, a, b, c, x[i + 13], 12, -40341101)
	      c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290)
	      b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329)

	      a = md5gg(a, b, c, d, x[i + 1], 5, -165796510)
	      d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632)
	      c = md5gg(c, d, a, b, x[i + 11], 14, 643717713)
	      b = md5gg(b, c, d, a, x[i], 20, -373897302)
	      a = md5gg(a, b, c, d, x[i + 5], 5, -701558691)
	      d = md5gg(d, a, b, c, x[i + 10], 9, 38016083)
	      c = md5gg(c, d, a, b, x[i + 15], 14, -660478335)
	      b = md5gg(b, c, d, a, x[i + 4], 20, -405537848)
	      a = md5gg(a, b, c, d, x[i + 9], 5, 568446438)
	      d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690)
	      c = md5gg(c, d, a, b, x[i + 3], 14, -187363961)
	      b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501)
	      a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467)
	      d = md5gg(d, a, b, c, x[i + 2], 9, -51403784)
	      c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473)
	      b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734)

	      a = md5hh(a, b, c, d, x[i + 5], 4, -378558)
	      d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463)
	      c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562)
	      b = md5hh(b, c, d, a, x[i + 14], 23, -35309556)
	      a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060)
	      d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353)
	      c = md5hh(c, d, a, b, x[i + 7], 16, -155497632)
	      b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640)
	      a = md5hh(a, b, c, d, x[i + 13], 4, 681279174)
	      d = md5hh(d, a, b, c, x[i], 11, -358537222)
	      c = md5hh(c, d, a, b, x[i + 3], 16, -722521979)
	      b = md5hh(b, c, d, a, x[i + 6], 23, 76029189)
	      a = md5hh(a, b, c, d, x[i + 9], 4, -640364487)
	      d = md5hh(d, a, b, c, x[i + 12], 11, -421815835)
	      c = md5hh(c, d, a, b, x[i + 15], 16, 530742520)
	      b = md5hh(b, c, d, a, x[i + 2], 23, -995338651)

	      a = md5ii(a, b, c, d, x[i], 6, -198630844)
	      d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415)
	      c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905)
	      b = md5ii(b, c, d, a, x[i + 5], 21, -57434055)
	      a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571)
	      d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606)
	      c = md5ii(c, d, a, b, x[i + 10], 15, -1051523)
	      b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799)
	      a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359)
	      d = md5ii(d, a, b, c, x[i + 15], 10, -30611744)
	      c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380)
	      b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649)
	      a = md5ii(a, b, c, d, x[i + 4], 6, -145523070)
	      d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379)
	      c = md5ii(c, d, a, b, x[i + 2], 15, 718787259)
	      b = md5ii(b, c, d, a, x[i + 9], 21, -343485551)

	      a = safeAdd(a, olda)
	      b = safeAdd(b, oldb)
	      c = safeAdd(c, oldc)
	      d = safeAdd(d, oldd)
	    }
	    return [a, b, c, d]
	  }

	  /**
	   * Convert an array of little-endian words to a string
	   *
	   * @param {Array<number>} input MD5 Array
	   * @returns {string} MD5 string
	   */
	  function binl2rstr(input) {
	    var i
	    var output = ''
	    var length32 = input.length * 32
	    for (i = 0; i < length32; i += 8) {
	      output += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff)
	    }
	    return output
	  }

	  /**
	   * Convert a raw string to an array of little-endian words
	   * Characters >255 have their high-byte silently ignored.
	   *
	   * @param {string} input Raw input string
	   * @returns {Array<number>} Array of little-endian words
	   */
	  function rstr2binl(input) {
	    var i
	    var output = []
	    output[(input.length >> 2) - 1] = undefined
	    for (i = 0; i < output.length; i += 1) {
	      output[i] = 0
	    }
	    var length8 = input.length * 8
	    for (i = 0; i < length8; i += 8) {
	      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32
	    }
	    return output
	  }

	  /**
	   * Calculate the MD5 of a raw string
	   *
	   * @param {string} s Input string
	   * @returns {string} Raw MD5 string
	   */
	  function rstrMD5(s) {
	    return binl2rstr(binlMD5(rstr2binl(s), s.length * 8))
	  }

	  /**
	   * Calculates the HMAC-MD5 of a key and some data (raw strings)
	   *
	   * @param {string} key HMAC key
	   * @param {string} data Raw input string
	   * @returns {string} Raw MD5 string
	   */
	  function rstrHMACMD5(key, data) {
	    var i
	    var bkey = rstr2binl(key)
	    var ipad = []
	    var opad = []
	    var hash
	    ipad[15] = opad[15] = undefined
	    if (bkey.length > 16) {
	      bkey = binlMD5(bkey, key.length * 8)
	    }
	    for (i = 0; i < 16; i += 1) {
	      ipad[i] = bkey[i] ^ 0x36363636
	      opad[i] = bkey[i] ^ 0x5c5c5c5c
	    }
	    hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)
	    return binl2rstr(binlMD5(opad.concat(hash), 512 + 128))
	  }

	  /**
	   * Convert a raw string to a hex string
	   *
	   * @param {string} input Raw input string
	   * @returns {string} Hex encoded string
	   */
	  function rstr2hex(input) {
	    var hexTab = '0123456789abcdef'
	    var output = ''
	    var x
	    var i
	    for (i = 0; i < input.length; i += 1) {
	      x = input.charCodeAt(i)
	      output += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f)
	    }
	    return output
	  }

	  /**
	   * Encode a string as UTF-8
	   *
	   * @param {string} input Input string
	   * @returns {string} UTF8 string
	   */
	  function str2rstrUTF8(input) {
	    return unescape(encodeURIComponent(input))
	  }

	  /**
	   * Encodes input string as raw MD5 string
	   *
	   * @param {string} s Input string
	   * @returns {string} Raw MD5 string
	   */
	  function rawMD5(s) {
	    return rstrMD5(str2rstrUTF8(s))
	  }
	  /**
	   * Encodes input string as Hex encoded string
	   *
	   * @param {string} s Input string
	   * @returns {string} Hex encoded string
	   */
	  function hexMD5(s) {
	    return rstr2hex(rawMD5(s))
	  }
	  /**
	   * Calculates the raw HMAC-MD5 for the given key and data
	   *
	   * @param {string} k HMAC key
	   * @param {string} d Input string
	   * @returns {string} Raw MD5 string
	   */
	  function rawHMACMD5(k, d) {
	    return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d))
	  }
	  /**
	   * Calculates the Hex encoded HMAC-MD5 for the given key and data
	   *
	   * @param {string} k HMAC key
	   * @param {string} d Input string
	   * @returns {string} Raw MD5 string
	   */
	  function hexHMACMD5(k, d) {
	    return rstr2hex(rawHMACMD5(k, d))
	  }

	  /**
	   * Calculates MD5 value for a given string.
	   * If a key is provided, calculates the HMAC-MD5 value.
	   * Returns a Hex encoded string unless the raw argument is given.
	   *
	   * @param {string} string Input string
	   * @param {string} [key] HMAC key
	   * @param {boolean} [raw] Raw output switch
	   * @returns {string} MD5 output
	   */
	  function md5(string, key, raw) {
	    if (!key) {
	      if (!raw) {
	        return hexMD5(string)
	      }
	      return rawMD5(string)
	    }
	    if (!raw) {
	      return hexHMACMD5(key, string)
	    }
	    return rawHMACMD5(key, string)
	  }

	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	      return md5
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
	  } else if (typeof module === 'object' && module.exports) {
	    module.exports = md5
	  } else {
	    $.md5 = md5
	  }
	})(this)


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var FormatPrice = function (_Component) {
	  _inherits(FormatPrice, _Component);

	  function FormatPrice() {
	    _classCallCheck(this, FormatPrice);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  FormatPrice.prototype.render = function render() {
	    var curr = !this.props.currency ? 'USD' : this.props.currency;
	    var id = this.props.priceID || '';
	    var amount = this.props.priceAmount;
	    // no-decimal currencies
	    var noDecimal = ['BIF', 'CLP', 'DJF', 'GNF', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'VUV', 'XAF', 'XOF', 'XPF'];
	    // decimal places
	    var dec = noDecimal.indexOf(curr) > -1 ? 0 : 2;

	    if (this.props.useDecimal === false) {
	      dec = 0;
	    }

	    if (parseFloat(amount) === 0 && this.props.nofree !== true) {
	      amount = 'Free'.locale();
	    } else {
	      var useComma = this.props.decimalMark && this.props.decimalMark === 'comma';
	      amount = (0, _Utils.numberFormat)(amount, dec, useComma ? ',' : '.', useComma ? '.' : ','); // Format the number for money currency
	    }
	    var symbol = void 0;
	    switch (curr) {
	      case 'EUR':
	        symbol = ['€', curr];break;
	      case 'GBP':
	        symbol = ['£', curr];break;
	      case 'BRL':
	        symbol = ['R$', ''];break;
	      case 'JPY':
	        symbol = ['¥', curr];break;
	      case 'USD':
	        symbol = ['$', ''];break;
	      case 'AUD':
	      case 'CAD':
	      case 'NZD':
	      case 'SGD':
	      case 'HKD':
	      case 'CLP':
	        symbol = ['$', curr];break;
	      case 'TRY':
	        symbol = ['', 'TL'];break;
	      default:
	        symbol = ['', curr];break;
	    }

	    // the word 'free' can be in other languages
	    // parse and check if it's a number to determine if it's free or not
	    if (isNaN(parseInt(amount, 10))) {
	      return _react2.default.createElement(
	        'span',
	        { 'data-wrapper-react': 'true' },
	        _react2.default.createElement(
	          'span',
	          { className: 'freeCurr', style: { display: 'none' } },
	          '\xA0',
	          symbol[0]
	        ),
	        _react2.default.createElement(
	          'span',
	          { id: id },
	          '\xA0',
	          amount
	        ),
	        _react2.default.createElement(
	          'span',
	          { className: 'freeCurr', style: { display: 'none' } },
	          '\xA0',
	          symbol[1],
	          '\xA0'
	        )
	      );
	    }
	    return _react2.default.createElement(
	      'span',
	      { 'data-wrapper-react': 'true' },
	      symbol[0],
	      _react2.default.createElement(
	        'span',
	        { id: id },
	        amount
	      ),
	      symbol[1] && symbol[1] !== '' && _react2.default.createElement(
	        'span',
	        { className: 'currency_abr' },
	        symbol[1]
	      )
	    );
	  };

	  return FormatPrice;
	}(_react.Component);

	exports.default = FormatPrice;


	FormatPrice.propTypes = {
	  priceAmount: _propTypes2.default.number,
	  currency: _propTypes2.default.string,
	  priceID: _propTypes2.default.string,
	  nofree: _propTypes2.default.string,
	  useDecimal: _propTypes2.default.bool,
	  decimalMark: _propTypes2.default.string
	};

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	exports.__esModule = true;
	exports.ariaLabelledBy = exports.accessibleHiddenStyle = exports.specialOptions = exports.customPaymentSpecialOptions = exports.classNames = exports.subLabelSingle = exports.subLabel = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.addValidation = addValidation;
	exports.htmlDecode = htmlDecode;
	exports.stripSlashes = stripSlashes;
	exports.strPad = strPad;
	exports.makeQuestionName = makeQuestionName;
	exports.getCDN = getCDN;
	exports.addZeros = addZeros;
	exports.getDefaultDate = getDefaultDate;
	exports.getCurrentTime = getCurrentTime;
	exports.getDefaultTime = getDefaultTime;
	exports.escapeValue = escapeValue;
	exports.escapeHTML = escapeHTML;
	exports.newlineToEntities = newlineToEntities;
	exports.buildParams = buildParams;
	exports.fixNumbers = fixNumbers;
	exports.numberFormat = numberFormat;
	exports.formatPrice = formatPrice;
	exports.makeProductText = makeProductText;
	exports.loadScript = loadScript;
	exports.sanitize = sanitize;
	exports.parseJSON = parseJSON;
	exports.strip = strip;

	var _sanitizeHtml = __webpack_require__(17);

	var _sanitizeHtml2 = _interopRequireDefault(_sanitizeHtml);

	var _Countries = __webpack_require__(78);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/* eslint no-extend-native:0 */
	/* eslint func-names:0 */
	if (typeof String.prototype.locale === 'undefined') {
	  console.log('Locale not found');
	  String.prototype.locale = function () {
	    return this.toString();
	  };
	}
	/* eslint no-extend-native:1 */
	/* eslint func-names:1 */

	function addValidation(name, prop, additional, add2) {
	  var val = [];
	  var validationString = '' + name;
	  if (prop.required && prop.required.value === 'Yes') {
	    val.push('required');
	  }
	  if (prop.required && prop.required.value === 'Require an answer on every row') {
	    val.push('required');
	    val.push('requireEveryRow');
	  } else if (prop.required && prop.required.value === 'Require at least one answer') {
	    val.push('required');
	    val.push('requireOneAnswer');
	  } else if (prop.required && prop.required.value === 'Require an answer in every cell') {
	    val.push('required');
	    val.push('requireEveryCell');
	  }

	  if (prop.validation && prop.validation.value !== 'None') {
	    val.push(prop.validation.value);
	  }

	  if (Array.isArray(additional)) {
	    var filteredAdditional = additional.filter(function (n) {
	      return n !== undefined && n !== '';
	    });
	    filteredAdditional.forEach(function (e) {
	      val.push(e);
	    });
	  } else if (additional) {
	    val.push(additional);
	  }

	  if (add2) {
	    val.push(add2);
	  }

	  if (val.length > 0) {
	    validationString += ' validate[' + val.join(', ') + ']';
	  }
	  return validationString;
	}

	var subLabelObj = function subLabelObj(text, key, id) {
	  return {
	    text: text,
	    id: id ? id + '_' + key : key
	  };
	};

	// Neil: id is for address sublabels - must have different element ID (89823)
	var subLabel = exports.subLabel = function subLabel(prop, key, id) {
	  return prop.sublabels && prop.sublabels.value && key in prop.sublabels.value ? subLabelObj(prop.sublabels.value[key], key, id) : '';
	};
	var subLabelSingle = exports.subLabelSingle = function subLabelSingle(prop, key, id) {
	  return prop.subLabel && prop.subLabel.value !== '' ? subLabelObj(prop.subLabel.value, key, id) : '';
	};

	function htmlDecode(text, quoteS) {
	  var quoteStyle = quoteS;
	  var string = text;
	  var optTemp = 0;
	  var i = 0;
	  var noquotes = false;
	  if (typeof quoteStyle === 'undefined') {
	    quoteStyle = 2;
	  }
	  string = string.toString().replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>');
	  var OPTS = {
	    ENT_NOQUOTES: 0,
	    ENT_HTML_QUOTE_SINGLE: 1,
	    ENT_HTML_QUOTE_DOUBLE: 2,
	    ENT_COMPAT: 2,
	    ENT_QUOTES: 3,
	    ENT_IGNORE: 4
	  };
	  if (quoteStyle === 0) {
	    noquotes = true;
	  }
	  if (typeof quoteStyle !== 'number') {
	    quoteStyle = [].concat(quoteStyle);
	    for (i = 0; i < quoteStyle.length; i++) {
	      if (OPTS[quoteStyle[i]] === 0) {
	        noquotes = true;
	      } else if (OPTS[quoteStyle[i]]) {
	        optTemp = optTemp || OPTS[quoteStyle[i]];
	      }
	    }
	    quoteStyle = optTemp;
	  }
	  if (quoteStyle && OPTS.ENT_HTML_QUOTE_SINGLE) {
	    string = string.replace(/&#0*39;/g, "'").replace(/&#x27;/g, "'");
	  }
	  if (!noquotes) {
	    string = string.replace(/&quot;/g, '"');
	    string = string.replace(/&amp;quot;/g, '"');
	  }

	  string = string.replace(/&amp;/g, '&');

	  return string;
	}

	function stripSlashes(str) {
	  var text = str.toString();

	  return text.replace(/\\(.?)/g, function (s, n1) {
	    switch (n1) {
	      case '\\':
	        return '\\';
	      case '0':
	        return '\0';
	      case '':
	        return '';
	      default:
	        return n1;
	    }
	  });
	}

	function strPad(input, padLength, padString, padType) {
	  var half = '';

	  var strPadRepeater = function strPadRepeater(s, len) {
	    var collect = '';

	    while (collect.length < len) {
	      collect += s;
	    }
	    collect = collect.substr(0, len);

	    return collect;
	  };

	  var paramInput = String(input);
	  var paramPadString = padString !== undefined ? padString : ' ';
	  var paramPadType = padType || 'STR_PAD_RIGHT';

	  var padToGo = padLength - paramInput.length;
	  if (padToGo > 0) {
	    if (paramPadType === 'STR_PAD_LEFT') {
	      paramInput = strPadRepeater(paramPadString, padToGo) + paramInput;
	    } else if (paramPadType === 'STR_PAD_RIGHT') {
	      paramInput = paramInput + strPadRepeater(paramPadString, padToGo);
	    } else if (paramPadType === 'STR_PAD_BOTH') {
	      half = strPadRepeater(paramPadString, Math.ceil(padToGo / 2));
	      paramInput = half + paramInput + half;
	      paramInput = paramInput.substr(0, padLength);
	    }
	  }

	  return paramInput;
	}

	var classNames = {
	  textbox: 'form-textbox',
	  password: 'form-password',
	  radio: 'form-radio',
	  checkbox: 'form-checkbox',
	  textarea: 'form-textarea',
	  upload: 'form-upload',
	  mupload: 'form-upload-multiple',
	  mupload2: 'form-upload-multiple-new',
	  dropdown: 'form-dropdown',
	  list: 'form-list',
	  helper: 'form-helper',
	  readonly: 'form-readonly'
	};

	// Theese functions using in make-question name method

	function capitalize(str) {
	  return str.charAt(0).toUpperCase() + str.substring(1).toLowerCase();
	}

	function fixUTF(str) {
	  /* eslint max-len:0 */
	  var lowerCase = { a: '00E1:0103:01CE:00E2:00E4:0227:1EA1:0201:00E0:1EA3:0203:0101:0105:1D8F:1E9A:00E5:1E01:2C65:00E3:0251:1D90', b: '1E03:1E05:0253:1E07:1D6C:1D80:0180:0183', c: '0107:010D:00E7:0109:0255:010B:0188:023C', d: '010F:1E11:1E13:0221:1E0B:1E0D:0257:1E0F:1D6D:1D81:0111:0256:018C', e: '00E9:0115:011B:0229:00EA:1E19:00EB:0117:1EB9:0205:00E8:1EBB:0207:0113:2C78:0119:1D92:0247:1EBD:1E1B', f: '1E1F:0192:1D6E:1D82', g: '01F5:011F:01E7:0123:011D:0121:0260:1E21:1D83:01E5', h: '1E2B:021F:1E29:0125:2C68:1E27:1E23:1E25:0266:1E96:0127', i: '0131:00ED:012D:01D0:00EE:00EF:1ECB:0209:00EC:1EC9:020B:012B:012F:1D96:0268:0129:1E2D', j: '01F0:0135:029D:0249', k: '1E31:01E9:0137:2C6A:A743:1E33:0199:1E35:1D84:A741', l: '013A:019A:026C:013E:013C:1E3D:0234:1E37:2C61:A749:1E3B:0140:026B:1D85:026D:0142:0269:1D7C', m: '1E3F:1E41:1E43:0271:1D6F:1D86', n: '0144:0148:0146:1E4B:0235:1E45:1E47:01F9:0272:1E49:019E:1D70:1D87:0273:00F1', o: '00F3:014F:01D2:00F4:00F6:022F:1ECD:0151:020D:00F2:1ECF:01A1:020F:A74B:A74D:2C7A:014D:01EB:00F8:00F5', p: '1E55:1E57:A753:01A5:1D71:1D88:A755:1D7D:A751', q: 'A759:02A0:024B:A757', r: '0155:0159:0157:1E59:1E5B:0211:027E:0213:1E5F:027C:1D72:1D89:024D:027D', s: '015B:0161:015F:015D:0219:1E61:1E63:0282:1D74:1D8A:023F', t: '0165:0163:1E71:021B:0236:1E97:2C66:1E6B:1E6D:01AD:1E6F:1D75:01AB:0288:0167', u: '00FA:016D:01D4:00FB:1E77:00FC:1E73:1EE5:0171:0215:00F9:1EE7:01B0:0217:016B:0173:1D99:016F:0169:1E75:1D1C:1D7E', v: '2C74:A75F:1E7F:028B:1D8C:2C71:1E7D', w: '1E83:0175:1E85:1E87:1E89:1E81:2C73:1E98', x: '1E8D:1E8B:1D8D', y: '00FD:0177:00FF:1E8F:1EF5:1EF3:01B4:1EF7:1EFF:0233:1E99:024F:1EF9', z: '017A:017E:1E91:0291:2C6C:017C:1E93:0225:1E95:1D76:1D8E:0290:01B6:0240', ae: '00E6:01FD:01E3', dz: '01F3:01C6', 3: '0292:01EF:0293:1D9A:01BA:01B7:01EE' };

	  var upperCase = { A: '00C1:0102:01CD:00C2:00C4:0226:1EA0:0200:00C0:1EA2:0202:0100:0104:00C5:1E00:023A:00C3', B: '1E02:1E04:0181:1E06:0243:0182', C: '0106:010C:00C7:0108:010A:0187:023B', D: '010E:1E10:1E12:1E0A:1E0C:018A:1E0E:0110:018B', E: '00C9:0114:011A:0228:00CA:1E18:00CB:0116:1EB8:0204:00C8:1EBA:0206:0112:0118:0246:1EBC:1E1A', F: '1E1E:0191', G: '01F4:011E:01E6:0122:011C:0120:0193:1E20:01E4:0262:029B', H: '1E2A:021E:1E28:0124:2C67:1E26:1E22:1E24:0126', I: '00CD:012C:01CF:00CE:00CF:0130:1ECA:0208:00CC:1EC8:020A:012A:012E:0197:0128:1E2C:026A:1D7B', J: '0134:0248', K: '1E30:01E8:0136:2C69:A742:1E32:0198:1E34:A740', L: '0139:023D:013D:013B:1E3C:1E36:2C60:A748:1E3A:013F:2C62:0141:029F:1D0C', M: '1E3E:1E40:1E42:2C6E', N: '0143:0147:0145:1E4A:1E44:1E46:01F8:019D:1E48:0220:00D1', O: '00D3:014E:01D1:00D4:00D6:022E:1ECC:0150:020C:00D2:1ECE:01A0:020E:A74A:A74C:014C:019F:01EA:00D8:00D5', P: '1E54:1E56:A752:01A4:A754:2C63:A750', Q: 'A758:A756', R: '0154:0158:0156:1E58:1E5A:0210:0212:1E5E:024C:2C64', S: '015A:0160:015E:015C:0218:1E60:1E62', T: '0164:0162:1E70:021A:023E:1E6A:1E6C:01AC:1E6E:01AE:0166', U: '00DA:016C:01D3:00DB:1E76:00DC:1E72:1EE4:0170:0214:00D9:1EE6:01AF:0216:016A:0172:016E:0168:1E74', V: 'A75E:1E7E:01B2:1E7C', W: '1E82:0174:1E84:1E86:1E88:1E80:2C72', X: '1E8C:1E8A', Y: '00DD:0176:0178:1E8E:1EF4:1EF2:01B3:1EF6:1EFE:0232:024E:1EF8', Z: '0179:017D:1E90:2C6B:017B:1E92:0224:1E94:01B5', AE: '00C6:01FC:01E2', DZ: '01F1:01C4' };
	  /* eslint max-len:1 */

	  /* eslint no-restricted-syntax:0 */

	  var utfStr = str.toString();
	  for (var lk in lowerCase) {
	    var lvalue = '\\u' + lowerCase[lk].split(':').join('|\\u');
	    utfStr = utfStr.replace(new RegExp(lvalue, 'gm'), lk);
	  }
	  for (var uk in upperCase) {
	    var uvalue = '\\u' + upperCase[uk].split(':').join('|\\u');
	    utfStr = utfStr.replace(new RegExp(uvalue, 'gm'), uk);
	  }
	  /* eslint no-restricted-syntax:1 */

	  return utfStr;
	}

	function makeQuestionName(text) {
	  var name = text.replace('&nbsp;', '');
	  var tokens = name.split(/\s+/);
	  name = fixUTF(tokens[1] ? tokens[0].toLowerCase() + capitalize(tokens[1].toLowerCase()) : tokens[0].toLowerCase());
	  name = name.replace(/\W/gim, '');
	  return name.length === 0 ? 'input' : name;
	}

	function getCDN() {
	  return '/';
	}

	function addZeros(num, totalDigits) {
	  var n = num.toString();
	  var pd = '';
	  if (totalDigits > n.length) {
	    for (var i = 0; i < totalDigits - n.length; i++) {
	      pd += '0';
	    }
	  }
	  return pd + n.toString();
	}

	function getDefaultDate(defaultDate, format, dateSeparator) {
	  var liteModeInitialValue = '';
	  var year = '';
	  var month = '';
	  var day = '';
	  if (defaultDate) {
	    if (defaultDate === 'none') {
	      return '';
	    } else if (defaultDate === 'current') {
	      var date = new Date();
	      month = addZeros(date.getMonth() + 1, 2);
	      day = addZeros(date.getDate(), 2);
	      year = date.getYear() < 1000 ? date.getYear() + 1900 : date.getYear();
	    } else if (typeof defaultDate === 'string' && defaultDate.indexOf('custom_') > -1) {
	      var dateString = defaultDate.split('_')[1];
	      if (dateString) {
	        var dateComponents = dateString.split('-');
	        if (dateComponents.length > 2) {
	          year = dateComponents[0] || '';
	          month = dateComponents[1] || '';
	          day = dateComponents[2] || '';
	        }
	      }
	    }
	    liteModeInitialValue = month + dateSeparator + day + dateSeparator + year;
	    if (format === 'ddmmyyyy') {
	      liteModeInitialValue = day + dateSeparator + month + dateSeparator + year;
	    } else if (format === 'yyyymmdd') {
	      liteModeInitialValue = year + dateSeparator + month + dateSeparator + day;
	    }
	  }
	  return {
	    litemode: liteModeInitialValue,
	    year: year,
	    month: month,
	    day: day
	  };
	}

	function getCurrentTime(prop, currentHour, currentMin, currentHourRange, currentMinRange) {
	  var date = new Date();

	  var hour = !currentHour ? date.getHours() : currentHour;
	  var min = !currentMin ? date.getMinutes() : currentMin;
	  var hourRange = !currentHourRange ? hour : currentHourRange;
	  var minRange = !currentMin ? min : currentMinRange;

	  var step = prop.step.value ? prop.step.value : 10;

	  var getTime = function getTime(timeHour, timeMinute) {
	    var currentAmpm = '';

	    var h = Number(timeHour);
	    var m = Number(timeMinute);

	    var twentyFour = true;
	    if (prop.timeFormat.value === 'AM/PM') {
	      twentyFour = false;
	      currentAmpm = h > 11 ? 'PM' : 'AM';
	      h = h > 12 ? h - 12 : h;
	      h = h === 0 ? 12 : h;
	    }

	    m = Math.round(m / step) * step;
	    m = addZeros(m, 2);
	    if (m >= 60) {
	      // ntw roll over to next h/day
	      m = '00';
	      h++;
	      if (twentyFour) {
	        if (h === 24) h = 0;
	      } else if (currentAmpm === 'AM' && h === 12) currentAmpm = 'PM';else if (currentAmpm === 'PM' && h === 12) currentAmpm = 'AM';else if (h === 13) h = 1;
	    }
	    return { hour: h.toString(), min: m, currentAmpm: currentAmpm };
	  };

	  var fromD = getTime(hour, min);
	  hour = prop.timeFormat.value === 'AM/PM' ? fromD.hour : addZeros(fromD.hour, 2);
	  min = fromD.min;
	  var currentAmpm = fromD.currentAmpm;

	  var to = getTime(hourRange, minRange);
	  hourRange = to.hour;
	  minRange = to.min;
	  var currentAmpmRange = to.currentAmpm;

	  var time = {
	    limit: prop.timeFormat.value === 'AM/PM' ? 12 : 23,
	    start: prop.timeFormat.value === 'AM/PM' ? 1 : 0,
	    step: step,

	    hour: hour,
	    min: min,
	    currentAmpm: currentAmpm,

	    hourRange: hourRange,
	    minRange: minRange,
	    currentAmpmRange: currentAmpmRange
	  };

	  return time;
	}

	function getDefaultTime(prop) {
	  if (prop.defaultTime.value === 'none') {
	    return '';
	  }
	  if (prop.defaultTime.value.indexOf('custom_') > -1) {
	    var toCustomHour = false;
	    var toCustomMinute = false;
	    var fromD = prop.defaultTime.value.split('custom_')[1];
	    // time range
	    if (fromD.indexOf('-') > -1) {
	      var range = fromD.split('-');
	      var to = range[1];
	      fromD = range[0];
	      var toSplit = to.split(':');
	      toCustomHour = toSplit[0];
	      toCustomMinute = toSplit[1];
	    }

	    return getCurrentTime(prop, fromD.split(':')[0], fromD.split(':')[1], toCustomHour, toCustomMinute);
	  }

	  return getCurrentTime(prop);
	}

	exports.classNames = classNames;
	function escapeValue(str) {
	  return str.toString().replace(/"/gim, '&quot;');
	}

	function escapeHTML(str) {
	  return str.toString().replace(/&/g, '&amp;').replace(/&amp;amp;/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
	}

	function newlineToEntities(string) {
	  return string.toString().replace(/\n\r?/g, '&#13;&#10;');
	}

	var lastHundredYears = [];
	(function () {
	  var date = new Date();
	  // get current year
	  var cyear = date.getYear() < 1000 ? date.getYear() + 1900 : date.getYear();
	  var years = [];
	  for (var year = cyear; year >= cyear - 100; year--) {
	    years.push('' + year);
	  }

	  lastHundredYears = years;
	})();

	/* eslint max-len:0 */

	/* eslint quote-props: 0 */
	var customPaymentSpecialOptions = exports.customPaymentSpecialOptions = {
	  control_paysafe: {
	    Countries: {
	      controls: 'dropdown',
	      value: ['United States'.locale(), 'Afghanistan'.locale(), 'Aland Islands'.locale(), 'Albania'.locale(), 'Algeria'.locale(), 'American Samoa'.locale(), 'Andorra'.locale(), 'Angola'.locale(), 'Anguilla'.locale(), 'Antarctica'.locale(), 'Antigua and Barbuda'.locale(), 'Argentina'.locale(), 'Armenia'.locale(), 'Aruba'.locale(), 'Australia'.locale(), 'Austria'.locale(), 'Azerbaijan'.locale(), 'Bahamas'.locale(), 'Bahrain'.locale(), 'Bangladesh'.locale(), 'Barbados'.locale(), 'Belarus'.locale(), 'Belgium'.locale(), 'Belize'.locale(), 'Benin'.locale(), 'Bermuda'.locale(), 'Bhutan'.locale(), 'Bolivia'.locale(), 'Bonaire, Sint Eustatius and Saba'.locale(), 'Bosnia and Herzegovina'.locale(), 'Botswana'.locale(), 'Bouvet Island'.locale(), 'Brazil'.locale(), 'British Indian Ocean Territory'.locale(), 'Brunei Darussalam'.locale(), 'Bulgaria'.locale(), 'Burkina Faso'.locale(), 'Burundi'.locale(), 'Cambodia'.locale(), 'Cameroon'.locale(), 'Canada'.locale(), 'Cape Verde'.locale(), 'Cayman Islands'.locale(), 'Central African Republic'.locale(), 'Chad'.locale(), 'Chile'.locale(), 'China'.locale(), 'Christmas Island'.locale(), 'Cocos (Keeling) Islands'.locale(), 'Colombia'.locale(), 'Comoros'.locale(), 'Congo'.locale(), 'Congo, Democratic Republic of'.locale(), 'Cook Islands'.locale(), 'Costa Rica'.locale(), 'Cote D\'Ivoire'.locale(), 'Croatia'.locale(), 'Cuba'.locale(), 'Curacao'.locale(), 'Cyprus'.locale(), 'Czech Republic'.locale(), 'Denmark'.locale(), 'Djibouti'.locale(), 'Dominica'.locale(), 'Dominican Republic'.locale(), 'Ecuador'.locale(), 'Egypt'.locale(), 'El Salvador'.locale(), 'Equatorial Guinea'.locale(), 'Eritrea'.locale(), 'Estonia'.locale(), 'Ethiopia'.locale(), 'Falkland Islands'.locale(), 'Faroe Islands'.locale(), 'Fiji'.locale(), 'Finland'.locale(), 'France'.locale(), 'French Guiana'.locale(), 'French Polynesia'.locale(), 'French Southern Territories'.locale(), 'Gabon'.locale(), 'Gambia'.locale(), 'Georgia'.locale(), 'Germany'.locale(), 'Ghana'.locale(), 'Gibraltar'.locale(), 'Greece'.locale(), 'Greenland'.locale(), 'Grenada'.locale(), 'Guadeloupe'.locale(), 'Guam'.locale(), 'Guatemala'.locale(), 'Guernsey'.locale(), 'Guinea'.locale(), 'Guinea-Bissau'.locale(), 'Guyana'.locale(), 'Haiti'.locale(), 'Heard and McDonald Islands'.locale(), 'Honduras'.locale(), 'Hong Kong'.locale(), 'Hungary'.locale(), 'Iceland'.locale(), 'India'.locale(), 'Indonesia'.locale(), 'Iran (Islamic Republic of)'.locale(), 'Iraq'.locale(), 'Ireland'.locale(), 'Isle of Man'.locale(), 'Israel'.locale(), 'Italy'.locale(), 'Jamaica'.locale(), 'Japan'.locale(), 'Jersey'.locale(), 'Jordan'.locale(), 'Kazakhstan'.locale(), 'Kenya'.locale(), 'Kiribati'.locale(), 'Korea, Democratic People\'s Republic'.locale(), 'Korea, Republic of'.locale(), 'Kuwait'.locale(), 'Kyrgyzstan'.locale(), 'Lao People\'s Democratic Republic'.locale(), 'Latvia'.locale(), 'Lebanon'.locale(), 'Lesotho'.locale(), 'Liberia'.locale(), 'Libyan Arab Jamahiriya'.locale(), 'Liechtenstein'.locale(), 'Lithuania'.locale(), 'Luxembourg'.locale(), 'Macau'.locale(), 'Macedonia'.locale(), 'Madagascar'.locale(), 'Malawi'.locale(), 'Malaysia'.locale(), 'Maldives'.locale(), 'Mali'.locale(), 'Malta'.locale(), 'Marshall Islands'.locale(), 'Martinique'.locale(), 'Mauritania'.locale(), 'Mauritius'.locale(), 'Mayotte'.locale(), 'Mexico'.locale(), 'Micronesia, Federated States of'.locale(), 'Moldova, Republic of'.locale(), 'Monaco'.locale(), 'Mongolia'.locale(), 'Montenegro'.locale(), 'Montserrat'.locale(), 'Morocco'.locale(), 'Mozambique'.locale(), 'Myanmar'.locale(), 'Namibia'.locale(), 'Nauru'.locale(), 'Nepal'.locale(), 'New Caledonia'.locale(), 'New Zealand'.locale(), 'Nicaragua'.locale(), 'Niger'.locale(), 'Nigeria'.locale(), 'Niue'.locale(), 'Norfolk Island'.locale(), 'Northern Mariana Islands'.locale(), 'Norway'.locale(), 'Oman'.locale(), 'Pakistan'.locale(), 'Palau'.locale(), 'Palestinian Territory, Occupied'.locale(), 'Panama'.locale(), 'Papua New Guinea'.locale(), 'Paraguay'.locale(), 'Peru'.locale(), 'Philippines'.locale(), 'Pitcairn'.locale(), 'Poland'.locale(), 'Portugal'.locale(), 'Puerto Rico'.locale(), 'Qatar'.locale(), 'Reunion'.locale(), 'Romania'.locale(), 'Russian Federation'.locale(), 'Rwanda'.locale(), 'Saint Barthelemy'.locale(), 'Saint Helena'.locale(), 'Saint Kitts and Nevis'.locale(), 'Saint Lucia'.locale(), 'Saint Martin'.locale(), 'Saint Vincent and the Grenadines'.locale(), 'Samoa'.locale(), 'San Marino'.locale(), 'Sao Tome and Principe'.locale(), 'Saudi Arabia'.locale(), 'Senegal'.locale(), 'Serbia'.locale(), 'Seychelles'.locale(), 'Sierra Leone'.locale(), 'Singapore'.locale(), 'Sint Maarten'.locale(), 'Slovakia (Slovak Republic)'.locale(), 'Slovenia'.locale(), 'Solomon Islands'.locale(), 'Somalia'.locale(), 'South Africa'.locale(), 'South Georgia and the South Sandwich Islands'.locale(), 'South Sudan'.locale(), 'Spain'.locale(), 'Sri Lanka'.locale(), 'St. Pierre and Miquelon'.locale(), 'Sudan'.locale(), 'Suriname'.locale(), 'Svalbard and Jan Mayen Islands'.locale(), 'eSwatini'.locale(), 'Sweden'.locale(), 'Switzerland'.locale(), 'Syrian Arab Republic'.locale(), 'Taiwan'.locale(), 'Tajikistan'.locale(), 'Tanzania, United Republic of'.locale(), 'Thailand'.locale(), 'The Netherlands'.locale(), 'Timor-Leste'.locale(), 'Togo'.locale(), 'Tokelau'.locale(), 'Tonga'.locale(), 'Trinidad and Tobago'.locale(), 'Tunisia'.locale(), 'Turkey'.locale(), 'Turkmenistan'.locale(), 'Turks and Caicos Islands'.locale(), 'Tuvalu'.locale(), 'Uganda'.locale(), 'Ukraine'.locale(), 'United Arab Emirates'.locale(), 'United Kingdom'.locale(), 'United States Minor Outlying Islands'.locale(), 'Uruguay'.locale(), 'Uzbekistan'.locale(), 'Vanuatu'.locale(), 'Vatican City State (Holy See)'.locale(), 'Venezuela'.locale(), 'Vietnam'.locale(), 'Virgin Islands (British)'.locale(), 'Virgin Islands (U.S.)'.locale(), 'Wallis and Futuna Islands'.locale(), 'Western Sahara'.locale(), 'Yemen'.locale(), 'Zambia'.locale(), 'Zimbabwe'.locale()]
	    }
	  }
	};
	var specialOptions = {
	  None: {
	    controls: 'dropdown,radio,checkbox,matrix'
	  },
	  'US States': {
	    controls: 'dropdown',
	    value: ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Islands', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming']
	  },
	  'US States Abbr': {
	    controls: 'dropdown',
	    value: ['AL', 'AK', 'AR', 'AZ', 'CA', 'CO', 'CT', 'DC', 'DE', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI', 'WY']
	  },
	  'Canadian Provinces': {
	    controls: 'dropdown',
	    value: ['Alberta', 'British Columbia', 'Manitoba', 'New Brunswick', 'Newfoundland', 'Northwest Territories', 'Nova Scotia', 'Nunavut', 'Ontario', 'Prince Edward Island', 'Quebec', 'Saskatchewan', 'Yukon']
	  },
	  Countries: {
	    controls: 'dropdown',
	    value: _Countries.COUNTRIES.map(function (country) {
	      return country.locale();
	    })
	  },
	  'Last 100 Years': {
	    controls: 'dropdown',
	    value: lastHundredYears
	  },
	  Gender: {
	    controls: 'dropdown,radio,checkbox',
	    value: ['Male'.locale(), 'Female'.locale(), 'N/A'.locale()]
	  },
	  Days: {
	    controls: 'dropdown,radio,checkbox',
	    value: ['Monday'.locale(), 'Tuesday'.locale(), 'Wednesday'.locale(), 'Thursday'.locale(), 'Friday'.locale(), 'Saturday'.locale(), 'Sunday'.locale()]
	  },
	  Months: {
	    controls: 'dropdown,radio,checkbox',
	    value: ['January'.locale(), 'February'.locale(), 'March'.locale(), 'April'.locale(), 'May'.locale(), 'June'.locale(), 'July'.locale(), 'August'.locale(), 'September'.locale(), 'October'.locale(), 'November'.locale(), 'December'.locale()],
	    nonLocale: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
	  },
	  'Time Zones': {
	    controls: 'dropdown',
	    value: ['[[Africa]]', 'Abidjan (GMT)', 'Accra (GMT)', 'Addis Ababa (GMT+03:00)', 'Algiers (GMT+01:00)', 'Asmara (GMT+03:00)', 'Bamako (GMT)', 'Bangui (GMT+01:00)', 'Banjul (GMT)', 'Bissau (GMT)', 'Blantyre (GMT+02:00)', 'Brazzaville (GMT+01:00)', 'Bujumbura (GMT+02:00)', 'Cairo (GMT+03:00)', 'Casablanca (GMT)', 'Ceuta (GMT+02:00)', 'Conakry (GMT)', 'Dakar (GMT)', 'Dar es Salaam (GMT+03:00)', 'Djibouti (GMT+03:00)', 'Douala (GMT+01:00)', 'El Aaiun (GMT)', 'Freetown (GMT)', 'Gaborone (GMT+02:00)', 'Harare (GMT+02:00)', 'Johannesburg (GMT+02:00)', 'Kampala (GMT+03:00)', 'Khartoum (GMT+03:00)', 'Kigali (GMT+02:00)', 'Kinshasa (GMT+01:00)', 'Lagos (GMT+01:00)', 'Libreville (GMT+01:00)', 'Lome (GMT)', 'Luanda (GMT+01:00)', 'Lubumbashi (GMT+02:00)', 'Lusaka (GMT+02:00)', 'Malabo (GMT+01:00)', 'Maputo (GMT+02:00)', 'Maseru (GMT+02:00)', 'Mbabane (GMT+02:00)', 'Mogadishu (GMT+03:00)', 'Monrovia (GMT)', 'Nairobi (GMT+03:00)', 'Ndjamena (GMT+01:00)', 'Niamey (GMT+01:00)', 'Nouakchott (GMT)', 'Ouagadougou (GMT)', 'Porto-Novo (GMT+01:00)', 'Sao Tome (GMT)', 'Tripoli (GMT+02:00)', 'Tunis (GMT+02:00)', 'Windhoek (GMT+01:00)', '[[America]]', 'Adak (GMT-09:00)', 'Anchorage (GMT-08:00)', 'Anguilla (GMT-04:00)', 'Antigua (GMT-04:00)', 'Araguaina (GMT-03:00)', 'Buenos Aires, Argentina (GMT-03:00)', 'Catamarca, Argentina (GMT-03:00)', 'Cordoba, Argentina (GMT-03:00)', 'Jujuy, Argentina (GMT-03:00)', 'La Rioja, Argentina (GMT-03:00)', 'Mendoza, Argentina (GMT-03:00)', 'Rio Gallegos, Argentina (GMT-03:00)', 'Salta, Argentina (GMT-03:00)', 'San Juan, Argentina (GMT-03:00)', 'San Luis, Argentina (GMT-04:00)', 'Tucuman, Argentina (GMT-03:00)', 'Ushuaia, Argentina (GMT-03:00)', 'Aruba (GMT-04:00)', 'Asuncion (GMT-04:00)', 'Atikokan (GMT-05:00)', 'Bahia (GMT-03:00)', 'Barbados (GMT-04:00)', 'Belem (GMT-03:00)', 'Belize (GMT-06:00)', 'Blanc-Sablon (GMT-04:00)', 'Boa Vista (GMT-04:00)', 'Bogota (GMT-05:00)', 'Boise (GMT-06:00)', 'Cambridge Bay (GMT-06:00)', 'Campo Grande (GMT-04:00)', 'Cancun (GMT-05:00)', 'Caracas (GMT-04:30)', 'Cayenne (GMT-03:00)', 'Cayman (GMT-05:00)', 'Chicago (GMT-05:00)', 'Chihuahua (GMT-06:00)', 'Costa Rica (GMT-06:00)', 'Cuiaba (GMT-04:00)', 'Curacao (GMT-04:00)', 'Danmarkshavn (GMT)', 'Dawson (GMT-07:00)', 'Dawson Creek (GMT-07:00)', 'Denver (GMT-06:00)', 'Detroit (GMT-04:00)', 'Dominica (GMT-04:00)', 'Edmonton (GMT-06:00)', 'Eirunepe (GMT-04:00)', 'El Salvador (GMT-06:00)', 'Fortaleza (GMT-03:00)', 'Glace Bay (GMT-03:00)', 'Godthab (GMT-02:00)', 'Goose Bay (GMT-03:00)', 'Grand Turk (GMT-04:00)', 'Grenada (GMT-04:00)', 'Guadeloupe (GMT-04:00)', 'Guatemala (GMT-06:00)', 'Guayaquil (GMT-05:00)', 'Guyana (GMT-04:00)', 'Halifax (GMT-03:00)', 'Havana (GMT-04:00)', 'Hermosillo (GMT-07:00)', 'Indianapolis, Indiana (GMT-04:00)', 'Knox, Indiana (GMT-05:00)', 'Marengo, Indiana (GMT-04:00)', 'Petersburg, Indiana (GMT-04:00)', 'Tell City, Indiana (GMT-05:00)', 'Vevay, Indiana (GMT-04:00)', 'Vincennes, Indiana (GMT-04:00)', 'Winamac, Indiana (GMT-04:00)', 'Inuvik (GMT-06:00)', 'Iqaluit (GMT-04:00)', 'Jamaica (GMT-05:00)', 'Juneau (GMT-08:00)', 'Louisville, Kentucky (GMT-04:00)', 'Monticello, Kentucky (GMT-04:00)', 'La Paz (GMT-04:00)', 'Lima (GMT-05:00)', 'Los Angeles (GMT-07:00)', 'Maceio (GMT-03:00)', 'Managua (GMT-06:00)', 'Manaus (GMT-04:00)', 'Marigot (GMT-04:00)', 'Martinique (GMT-04:00)', 'Mazatlan (GMT-06:00)', 'Menominee (GMT-05:00)', 'Merida (GMT-05:00)', 'Mexico City (GMT-05:00)', 'Miquelon (GMT-02:00)', 'Moncton (GMT-03:00)', 'Monterrey (GMT-05:00)', 'Montevideo (GMT-03:00)', 'Montreal (GMT-04:00)', 'Montserrat (GMT-04:00)', 'Nassau (GMT-04:00)', 'New York (GMT-04:00)', 'Nipigon (GMT-04:00)', 'Nome (GMT-08:00)', 'Noronha (GMT-02:00)', 'Center, North Dakota (GMT-05:00)', 'New Salem, North Dakota (GMT-05:00)', 'Panama (GMT-05:00)', 'Pangnirtung (GMT-04:00)', 'Paramaribo (GMT-03:00)', 'Phoenix (GMT-07:00)', 'Port-au-Prince (GMT-05:00)', 'Port of Spain (GMT-04:00)', 'Porto Velho (GMT-04:00)', 'Puerto Rico (GMT-04:00)', 'Rainy River (GMT-05:00)', 'Rankin Inlet (GMT-05:00)', 'Recife (GMT-03:00)', 'Regina (GMT-06:00)', 'Resolute (GMT-05:00)', 'Rio Branco (GMT-04:00)', 'Santarem (GMT-03:00)', 'Santiago (GMT-04:00)', 'Santo Domingo (GMT-04:00)', 'Sao Paulo (GMT-03:00)', 'Scoresbysund (GMT)', 'Shiprock (GMT-06:00)', 'St Barthelemy (GMT-04:00)', 'St Johns (GMT-02:30)', 'St Kitts (GMT-04:00)', 'St Lucia (GMT-04:00)', 'St Thomas (GMT-04:00)', 'St Vincent (GMT-04:00)', 'Swift Current (GMT-06:00)', 'Tegucigalpa (GMT-06:00)', 'Thule (GMT-03:00)', 'Thunder Bay (GMT-04:00)', 'Tijuana (GMT-07:00)', 'Toronto (GMT-04:00)', 'Tortola (GMT-04:00)', 'Vancouver (GMT-07:00)', 'Whitehorse (GMT-07:00)', 'Winnipeg (GMT-05:00)', 'Yakutat (GMT-08:00)', 'Yellowknife (GMT-06:00)', '[[Antarctica]]', 'Casey (GMT+11:00)', 'Davis (GMT+05:00)', 'DumontDUrville (GMT+10:00)', 'Mawson (GMT+05:00)', 'McMurdo (GMT+12:00)', 'Palmer (GMT-04:00)', 'Rothera (GMT-03:00)', 'South Pole (GMT+12:00)', 'Syowa (GMT+03:00)', 'Vostok (GMT+06:00)', '[[Arctic]]', 'Longyearbyen (GMT+02:00)', '[[Asia]]', 'Aden (GMT+03:00)', 'Almaty (GMT+06:00)', 'Amman (GMT+03:00)', 'Anadyr (GMT+13:00)', 'Aqtau (GMT+05:00)', 'Aqtobe (GMT+05:00)', 'Ashgabat (GMT+05:00)', 'Baghdad (GMT+03:00)', 'Bahrain (GMT+03:00)', 'Baku (GMT+05:00)', 'Bangkok (GMT+07:00)', 'Beirut (GMT+03:00)', 'Bishkek (GMT+06:00)', 'Brunei (GMT+08:00)', 'Choibalsan (GMT+08:00)', 'Chongqing (GMT+08:00)', 'Colombo (GMT+05:30)', 'Damascus (GMT+03:00)', 'Dhaka (GMT+07:00)', 'Dili (GMT+09:00)', 'Dubai (GMT+04:00)', 'Dushanbe (GMT+05:00)', 'Gaza (GMT+03:00)', 'Harbin (GMT+08:00)', 'Ho Chi Minh (GMT+07:00)', 'Hong Kong (GMT+08:00)', 'Hovd (GMT+07:00)', 'Irkutsk (GMT+09:00)', 'Jakarta (GMT+07:00)', 'Jayapura (GMT+09:00)', 'Jerusalem (GMT+03:00)', 'Kabul (GMT+04:30)', 'Kamchatka (GMT+13:00)', 'Karachi (GMT+06:00)', 'Kashgar (GMT+08:00)', 'Kathmandu (GMT+05:45)', 'Kolkata (GMT+05:30)', 'Krasnoyarsk (GMT+08:00)', 'Kuala Lumpur (GMT+08:00)', 'Kuching (GMT+08:00)', 'Kuwait (GMT+03:00)', 'Macau (GMT+08:00)', 'Magadan (GMT+12:00)', 'Makassar (GMT+08:00)', 'Manila (GMT+08:00)', 'Muscat (GMT+04:00)', 'Nicosia (GMT+03:00)', 'Novokuznetsk (GMT+07:00)', 'Novosibirsk (GMT+07:00)', 'Omsk (GMT+07:00)', 'Oral (GMT+05:00)', 'Phnom Penh (GMT+07:00)', 'Pontianak (GMT+07:00)', 'Pyongyang (GMT+09:00)', 'Qatar (GMT+03:00)', 'Qyzylorda (GMT+06:00)', 'Rangoon (GMT+06:30)', 'Riyadh (GMT+03:00)', 'Sakhalin (GMT+11:00)', 'Samarkand (GMT+05:00)', 'Seoul (GMT+09:00)', 'Shanghai (GMT+08:00)', 'Singapore (GMT+08:00)', 'Taipei (GMT+08:00)', 'Tashkent (GMT+05:00)', 'Tbilisi (GMT+04:00)', 'Tehran (GMT+04:30)', 'Thimphu (GMT+06:00)', 'Tokyo (GMT+09:00)', 'Ulaanbaatar (GMT+08:00)', 'Urumqi (GMT+08:00)', 'Vientiane (GMT+07:00)', 'Vladivostok (GMT+11:00)', 'Yakutsk (GMT+10:00)', 'Yekaterinburg (GMT+06:00)', 'Yerevan (GMT+05:00)', '[[Atlantic]]', 'Azores (GMT)', 'Bermuda (GMT-03:00)', 'Canary (GMT+01:00)', 'Cape Verde (GMT-01:00)', 'Faroe (GMT+01:00)', 'Madeira (GMT+01:00)', 'Reykjavik (GMT)', 'South Georgia (GMT-02:00)', 'St Helena (GMT)', 'Stanley (GMT-04:00)', '[[Australia]]', 'Adelaide (GMT+09:30)', 'Brisbane (GMT+10:00)', 'Broken Hill (GMT+09:30)', 'Currie (GMT+10:00)', 'Darwin (GMT+09:30)', 'Eucla (GMT+08:45)', 'Hobart (GMT+10:00)', 'Lindeman (GMT+10:00)', 'Lord Howe (GMT+10:30)', 'Melbourne (GMT+10:00)', 'Perth (GMT+08:00)', 'Sydney (GMT+10:00)', '[[Europe]]', 'Amsterdam (GMT+02:00)', 'Andorra (GMT+02:00)', 'Athens (GMT+03:00)', 'Belgrade (GMT+02:00)', 'Berlin (GMT+02:00)', 'Bratislava (GMT+02:00)', 'Brussels (GMT+02:00)', 'Bucharest (GMT+03:00)', 'Budapest (GMT+02:00)', 'Chisinau (GMT+03:00)', 'Copenhagen (GMT+02:00)', 'Dublin (GMT+01:00)', 'Gibraltar (GMT+02:00)', 'Guernsey (GMT+01:00)', 'Helsinki (GMT+03:00)', 'Isle of Man (GMT+01:00)', 'Istanbul (GMT+03:00)', 'Jersey (GMT+01:00)', 'Kaliningrad (GMT+03:00)', 'Kiev (GMT+03:00)', 'Lisbon (GMT+01:00)', 'Ljubljana (GMT+02:00)', 'London (GMT+01:00)', 'Luxembourg (GMT+02:00)', 'Madrid (GMT+02:00)', 'Malta (GMT+02:00)', 'Mariehamn (GMT+03:00)', 'Minsk (GMT+03:00)', 'Monaco (GMT+02:00)', 'Moscow (GMT+04:00)', 'Oslo (GMT+02:00)', 'Paris (GMT+02:00)', 'Podgorica (GMT+02:00)', 'Prague (GMT+02:00)', 'Riga (GMT+03:00)', 'Rome (GMT+02:00)', 'Samara (GMT+05:00)', 'San Marino (GMT+02:00)', 'Sarajevo (GMT+02:00)', 'Simferopol (GMT+03:00)', 'Skopje (GMT+02:00)', 'Sofia (GMT+03:00)', 'Stockholm (GMT+02:00)', 'Tallinn (GMT+03:00)', 'Tirane (GMT+02:00)', 'Uzhgorod (GMT+03:00)', 'Vaduz (GMT+02:00)', 'Vatican (GMT+02:00)', 'Vienna (GMT+02:00)', 'Vilnius (GMT+03:00)', 'Volgograd (GMT+04:00)', 'Warsaw (GMT+02:00)', 'Zagreb (GMT+02:00)', 'Zaporozhye (GMT+03:00)', 'Zurich (GMT+02:00)', '[[Indian]]', 'Antananarivo (GMT+03:00)', 'Chagos (GMT+06:00)', 'Christmas (GMT+07:00)', 'Cocos (GMT+06:30)', 'Comoro (GMT+03:00)', 'Kerguelen (GMT+05:00)', 'Mahe (GMT+04:00)', 'Maldives (GMT+05:00)', 'Mauritius (GMT+04:00)', 'Mayotte (GMT+03:00)', 'Reunion (GMT+04:00)', '[[Pacific]]', 'Apia (GMT-11:00)', 'Auckland (GMT+12:00)', 'Chatham (GMT+12:45)', 'Easter (GMT-06:00)', 'Efate (GMT+11:00)', 'Enderbury (GMT+13:00)', 'Fakaofo (GMT-10:00)', 'Fiji (GMT+12:00)', 'Funafuti (GMT+12:00)', 'Galapagos (GMT-06:00)', 'Gambier (GMT-09:00)', 'Guadalcanal (GMT+11:00)', 'Guam (GMT+10:00)', 'Honolulu (GMT-10:00)', 'Johnston (GMT-10:00)', 'Kiritimati (GMT+14:00)', 'Kosrae (GMT+11:00)', 'Kwajalein (GMT+12:00)', 'Majuro (GMT+12:00)', 'Marquesas (GMT-09:30)', 'Midway (GMT-11:00)', 'Nauru (GMT+12:00)', 'Niue (GMT-11:00)', 'Norfolk (GMT+11:30)', 'Noumea (GMT+11:00)', 'Pago Pago (GMT-11:00)', 'Palau (GMT+09:00)', 'Pitcairn (GMT-08:00)', 'Ponape (GMT+11:00)', 'Port Moresby (GMT+10:00)', 'Rarotonga (GMT-10:00)', 'Saipan (GMT+10:00)', 'Tahiti (GMT-10:00)', 'Tarawa (GMT+12:00)', 'Tongatapu (GMT+13:00)', 'Truk (GMT+10:00)', 'Wake (GMT+12:00)', 'Wallis (GMT+12:00)']
	  },
	  LocationCountries: {
	    controls: 'location',
	    value: ['Canada', 'United States', 'Afghanistan', 'Albania', 'Algeria', 'American Samoa', 'Andorra', 'Angola', 'Anguilla', 'Antarctica', 'Antigua and Barbuda', 'Argentina', 'Armenia', 'Aruba', 'Australia', 'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin', 'Bermuda', 'Bhutan', 'Bolivia', 'Bosnia Herzegowina', 'Botswana', 'Bouvet Island', 'Brazil', 'British Ind. Ocean', 'Brunei Darussalam', 'Bulgaria', 'Burkina Faso', 'Burundi', 'Cambodia', 'Cameroon', 'Cape Verde', 'Cayman Islands', 'Central African Rep.', 'Chad', 'Chile', 'China', 'Christmas Island', 'Cocoa (Keeling) Is.', 'Colombia', 'Comoros', 'Congo', 'Cook Islands', 'Costa Rica', 'Cote Divoire', 'Croatia', 'Cuba', 'Curacao', 'Cyprus', 'Czech Republic', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'East Timor', 'Ecuador', 'Egypt', 'El Salvador', 'Equatorial Guinea', 'Eritrea', 'Estonia', 'Ethiopia', 'Falkland Islands', 'Faroe Islands', 'Fiji', 'Finland', 'France', 'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Gibraltar', 'Greece', 'Greenland', 'Grenada', 'Guadeloupe', 'Guam', 'Guatemala', 'Guinea', 'Guinea-Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Israel', 'Italy', 'Jamaica', 'Japan', 'Jordan', 'Kazakhstan', 'Kenya', 'Kiribati', 'Korea', 'Kuwait', 'Kyrgyzstan', 'Lao', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Macau', 'Macedonia', 'Madagascar', 'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Marshall Islands', 'Martinique', 'Mauritania', 'Mauritius', 'Mayotte', 'Mexico', 'Micronesia', 'Moldova', 'Monaco', 'Mongolia', 'Montserrat', 'Morocco', 'Mozambique', 'Myanmar', 'Namibia', 'Nauru', 'Nepal', 'Netherlands', 'New Caledonia', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'Niue', 'Norfolk Island', 'Norway', 'Oman', 'Pakistan', 'Palau', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines', 'Pitcairn', 'Poland', 'Portugal', 'Puerto Rico', 'Qatar', 'Reunion', 'Romania', 'Russia', 'Rwanda', 'Saint Lucia', 'Samoa', 'San Marino', 'Saudi Arabia', 'Senegal', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Solomon Islands', 'Somalia', 'South Africa', 'South Sudan', 'Spain', 'Sri Lanka', 'St. Helena', 'Sudan', 'Suriname', 'eSwatini', 'Sweden', 'Switzerland', 'Syria', 'Taiwan', 'Tajikistan', 'Tanzania', 'Thailand', 'Togo', 'Tokelau', 'Tonga', 'Trinidad and Tobago', 'Tunisia', 'Turkey', 'Turkmenistan', 'Tuvalu', 'Uganda', 'Ukraine', 'United Arab Emirates', 'United Kingdom', 'Uruguay', 'Uzbekistan', 'Vanuatu', 'Vatican', 'Venezuela', 'Viet Nam', 'Virgin Islands', 'Western Sahara', 'Yeman', 'Yugoslavia', 'Zaire', 'Zambia']
	  },

	  /* eslint max-len:1 */

	  /**
	   * Gets the special options for specific element
	   * @example special_options.getByType('dropdown') => ['Months', 'Days', 'US States' .... ]
	   * @param {Object} type
	   */
	  getByType: function getByType(type) {
	    var options = [];
	    for (var key in specialOptions) {
	      if (specialOptions[key].controls && specialOptions[key].controls.indexOf(type) >= 0) {
	        options.push(key);
	      }
	    }
	    return options;
	  }
	};

	exports.specialOptions = specialOptions;

	/**
	* Build parameters and settings for the widget
	*/

	function buildParams(_params, fieldNames, prop) {
	  for (var i = 0; i < fieldNames.length; i++) {
	    var key = fieldNames[i];
	    if (key === '') {
	      continue;
	    }
	    var el = prop[key];
	    if (el && el.value) {
	      var propvalue = typeof el.value === 'string' ? htmlDecode(el.value) : el.value;

	      // from here lets check chunks - lets include them
	      if ('paramChunks' in prop && prop.paramChunks.value) {
	        var chunkProps = prop.paramChunks.value;
	        /* eslint guard-for-in:0 */
	        for (var chunkKey in chunkProps) {
	          var chunkProp = chunkProps[chunkKey];
	          // if current key matches the mainpart
	          // it means we have a chunks to merge
	          if (chunkKey === key) {
	            for (var y = 0; y < chunkProp.parts.length; y++) {
	              var partnameProp = chunkProp.parts[y];
	              // if part name is registered as prop then concatenate to final value
	              if (prop[partnameProp] && prop[partnameProp].value) {
	                propvalue += prop[partnameProp].value;
	              }
	            }
	          }
	        }
	        /* eslint guard-for-in:1 */
	      }

	      // push the data to settings array
	      _params.push({
	        name: key,
	        value: propvalue
	      });

	      // avoid memory leak
	      propvalue = null;
	    }
	  }
	  return _params;
	}

	function fixNumbers(number) {
	  if (typeof number === 'string') {
	    return number.replace(/\D/gim, '');
	  }
	  return number;
	}

	function numberFormat(number, decimals, decPoint, thousandsSep) {
	  var n = number;
	  var prec = decimals;

	  var toFixedFix = function toFixedFix(num, dec) {
	    var k = Math.pow(10, dec);
	    return (Math.round(num * k) / k).toString();
	  };

	  n = !isFinite(+n) ? 0 : +n;
	  prec = !isFinite(+prec) ? 0 : Math.abs(prec);
	  var sep = typeof thousandsSep === 'undefined' ? ',' : thousandsSep;
	  var dec = typeof decPoint === 'undefined' ? '.' : decPoint;
	  var s = prec > 0 ? toFixedFix(n, prec) : toFixedFix(Math.round(n), prec);
	  var abs = toFixedFix(Math.abs(n), prec);
	  var _ = void 0;
	  var i = void 0;

	  if (abs >= 1000) {
	    _ = abs.split(/\D/);
	    i = _[0].length % 3 || 3;
	    _[0] = s.slice(0, i + (n < 0)) + _[0].slice(i).replace(/(\d{3})/g, sep + '$1');
	    s = _.join(dec);
	  } else {
	    s = s.replace('.', dec);
	  }

	  if (s.indexOf(dec) === -1 && prec > 1) {
	    var preca = [];
	    preca[prec - 1] = undefined;
	    s += dec + preca.join(0) + '0';
	  } else if (s.indexOf(dec) === s.length - 2 && s.length > 1) {
	    // incorrect: 2.7, correct: 2.70
	    s += '0';
	  }

	  return s;
	}

	function formatPrice(priceAmount, currency, priceID, nofree, decimalMark) {
	  var curr = !currency ? 'USD' : currency;

	  var id = priceID || '';
	  var amount = priceAmount;
	  // no-decimal currencies
	  var noDecimal = ['BIF', 'CLP', 'DJF', 'GNF', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'VUV', 'XAF', 'XOF', 'XPF'];
	  // decimal places
	  var dec = noDecimal.indexOf(curr) > -1 ? 0 : 2;

	  if (parseFloat(amount) === 0 && nofree !== true) {
	    amount = 'Free'.locale();
	  } else {
	    var useComma = decimalMark && decimalMark === 'comma';
	    amount = numberFormat(amount, dec, useComma ? ',' : '.', useComma ? '.' : ','); // Format the number for money currency
	  }
	  var symbol = void 0;
	  switch (curr) {
	    case 'EUR':
	      symbol = ['&euro;', curr];break;
	    case 'GBP':
	      symbol = ['&pound;', curr];break;
	    case 'BRL':
	      symbol = ['R$', ''];break;
	    case 'JPY':
	      symbol = ['¥', curr];break;
	    case 'USD':
	      symbol = ['$', ''];break;
	    case 'AUD':
	    case 'CAD':
	    case 'NZD':
	    case 'SGD':
	    case 'HKD':
	    case 'CLP':
	      symbol = ['$', curr];break;
	    case 'TRY':
	      symbol = ['', 'TL'];break;
	    default:
	      symbol = ['', curr];break;
	  }

	  var out = void 0;
	  // the word 'free' can be in other languages
	  // parse and check if it's a number to determine if it's free or not
	  if (isNaN(parseInt(amount, 10))) {
	    out = '<span class=\'freeCurr\' style=\'display:none;\'>&nbsp' + symbol[0] + '</span><span id="' + id + '">&nbsp' + amount + '</span> <span class=\'freeCurr\' style=\'display:none;\'>&nbsp' + symbol[1] + '</span>';
	  } else {
	    out = symbol[0] + '<span id="' + id + '">' + amount + '</span> ' + symbol[1];
	  }
	  return out;
	}

	/**
	 * Makes formatted text for products. Just like paypal
	 * @param {Object} name
	 * @param {Object} price
	 * @param {Object} curr
	 * @param {Object} duration
	 * @param {Object} setupfee
	 * @param {Object} trial
	 * @param {Object} id
	 * @param {Object} times (number of subscription payments)
	 * @param {Boolean} noPrice
	 * @param {Boolean} passive Whether env is form builder or not
	 * @param {Boolean} customPrice Whether the item's price is variable/user-defined (for subscriptions only)
	 */
	function makeProductText(name, price, curr, duration, setupfee, productTrial, id, times, noPrice, passive, customPrice, customPriceSource) {
	  var text = '';
	  var currDisplay = curr ? curr : undefined;

	  switch (curr) {

	    case 'TRY':
	      currDisplay = 'TL';
	      break;

	    // case 'USD':
	    //     currDisplay = '$';
	    // break;

	    default:
	      currDisplay = curr;
	      break;

	  }

	  var fprice = noPrice ? '' : '<b>' + formatPrice(price || 0, currDisplay, id || '') + '</b>'; // Get formatted price
	  var fsetupfee = '<b>' + formatPrice(Number(setupfee) || 0, curr, id ? id.replace('price', 'setupfee') : '') + '</b>'; // Get calculated and formatted setupfee
	  var setuptext = ''; // setupfee text will be here
	  var trialText = setupfee > 0 ? fsetupfee : 'Free'.locale();
	  var installmentText = '.'; // installmentText placeholder


	  if (customPrice) {
	    var readOnly = customPriceSource > 0 || passive;

	    fprice = '<b><input value="' + price + '" ' + (id ? 'id="' + id.replace('_price', '') + '_custom_price" ' : '') + 'class="form-product-custom_price" type="text" name=""' + (readOnly ? ' readonly' : '');

	    if (customPriceSource > 0) {
	      fprice += ' data-price-source="' + customPriceSource + '"';
	    }

	    fprice += '/>' + currDisplay + '</b>';
	  }

	  /** re-implement if requested
	   *
	  if(times && !isNaN(times)) {
	      installmentText = times !== '1' ? ", for " + times + " installments." : ".";
	  }
	  **/

	  var trial = void 0;
	  if (duration && productTrial && productTrial.toLowerCase() !== 'none' && productTrial !== 'Enabled') {
	    // If trial period is set
	    trial = productTrial.locale();
	    if (trial === 'One Day') {
	      // Special text for 1 day trial
	      text += trialText + ' ' + 'for the first day then,'.locale() + ' ';
	    } else {
	      text += trialText + ' ' + 'for the first <u>'.locale() + trial.toLowerCase() + '</u> then,'.locale() + ' ';
	    }
	  }

	  if (trial === 'Enabled') {
	    fsetupfee = 'Free'.locale();
	  }

	  setuptext = fsetupfee + ' ' + 'for the <u>first payment</u> then,'.locale() + ' ';

	  if (duration) {
	    // If recurring duration is set
	    // If recurring times is equal to 1
	    if (times === '1') {
	      text += fprice + ' ' + 'one-time payment'.locale();
	    } else {
	      switch (duration) {
	        case 'Daily':
	          setuptext = fsetupfee + ' ' + 'for the <u>first day</u> then,'.locale() + ' ';
	          text += fprice + ' ' + 'for each <u>day</u>'.locale();
	          break;
	        case 'Weekly':
	          setuptext = fsetupfee + ' ' + 'for the <u>first week</u> then,'.locale() + ' ';
	          text += fprice + ' ' + 'for each <u>week</u>'.locale();
	          break;
	        case 'Bi-Weekly':
	          text += fprice + ' ' + 'for each <u>two weeks</u>'.locale();
	          break;
	        case 'Monthly':
	          setuptext = fsetupfee + ' ' + 'for the <u>first month</u> then,'.locale() + ' ';
	          text += fprice + ' ' + 'for each <u>month</u>'.locale();
	          break;
	        case 'Bi-Monthly':
	          text += fprice + ' ' + 'for each <u>two months</u>'.locale();
	          break;
	        case 'Quarterly':
	          text += fprice + ' ' + 'for each <u>three months</u>'.locale();
	          break;
	        case 'Semi-Yearly':
	          text += fprice + ' ' + 'for each <u>six months</u>'.locale();
	          break;
	        case 'Yearly':
	          setuptext = fsetupfee + ' for the <u>first year</u> then, ';
	          text += fprice + ' ' + 'for each <u>year</u>'.locale();
	          break;
	        case 'Bi-Yearly':
	          text += fprice + ' ' + 'for each <u>two years</u>'.locale();
	          break;
	        default:
	          if (duration.match(/custom-/g)) {
	            setuptext = fsetupfee + ' for the <u>first ' + duration.replace(/custom-/g, '') + ' days</u> then,';
	            text += fprice + ' every <u> ' + duration.replace(/custom-/g, '') + ' days</u>';
	          } else {
	            // Default for monthly
	            setuptext = fsetupfee + ' ' + 'for the <u>first month</u> then,'.locale() + ' ';
	            text += fprice + ' ' + 'for each <u>month</u>'.locale();
	          }
	      }
	    }

	    text += installmentText;

	    if ((!trial || trial === 'None') && (setupfee > 0 || trial === 'Enabled')) {
	      // Trial overwrites the setupfee
	      text = setuptext + text; // Add setupfee text if no trial was set
	    }

	    text = '(' + text + ')'; // Put long text in parenthesis
	  } else {
	    text += fprice; // Default price.
	  }

	  // Finish the sentence here
	  // Place product name to first then, wrap details in span for easier styling
	  return (name || '') + ' <span class="form-product-details">' + text + '</span>';
	}

	function loadScript(file) {
	  var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
	  var arg = arguments[2];

	  try {
	    var templateCache = {};
	    templateCache[file] = callback;
	    var script = global.document.createElement('script');
	    script.type = 'text/javascript';
	    script.src = file + '?' + new Date().getTime();
	    global.$(global.document.body).appendChild(script);
	    if (arg === true) {
	      callback();
	    }
	  } catch (e) {
	    console.error(e);
	  }
	}

	// Sanitize dafaults ////////////////////////////////////////////////////////////
	// allowedTags: [ 'h3', 'h4', 'h5', 'h6', 'blockquote', 'p', 'a', 'ul', 'ol',
	//   'nl', 'li', 'b', 'i', 'strong', 'em', 'strike', 'code', 'hr', 'br', 'div',
	//   'table', 'thead', 'caption', 'tbody', 'tr', 'th', 'td', 'pre' ],
	// allowedAttributes: {
	//   a: [ 'href', 'name', 'target' ],
	//   // We don't currently allow img itself by default, but this
	//   // would make sense if we did
	//   img: [ 'src' ]
	// },
	// // URL schemes we permit
	// allowedSchemes: [ 'http', 'https', 'ftp', 'mailto' ],
	// allowedSchemesByTag: {}
	// ///////////////////////////////////////////////////////////////////////////////
	function sanitize(str) {
	  return (0, _sanitizeHtml2.default)(str, {
	    allowedTags: _sanitizeHtml2.default.defaults.allowedTags.concat(['img', 'span', 'h1', 'h2', 'h3', 'h4', 'audio', 'source', 'iframe', 'small', 'colgroup', 'col', 'i', 'sup', 'nav']),
	    allowedAttributes: {
	      '*': ['href', 'align', 'alt', 'center', 'bgcolor', 'style', 'class', 'width', 'height', 'start'],
	      img: ['src'],
	      audio: ['controls', 'src'],
	      iframe: ['src', 'allowfullscreen'],
	      source: ['src', 'type'],
	      a: ['target', 'title', 'rel'],
	      table: ['border', 'cellspacing', 'cellpadding'],
	      td: ['colspan', 'rowspan', 'valign'],
	      tr: ['valign'],
	      div: ['id']
	    },
	    allowedSchemesByTag: {
	      a: ['http', 'https', 'ftp', 'mailto', 'tel']
	    },
	    transformTags: { a: _sanitizeHtml2.default.simpleTransform('a', { rel: 'nofollow' }) }
	  });
	}

	function parseJSON(data) {
	  try {
	    if (!data) {
	      return false;
	    }
	    if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === _typeof('string')) {
	      return JSON.parse(data);
	    }
	    return data;
	  } catch (e) {
	    return false;
	  }
	}

	function strip(val) {
	  return typeof val === 'string' ? val.replace(/^\s+/, '').replace(/\s+$/, '') : val;
	}

	// Visually Hidden: Yes - Screen Reader Hidden: No
	// Setting elements hidden with 'display: none', makes them
	// inaccessible to screen readers. So we position element off screen with
	// this style https://bit.ly/2WYZggo https://bit.ly/2Ko94iH
	var accessibleHiddenStyle = exports.accessibleHiddenStyle = function accessibleHiddenStyle() {
	  return {
	    border: '0',
	    clip: 'rect(0 0 0 0)',
	    height: '1px',
	    margin: '-1px',
	    overflow: 'hidden',
	    padding: '0',
	    position: 'absolute',
	    width: '1px',
	    whiteSpace: 'nowrap' /* 1 */
	  };
	};

	// build aria-labelledBy attribute for input field
	// Returns a string with two ids:
	// First one is top label id, the second one is sub label id
	var ariaLabelledBy = exports.ariaLabelledBy = function ariaLabelledBy(props, subLabelObject) {
	  var ariaAttribute = 'label_' + props.id.value;
	  if (subLabelObject.id && subLabelObject.text) {
	    ariaAttribute = ariaAttribute + ' sublabel_' + subLabelObject.id;
	  }
	  return ariaAttribute;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var htmlparser = __webpack_require__(18);
	var extend = __webpack_require__(76);
	var quoteRegexp = __webpack_require__(77);

	function each(obj, cb) {
	  if (obj) Object.keys(obj).forEach(function (key) {
	    cb(obj[key], key);
	  });
	}

	module.exports = sanitizeHtml;

	// Ignore the _recursing flag; it's there for recursive
	// invocation as a guard against this exploit:
	// https://github.com/fb55/htmlparser2/issues/105

	function sanitizeHtml(html, options, _recursing) {
	  var result = '';

	  function Frame(tag, attribs) {
	    var that = this;
	    this.tag = tag;
	    this.attribs = attribs || {};
	    this.tagPosition = result.length;
	    this.text = ''; // Node inner text

	    this.updateParentNodeText = function() {
	      if (stack.length) {
	          var parentFrame = stack[stack.length - 1];
	          parentFrame.text += that.text;
	      }
	    };
	  }

	  if (!options) {
	    options = sanitizeHtml.defaults;
	    options.parser = htmlParserDefaults;
	  } else {
	    options = extend(sanitizeHtml.defaults, options);
	    if (options.parser) {
	      options.parser = extend(htmlParserDefaults, options.parser);
	    } else {
	      options.parser = htmlParserDefaults;
	    }
	  }

	  // Tags that contain something other than HTML, or where discarding
	  // the text when the tag is disallowed makes sense for other reasons.
	  // If we are not allowing these tags, we should drop their content too.
	  // For other tags you would drop the tag but keep its content.
	  var nonTextTagsArray = options.nonTextTags || [ 'script', 'style', 'textarea' ];
	  var allowedAttributesMap;
	  var allowedAttributesGlobMap;
	  if(options.allowedAttributes) {
	    allowedAttributesMap = {};
	    allowedAttributesGlobMap = {};
	    each(options.allowedAttributes, function(attributes, tag) {
	      allowedAttributesMap[tag] = [];
	      var globRegex = [];
	      attributes.forEach(function(name) {
	        if(name.indexOf('*') >= 0) {
	          globRegex.push(quoteRegexp(name).replace(/\\\*/g, '.*'));
	        } else {
	          allowedAttributesMap[tag].push(name);
	        }
	      });
	      allowedAttributesGlobMap[tag] = new RegExp('^(' + globRegex.join('|') + ')$');
	    });
	  }
	  var allowedClassesMap = {};
	  each(options.allowedClasses, function(classes, tag) {
	    // Implicitly allows the class attribute
	    if(allowedAttributesMap) {
	      if (!allowedAttributesMap[tag]) {
	        allowedAttributesMap[tag] = [];
	      }
	      allowedAttributesMap[tag].push('class');
	    }

	    allowedClassesMap[tag] = classes;
	  });

	  var transformTagsMap = {};
	  var transformTagsAll;
	  each(options.transformTags, function(transform, tag) {
	    var transFun;
	    if (typeof transform === 'function') {
	      transFun = transform;
	    } else if (typeof transform === "string") {
	      transFun = sanitizeHtml.simpleTransform(transform);
	    }
	    if (tag === '*') {
	      transformTagsAll = transFun;
	    } else {
	      transformTagsMap[tag] = transFun;
	    }
	  });

	  var depth = 0;
	  var stack = [];
	  var skipMap = {};
	  var transformMap = {};
	  var skipText = false;
	  var skipTextDepth = 0;

	  var parser = new htmlparser.Parser({
	    onopentag: function(name, attribs) {
	      if (skipText) {
	        skipTextDepth++;
	        return;
	      }
	      var frame = new Frame(name, attribs);
	      stack.push(frame);

	      var skip = false;
	      var transformedTag;
	      if (transformTagsMap[name]) {
	        transformedTag = transformTagsMap[name](name, attribs);

	        frame.attribs = attribs = transformedTag.attribs;

	        if (transformedTag.text !== undefined) {
	          frame.innerText = transformedTag.text;
	        }

	        if (name !== transformedTag.tagName) {
	          frame.name = name = transformedTag.tagName;
	          transformMap[depth] = transformedTag.tagName;
	        }
	      }
	      if (transformTagsAll) {
	        transformedTag = transformTagsAll(name, attribs);

	        frame.attribs = attribs = transformedTag.attribs;
	        if (name !== transformedTag.tagName) {
	          frame.name = name = transformedTag.tagName;
	          transformMap[depth] = transformedTag.tagName;
	        }
	      }

	      if (options.allowedTags && options.allowedTags.indexOf(name) === -1) {
	        skip = true;
	        if (nonTextTagsArray.indexOf(name) !== -1) {
	          skipText = true;
	          skipTextDepth = 1;
	        }
	        skipMap[depth] = true;
	      }
	      depth++;
	      if (skip) {
	        // We want the contents but not this tag
	        return;
	      }
	      result += '<' + name;
	      if (!allowedAttributesMap || allowedAttributesMap[name] || allowedAttributesMap['*']) {
	        each(attribs, function(value, a) {
	          if (!allowedAttributesMap ||
	              (allowedAttributesMap[name] && allowedAttributesMap[name].indexOf(a) !== -1 ) ||
	              (allowedAttributesMap['*'] && allowedAttributesMap['*'].indexOf(a) !== -1 ) ||
	              (allowedAttributesGlobMap[name] && allowedAttributesGlobMap[name].test(a)) ||
	              (allowedAttributesGlobMap['*'] && allowedAttributesGlobMap['*'].test(a))) {
	            if ((a === 'href') || (a === 'src')) {
	              if (naughtyHref(name, value)) {
	                delete frame.attribs[a];
	                return;
	              }
	            }
	            if (a === 'class') {
	              value = filterClasses(value, allowedClassesMap[name]);
	              if (!value.length) {
	                delete frame.attribs[a];
	                return;
	              }
	            }
	            result += ' ' + a;
	            if (value.length) {
	              result += '="' + escapeHtml(value) + '"';
	            }
	          } else {
	            delete frame.attribs[a];
	          }
	        });
	      }
	      if (options.selfClosing.indexOf(name) !== -1) {
	        result += " />";
	      } else {
	        result += ">";
	      }
	    },
	    ontext: function(text) {
	      if (skipText) {
	        return;
	      }
	      var lastFrame = stack[stack.length-1];
	      var tag;

	      if (lastFrame) {
	        tag = lastFrame.tag;
	        // If inner text was set by transform function then let's use it
	        text = lastFrame.innerText !== undefined ? lastFrame.innerText : text;
	      }

	      if (nonTextTagsArray.indexOf(tag) !== -1) {
	        result += text;
	      } else {
	        var escaped = escapeHtml(text);
	        if (options.textFilter) {
	          result += options.textFilter(escaped);
	        } else {
	          result += escaped;
	        }
	      }
	      if (stack.length) {
	           var frame = stack[stack.length - 1];
	           frame.text += text;
	      }
	    },
	    onclosetag: function(name) {

	      if (skipText) {
	        skipTextDepth--;
	        if (!skipTextDepth) {
	          skipText = false;
	        }
	        return;
	      }

	      var frame = stack.pop();
	      if (!frame) {
	        // Do not crash on bad markup
	        return;
	      }
	      skipText = false;
	      depth--;
	      if (skipMap[depth]) {
	        delete skipMap[depth];
	        frame.updateParentNodeText();
	        return;
	      }

	      if (transformMap[depth]) {
	        name = transformMap[depth];
	        delete transformMap[depth];
	      }

	      if (options.exclusiveFilter && options.exclusiveFilter(frame)) {
	         result = result.substr(0, frame.tagPosition);
	         return;
	      }

	      frame.updateParentNodeText();

	      if (options.selfClosing.indexOf(name) !== -1) {
	         // Already output />
	         return;
	      }

	      result += "</" + name + ">";
	    }
	  }, options.parser);
	  parser.write(html);
	  parser.end();

	  return result;

	  function escapeHtml(s) {
	    if (typeof(s) !== 'string') {
	      s = s + '';
	    }
	    return s.replace(/\&/g, '&amp;').replace(/</g, '&lt;').replace(/\>/g, '&gt;').replace(/\"/g, '&quot;');
	  }

	  function naughtyHref(name, href) {
	    // Browsers ignore character codes of 32 (space) and below in a surprising
	    // number of situations. Start reading here:
	    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Embedded_tab
	    href = href.replace(/[\x00-\x20]+/g, '');
	    // Clobber any comments in URLs, which the browser might
	    // interpret inside an XML data island, allowing
	    // a javascript: URL to be snuck through
	    href = href.replace(/<\!\-\-.*?\-\-\>/g, '');
	    // Case insensitive so we don't get faked out by JAVASCRIPT #1
	    var matches = href.match(/^([a-zA-Z]+)\:/);
	    if (!matches) {
	      // No scheme = no way to inject js (right?)
	      return false;
	    }
	    var scheme = matches[1].toLowerCase();

	    if (options.allowedSchemesByTag[name]) {
	      return options.allowedSchemesByTag[name].indexOf(scheme) === -1;
	    }

	    return !options.allowedSchemes || options.allowedSchemes.indexOf(scheme) === -1;
	  }

	  function filterClasses(classes, allowed) {
	    if (!allowed) {
	      // The class attribute is allowed without filtering on this tag
	      return classes;
	    }
	    classes = classes.split(/\s+/);
	    return classes.filter(function(clss) {
	      return allowed.indexOf(clss) !== -1;
	    }).join(' ');
	  }
	}

	// Defaults are accessible to you so that you can use them as a starting point
	// programmatically if you wish

	var htmlParserDefaults = {
	  decodeEntities: true
	};
	sanitizeHtml.defaults = {
	  allowedTags: [ 'h3', 'h4', 'h5', 'h6', 'blockquote', 'p', 'a', 'ul', 'ol',
	    'nl', 'li', 'b', 'i', 'strong', 'em', 'strike', 'code', 'hr', 'br', 'div',
	    'table', 'thead', 'caption', 'tbody', 'tr', 'th', 'td', 'pre' ],
	  allowedAttributes: {
	    a: [ 'href', 'name', 'target' ],
	    // We don't currently allow img itself by default, but this
	    // would make sense if we did
	    img: [ 'src' ]
	  },
	  // Lots of these won't come up by default because we don't allow them
	  selfClosing: [ 'img', 'br', 'hr', 'area', 'base', 'basefont', 'input', 'link', 'meta' ],
	  // URL schemes we permit
	  allowedSchemes: [ 'http', 'https', 'ftp', 'mailto' ],
	  allowedSchemesByTag: {}
	};

	sanitizeHtml.simpleTransform = function(newTagName, newAttribs, merge) {
	  merge = (merge === undefined) ? true : merge;
	  newAttribs = newAttribs || {};

	  return function(tagName, attribs) {
	    var attrib;
	    if (merge) {
	      for (attrib in newAttribs) {
	        attribs[attrib] = newAttribs[attrib];
	      }
	    } else {
	      attribs = newAttribs;
	    }

	    return {
	      tagName: newTagName,
	      attribs: attribs
	    };
	  };
	};


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var Parser = __webpack_require__(19),
	    DomHandler = __webpack_require__(30);

	function defineProp(name, value){
		delete module.exports[name];
		module.exports[name] = value;
		return value;
	}

	module.exports = {
		Parser: Parser,
		Tokenizer: __webpack_require__(20),
		ElementType: __webpack_require__(31),
		DomHandler: DomHandler,
		get FeedHandler(){
			return defineProp("FeedHandler", __webpack_require__(34));
		},
		get Stream(){
			return defineProp("Stream", __webpack_require__(35));
		},
		get WritableStream(){
			return defineProp("WritableStream", __webpack_require__(36));
		},
		get ProxyHandler(){
			return defineProp("ProxyHandler", __webpack_require__(57));
		},
		get DomUtils(){
			return defineProp("DomUtils", __webpack_require__(58));
		},
		get CollectingHandler(){
			return defineProp("CollectingHandler", __webpack_require__(75));
		},
		// For legacy support
		DefaultHandler: DomHandler,
		get RssHandler(){
			return defineProp("RssHandler", this.FeedHandler);
		},
		//helper methods
		parseDOM: function(data, options){
			var handler = new DomHandler(options);
			new Parser(handler, options).end(data);
			return handler.dom;
		},
		parseFeed: function(feed, options){
			var handler = new module.exports.FeedHandler(options);
			new Parser(handler, options).end(feed);
			return handler.dom;
		},
		createDomStream: function(cb, options, elementCb){
			var handler = new DomHandler(cb, options, elementCb);
			return new Parser(handler, options);
		},
		// List of all events that the parser emits
		EVENTS: { /* Format: eventname: number of arguments */
			attribute: 2,
			cdatastart: 0,
			cdataend: 0,
			text: 1,
			processinginstruction: 2,
			comment: 1,
			commentend: 0,
			closetag: 1,
			opentag: 2,
			opentagname: 1,
			error: 1,
			end: 0
		}
	};


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var Tokenizer = __webpack_require__(20);

	/*
		Options:

		xmlMode: Disables the special behavior for script/style tags (false by default)
		lowerCaseAttributeNames: call .toLowerCase for each attribute name (true if xmlMode is `false`)
		lowerCaseTags: call .toLowerCase for each tag name (true if xmlMode is `false`)
	*/

	/*
		Callbacks:

		oncdataend,
		oncdatastart,
		onclosetag,
		oncomment,
		oncommentend,
		onerror,
		onopentag,
		onprocessinginstruction,
		onreset,
		ontext
	*/

	var formTags = {
		input: true,
		option: true,
		optgroup: true,
		select: true,
		button: true,
		datalist: true,
		textarea: true
	};

	var openImpliesClose = {
		tr      : { tr:true, th:true, td:true },
		th      : { th:true },
		td      : { thead:true, th:true, td:true },
		body    : { head:true, link:true, script:true },
		li      : { li:true },
		p       : { p:true },
		h1      : { p:true },
		h2      : { p:true },
		h3      : { p:true },
		h4      : { p:true },
		h5      : { p:true },
		h6      : { p:true },
		select  : formTags,
		input   : formTags,
		output  : formTags,
		button  : formTags,
		datalist: formTags,
		textarea: formTags,
		option  : { option:true },
		optgroup: { optgroup:true }
	};

	var voidElements = {
		__proto__: null,
		area: true,
		base: true,
		basefont: true,
		br: true,
		col: true,
		command: true,
		embed: true,
		frame: true,
		hr: true,
		img: true,
		input: true,
		isindex: true,
		keygen: true,
		link: true,
		meta: true,
		param: true,
		source: true,
		track: true,
		wbr: true,

		//common self closing svg elements
		path: true,
		circle: true,
		ellipse: true,
		line: true,
		rect: true,
		use: true,
		stop: true,
		polyline: true,
		polygon: true
	};

	var re_nameEnd = /\s|\//;

	function Parser(cbs, options){
		this._options = options || {};
		this._cbs = cbs || {};

		this._tagname = "";
		this._attribname = "";
		this._attribvalue = "";
		this._attribs = null;
		this._stack = [];

		this.startIndex = 0;
		this.endIndex = null;

		this._lowerCaseTagNames = "lowerCaseTags" in this._options ?
										!!this._options.lowerCaseTags :
										!this._options.xmlMode;
		this._lowerCaseAttributeNames = "lowerCaseAttributeNames" in this._options ?
										!!this._options.lowerCaseAttributeNames :
										!this._options.xmlMode;

		this._tokenizer = new Tokenizer(this._options, this);

		if(this._cbs.onparserinit) this._cbs.onparserinit(this);
	}

	__webpack_require__(26).inherits(Parser, __webpack_require__(29).EventEmitter);

	Parser.prototype._updatePosition = function(initialOffset){
		if(this.endIndex === null){
			if(this._tokenizer._sectionStart <= initialOffset){
				this.startIndex = 0;
			} else {
				this.startIndex = this._tokenizer._sectionStart - initialOffset;
			}
		}
		else this.startIndex = this.endIndex + 1;
		this.endIndex = this._tokenizer.getAbsoluteIndex();
	};

	//Tokenizer event handlers
	Parser.prototype.ontext = function(data){
		this._updatePosition(1);
		this.endIndex--;

		if(this._cbs.ontext) this._cbs.ontext(data);
	};

	Parser.prototype.onopentagname = function(name){
		if(this._lowerCaseTagNames){
			name = name.toLowerCase();
		}

		this._tagname = name;

		if(!this._options.xmlMode && name in openImpliesClose) {
			for(
				var el;
				(el = this._stack[this._stack.length - 1]) in openImpliesClose[name];
				this.onclosetag(el)
			);
		}

		if(this._options.xmlMode || !(name in voidElements)){
			this._stack.push(name);
		}

		if(this._cbs.onopentagname) this._cbs.onopentagname(name);
		if(this._cbs.onopentag) this._attribs = {};
	};

	Parser.prototype.onopentagend = function(){
		this._updatePosition(1);

		if(this._attribs){
			if(this._cbs.onopentag) this._cbs.onopentag(this._tagname, this._attribs);
			this._attribs = null;
		}

		if(!this._options.xmlMode && this._cbs.onclosetag && this._tagname in voidElements){
			this._cbs.onclosetag(this._tagname);
		}

		this._tagname = "";
	};

	Parser.prototype.onclosetag = function(name){
		this._updatePosition(1);

		if(this._lowerCaseTagNames){
			name = name.toLowerCase();
		}

		if(this._stack.length && (!(name in voidElements) || this._options.xmlMode)){
			var pos = this._stack.lastIndexOf(name);
			if(pos !== -1){
				if(this._cbs.onclosetag){
					pos = this._stack.length - pos;
					while(pos--) this._cbs.onclosetag(this._stack.pop());
				}
				else this._stack.length = pos;
			} else if(name === "p" && !this._options.xmlMode){
				this.onopentagname(name);
				this._closeCurrentTag();
			}
		} else if(!this._options.xmlMode && (name === "br" || name === "p")){
			this.onopentagname(name);
			this._closeCurrentTag();
		}
	};

	Parser.prototype.onselfclosingtag = function(){
		if(this._options.xmlMode || this._options.recognizeSelfClosing){
			this._closeCurrentTag();
		} else {
			this.onopentagend();
		}
	};

	Parser.prototype._closeCurrentTag = function(){
		var name = this._tagname;

		this.onopentagend();

		//self-closing tags will be on the top of the stack
		//(cheaper check than in onclosetag)
		if(this._stack[this._stack.length - 1] === name){
			if(this._cbs.onclosetag){
				this._cbs.onclosetag(name);
			}
			this._stack.pop();
		}
	};

	Parser.prototype.onattribname = function(name){
		if(this._lowerCaseAttributeNames){
			name = name.toLowerCase();
		}
		this._attribname = name;
	};

	Parser.prototype.onattribdata = function(value){
		this._attribvalue += value;
	};

	Parser.prototype.onattribend = function(){
		if(this._cbs.onattribute) this._cbs.onattribute(this._attribname, this._attribvalue);
		if(
			this._attribs &&
			!Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)
		){
			this._attribs[this._attribname] = this._attribvalue;
		}
		this._attribname = "";
		this._attribvalue = "";
	};

	Parser.prototype._getInstructionName = function(value){
		var idx = value.search(re_nameEnd),
		    name = idx < 0 ? value : value.substr(0, idx);

		if(this._lowerCaseTagNames){
			name = name.toLowerCase();
		}

		return name;
	};

	Parser.prototype.ondeclaration = function(value){
		if(this._cbs.onprocessinginstruction){
			var name = this._getInstructionName(value);
			this._cbs.onprocessinginstruction("!" + name, "!" + value);
		}
	};

	Parser.prototype.onprocessinginstruction = function(value){
		if(this._cbs.onprocessinginstruction){
			var name = this._getInstructionName(value);
			this._cbs.onprocessinginstruction("?" + name, "?" + value);
		}
	};

	Parser.prototype.oncomment = function(value){
		this._updatePosition(4);

		if(this._cbs.oncomment) this._cbs.oncomment(value);
		if(this._cbs.oncommentend) this._cbs.oncommentend();
	};

	Parser.prototype.oncdata = function(value){
		this._updatePosition(1);

		if(this._options.xmlMode || this._options.recognizeCDATA){
			if(this._cbs.oncdatastart) this._cbs.oncdatastart();
			if(this._cbs.ontext) this._cbs.ontext(value);
			if(this._cbs.oncdataend) this._cbs.oncdataend();
		} else {
			this.oncomment("[CDATA[" + value + "]]");
		}
	};

	Parser.prototype.onerror = function(err){
		if(this._cbs.onerror) this._cbs.onerror(err);
	};

	Parser.prototype.onend = function(){
		if(this._cbs.onclosetag){
			for(
				var i = this._stack.length;
				i > 0;
				this._cbs.onclosetag(this._stack[--i])
			);
		}
		if(this._cbs.onend) this._cbs.onend();
	};


	//Resets the parser to a blank state, ready to parse a new HTML document
	Parser.prototype.reset = function(){
		if(this._cbs.onreset) this._cbs.onreset();
		this._tokenizer.reset();

		this._tagname = "";
		this._attribname = "";
		this._attribs = null;
		this._stack = [];

		if(this._cbs.onparserinit) this._cbs.onparserinit(this);
	};

	//Parses a complete HTML document and pushes it to the handler
	Parser.prototype.parseComplete = function(data){
		this.reset();
		this.end(data);
	};

	Parser.prototype.write = function(chunk){
		this._tokenizer.write(chunk);
	};

	Parser.prototype.end = function(chunk){
		this._tokenizer.end(chunk);
	};

	Parser.prototype.pause = function(){
		this._tokenizer.pause();
	};

	Parser.prototype.resume = function(){
		this._tokenizer.resume();
	};

	//alias for backwards compat
	Parser.prototype.parseChunk = Parser.prototype.write;
	Parser.prototype.done = Parser.prototype.end;

	module.exports = Parser;


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = Tokenizer;

	var decodeCodePoint = __webpack_require__(21),
	    entityMap = __webpack_require__(23),
	    legacyMap = __webpack_require__(24),
	    xmlMap    = __webpack_require__(25),

	    i = 0,

	    TEXT                      = i++,
	    BEFORE_TAG_NAME           = i++, //after <
	    IN_TAG_NAME               = i++,
	    IN_SELF_CLOSING_TAG       = i++,
	    BEFORE_CLOSING_TAG_NAME   = i++,
	    IN_CLOSING_TAG_NAME       = i++,
	    AFTER_CLOSING_TAG_NAME    = i++,

	    //attributes
	    BEFORE_ATTRIBUTE_NAME     = i++,
	    IN_ATTRIBUTE_NAME         = i++,
	    AFTER_ATTRIBUTE_NAME      = i++,
	    BEFORE_ATTRIBUTE_VALUE    = i++,
	    IN_ATTRIBUTE_VALUE_DQ     = i++, // "
	    IN_ATTRIBUTE_VALUE_SQ     = i++, // '
	    IN_ATTRIBUTE_VALUE_NQ     = i++,

	    //declarations
	    BEFORE_DECLARATION        = i++, // !
	    IN_DECLARATION            = i++,

	    //processing instructions
	    IN_PROCESSING_INSTRUCTION = i++, // ?

	    //comments
	    BEFORE_COMMENT            = i++,
	    IN_COMMENT                = i++,
	    AFTER_COMMENT_1           = i++,
	    AFTER_COMMENT_2           = i++,

	    //cdata
	    BEFORE_CDATA_1            = i++, // [
	    BEFORE_CDATA_2            = i++, // C
	    BEFORE_CDATA_3            = i++, // D
	    BEFORE_CDATA_4            = i++, // A
	    BEFORE_CDATA_5            = i++, // T
	    BEFORE_CDATA_6            = i++, // A
	    IN_CDATA                  = i++, // [
	    AFTER_CDATA_1             = i++, // ]
	    AFTER_CDATA_2             = i++, // ]

	    //special tags
	    BEFORE_SPECIAL            = i++, //S
	    BEFORE_SPECIAL_END        = i++,   //S

	    BEFORE_SCRIPT_1           = i++, //C
	    BEFORE_SCRIPT_2           = i++, //R
	    BEFORE_SCRIPT_3           = i++, //I
	    BEFORE_SCRIPT_4           = i++, //P
	    BEFORE_SCRIPT_5           = i++, //T
	    AFTER_SCRIPT_1            = i++, //C
	    AFTER_SCRIPT_2            = i++, //R
	    AFTER_SCRIPT_3            = i++, //I
	    AFTER_SCRIPT_4            = i++, //P
	    AFTER_SCRIPT_5            = i++, //T

	    BEFORE_STYLE_1            = i++, //T
	    BEFORE_STYLE_2            = i++, //Y
	    BEFORE_STYLE_3            = i++, //L
	    BEFORE_STYLE_4            = i++, //E
	    AFTER_STYLE_1             = i++, //T
	    AFTER_STYLE_2             = i++, //Y
	    AFTER_STYLE_3             = i++, //L
	    AFTER_STYLE_4             = i++, //E

	    BEFORE_ENTITY             = i++, //&
	    BEFORE_NUMERIC_ENTITY     = i++, //#
	    IN_NAMED_ENTITY           = i++,
	    IN_NUMERIC_ENTITY         = i++,
	    IN_HEX_ENTITY             = i++, //X

	    j = 0,

	    SPECIAL_NONE              = j++,
	    SPECIAL_SCRIPT            = j++,
	    SPECIAL_STYLE             = j++;

	function whitespace(c){
		return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";
	}

	function characterState(char, SUCCESS){
		return function(c){
			if(c === char) this._state = SUCCESS;
		};
	}

	function ifElseState(upper, SUCCESS, FAILURE){
		var lower = upper.toLowerCase();

		if(upper === lower){
			return function(c){
				if(c === lower){
					this._state = SUCCESS;
				} else {
					this._state = FAILURE;
					this._index--;
				}
			};
		} else {
			return function(c){
				if(c === lower || c === upper){
					this._state = SUCCESS;
				} else {
					this._state = FAILURE;
					this._index--;
				}
			};
		}
	}

	function consumeSpecialNameChar(upper, NEXT_STATE){
		var lower = upper.toLowerCase();

		return function(c){
			if(c === lower || c === upper){
				this._state = NEXT_STATE;
			} else {
				this._state = IN_TAG_NAME;
				this._index--; //consume the token again
			}
		};
	}

	function Tokenizer(options, cbs){
		this._state = TEXT;
		this._buffer = "";
		this._sectionStart = 0;
		this._index = 0;
		this._bufferOffset = 0; //chars removed from _buffer
		this._baseState = TEXT;
		this._special = SPECIAL_NONE;
		this._cbs = cbs;
		this._running = true;
		this._ended = false;
		this._xmlMode = !!(options && options.xmlMode);
		this._decodeEntities = !!(options && options.decodeEntities);
	}

	Tokenizer.prototype._stateText = function(c){
		if(c === "<"){
			if(this._index > this._sectionStart){
				this._cbs.ontext(this._getSection());
			}
			this._state = BEFORE_TAG_NAME;
			this._sectionStart = this._index;
		} else if(this._decodeEntities && this._special === SPECIAL_NONE && c === "&"){
			if(this._index > this._sectionStart){
				this._cbs.ontext(this._getSection());
			}
			this._baseState = TEXT;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateBeforeTagName = function(c){
		if(c === "/"){
			this._state = BEFORE_CLOSING_TAG_NAME;
		} else if(c === ">" || this._special !== SPECIAL_NONE || whitespace(c)) {
			this._state = TEXT;
		} else if(c === "!"){
			this._state = BEFORE_DECLARATION;
			this._sectionStart = this._index + 1;
		} else if(c === "?"){
			this._state = IN_PROCESSING_INSTRUCTION;
			this._sectionStart = this._index + 1;
		} else if(c === "<"){
			this._cbs.ontext(this._getSection());
			this._sectionStart = this._index;
		} else {
			this._state = (!this._xmlMode && (c === "s" || c === "S")) ?
							BEFORE_SPECIAL : IN_TAG_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInTagName = function(c){
		if(c === "/" || c === ">" || whitespace(c)){
			this._emitToken("onopentagname");
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateBeforeCloseingTagName = function(c){
		if(whitespace(c));
		else if(c === ">"){
			this._state = TEXT;
		} else if(this._special !== SPECIAL_NONE){
			if(c === "s" || c === "S"){
				this._state = BEFORE_SPECIAL_END;
			} else {
				this._state = TEXT;
				this._index--;
			}
		} else {
			this._state = IN_CLOSING_TAG_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInCloseingTagName = function(c){
		if(c === ">" || whitespace(c)){
			this._emitToken("onclosetag");
			this._state = AFTER_CLOSING_TAG_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateAfterCloseingTagName = function(c){
		//skip everything until ">"
		if(c === ">"){
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		}
	};

	Tokenizer.prototype._stateBeforeAttributeName = function(c){
		if(c === ">"){
			this._cbs.onopentagend();
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(c === "/"){
			this._state = IN_SELF_CLOSING_TAG;
		} else if(!whitespace(c)){
			this._state = IN_ATTRIBUTE_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInSelfClosingTag = function(c){
		if(c === ">"){
			this._cbs.onselfclosingtag();
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(!whitespace(c)){
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateInAttributeName = function(c){
		if(c === "=" || c === "/" || c === ">" || whitespace(c)){
			this._cbs.onattribname(this._getSection());
			this._sectionStart = -1;
			this._state = AFTER_ATTRIBUTE_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateAfterAttributeName = function(c){
		if(c === "="){
			this._state = BEFORE_ATTRIBUTE_VALUE;
		} else if(c === "/" || c === ">"){
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		} else if(!whitespace(c)){
			this._cbs.onattribend();
			this._state = IN_ATTRIBUTE_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateBeforeAttributeValue = function(c){
		if(c === "\""){
			this._state = IN_ATTRIBUTE_VALUE_DQ;
			this._sectionStart = this._index + 1;
		} else if(c === "'"){
			this._state = IN_ATTRIBUTE_VALUE_SQ;
			this._sectionStart = this._index + 1;
		} else if(!whitespace(c)){
			this._state = IN_ATTRIBUTE_VALUE_NQ;
			this._sectionStart = this._index;
			this._index--; //reconsume token
		}
	};

	Tokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c){
		if(c === "\""){
			this._emitToken("onattribdata");
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
		} else if(this._decodeEntities && c === "&"){
			this._emitToken("onattribdata");
			this._baseState = this._state;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInAttributeValueSingleQuotes = function(c){
		if(c === "'"){
			this._emitToken("onattribdata");
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
		} else if(this._decodeEntities && c === "&"){
			this._emitToken("onattribdata");
			this._baseState = this._state;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInAttributeValueNoQuotes = function(c){
		if(whitespace(c) || c === ">"){
			this._emitToken("onattribdata");
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		} else if(this._decodeEntities && c === "&"){
			this._emitToken("onattribdata");
			this._baseState = this._state;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateBeforeDeclaration = function(c){
		this._state = c === "[" ? BEFORE_CDATA_1 :
						c === "-" ? BEFORE_COMMENT :
							IN_DECLARATION;
	};

	Tokenizer.prototype._stateInDeclaration = function(c){
		if(c === ">"){
			this._cbs.ondeclaration(this._getSection());
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		}
	};

	Tokenizer.prototype._stateInProcessingInstruction = function(c){
		if(c === ">"){
			this._cbs.onprocessinginstruction(this._getSection());
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		}
	};

	Tokenizer.prototype._stateBeforeComment = function(c){
		if(c === "-"){
			this._state = IN_COMMENT;
			this._sectionStart = this._index + 1;
		} else {
			this._state = IN_DECLARATION;
		}
	};

	Tokenizer.prototype._stateInComment = function(c){
		if(c === "-") this._state = AFTER_COMMENT_1;
	};

	Tokenizer.prototype._stateAfterComment1 = function(c){
		if(c === "-"){
			this._state = AFTER_COMMENT_2;
		} else {
			this._state = IN_COMMENT;
		}
	};

	Tokenizer.prototype._stateAfterComment2 = function(c){
		if(c === ">"){
			//remove 2 trailing chars
			this._cbs.oncomment(this._buffer.substring(this._sectionStart, this._index - 2));
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(c !== "-"){
			this._state = IN_COMMENT;
		}
		// else: stay in AFTER_COMMENT_2 (`--->`)
	};

	Tokenizer.prototype._stateBeforeCdata1 = ifElseState("C", BEFORE_CDATA_2, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata2 = ifElseState("D", BEFORE_CDATA_3, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata3 = ifElseState("A", BEFORE_CDATA_4, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata4 = ifElseState("T", BEFORE_CDATA_5, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata5 = ifElseState("A", BEFORE_CDATA_6, IN_DECLARATION);

	Tokenizer.prototype._stateBeforeCdata6 = function(c){
		if(c === "["){
			this._state = IN_CDATA;
			this._sectionStart = this._index + 1;
		} else {
			this._state = IN_DECLARATION;
			this._index--;
		}
	};

	Tokenizer.prototype._stateInCdata = function(c){
		if(c === "]") this._state = AFTER_CDATA_1;
	};

	Tokenizer.prototype._stateAfterCdata1 = characterState("]", AFTER_CDATA_2);

	Tokenizer.prototype._stateAfterCdata2 = function(c){
		if(c === ">"){
			//remove 2 trailing chars
			this._cbs.oncdata(this._buffer.substring(this._sectionStart, this._index - 2));
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(c !== "]") {
			this._state = IN_CDATA;
		}
		//else: stay in AFTER_CDATA_2 (`]]]>`)
	};

	Tokenizer.prototype._stateBeforeSpecial = function(c){
		if(c === "c" || c === "C"){
			this._state = BEFORE_SCRIPT_1;
		} else if(c === "t" || c === "T"){
			this._state = BEFORE_STYLE_1;
		} else {
			this._state = IN_TAG_NAME;
			this._index--; //consume the token again
		}
	};

	Tokenizer.prototype._stateBeforeSpecialEnd = function(c){
		if(this._special === SPECIAL_SCRIPT && (c === "c" || c === "C")){
			this._state = AFTER_SCRIPT_1;
		} else if(this._special === SPECIAL_STYLE && (c === "t" || c === "T")){
			this._state = AFTER_STYLE_1;
		}
		else this._state = TEXT;
	};

	Tokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar("R", BEFORE_SCRIPT_2);
	Tokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar("I", BEFORE_SCRIPT_3);
	Tokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar("P", BEFORE_SCRIPT_4);
	Tokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar("T", BEFORE_SCRIPT_5);

	Tokenizer.prototype._stateBeforeScript5 = function(c){
		if(c === "/" || c === ">" || whitespace(c)){
			this._special = SPECIAL_SCRIPT;
		}
		this._state = IN_TAG_NAME;
		this._index--; //consume the token again
	};

	Tokenizer.prototype._stateAfterScript1 = ifElseState("R", AFTER_SCRIPT_2, TEXT);
	Tokenizer.prototype._stateAfterScript2 = ifElseState("I", AFTER_SCRIPT_3, TEXT);
	Tokenizer.prototype._stateAfterScript3 = ifElseState("P", AFTER_SCRIPT_4, TEXT);
	Tokenizer.prototype._stateAfterScript4 = ifElseState("T", AFTER_SCRIPT_5, TEXT);

	Tokenizer.prototype._stateAfterScript5 = function(c){
		if(c === ">" || whitespace(c)){
			this._special = SPECIAL_NONE;
			this._state = IN_CLOSING_TAG_NAME;
			this._sectionStart = this._index - 6;
			this._index--; //reconsume the token
		}
		else this._state = TEXT;
	};

	Tokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar("Y", BEFORE_STYLE_2);
	Tokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar("L", BEFORE_STYLE_3);
	Tokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar("E", BEFORE_STYLE_4);

	Tokenizer.prototype._stateBeforeStyle4 = function(c){
		if(c === "/" || c === ">" || whitespace(c)){
			this._special = SPECIAL_STYLE;
		}
		this._state = IN_TAG_NAME;
		this._index--; //consume the token again
	};

	Tokenizer.prototype._stateAfterStyle1 = ifElseState("Y", AFTER_STYLE_2, TEXT);
	Tokenizer.prototype._stateAfterStyle2 = ifElseState("L", AFTER_STYLE_3, TEXT);
	Tokenizer.prototype._stateAfterStyle3 = ifElseState("E", AFTER_STYLE_4, TEXT);

	Tokenizer.prototype._stateAfterStyle4 = function(c){
		if(c === ">" || whitespace(c)){
			this._special = SPECIAL_NONE;
			this._state = IN_CLOSING_TAG_NAME;
			this._sectionStart = this._index - 5;
			this._index--; //reconsume the token
		}
		else this._state = TEXT;
	};

	Tokenizer.prototype._stateBeforeEntity = ifElseState("#", BEFORE_NUMERIC_ENTITY, IN_NAMED_ENTITY);
	Tokenizer.prototype._stateBeforeNumericEntity = ifElseState("X", IN_HEX_ENTITY, IN_NUMERIC_ENTITY);

	//for entities terminated with a semicolon
	Tokenizer.prototype._parseNamedEntityStrict = function(){
		//offset = 1
		if(this._sectionStart + 1 < this._index){
			var entity = this._buffer.substring(this._sectionStart + 1, this._index),
			    map = this._xmlMode ? xmlMap : entityMap;

			if(map.hasOwnProperty(entity)){
				this._emitPartial(map[entity]);
				this._sectionStart = this._index + 1;
			}
		}
	};


	//parses legacy entities (without trailing semicolon)
	Tokenizer.prototype._parseLegacyEntity = function(){
		var start = this._sectionStart + 1,
		    limit = this._index - start;

		if(limit > 6) limit = 6; //the max length of legacy entities is 6

		while(limit >= 2){ //the min length of legacy entities is 2
			var entity = this._buffer.substr(start, limit);

			if(legacyMap.hasOwnProperty(entity)){
				this._emitPartial(legacyMap[entity]);
				this._sectionStart += limit + 1;
				return;
			} else {
				limit--;
			}
		}
	};

	Tokenizer.prototype._stateInNamedEntity = function(c){
		if(c === ";"){
			this._parseNamedEntityStrict();
			if(this._sectionStart + 1 < this._index && !this._xmlMode){
				this._parseLegacyEntity();
			}
			this._state = this._baseState;
		} else if((c < "a" || c > "z") && (c < "A" || c > "Z") && (c < "0" || c > "9")){
			if(this._xmlMode);
			else if(this._sectionStart + 1 === this._index);
			else if(this._baseState !== TEXT){
				if(c !== "="){
					this._parseNamedEntityStrict();
				}
			} else {
				this._parseLegacyEntity();
			}

			this._state = this._baseState;
			this._index--;
		}
	};

	Tokenizer.prototype._decodeNumericEntity = function(offset, base){
		var sectionStart = this._sectionStart + offset;

		if(sectionStart !== this._index){
			//parse entity
			var entity = this._buffer.substring(sectionStart, this._index);
			var parsed = parseInt(entity, base);

			this._emitPartial(decodeCodePoint(parsed));
			this._sectionStart = this._index;
		} else {
			this._sectionStart--;
		}

		this._state = this._baseState;
	};

	Tokenizer.prototype._stateInNumericEntity = function(c){
		if(c === ";"){
			this._decodeNumericEntity(2, 10);
			this._sectionStart++;
		} else if(c < "0" || c > "9"){
			if(!this._xmlMode){
				this._decodeNumericEntity(2, 10);
			} else {
				this._state = this._baseState;
			}
			this._index--;
		}
	};

	Tokenizer.prototype._stateInHexEntity = function(c){
		if(c === ";"){
			this._decodeNumericEntity(3, 16);
			this._sectionStart++;
		} else if((c < "a" || c > "f") && (c < "A" || c > "F") && (c < "0" || c > "9")){
			if(!this._xmlMode){
				this._decodeNumericEntity(3, 16);
			} else {
				this._state = this._baseState;
			}
			this._index--;
		}
	};

	Tokenizer.prototype._cleanup = function (){
		if(this._sectionStart < 0){
			this._buffer = "";
			this._index = 0;
			this._bufferOffset += this._index;
		} else if(this._running){
			if(this._state === TEXT){
				if(this._sectionStart !== this._index){
					this._cbs.ontext(this._buffer.substr(this._sectionStart));
				}
				this._buffer = "";
				this._index = 0;
				this._bufferOffset += this._index;
			} else if(this._sectionStart === this._index){
				//the section just started
				this._buffer = "";
				this._index = 0;
				this._bufferOffset += this._index;
			} else {
				//remove everything unnecessary
				this._buffer = this._buffer.substr(this._sectionStart);
				this._index -= this._sectionStart;
				this._bufferOffset += this._sectionStart;
			}

			this._sectionStart = 0;
		}
	};

	//TODO make events conditional
	Tokenizer.prototype.write = function(chunk){
		if(this._ended) this._cbs.onerror(Error(".write() after done!"));

		this._buffer += chunk;
		this._parse();
	};

	Tokenizer.prototype._parse = function(){
		while(this._index < this._buffer.length && this._running){
			var c = this._buffer.charAt(this._index);
			if(this._state === TEXT) {
				this._stateText(c);
			} else if(this._state === BEFORE_TAG_NAME){
				this._stateBeforeTagName(c);
			} else if(this._state === IN_TAG_NAME) {
				this._stateInTagName(c);
			} else if(this._state === BEFORE_CLOSING_TAG_NAME){
				this._stateBeforeCloseingTagName(c);
			} else if(this._state === IN_CLOSING_TAG_NAME){
				this._stateInCloseingTagName(c);
			} else if(this._state === AFTER_CLOSING_TAG_NAME){
				this._stateAfterCloseingTagName(c);
			} else if(this._state === IN_SELF_CLOSING_TAG){
				this._stateInSelfClosingTag(c);
			}

			/*
			*	attributes
			*/
			else if(this._state === BEFORE_ATTRIBUTE_NAME){
				this._stateBeforeAttributeName(c);
			} else if(this._state === IN_ATTRIBUTE_NAME){
				this._stateInAttributeName(c);
			} else if(this._state === AFTER_ATTRIBUTE_NAME){
				this._stateAfterAttributeName(c);
			} else if(this._state === BEFORE_ATTRIBUTE_VALUE){
				this._stateBeforeAttributeValue(c);
			} else if(this._state === IN_ATTRIBUTE_VALUE_DQ){
				this._stateInAttributeValueDoubleQuotes(c);
			} else if(this._state === IN_ATTRIBUTE_VALUE_SQ){
				this._stateInAttributeValueSingleQuotes(c);
			} else if(this._state === IN_ATTRIBUTE_VALUE_NQ){
				this._stateInAttributeValueNoQuotes(c);
			}

			/*
			*	declarations
			*/
			else if(this._state === BEFORE_DECLARATION){
				this._stateBeforeDeclaration(c);
			} else if(this._state === IN_DECLARATION){
				this._stateInDeclaration(c);
			}

			/*
			*	processing instructions
			*/
			else if(this._state === IN_PROCESSING_INSTRUCTION){
				this._stateInProcessingInstruction(c);
			}

			/*
			*	comments
			*/
			else if(this._state === BEFORE_COMMENT){
				this._stateBeforeComment(c);
			} else if(this._state === IN_COMMENT){
				this._stateInComment(c);
			} else if(this._state === AFTER_COMMENT_1){
				this._stateAfterComment1(c);
			} else if(this._state === AFTER_COMMENT_2){
				this._stateAfterComment2(c);
			}

			/*
			*	cdata
			*/
			else if(this._state === BEFORE_CDATA_1){
				this._stateBeforeCdata1(c);
			} else if(this._state === BEFORE_CDATA_2){
				this._stateBeforeCdata2(c);
			} else if(this._state === BEFORE_CDATA_3){
				this._stateBeforeCdata3(c);
			} else if(this._state === BEFORE_CDATA_4){
				this._stateBeforeCdata4(c);
			} else if(this._state === BEFORE_CDATA_5){
				this._stateBeforeCdata5(c);
			} else if(this._state === BEFORE_CDATA_6){
				this._stateBeforeCdata6(c);
			} else if(this._state === IN_CDATA){
				this._stateInCdata(c);
			} else if(this._state === AFTER_CDATA_1){
				this._stateAfterCdata1(c);
			} else if(this._state === AFTER_CDATA_2){
				this._stateAfterCdata2(c);
			}

			/*
			* special tags
			*/
			else if(this._state === BEFORE_SPECIAL){
				this._stateBeforeSpecial(c);
			} else if(this._state === BEFORE_SPECIAL_END){
				this._stateBeforeSpecialEnd(c);
			}

			/*
			* script
			*/
			else if(this._state === BEFORE_SCRIPT_1){
				this._stateBeforeScript1(c);
			} else if(this._state === BEFORE_SCRIPT_2){
				this._stateBeforeScript2(c);
			} else if(this._state === BEFORE_SCRIPT_3){
				this._stateBeforeScript3(c);
			} else if(this._state === BEFORE_SCRIPT_4){
				this._stateBeforeScript4(c);
			} else if(this._state === BEFORE_SCRIPT_5){
				this._stateBeforeScript5(c);
			}

			else if(this._state === AFTER_SCRIPT_1){
				this._stateAfterScript1(c);
			} else if(this._state === AFTER_SCRIPT_2){
				this._stateAfterScript2(c);
			} else if(this._state === AFTER_SCRIPT_3){
				this._stateAfterScript3(c);
			} else if(this._state === AFTER_SCRIPT_4){
				this._stateAfterScript4(c);
			} else if(this._state === AFTER_SCRIPT_5){
				this._stateAfterScript5(c);
			}

			/*
			* style
			*/
			else if(this._state === BEFORE_STYLE_1){
				this._stateBeforeStyle1(c);
			} else if(this._state === BEFORE_STYLE_2){
				this._stateBeforeStyle2(c);
			} else if(this._state === BEFORE_STYLE_3){
				this._stateBeforeStyle3(c);
			} else if(this._state === BEFORE_STYLE_4){
				this._stateBeforeStyle4(c);
			}

			else if(this._state === AFTER_STYLE_1){
				this._stateAfterStyle1(c);
			} else if(this._state === AFTER_STYLE_2){
				this._stateAfterStyle2(c);
			} else if(this._state === AFTER_STYLE_3){
				this._stateAfterStyle3(c);
			} else if(this._state === AFTER_STYLE_4){
				this._stateAfterStyle4(c);
			}

			/*
			* entities
			*/
			else if(this._state === BEFORE_ENTITY){
				this._stateBeforeEntity(c);
			} else if(this._state === BEFORE_NUMERIC_ENTITY){
				this._stateBeforeNumericEntity(c);
			} else if(this._state === IN_NAMED_ENTITY){
				this._stateInNamedEntity(c);
			} else if(this._state === IN_NUMERIC_ENTITY){
				this._stateInNumericEntity(c);
			} else if(this._state === IN_HEX_ENTITY){
				this._stateInHexEntity(c);
			}

			else {
				this._cbs.onerror(Error("unknown _state"), this._state);
			}

			this._index++;
		}

		this._cleanup();
	};

	Tokenizer.prototype.pause = function(){
		this._running = false;
	};
	Tokenizer.prototype.resume = function(){
		this._running = true;

		if(this._index < this._buffer.length){
			this._parse();
		}
		if(this._ended){
			this._finish();
		}
	};

	Tokenizer.prototype.end = function(chunk){
		if(this._ended) this._cbs.onerror(Error(".end() after done!"));
		if(chunk) this.write(chunk);

		this._ended = true;

		if(this._running) this._finish();
	};

	Tokenizer.prototype._finish = function(){
		//if there is remaining data, emit it in a reasonable way
		if(this._sectionStart < this._index){
			this._handleTrailingData();
		}

		this._cbs.onend();
	};

	Tokenizer.prototype._handleTrailingData = function(){
		var data = this._buffer.substr(this._sectionStart);

		if(this._state === IN_CDATA || this._state === AFTER_CDATA_1 || this._state === AFTER_CDATA_2){
			this._cbs.oncdata(data);
		} else if(this._state === IN_COMMENT || this._state === AFTER_COMMENT_1 || this._state === AFTER_COMMENT_2){
			this._cbs.oncomment(data);
		} else if(this._state === IN_NAMED_ENTITY && !this._xmlMode){
			this._parseLegacyEntity();
			if(this._sectionStart < this._index){
				this._state = this._baseState;
				this._handleTrailingData();
			}
		} else if(this._state === IN_NUMERIC_ENTITY && !this._xmlMode){
			this._decodeNumericEntity(2, 10);
			if(this._sectionStart < this._index){
				this._state = this._baseState;
				this._handleTrailingData();
			}
		} else if(this._state === IN_HEX_ENTITY && !this._xmlMode){
			this._decodeNumericEntity(3, 16);
			if(this._sectionStart < this._index){
				this._state = this._baseState;
				this._handleTrailingData();
			}
		} else if(
			this._state !== IN_TAG_NAME &&
			this._state !== BEFORE_ATTRIBUTE_NAME &&
			this._state !== BEFORE_ATTRIBUTE_VALUE &&
			this._state !== AFTER_ATTRIBUTE_NAME &&
			this._state !== IN_ATTRIBUTE_NAME &&
			this._state !== IN_ATTRIBUTE_VALUE_SQ &&
			this._state !== IN_ATTRIBUTE_VALUE_DQ &&
			this._state !== IN_ATTRIBUTE_VALUE_NQ &&
			this._state !== IN_CLOSING_TAG_NAME
		){
			this._cbs.ontext(data);
		}
		//else, ignore remaining data
		//TODO add a way to remove current tag
	};

	Tokenizer.prototype.reset = function(){
		Tokenizer.call(this, {xmlMode: this._xmlMode, decodeEntities: this._decodeEntities}, this._cbs);
	};

	Tokenizer.prototype.getAbsoluteIndex = function(){
		return this._bufferOffset + this._index;
	};

	Tokenizer.prototype._getSection = function(){
		return this._buffer.substring(this._sectionStart, this._index);
	};

	Tokenizer.prototype._emitToken = function(name){
		this._cbs[name](this._getSection());
		this._sectionStart = -1;
	};

	Tokenizer.prototype._emitPartial = function(value){
		if(this._baseState !== TEXT){
			this._cbs.onattribdata(value); //TODO implement the new event
		} else {
			this._cbs.ontext(value);
		}
	};


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	var decodeMap = __webpack_require__(22);

	module.exports = decodeCodePoint;

	// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
	function decodeCodePoint(codePoint){

		if((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){
			return "\uFFFD";
		}

		if(codePoint in decodeMap){
			codePoint = decodeMap[codePoint];
		}

		var output = "";

		if(codePoint > 0xFFFF){
			codePoint -= 0x10000;
			output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
			codePoint = 0xDC00 | codePoint & 0x3FF;
		}

		output += String.fromCharCode(codePoint);
		return output;
	}


/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = {
		"0": 65533,
		"128": 8364,
		"130": 8218,
		"131": 402,
		"132": 8222,
		"133": 8230,
		"134": 8224,
		"135": 8225,
		"136": 710,
		"137": 8240,
		"138": 352,
		"139": 8249,
		"140": 338,
		"142": 381,
		"145": 8216,
		"146": 8217,
		"147": 8220,
		"148": 8221,
		"149": 8226,
		"150": 8211,
		"151": 8212,
		"152": 732,
		"153": 8482,
		"154": 353,
		"155": 8250,
		"156": 339,
		"158": 382,
		"159": 376
	};

/***/ },
/* 23 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Abreve": "Ă",
		"abreve": "ă",
		"ac": "∾",
		"acd": "∿",
		"acE": "∾̳",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"Acy": "А",
		"acy": "а",
		"AElig": "Æ",
		"aelig": "æ",
		"af": "⁡",
		"Afr": "𝔄",
		"afr": "𝔞",
		"Agrave": "À",
		"agrave": "à",
		"alefsym": "ℵ",
		"aleph": "ℵ",
		"Alpha": "Α",
		"alpha": "α",
		"Amacr": "Ā",
		"amacr": "ā",
		"amalg": "⨿",
		"amp": "&",
		"AMP": "&",
		"andand": "⩕",
		"And": "⩓",
		"and": "∧",
		"andd": "⩜",
		"andslope": "⩘",
		"andv": "⩚",
		"ang": "∠",
		"ange": "⦤",
		"angle": "∠",
		"angmsdaa": "⦨",
		"angmsdab": "⦩",
		"angmsdac": "⦪",
		"angmsdad": "⦫",
		"angmsdae": "⦬",
		"angmsdaf": "⦭",
		"angmsdag": "⦮",
		"angmsdah": "⦯",
		"angmsd": "∡",
		"angrt": "∟",
		"angrtvb": "⊾",
		"angrtvbd": "⦝",
		"angsph": "∢",
		"angst": "Å",
		"angzarr": "⍼",
		"Aogon": "Ą",
		"aogon": "ą",
		"Aopf": "𝔸",
		"aopf": "𝕒",
		"apacir": "⩯",
		"ap": "≈",
		"apE": "⩰",
		"ape": "≊",
		"apid": "≋",
		"apos": "'",
		"ApplyFunction": "⁡",
		"approx": "≈",
		"approxeq": "≊",
		"Aring": "Å",
		"aring": "å",
		"Ascr": "𝒜",
		"ascr": "𝒶",
		"Assign": "≔",
		"ast": "*",
		"asymp": "≈",
		"asympeq": "≍",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"awconint": "∳",
		"awint": "⨑",
		"backcong": "≌",
		"backepsilon": "϶",
		"backprime": "‵",
		"backsim": "∽",
		"backsimeq": "⋍",
		"Backslash": "∖",
		"Barv": "⫧",
		"barvee": "⊽",
		"barwed": "⌅",
		"Barwed": "⌆",
		"barwedge": "⌅",
		"bbrk": "⎵",
		"bbrktbrk": "⎶",
		"bcong": "≌",
		"Bcy": "Б",
		"bcy": "б",
		"bdquo": "„",
		"becaus": "∵",
		"because": "∵",
		"Because": "∵",
		"bemptyv": "⦰",
		"bepsi": "϶",
		"bernou": "ℬ",
		"Bernoullis": "ℬ",
		"Beta": "Β",
		"beta": "β",
		"beth": "ℶ",
		"between": "≬",
		"Bfr": "𝔅",
		"bfr": "𝔟",
		"bigcap": "⋂",
		"bigcirc": "◯",
		"bigcup": "⋃",
		"bigodot": "⨀",
		"bigoplus": "⨁",
		"bigotimes": "⨂",
		"bigsqcup": "⨆",
		"bigstar": "★",
		"bigtriangledown": "▽",
		"bigtriangleup": "△",
		"biguplus": "⨄",
		"bigvee": "⋁",
		"bigwedge": "⋀",
		"bkarow": "⤍",
		"blacklozenge": "⧫",
		"blacksquare": "▪",
		"blacktriangle": "▴",
		"blacktriangledown": "▾",
		"blacktriangleleft": "◂",
		"blacktriangleright": "▸",
		"blank": "␣",
		"blk12": "▒",
		"blk14": "░",
		"blk34": "▓",
		"block": "█",
		"bne": "=⃥",
		"bnequiv": "≡⃥",
		"bNot": "⫭",
		"bnot": "⌐",
		"Bopf": "𝔹",
		"bopf": "𝕓",
		"bot": "⊥",
		"bottom": "⊥",
		"bowtie": "⋈",
		"boxbox": "⧉",
		"boxdl": "┐",
		"boxdL": "╕",
		"boxDl": "╖",
		"boxDL": "╗",
		"boxdr": "┌",
		"boxdR": "╒",
		"boxDr": "╓",
		"boxDR": "╔",
		"boxh": "─",
		"boxH": "═",
		"boxhd": "┬",
		"boxHd": "╤",
		"boxhD": "╥",
		"boxHD": "╦",
		"boxhu": "┴",
		"boxHu": "╧",
		"boxhU": "╨",
		"boxHU": "╩",
		"boxminus": "⊟",
		"boxplus": "⊞",
		"boxtimes": "⊠",
		"boxul": "┘",
		"boxuL": "╛",
		"boxUl": "╜",
		"boxUL": "╝",
		"boxur": "└",
		"boxuR": "╘",
		"boxUr": "╙",
		"boxUR": "╚",
		"boxv": "│",
		"boxV": "║",
		"boxvh": "┼",
		"boxvH": "╪",
		"boxVh": "╫",
		"boxVH": "╬",
		"boxvl": "┤",
		"boxvL": "╡",
		"boxVl": "╢",
		"boxVL": "╣",
		"boxvr": "├",
		"boxvR": "╞",
		"boxVr": "╟",
		"boxVR": "╠",
		"bprime": "‵",
		"breve": "˘",
		"Breve": "˘",
		"brvbar": "¦",
		"bscr": "𝒷",
		"Bscr": "ℬ",
		"bsemi": "⁏",
		"bsim": "∽",
		"bsime": "⋍",
		"bsolb": "⧅",
		"bsol": "\\",
		"bsolhsub": "⟈",
		"bull": "•",
		"bullet": "•",
		"bump": "≎",
		"bumpE": "⪮",
		"bumpe": "≏",
		"Bumpeq": "≎",
		"bumpeq": "≏",
		"Cacute": "Ć",
		"cacute": "ć",
		"capand": "⩄",
		"capbrcup": "⩉",
		"capcap": "⩋",
		"cap": "∩",
		"Cap": "⋒",
		"capcup": "⩇",
		"capdot": "⩀",
		"CapitalDifferentialD": "ⅅ",
		"caps": "∩︀",
		"caret": "⁁",
		"caron": "ˇ",
		"Cayleys": "ℭ",
		"ccaps": "⩍",
		"Ccaron": "Č",
		"ccaron": "č",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"Ccirc": "Ĉ",
		"ccirc": "ĉ",
		"Cconint": "∰",
		"ccups": "⩌",
		"ccupssm": "⩐",
		"Cdot": "Ċ",
		"cdot": "ċ",
		"cedil": "¸",
		"Cedilla": "¸",
		"cemptyv": "⦲",
		"cent": "¢",
		"centerdot": "·",
		"CenterDot": "·",
		"cfr": "𝔠",
		"Cfr": "ℭ",
		"CHcy": "Ч",
		"chcy": "ч",
		"check": "✓",
		"checkmark": "✓",
		"Chi": "Χ",
		"chi": "χ",
		"circ": "ˆ",
		"circeq": "≗",
		"circlearrowleft": "↺",
		"circlearrowright": "↻",
		"circledast": "⊛",
		"circledcirc": "⊚",
		"circleddash": "⊝",
		"CircleDot": "⊙",
		"circledR": "®",
		"circledS": "Ⓢ",
		"CircleMinus": "⊖",
		"CirclePlus": "⊕",
		"CircleTimes": "⊗",
		"cir": "○",
		"cirE": "⧃",
		"cire": "≗",
		"cirfnint": "⨐",
		"cirmid": "⫯",
		"cirscir": "⧂",
		"ClockwiseContourIntegral": "∲",
		"CloseCurlyDoubleQuote": "”",
		"CloseCurlyQuote": "’",
		"clubs": "♣",
		"clubsuit": "♣",
		"colon": ":",
		"Colon": "∷",
		"Colone": "⩴",
		"colone": "≔",
		"coloneq": "≔",
		"comma": ",",
		"commat": "@",
		"comp": "∁",
		"compfn": "∘",
		"complement": "∁",
		"complexes": "ℂ",
		"cong": "≅",
		"congdot": "⩭",
		"Congruent": "≡",
		"conint": "∮",
		"Conint": "∯",
		"ContourIntegral": "∮",
		"copf": "𝕔",
		"Copf": "ℂ",
		"coprod": "∐",
		"Coproduct": "∐",
		"copy": "©",
		"COPY": "©",
		"copysr": "℗",
		"CounterClockwiseContourIntegral": "∳",
		"crarr": "↵",
		"cross": "✗",
		"Cross": "⨯",
		"Cscr": "𝒞",
		"cscr": "𝒸",
		"csub": "⫏",
		"csube": "⫑",
		"csup": "⫐",
		"csupe": "⫒",
		"ctdot": "⋯",
		"cudarrl": "⤸",
		"cudarrr": "⤵",
		"cuepr": "⋞",
		"cuesc": "⋟",
		"cularr": "↶",
		"cularrp": "⤽",
		"cupbrcap": "⩈",
		"cupcap": "⩆",
		"CupCap": "≍",
		"cup": "∪",
		"Cup": "⋓",
		"cupcup": "⩊",
		"cupdot": "⊍",
		"cupor": "⩅",
		"cups": "∪︀",
		"curarr": "↷",
		"curarrm": "⤼",
		"curlyeqprec": "⋞",
		"curlyeqsucc": "⋟",
		"curlyvee": "⋎",
		"curlywedge": "⋏",
		"curren": "¤",
		"curvearrowleft": "↶",
		"curvearrowright": "↷",
		"cuvee": "⋎",
		"cuwed": "⋏",
		"cwconint": "∲",
		"cwint": "∱",
		"cylcty": "⌭",
		"dagger": "†",
		"Dagger": "‡",
		"daleth": "ℸ",
		"darr": "↓",
		"Darr": "↡",
		"dArr": "⇓",
		"dash": "‐",
		"Dashv": "⫤",
		"dashv": "⊣",
		"dbkarow": "⤏",
		"dblac": "˝",
		"Dcaron": "Ď",
		"dcaron": "ď",
		"Dcy": "Д",
		"dcy": "д",
		"ddagger": "‡",
		"ddarr": "⇊",
		"DD": "ⅅ",
		"dd": "ⅆ",
		"DDotrahd": "⤑",
		"ddotseq": "⩷",
		"deg": "°",
		"Del": "∇",
		"Delta": "Δ",
		"delta": "δ",
		"demptyv": "⦱",
		"dfisht": "⥿",
		"Dfr": "𝔇",
		"dfr": "𝔡",
		"dHar": "⥥",
		"dharl": "⇃",
		"dharr": "⇂",
		"DiacriticalAcute": "´",
		"DiacriticalDot": "˙",
		"DiacriticalDoubleAcute": "˝",
		"DiacriticalGrave": "`",
		"DiacriticalTilde": "˜",
		"diam": "⋄",
		"diamond": "⋄",
		"Diamond": "⋄",
		"diamondsuit": "♦",
		"diams": "♦",
		"die": "¨",
		"DifferentialD": "ⅆ",
		"digamma": "ϝ",
		"disin": "⋲",
		"div": "÷",
		"divide": "÷",
		"divideontimes": "⋇",
		"divonx": "⋇",
		"DJcy": "Ђ",
		"djcy": "ђ",
		"dlcorn": "⌞",
		"dlcrop": "⌍",
		"dollar": "$",
		"Dopf": "𝔻",
		"dopf": "𝕕",
		"Dot": "¨",
		"dot": "˙",
		"DotDot": "⃜",
		"doteq": "≐",
		"doteqdot": "≑",
		"DotEqual": "≐",
		"dotminus": "∸",
		"dotplus": "∔",
		"dotsquare": "⊡",
		"doublebarwedge": "⌆",
		"DoubleContourIntegral": "∯",
		"DoubleDot": "¨",
		"DoubleDownArrow": "⇓",
		"DoubleLeftArrow": "⇐",
		"DoubleLeftRightArrow": "⇔",
		"DoubleLeftTee": "⫤",
		"DoubleLongLeftArrow": "⟸",
		"DoubleLongLeftRightArrow": "⟺",
		"DoubleLongRightArrow": "⟹",
		"DoubleRightArrow": "⇒",
		"DoubleRightTee": "⊨",
		"DoubleUpArrow": "⇑",
		"DoubleUpDownArrow": "⇕",
		"DoubleVerticalBar": "∥",
		"DownArrowBar": "⤓",
		"downarrow": "↓",
		"DownArrow": "↓",
		"Downarrow": "⇓",
		"DownArrowUpArrow": "⇵",
		"DownBreve": "̑",
		"downdownarrows": "⇊",
		"downharpoonleft": "⇃",
		"downharpoonright": "⇂",
		"DownLeftRightVector": "⥐",
		"DownLeftTeeVector": "⥞",
		"DownLeftVectorBar": "⥖",
		"DownLeftVector": "↽",
		"DownRightTeeVector": "⥟",
		"DownRightVectorBar": "⥗",
		"DownRightVector": "⇁",
		"DownTeeArrow": "↧",
		"DownTee": "⊤",
		"drbkarow": "⤐",
		"drcorn": "⌟",
		"drcrop": "⌌",
		"Dscr": "𝒟",
		"dscr": "𝒹",
		"DScy": "Ѕ",
		"dscy": "ѕ",
		"dsol": "⧶",
		"Dstrok": "Đ",
		"dstrok": "đ",
		"dtdot": "⋱",
		"dtri": "▿",
		"dtrif": "▾",
		"duarr": "⇵",
		"duhar": "⥯",
		"dwangle": "⦦",
		"DZcy": "Џ",
		"dzcy": "џ",
		"dzigrarr": "⟿",
		"Eacute": "É",
		"eacute": "é",
		"easter": "⩮",
		"Ecaron": "Ě",
		"ecaron": "ě",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"ecir": "≖",
		"ecolon": "≕",
		"Ecy": "Э",
		"ecy": "э",
		"eDDot": "⩷",
		"Edot": "Ė",
		"edot": "ė",
		"eDot": "≑",
		"ee": "ⅇ",
		"efDot": "≒",
		"Efr": "𝔈",
		"efr": "𝔢",
		"eg": "⪚",
		"Egrave": "È",
		"egrave": "è",
		"egs": "⪖",
		"egsdot": "⪘",
		"el": "⪙",
		"Element": "∈",
		"elinters": "⏧",
		"ell": "ℓ",
		"els": "⪕",
		"elsdot": "⪗",
		"Emacr": "Ē",
		"emacr": "ē",
		"empty": "∅",
		"emptyset": "∅",
		"EmptySmallSquare": "◻",
		"emptyv": "∅",
		"EmptyVerySmallSquare": "▫",
		"emsp13": " ",
		"emsp14": " ",
		"emsp": " ",
		"ENG": "Ŋ",
		"eng": "ŋ",
		"ensp": " ",
		"Eogon": "Ę",
		"eogon": "ę",
		"Eopf": "𝔼",
		"eopf": "𝕖",
		"epar": "⋕",
		"eparsl": "⧣",
		"eplus": "⩱",
		"epsi": "ε",
		"Epsilon": "Ε",
		"epsilon": "ε",
		"epsiv": "ϵ",
		"eqcirc": "≖",
		"eqcolon": "≕",
		"eqsim": "≂",
		"eqslantgtr": "⪖",
		"eqslantless": "⪕",
		"Equal": "⩵",
		"equals": "=",
		"EqualTilde": "≂",
		"equest": "≟",
		"Equilibrium": "⇌",
		"equiv": "≡",
		"equivDD": "⩸",
		"eqvparsl": "⧥",
		"erarr": "⥱",
		"erDot": "≓",
		"escr": "ℯ",
		"Escr": "ℰ",
		"esdot": "≐",
		"Esim": "⩳",
		"esim": "≂",
		"Eta": "Η",
		"eta": "η",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"euro": "€",
		"excl": "!",
		"exist": "∃",
		"Exists": "∃",
		"expectation": "ℰ",
		"exponentiale": "ⅇ",
		"ExponentialE": "ⅇ",
		"fallingdotseq": "≒",
		"Fcy": "Ф",
		"fcy": "ф",
		"female": "♀",
		"ffilig": "ﬃ",
		"fflig": "ﬀ",
		"ffllig": "ﬄ",
		"Ffr": "𝔉",
		"ffr": "𝔣",
		"filig": "ﬁ",
		"FilledSmallSquare": "◼",
		"FilledVerySmallSquare": "▪",
		"fjlig": "fj",
		"flat": "♭",
		"fllig": "ﬂ",
		"fltns": "▱",
		"fnof": "ƒ",
		"Fopf": "𝔽",
		"fopf": "𝕗",
		"forall": "∀",
		"ForAll": "∀",
		"fork": "⋔",
		"forkv": "⫙",
		"Fouriertrf": "ℱ",
		"fpartint": "⨍",
		"frac12": "½",
		"frac13": "⅓",
		"frac14": "¼",
		"frac15": "⅕",
		"frac16": "⅙",
		"frac18": "⅛",
		"frac23": "⅔",
		"frac25": "⅖",
		"frac34": "¾",
		"frac35": "⅗",
		"frac38": "⅜",
		"frac45": "⅘",
		"frac56": "⅚",
		"frac58": "⅝",
		"frac78": "⅞",
		"frasl": "⁄",
		"frown": "⌢",
		"fscr": "𝒻",
		"Fscr": "ℱ",
		"gacute": "ǵ",
		"Gamma": "Γ",
		"gamma": "γ",
		"Gammad": "Ϝ",
		"gammad": "ϝ",
		"gap": "⪆",
		"Gbreve": "Ğ",
		"gbreve": "ğ",
		"Gcedil": "Ģ",
		"Gcirc": "Ĝ",
		"gcirc": "ĝ",
		"Gcy": "Г",
		"gcy": "г",
		"Gdot": "Ġ",
		"gdot": "ġ",
		"ge": "≥",
		"gE": "≧",
		"gEl": "⪌",
		"gel": "⋛",
		"geq": "≥",
		"geqq": "≧",
		"geqslant": "⩾",
		"gescc": "⪩",
		"ges": "⩾",
		"gesdot": "⪀",
		"gesdoto": "⪂",
		"gesdotol": "⪄",
		"gesl": "⋛︀",
		"gesles": "⪔",
		"Gfr": "𝔊",
		"gfr": "𝔤",
		"gg": "≫",
		"Gg": "⋙",
		"ggg": "⋙",
		"gimel": "ℷ",
		"GJcy": "Ѓ",
		"gjcy": "ѓ",
		"gla": "⪥",
		"gl": "≷",
		"glE": "⪒",
		"glj": "⪤",
		"gnap": "⪊",
		"gnapprox": "⪊",
		"gne": "⪈",
		"gnE": "≩",
		"gneq": "⪈",
		"gneqq": "≩",
		"gnsim": "⋧",
		"Gopf": "𝔾",
		"gopf": "𝕘",
		"grave": "`",
		"GreaterEqual": "≥",
		"GreaterEqualLess": "⋛",
		"GreaterFullEqual": "≧",
		"GreaterGreater": "⪢",
		"GreaterLess": "≷",
		"GreaterSlantEqual": "⩾",
		"GreaterTilde": "≳",
		"Gscr": "𝒢",
		"gscr": "ℊ",
		"gsim": "≳",
		"gsime": "⪎",
		"gsiml": "⪐",
		"gtcc": "⪧",
		"gtcir": "⩺",
		"gt": ">",
		"GT": ">",
		"Gt": "≫",
		"gtdot": "⋗",
		"gtlPar": "⦕",
		"gtquest": "⩼",
		"gtrapprox": "⪆",
		"gtrarr": "⥸",
		"gtrdot": "⋗",
		"gtreqless": "⋛",
		"gtreqqless": "⪌",
		"gtrless": "≷",
		"gtrsim": "≳",
		"gvertneqq": "≩︀",
		"gvnE": "≩︀",
		"Hacek": "ˇ",
		"hairsp": " ",
		"half": "½",
		"hamilt": "ℋ",
		"HARDcy": "Ъ",
		"hardcy": "ъ",
		"harrcir": "⥈",
		"harr": "↔",
		"hArr": "⇔",
		"harrw": "↭",
		"Hat": "^",
		"hbar": "ℏ",
		"Hcirc": "Ĥ",
		"hcirc": "ĥ",
		"hearts": "♥",
		"heartsuit": "♥",
		"hellip": "…",
		"hercon": "⊹",
		"hfr": "𝔥",
		"Hfr": "ℌ",
		"HilbertSpace": "ℋ",
		"hksearow": "⤥",
		"hkswarow": "⤦",
		"hoarr": "⇿",
		"homtht": "∻",
		"hookleftarrow": "↩",
		"hookrightarrow": "↪",
		"hopf": "𝕙",
		"Hopf": "ℍ",
		"horbar": "―",
		"HorizontalLine": "─",
		"hscr": "𝒽",
		"Hscr": "ℋ",
		"hslash": "ℏ",
		"Hstrok": "Ħ",
		"hstrok": "ħ",
		"HumpDownHump": "≎",
		"HumpEqual": "≏",
		"hybull": "⁃",
		"hyphen": "‐",
		"Iacute": "Í",
		"iacute": "í",
		"ic": "⁣",
		"Icirc": "Î",
		"icirc": "î",
		"Icy": "И",
		"icy": "и",
		"Idot": "İ",
		"IEcy": "Е",
		"iecy": "е",
		"iexcl": "¡",
		"iff": "⇔",
		"ifr": "𝔦",
		"Ifr": "ℑ",
		"Igrave": "Ì",
		"igrave": "ì",
		"ii": "ⅈ",
		"iiiint": "⨌",
		"iiint": "∭",
		"iinfin": "⧜",
		"iiota": "℩",
		"IJlig": "Ĳ",
		"ijlig": "ĳ",
		"Imacr": "Ī",
		"imacr": "ī",
		"image": "ℑ",
		"ImaginaryI": "ⅈ",
		"imagline": "ℐ",
		"imagpart": "ℑ",
		"imath": "ı",
		"Im": "ℑ",
		"imof": "⊷",
		"imped": "Ƶ",
		"Implies": "⇒",
		"incare": "℅",
		"in": "∈",
		"infin": "∞",
		"infintie": "⧝",
		"inodot": "ı",
		"intcal": "⊺",
		"int": "∫",
		"Int": "∬",
		"integers": "ℤ",
		"Integral": "∫",
		"intercal": "⊺",
		"Intersection": "⋂",
		"intlarhk": "⨗",
		"intprod": "⨼",
		"InvisibleComma": "⁣",
		"InvisibleTimes": "⁢",
		"IOcy": "Ё",
		"iocy": "ё",
		"Iogon": "Į",
		"iogon": "į",
		"Iopf": "𝕀",
		"iopf": "𝕚",
		"Iota": "Ι",
		"iota": "ι",
		"iprod": "⨼",
		"iquest": "¿",
		"iscr": "𝒾",
		"Iscr": "ℐ",
		"isin": "∈",
		"isindot": "⋵",
		"isinE": "⋹",
		"isins": "⋴",
		"isinsv": "⋳",
		"isinv": "∈",
		"it": "⁢",
		"Itilde": "Ĩ",
		"itilde": "ĩ",
		"Iukcy": "І",
		"iukcy": "і",
		"Iuml": "Ï",
		"iuml": "ï",
		"Jcirc": "Ĵ",
		"jcirc": "ĵ",
		"Jcy": "Й",
		"jcy": "й",
		"Jfr": "𝔍",
		"jfr": "𝔧",
		"jmath": "ȷ",
		"Jopf": "𝕁",
		"jopf": "𝕛",
		"Jscr": "𝒥",
		"jscr": "𝒿",
		"Jsercy": "Ј",
		"jsercy": "ј",
		"Jukcy": "Є",
		"jukcy": "є",
		"Kappa": "Κ",
		"kappa": "κ",
		"kappav": "ϰ",
		"Kcedil": "Ķ",
		"kcedil": "ķ",
		"Kcy": "К",
		"kcy": "к",
		"Kfr": "𝔎",
		"kfr": "𝔨",
		"kgreen": "ĸ",
		"KHcy": "Х",
		"khcy": "х",
		"KJcy": "Ќ",
		"kjcy": "ќ",
		"Kopf": "𝕂",
		"kopf": "𝕜",
		"Kscr": "𝒦",
		"kscr": "𝓀",
		"lAarr": "⇚",
		"Lacute": "Ĺ",
		"lacute": "ĺ",
		"laemptyv": "⦴",
		"lagran": "ℒ",
		"Lambda": "Λ",
		"lambda": "λ",
		"lang": "⟨",
		"Lang": "⟪",
		"langd": "⦑",
		"langle": "⟨",
		"lap": "⪅",
		"Laplacetrf": "ℒ",
		"laquo": "«",
		"larrb": "⇤",
		"larrbfs": "⤟",
		"larr": "←",
		"Larr": "↞",
		"lArr": "⇐",
		"larrfs": "⤝",
		"larrhk": "↩",
		"larrlp": "↫",
		"larrpl": "⤹",
		"larrsim": "⥳",
		"larrtl": "↢",
		"latail": "⤙",
		"lAtail": "⤛",
		"lat": "⪫",
		"late": "⪭",
		"lates": "⪭︀",
		"lbarr": "⤌",
		"lBarr": "⤎",
		"lbbrk": "❲",
		"lbrace": "{",
		"lbrack": "[",
		"lbrke": "⦋",
		"lbrksld": "⦏",
		"lbrkslu": "⦍",
		"Lcaron": "Ľ",
		"lcaron": "ľ",
		"Lcedil": "Ļ",
		"lcedil": "ļ",
		"lceil": "⌈",
		"lcub": "{",
		"Lcy": "Л",
		"lcy": "л",
		"ldca": "⤶",
		"ldquo": "“",
		"ldquor": "„",
		"ldrdhar": "⥧",
		"ldrushar": "⥋",
		"ldsh": "↲",
		"le": "≤",
		"lE": "≦",
		"LeftAngleBracket": "⟨",
		"LeftArrowBar": "⇤",
		"leftarrow": "←",
		"LeftArrow": "←",
		"Leftarrow": "⇐",
		"LeftArrowRightArrow": "⇆",
		"leftarrowtail": "↢",
		"LeftCeiling": "⌈",
		"LeftDoubleBracket": "⟦",
		"LeftDownTeeVector": "⥡",
		"LeftDownVectorBar": "⥙",
		"LeftDownVector": "⇃",
		"LeftFloor": "⌊",
		"leftharpoondown": "↽",
		"leftharpoonup": "↼",
		"leftleftarrows": "⇇",
		"leftrightarrow": "↔",
		"LeftRightArrow": "↔",
		"Leftrightarrow": "⇔",
		"leftrightarrows": "⇆",
		"leftrightharpoons": "⇋",
		"leftrightsquigarrow": "↭",
		"LeftRightVector": "⥎",
		"LeftTeeArrow": "↤",
		"LeftTee": "⊣",
		"LeftTeeVector": "⥚",
		"leftthreetimes": "⋋",
		"LeftTriangleBar": "⧏",
		"LeftTriangle": "⊲",
		"LeftTriangleEqual": "⊴",
		"LeftUpDownVector": "⥑",
		"LeftUpTeeVector": "⥠",
		"LeftUpVectorBar": "⥘",
		"LeftUpVector": "↿",
		"LeftVectorBar": "⥒",
		"LeftVector": "↼",
		"lEg": "⪋",
		"leg": "⋚",
		"leq": "≤",
		"leqq": "≦",
		"leqslant": "⩽",
		"lescc": "⪨",
		"les": "⩽",
		"lesdot": "⩿",
		"lesdoto": "⪁",
		"lesdotor": "⪃",
		"lesg": "⋚︀",
		"lesges": "⪓",
		"lessapprox": "⪅",
		"lessdot": "⋖",
		"lesseqgtr": "⋚",
		"lesseqqgtr": "⪋",
		"LessEqualGreater": "⋚",
		"LessFullEqual": "≦",
		"LessGreater": "≶",
		"lessgtr": "≶",
		"LessLess": "⪡",
		"lesssim": "≲",
		"LessSlantEqual": "⩽",
		"LessTilde": "≲",
		"lfisht": "⥼",
		"lfloor": "⌊",
		"Lfr": "𝔏",
		"lfr": "𝔩",
		"lg": "≶",
		"lgE": "⪑",
		"lHar": "⥢",
		"lhard": "↽",
		"lharu": "↼",
		"lharul": "⥪",
		"lhblk": "▄",
		"LJcy": "Љ",
		"ljcy": "љ",
		"llarr": "⇇",
		"ll": "≪",
		"Ll": "⋘",
		"llcorner": "⌞",
		"Lleftarrow": "⇚",
		"llhard": "⥫",
		"lltri": "◺",
		"Lmidot": "Ŀ",
		"lmidot": "ŀ",
		"lmoustache": "⎰",
		"lmoust": "⎰",
		"lnap": "⪉",
		"lnapprox": "⪉",
		"lne": "⪇",
		"lnE": "≨",
		"lneq": "⪇",
		"lneqq": "≨",
		"lnsim": "⋦",
		"loang": "⟬",
		"loarr": "⇽",
		"lobrk": "⟦",
		"longleftarrow": "⟵",
		"LongLeftArrow": "⟵",
		"Longleftarrow": "⟸",
		"longleftrightarrow": "⟷",
		"LongLeftRightArrow": "⟷",
		"Longleftrightarrow": "⟺",
		"longmapsto": "⟼",
		"longrightarrow": "⟶",
		"LongRightArrow": "⟶",
		"Longrightarrow": "⟹",
		"looparrowleft": "↫",
		"looparrowright": "↬",
		"lopar": "⦅",
		"Lopf": "𝕃",
		"lopf": "𝕝",
		"loplus": "⨭",
		"lotimes": "⨴",
		"lowast": "∗",
		"lowbar": "_",
		"LowerLeftArrow": "↙",
		"LowerRightArrow": "↘",
		"loz": "◊",
		"lozenge": "◊",
		"lozf": "⧫",
		"lpar": "(",
		"lparlt": "⦓",
		"lrarr": "⇆",
		"lrcorner": "⌟",
		"lrhar": "⇋",
		"lrhard": "⥭",
		"lrm": "‎",
		"lrtri": "⊿",
		"lsaquo": "‹",
		"lscr": "𝓁",
		"Lscr": "ℒ",
		"lsh": "↰",
		"Lsh": "↰",
		"lsim": "≲",
		"lsime": "⪍",
		"lsimg": "⪏",
		"lsqb": "[",
		"lsquo": "‘",
		"lsquor": "‚",
		"Lstrok": "Ł",
		"lstrok": "ł",
		"ltcc": "⪦",
		"ltcir": "⩹",
		"lt": "<",
		"LT": "<",
		"Lt": "≪",
		"ltdot": "⋖",
		"lthree": "⋋",
		"ltimes": "⋉",
		"ltlarr": "⥶",
		"ltquest": "⩻",
		"ltri": "◃",
		"ltrie": "⊴",
		"ltrif": "◂",
		"ltrPar": "⦖",
		"lurdshar": "⥊",
		"luruhar": "⥦",
		"lvertneqq": "≨︀",
		"lvnE": "≨︀",
		"macr": "¯",
		"male": "♂",
		"malt": "✠",
		"maltese": "✠",
		"Map": "⤅",
		"map": "↦",
		"mapsto": "↦",
		"mapstodown": "↧",
		"mapstoleft": "↤",
		"mapstoup": "↥",
		"marker": "▮",
		"mcomma": "⨩",
		"Mcy": "М",
		"mcy": "м",
		"mdash": "—",
		"mDDot": "∺",
		"measuredangle": "∡",
		"MediumSpace": " ",
		"Mellintrf": "ℳ",
		"Mfr": "𝔐",
		"mfr": "𝔪",
		"mho": "℧",
		"micro": "µ",
		"midast": "*",
		"midcir": "⫰",
		"mid": "∣",
		"middot": "·",
		"minusb": "⊟",
		"minus": "−",
		"minusd": "∸",
		"minusdu": "⨪",
		"MinusPlus": "∓",
		"mlcp": "⫛",
		"mldr": "…",
		"mnplus": "∓",
		"models": "⊧",
		"Mopf": "𝕄",
		"mopf": "𝕞",
		"mp": "∓",
		"mscr": "𝓂",
		"Mscr": "ℳ",
		"mstpos": "∾",
		"Mu": "Μ",
		"mu": "μ",
		"multimap": "⊸",
		"mumap": "⊸",
		"nabla": "∇",
		"Nacute": "Ń",
		"nacute": "ń",
		"nang": "∠⃒",
		"nap": "≉",
		"napE": "⩰̸",
		"napid": "≋̸",
		"napos": "ŉ",
		"napprox": "≉",
		"natural": "♮",
		"naturals": "ℕ",
		"natur": "♮",
		"nbsp": " ",
		"nbump": "≎̸",
		"nbumpe": "≏̸",
		"ncap": "⩃",
		"Ncaron": "Ň",
		"ncaron": "ň",
		"Ncedil": "Ņ",
		"ncedil": "ņ",
		"ncong": "≇",
		"ncongdot": "⩭̸",
		"ncup": "⩂",
		"Ncy": "Н",
		"ncy": "н",
		"ndash": "–",
		"nearhk": "⤤",
		"nearr": "↗",
		"neArr": "⇗",
		"nearrow": "↗",
		"ne": "≠",
		"nedot": "≐̸",
		"NegativeMediumSpace": "​",
		"NegativeThickSpace": "​",
		"NegativeThinSpace": "​",
		"NegativeVeryThinSpace": "​",
		"nequiv": "≢",
		"nesear": "⤨",
		"nesim": "≂̸",
		"NestedGreaterGreater": "≫",
		"NestedLessLess": "≪",
		"NewLine": "\n",
		"nexist": "∄",
		"nexists": "∄",
		"Nfr": "𝔑",
		"nfr": "𝔫",
		"ngE": "≧̸",
		"nge": "≱",
		"ngeq": "≱",
		"ngeqq": "≧̸",
		"ngeqslant": "⩾̸",
		"nges": "⩾̸",
		"nGg": "⋙̸",
		"ngsim": "≵",
		"nGt": "≫⃒",
		"ngt": "≯",
		"ngtr": "≯",
		"nGtv": "≫̸",
		"nharr": "↮",
		"nhArr": "⇎",
		"nhpar": "⫲",
		"ni": "∋",
		"nis": "⋼",
		"nisd": "⋺",
		"niv": "∋",
		"NJcy": "Њ",
		"njcy": "њ",
		"nlarr": "↚",
		"nlArr": "⇍",
		"nldr": "‥",
		"nlE": "≦̸",
		"nle": "≰",
		"nleftarrow": "↚",
		"nLeftarrow": "⇍",
		"nleftrightarrow": "↮",
		"nLeftrightarrow": "⇎",
		"nleq": "≰",
		"nleqq": "≦̸",
		"nleqslant": "⩽̸",
		"nles": "⩽̸",
		"nless": "≮",
		"nLl": "⋘̸",
		"nlsim": "≴",
		"nLt": "≪⃒",
		"nlt": "≮",
		"nltri": "⋪",
		"nltrie": "⋬",
		"nLtv": "≪̸",
		"nmid": "∤",
		"NoBreak": "⁠",
		"NonBreakingSpace": " ",
		"nopf": "𝕟",
		"Nopf": "ℕ",
		"Not": "⫬",
		"not": "¬",
		"NotCongruent": "≢",
		"NotCupCap": "≭",
		"NotDoubleVerticalBar": "∦",
		"NotElement": "∉",
		"NotEqual": "≠",
		"NotEqualTilde": "≂̸",
		"NotExists": "∄",
		"NotGreater": "≯",
		"NotGreaterEqual": "≱",
		"NotGreaterFullEqual": "≧̸",
		"NotGreaterGreater": "≫̸",
		"NotGreaterLess": "≹",
		"NotGreaterSlantEqual": "⩾̸",
		"NotGreaterTilde": "≵",
		"NotHumpDownHump": "≎̸",
		"NotHumpEqual": "≏̸",
		"notin": "∉",
		"notindot": "⋵̸",
		"notinE": "⋹̸",
		"notinva": "∉",
		"notinvb": "⋷",
		"notinvc": "⋶",
		"NotLeftTriangleBar": "⧏̸",
		"NotLeftTriangle": "⋪",
		"NotLeftTriangleEqual": "⋬",
		"NotLess": "≮",
		"NotLessEqual": "≰",
		"NotLessGreater": "≸",
		"NotLessLess": "≪̸",
		"NotLessSlantEqual": "⩽̸",
		"NotLessTilde": "≴",
		"NotNestedGreaterGreater": "⪢̸",
		"NotNestedLessLess": "⪡̸",
		"notni": "∌",
		"notniva": "∌",
		"notnivb": "⋾",
		"notnivc": "⋽",
		"NotPrecedes": "⊀",
		"NotPrecedesEqual": "⪯̸",
		"NotPrecedesSlantEqual": "⋠",
		"NotReverseElement": "∌",
		"NotRightTriangleBar": "⧐̸",
		"NotRightTriangle": "⋫",
		"NotRightTriangleEqual": "⋭",
		"NotSquareSubset": "⊏̸",
		"NotSquareSubsetEqual": "⋢",
		"NotSquareSuperset": "⊐̸",
		"NotSquareSupersetEqual": "⋣",
		"NotSubset": "⊂⃒",
		"NotSubsetEqual": "⊈",
		"NotSucceeds": "⊁",
		"NotSucceedsEqual": "⪰̸",
		"NotSucceedsSlantEqual": "⋡",
		"NotSucceedsTilde": "≿̸",
		"NotSuperset": "⊃⃒",
		"NotSupersetEqual": "⊉",
		"NotTilde": "≁",
		"NotTildeEqual": "≄",
		"NotTildeFullEqual": "≇",
		"NotTildeTilde": "≉",
		"NotVerticalBar": "∤",
		"nparallel": "∦",
		"npar": "∦",
		"nparsl": "⫽⃥",
		"npart": "∂̸",
		"npolint": "⨔",
		"npr": "⊀",
		"nprcue": "⋠",
		"nprec": "⊀",
		"npreceq": "⪯̸",
		"npre": "⪯̸",
		"nrarrc": "⤳̸",
		"nrarr": "↛",
		"nrArr": "⇏",
		"nrarrw": "↝̸",
		"nrightarrow": "↛",
		"nRightarrow": "⇏",
		"nrtri": "⋫",
		"nrtrie": "⋭",
		"nsc": "⊁",
		"nsccue": "⋡",
		"nsce": "⪰̸",
		"Nscr": "𝒩",
		"nscr": "𝓃",
		"nshortmid": "∤",
		"nshortparallel": "∦",
		"nsim": "≁",
		"nsime": "≄",
		"nsimeq": "≄",
		"nsmid": "∤",
		"nspar": "∦",
		"nsqsube": "⋢",
		"nsqsupe": "⋣",
		"nsub": "⊄",
		"nsubE": "⫅̸",
		"nsube": "⊈",
		"nsubset": "⊂⃒",
		"nsubseteq": "⊈",
		"nsubseteqq": "⫅̸",
		"nsucc": "⊁",
		"nsucceq": "⪰̸",
		"nsup": "⊅",
		"nsupE": "⫆̸",
		"nsupe": "⊉",
		"nsupset": "⊃⃒",
		"nsupseteq": "⊉",
		"nsupseteqq": "⫆̸",
		"ntgl": "≹",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"ntlg": "≸",
		"ntriangleleft": "⋪",
		"ntrianglelefteq": "⋬",
		"ntriangleright": "⋫",
		"ntrianglerighteq": "⋭",
		"Nu": "Ν",
		"nu": "ν",
		"num": "#",
		"numero": "№",
		"numsp": " ",
		"nvap": "≍⃒",
		"nvdash": "⊬",
		"nvDash": "⊭",
		"nVdash": "⊮",
		"nVDash": "⊯",
		"nvge": "≥⃒",
		"nvgt": ">⃒",
		"nvHarr": "⤄",
		"nvinfin": "⧞",
		"nvlArr": "⤂",
		"nvle": "≤⃒",
		"nvlt": "<⃒",
		"nvltrie": "⊴⃒",
		"nvrArr": "⤃",
		"nvrtrie": "⊵⃒",
		"nvsim": "∼⃒",
		"nwarhk": "⤣",
		"nwarr": "↖",
		"nwArr": "⇖",
		"nwarrow": "↖",
		"nwnear": "⤧",
		"Oacute": "Ó",
		"oacute": "ó",
		"oast": "⊛",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"ocir": "⊚",
		"Ocy": "О",
		"ocy": "о",
		"odash": "⊝",
		"Odblac": "Ő",
		"odblac": "ő",
		"odiv": "⨸",
		"odot": "⊙",
		"odsold": "⦼",
		"OElig": "Œ",
		"oelig": "œ",
		"ofcir": "⦿",
		"Ofr": "𝔒",
		"ofr": "𝔬",
		"ogon": "˛",
		"Ograve": "Ò",
		"ograve": "ò",
		"ogt": "⧁",
		"ohbar": "⦵",
		"ohm": "Ω",
		"oint": "∮",
		"olarr": "↺",
		"olcir": "⦾",
		"olcross": "⦻",
		"oline": "‾",
		"olt": "⧀",
		"Omacr": "Ō",
		"omacr": "ō",
		"Omega": "Ω",
		"omega": "ω",
		"Omicron": "Ο",
		"omicron": "ο",
		"omid": "⦶",
		"ominus": "⊖",
		"Oopf": "𝕆",
		"oopf": "𝕠",
		"opar": "⦷",
		"OpenCurlyDoubleQuote": "“",
		"OpenCurlyQuote": "‘",
		"operp": "⦹",
		"oplus": "⊕",
		"orarr": "↻",
		"Or": "⩔",
		"or": "∨",
		"ord": "⩝",
		"order": "ℴ",
		"orderof": "ℴ",
		"ordf": "ª",
		"ordm": "º",
		"origof": "⊶",
		"oror": "⩖",
		"orslope": "⩗",
		"orv": "⩛",
		"oS": "Ⓢ",
		"Oscr": "𝒪",
		"oscr": "ℴ",
		"Oslash": "Ø",
		"oslash": "ø",
		"osol": "⊘",
		"Otilde": "Õ",
		"otilde": "õ",
		"otimesas": "⨶",
		"Otimes": "⨷",
		"otimes": "⊗",
		"Ouml": "Ö",
		"ouml": "ö",
		"ovbar": "⌽",
		"OverBar": "‾",
		"OverBrace": "⏞",
		"OverBracket": "⎴",
		"OverParenthesis": "⏜",
		"para": "¶",
		"parallel": "∥",
		"par": "∥",
		"parsim": "⫳",
		"parsl": "⫽",
		"part": "∂",
		"PartialD": "∂",
		"Pcy": "П",
		"pcy": "п",
		"percnt": "%",
		"period": ".",
		"permil": "‰",
		"perp": "⊥",
		"pertenk": "‱",
		"Pfr": "𝔓",
		"pfr": "𝔭",
		"Phi": "Φ",
		"phi": "φ",
		"phiv": "ϕ",
		"phmmat": "ℳ",
		"phone": "☎",
		"Pi": "Π",
		"pi": "π",
		"pitchfork": "⋔",
		"piv": "ϖ",
		"planck": "ℏ",
		"planckh": "ℎ",
		"plankv": "ℏ",
		"plusacir": "⨣",
		"plusb": "⊞",
		"pluscir": "⨢",
		"plus": "+",
		"plusdo": "∔",
		"plusdu": "⨥",
		"pluse": "⩲",
		"PlusMinus": "±",
		"plusmn": "±",
		"plussim": "⨦",
		"plustwo": "⨧",
		"pm": "±",
		"Poincareplane": "ℌ",
		"pointint": "⨕",
		"popf": "𝕡",
		"Popf": "ℙ",
		"pound": "£",
		"prap": "⪷",
		"Pr": "⪻",
		"pr": "≺",
		"prcue": "≼",
		"precapprox": "⪷",
		"prec": "≺",
		"preccurlyeq": "≼",
		"Precedes": "≺",
		"PrecedesEqual": "⪯",
		"PrecedesSlantEqual": "≼",
		"PrecedesTilde": "≾",
		"preceq": "⪯",
		"precnapprox": "⪹",
		"precneqq": "⪵",
		"precnsim": "⋨",
		"pre": "⪯",
		"prE": "⪳",
		"precsim": "≾",
		"prime": "′",
		"Prime": "″",
		"primes": "ℙ",
		"prnap": "⪹",
		"prnE": "⪵",
		"prnsim": "⋨",
		"prod": "∏",
		"Product": "∏",
		"profalar": "⌮",
		"profline": "⌒",
		"profsurf": "⌓",
		"prop": "∝",
		"Proportional": "∝",
		"Proportion": "∷",
		"propto": "∝",
		"prsim": "≾",
		"prurel": "⊰",
		"Pscr": "𝒫",
		"pscr": "𝓅",
		"Psi": "Ψ",
		"psi": "ψ",
		"puncsp": " ",
		"Qfr": "𝔔",
		"qfr": "𝔮",
		"qint": "⨌",
		"qopf": "𝕢",
		"Qopf": "ℚ",
		"qprime": "⁗",
		"Qscr": "𝒬",
		"qscr": "𝓆",
		"quaternions": "ℍ",
		"quatint": "⨖",
		"quest": "?",
		"questeq": "≟",
		"quot": "\"",
		"QUOT": "\"",
		"rAarr": "⇛",
		"race": "∽̱",
		"Racute": "Ŕ",
		"racute": "ŕ",
		"radic": "√",
		"raemptyv": "⦳",
		"rang": "⟩",
		"Rang": "⟫",
		"rangd": "⦒",
		"range": "⦥",
		"rangle": "⟩",
		"raquo": "»",
		"rarrap": "⥵",
		"rarrb": "⇥",
		"rarrbfs": "⤠",
		"rarrc": "⤳",
		"rarr": "→",
		"Rarr": "↠",
		"rArr": "⇒",
		"rarrfs": "⤞",
		"rarrhk": "↪",
		"rarrlp": "↬",
		"rarrpl": "⥅",
		"rarrsim": "⥴",
		"Rarrtl": "⤖",
		"rarrtl": "↣",
		"rarrw": "↝",
		"ratail": "⤚",
		"rAtail": "⤜",
		"ratio": "∶",
		"rationals": "ℚ",
		"rbarr": "⤍",
		"rBarr": "⤏",
		"RBarr": "⤐",
		"rbbrk": "❳",
		"rbrace": "}",
		"rbrack": "]",
		"rbrke": "⦌",
		"rbrksld": "⦎",
		"rbrkslu": "⦐",
		"Rcaron": "Ř",
		"rcaron": "ř",
		"Rcedil": "Ŗ",
		"rcedil": "ŗ",
		"rceil": "⌉",
		"rcub": "}",
		"Rcy": "Р",
		"rcy": "р",
		"rdca": "⤷",
		"rdldhar": "⥩",
		"rdquo": "”",
		"rdquor": "”",
		"rdsh": "↳",
		"real": "ℜ",
		"realine": "ℛ",
		"realpart": "ℜ",
		"reals": "ℝ",
		"Re": "ℜ",
		"rect": "▭",
		"reg": "®",
		"REG": "®",
		"ReverseElement": "∋",
		"ReverseEquilibrium": "⇋",
		"ReverseUpEquilibrium": "⥯",
		"rfisht": "⥽",
		"rfloor": "⌋",
		"rfr": "𝔯",
		"Rfr": "ℜ",
		"rHar": "⥤",
		"rhard": "⇁",
		"rharu": "⇀",
		"rharul": "⥬",
		"Rho": "Ρ",
		"rho": "ρ",
		"rhov": "ϱ",
		"RightAngleBracket": "⟩",
		"RightArrowBar": "⇥",
		"rightarrow": "→",
		"RightArrow": "→",
		"Rightarrow": "⇒",
		"RightArrowLeftArrow": "⇄",
		"rightarrowtail": "↣",
		"RightCeiling": "⌉",
		"RightDoubleBracket": "⟧",
		"RightDownTeeVector": "⥝",
		"RightDownVectorBar": "⥕",
		"RightDownVector": "⇂",
		"RightFloor": "⌋",
		"rightharpoondown": "⇁",
		"rightharpoonup": "⇀",
		"rightleftarrows": "⇄",
		"rightleftharpoons": "⇌",
		"rightrightarrows": "⇉",
		"rightsquigarrow": "↝",
		"RightTeeArrow": "↦",
		"RightTee": "⊢",
		"RightTeeVector": "⥛",
		"rightthreetimes": "⋌",
		"RightTriangleBar": "⧐",
		"RightTriangle": "⊳",
		"RightTriangleEqual": "⊵",
		"RightUpDownVector": "⥏",
		"RightUpTeeVector": "⥜",
		"RightUpVectorBar": "⥔",
		"RightUpVector": "↾",
		"RightVectorBar": "⥓",
		"RightVector": "⇀",
		"ring": "˚",
		"risingdotseq": "≓",
		"rlarr": "⇄",
		"rlhar": "⇌",
		"rlm": "‏",
		"rmoustache": "⎱",
		"rmoust": "⎱",
		"rnmid": "⫮",
		"roang": "⟭",
		"roarr": "⇾",
		"robrk": "⟧",
		"ropar": "⦆",
		"ropf": "𝕣",
		"Ropf": "ℝ",
		"roplus": "⨮",
		"rotimes": "⨵",
		"RoundImplies": "⥰",
		"rpar": ")",
		"rpargt": "⦔",
		"rppolint": "⨒",
		"rrarr": "⇉",
		"Rrightarrow": "⇛",
		"rsaquo": "›",
		"rscr": "𝓇",
		"Rscr": "ℛ",
		"rsh": "↱",
		"Rsh": "↱",
		"rsqb": "]",
		"rsquo": "’",
		"rsquor": "’",
		"rthree": "⋌",
		"rtimes": "⋊",
		"rtri": "▹",
		"rtrie": "⊵",
		"rtrif": "▸",
		"rtriltri": "⧎",
		"RuleDelayed": "⧴",
		"ruluhar": "⥨",
		"rx": "℞",
		"Sacute": "Ś",
		"sacute": "ś",
		"sbquo": "‚",
		"scap": "⪸",
		"Scaron": "Š",
		"scaron": "š",
		"Sc": "⪼",
		"sc": "≻",
		"sccue": "≽",
		"sce": "⪰",
		"scE": "⪴",
		"Scedil": "Ş",
		"scedil": "ş",
		"Scirc": "Ŝ",
		"scirc": "ŝ",
		"scnap": "⪺",
		"scnE": "⪶",
		"scnsim": "⋩",
		"scpolint": "⨓",
		"scsim": "≿",
		"Scy": "С",
		"scy": "с",
		"sdotb": "⊡",
		"sdot": "⋅",
		"sdote": "⩦",
		"searhk": "⤥",
		"searr": "↘",
		"seArr": "⇘",
		"searrow": "↘",
		"sect": "§",
		"semi": ";",
		"seswar": "⤩",
		"setminus": "∖",
		"setmn": "∖",
		"sext": "✶",
		"Sfr": "𝔖",
		"sfr": "𝔰",
		"sfrown": "⌢",
		"sharp": "♯",
		"SHCHcy": "Щ",
		"shchcy": "щ",
		"SHcy": "Ш",
		"shcy": "ш",
		"ShortDownArrow": "↓",
		"ShortLeftArrow": "←",
		"shortmid": "∣",
		"shortparallel": "∥",
		"ShortRightArrow": "→",
		"ShortUpArrow": "↑",
		"shy": "­",
		"Sigma": "Σ",
		"sigma": "σ",
		"sigmaf": "ς",
		"sigmav": "ς",
		"sim": "∼",
		"simdot": "⩪",
		"sime": "≃",
		"simeq": "≃",
		"simg": "⪞",
		"simgE": "⪠",
		"siml": "⪝",
		"simlE": "⪟",
		"simne": "≆",
		"simplus": "⨤",
		"simrarr": "⥲",
		"slarr": "←",
		"SmallCircle": "∘",
		"smallsetminus": "∖",
		"smashp": "⨳",
		"smeparsl": "⧤",
		"smid": "∣",
		"smile": "⌣",
		"smt": "⪪",
		"smte": "⪬",
		"smtes": "⪬︀",
		"SOFTcy": "Ь",
		"softcy": "ь",
		"solbar": "⌿",
		"solb": "⧄",
		"sol": "/",
		"Sopf": "𝕊",
		"sopf": "𝕤",
		"spades": "♠",
		"spadesuit": "♠",
		"spar": "∥",
		"sqcap": "⊓",
		"sqcaps": "⊓︀",
		"sqcup": "⊔",
		"sqcups": "⊔︀",
		"Sqrt": "√",
		"sqsub": "⊏",
		"sqsube": "⊑",
		"sqsubset": "⊏",
		"sqsubseteq": "⊑",
		"sqsup": "⊐",
		"sqsupe": "⊒",
		"sqsupset": "⊐",
		"sqsupseteq": "⊒",
		"square": "□",
		"Square": "□",
		"SquareIntersection": "⊓",
		"SquareSubset": "⊏",
		"SquareSubsetEqual": "⊑",
		"SquareSuperset": "⊐",
		"SquareSupersetEqual": "⊒",
		"SquareUnion": "⊔",
		"squarf": "▪",
		"squ": "□",
		"squf": "▪",
		"srarr": "→",
		"Sscr": "𝒮",
		"sscr": "𝓈",
		"ssetmn": "∖",
		"ssmile": "⌣",
		"sstarf": "⋆",
		"Star": "⋆",
		"star": "☆",
		"starf": "★",
		"straightepsilon": "ϵ",
		"straightphi": "ϕ",
		"strns": "¯",
		"sub": "⊂",
		"Sub": "⋐",
		"subdot": "⪽",
		"subE": "⫅",
		"sube": "⊆",
		"subedot": "⫃",
		"submult": "⫁",
		"subnE": "⫋",
		"subne": "⊊",
		"subplus": "⪿",
		"subrarr": "⥹",
		"subset": "⊂",
		"Subset": "⋐",
		"subseteq": "⊆",
		"subseteqq": "⫅",
		"SubsetEqual": "⊆",
		"subsetneq": "⊊",
		"subsetneqq": "⫋",
		"subsim": "⫇",
		"subsub": "⫕",
		"subsup": "⫓",
		"succapprox": "⪸",
		"succ": "≻",
		"succcurlyeq": "≽",
		"Succeeds": "≻",
		"SucceedsEqual": "⪰",
		"SucceedsSlantEqual": "≽",
		"SucceedsTilde": "≿",
		"succeq": "⪰",
		"succnapprox": "⪺",
		"succneqq": "⪶",
		"succnsim": "⋩",
		"succsim": "≿",
		"SuchThat": "∋",
		"sum": "∑",
		"Sum": "∑",
		"sung": "♪",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"sup": "⊃",
		"Sup": "⋑",
		"supdot": "⪾",
		"supdsub": "⫘",
		"supE": "⫆",
		"supe": "⊇",
		"supedot": "⫄",
		"Superset": "⊃",
		"SupersetEqual": "⊇",
		"suphsol": "⟉",
		"suphsub": "⫗",
		"suplarr": "⥻",
		"supmult": "⫂",
		"supnE": "⫌",
		"supne": "⊋",
		"supplus": "⫀",
		"supset": "⊃",
		"Supset": "⋑",
		"supseteq": "⊇",
		"supseteqq": "⫆",
		"supsetneq": "⊋",
		"supsetneqq": "⫌",
		"supsim": "⫈",
		"supsub": "⫔",
		"supsup": "⫖",
		"swarhk": "⤦",
		"swarr": "↙",
		"swArr": "⇙",
		"swarrow": "↙",
		"swnwar": "⤪",
		"szlig": "ß",
		"Tab": "\t",
		"target": "⌖",
		"Tau": "Τ",
		"tau": "τ",
		"tbrk": "⎴",
		"Tcaron": "Ť",
		"tcaron": "ť",
		"Tcedil": "Ţ",
		"tcedil": "ţ",
		"Tcy": "Т",
		"tcy": "т",
		"tdot": "⃛",
		"telrec": "⌕",
		"Tfr": "𝔗",
		"tfr": "𝔱",
		"there4": "∴",
		"therefore": "∴",
		"Therefore": "∴",
		"Theta": "Θ",
		"theta": "θ",
		"thetasym": "ϑ",
		"thetav": "ϑ",
		"thickapprox": "≈",
		"thicksim": "∼",
		"ThickSpace": "  ",
		"ThinSpace": " ",
		"thinsp": " ",
		"thkap": "≈",
		"thksim": "∼",
		"THORN": "Þ",
		"thorn": "þ",
		"tilde": "˜",
		"Tilde": "∼",
		"TildeEqual": "≃",
		"TildeFullEqual": "≅",
		"TildeTilde": "≈",
		"timesbar": "⨱",
		"timesb": "⊠",
		"times": "×",
		"timesd": "⨰",
		"tint": "∭",
		"toea": "⤨",
		"topbot": "⌶",
		"topcir": "⫱",
		"top": "⊤",
		"Topf": "𝕋",
		"topf": "𝕥",
		"topfork": "⫚",
		"tosa": "⤩",
		"tprime": "‴",
		"trade": "™",
		"TRADE": "™",
		"triangle": "▵",
		"triangledown": "▿",
		"triangleleft": "◃",
		"trianglelefteq": "⊴",
		"triangleq": "≜",
		"triangleright": "▹",
		"trianglerighteq": "⊵",
		"tridot": "◬",
		"trie": "≜",
		"triminus": "⨺",
		"TripleDot": "⃛",
		"triplus": "⨹",
		"trisb": "⧍",
		"tritime": "⨻",
		"trpezium": "⏢",
		"Tscr": "𝒯",
		"tscr": "𝓉",
		"TScy": "Ц",
		"tscy": "ц",
		"TSHcy": "Ћ",
		"tshcy": "ћ",
		"Tstrok": "Ŧ",
		"tstrok": "ŧ",
		"twixt": "≬",
		"twoheadleftarrow": "↞",
		"twoheadrightarrow": "↠",
		"Uacute": "Ú",
		"uacute": "ú",
		"uarr": "↑",
		"Uarr": "↟",
		"uArr": "⇑",
		"Uarrocir": "⥉",
		"Ubrcy": "Ў",
		"ubrcy": "ў",
		"Ubreve": "Ŭ",
		"ubreve": "ŭ",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ucy": "У",
		"ucy": "у",
		"udarr": "⇅",
		"Udblac": "Ű",
		"udblac": "ű",
		"udhar": "⥮",
		"ufisht": "⥾",
		"Ufr": "𝔘",
		"ufr": "𝔲",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uHar": "⥣",
		"uharl": "↿",
		"uharr": "↾",
		"uhblk": "▀",
		"ulcorn": "⌜",
		"ulcorner": "⌜",
		"ulcrop": "⌏",
		"ultri": "◸",
		"Umacr": "Ū",
		"umacr": "ū",
		"uml": "¨",
		"UnderBar": "_",
		"UnderBrace": "⏟",
		"UnderBracket": "⎵",
		"UnderParenthesis": "⏝",
		"Union": "⋃",
		"UnionPlus": "⊎",
		"Uogon": "Ų",
		"uogon": "ų",
		"Uopf": "𝕌",
		"uopf": "𝕦",
		"UpArrowBar": "⤒",
		"uparrow": "↑",
		"UpArrow": "↑",
		"Uparrow": "⇑",
		"UpArrowDownArrow": "⇅",
		"updownarrow": "↕",
		"UpDownArrow": "↕",
		"Updownarrow": "⇕",
		"UpEquilibrium": "⥮",
		"upharpoonleft": "↿",
		"upharpoonright": "↾",
		"uplus": "⊎",
		"UpperLeftArrow": "↖",
		"UpperRightArrow": "↗",
		"upsi": "υ",
		"Upsi": "ϒ",
		"upsih": "ϒ",
		"Upsilon": "Υ",
		"upsilon": "υ",
		"UpTeeArrow": "↥",
		"UpTee": "⊥",
		"upuparrows": "⇈",
		"urcorn": "⌝",
		"urcorner": "⌝",
		"urcrop": "⌎",
		"Uring": "Ů",
		"uring": "ů",
		"urtri": "◹",
		"Uscr": "𝒰",
		"uscr": "𝓊",
		"utdot": "⋰",
		"Utilde": "Ũ",
		"utilde": "ũ",
		"utri": "▵",
		"utrif": "▴",
		"uuarr": "⇈",
		"Uuml": "Ü",
		"uuml": "ü",
		"uwangle": "⦧",
		"vangrt": "⦜",
		"varepsilon": "ϵ",
		"varkappa": "ϰ",
		"varnothing": "∅",
		"varphi": "ϕ",
		"varpi": "ϖ",
		"varpropto": "∝",
		"varr": "↕",
		"vArr": "⇕",
		"varrho": "ϱ",
		"varsigma": "ς",
		"varsubsetneq": "⊊︀",
		"varsubsetneqq": "⫋︀",
		"varsupsetneq": "⊋︀",
		"varsupsetneqq": "⫌︀",
		"vartheta": "ϑ",
		"vartriangleleft": "⊲",
		"vartriangleright": "⊳",
		"vBar": "⫨",
		"Vbar": "⫫",
		"vBarv": "⫩",
		"Vcy": "В",
		"vcy": "в",
		"vdash": "⊢",
		"vDash": "⊨",
		"Vdash": "⊩",
		"VDash": "⊫",
		"Vdashl": "⫦",
		"veebar": "⊻",
		"vee": "∨",
		"Vee": "⋁",
		"veeeq": "≚",
		"vellip": "⋮",
		"verbar": "|",
		"Verbar": "‖",
		"vert": "|",
		"Vert": "‖",
		"VerticalBar": "∣",
		"VerticalLine": "|",
		"VerticalSeparator": "❘",
		"VerticalTilde": "≀",
		"VeryThinSpace": " ",
		"Vfr": "𝔙",
		"vfr": "𝔳",
		"vltri": "⊲",
		"vnsub": "⊂⃒",
		"vnsup": "⊃⃒",
		"Vopf": "𝕍",
		"vopf": "𝕧",
		"vprop": "∝",
		"vrtri": "⊳",
		"Vscr": "𝒱",
		"vscr": "𝓋",
		"vsubnE": "⫋︀",
		"vsubne": "⊊︀",
		"vsupnE": "⫌︀",
		"vsupne": "⊋︀",
		"Vvdash": "⊪",
		"vzigzag": "⦚",
		"Wcirc": "Ŵ",
		"wcirc": "ŵ",
		"wedbar": "⩟",
		"wedge": "∧",
		"Wedge": "⋀",
		"wedgeq": "≙",
		"weierp": "℘",
		"Wfr": "𝔚",
		"wfr": "𝔴",
		"Wopf": "𝕎",
		"wopf": "𝕨",
		"wp": "℘",
		"wr": "≀",
		"wreath": "≀",
		"Wscr": "𝒲",
		"wscr": "𝓌",
		"xcap": "⋂",
		"xcirc": "◯",
		"xcup": "⋃",
		"xdtri": "▽",
		"Xfr": "𝔛",
		"xfr": "𝔵",
		"xharr": "⟷",
		"xhArr": "⟺",
		"Xi": "Ξ",
		"xi": "ξ",
		"xlarr": "⟵",
		"xlArr": "⟸",
		"xmap": "⟼",
		"xnis": "⋻",
		"xodot": "⨀",
		"Xopf": "𝕏",
		"xopf": "𝕩",
		"xoplus": "⨁",
		"xotime": "⨂",
		"xrarr": "⟶",
		"xrArr": "⟹",
		"Xscr": "𝒳",
		"xscr": "𝓍",
		"xsqcup": "⨆",
		"xuplus": "⨄",
		"xutri": "△",
		"xvee": "⋁",
		"xwedge": "⋀",
		"Yacute": "Ý",
		"yacute": "ý",
		"YAcy": "Я",
		"yacy": "я",
		"Ycirc": "Ŷ",
		"ycirc": "ŷ",
		"Ycy": "Ы",
		"ycy": "ы",
		"yen": "¥",
		"Yfr": "𝔜",
		"yfr": "𝔶",
		"YIcy": "Ї",
		"yicy": "ї",
		"Yopf": "𝕐",
		"yopf": "𝕪",
		"Yscr": "𝒴",
		"yscr": "𝓎",
		"YUcy": "Ю",
		"yucy": "ю",
		"yuml": "ÿ",
		"Yuml": "Ÿ",
		"Zacute": "Ź",
		"zacute": "ź",
		"Zcaron": "Ž",
		"zcaron": "ž",
		"Zcy": "З",
		"zcy": "з",
		"Zdot": "Ż",
		"zdot": "ż",
		"zeetrf": "ℨ",
		"ZeroWidthSpace": "​",
		"Zeta": "Ζ",
		"zeta": "ζ",
		"zfr": "𝔷",
		"Zfr": "ℨ",
		"ZHcy": "Ж",
		"zhcy": "ж",
		"zigrarr": "⇝",
		"zopf": "𝕫",
		"Zopf": "ℤ",
		"Zscr": "𝒵",
		"zscr": "𝓏",
		"zwj": "‍",
		"zwnj": "‌"
	};

/***/ },
/* 24 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"AElig": "Æ",
		"aelig": "æ",
		"Agrave": "À",
		"agrave": "à",
		"amp": "&",
		"AMP": "&",
		"Aring": "Å",
		"aring": "å",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"brvbar": "¦",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"cedil": "¸",
		"cent": "¢",
		"copy": "©",
		"COPY": "©",
		"curren": "¤",
		"deg": "°",
		"divide": "÷",
		"Eacute": "É",
		"eacute": "é",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"Egrave": "È",
		"egrave": "è",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"frac12": "½",
		"frac14": "¼",
		"frac34": "¾",
		"gt": ">",
		"GT": ">",
		"Iacute": "Í",
		"iacute": "í",
		"Icirc": "Î",
		"icirc": "î",
		"iexcl": "¡",
		"Igrave": "Ì",
		"igrave": "ì",
		"iquest": "¿",
		"Iuml": "Ï",
		"iuml": "ï",
		"laquo": "«",
		"lt": "<",
		"LT": "<",
		"macr": "¯",
		"micro": "µ",
		"middot": "·",
		"nbsp": " ",
		"not": "¬",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"Oacute": "Ó",
		"oacute": "ó",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"Ograve": "Ò",
		"ograve": "ò",
		"ordf": "ª",
		"ordm": "º",
		"Oslash": "Ø",
		"oslash": "ø",
		"Otilde": "Õ",
		"otilde": "õ",
		"Ouml": "Ö",
		"ouml": "ö",
		"para": "¶",
		"plusmn": "±",
		"pound": "£",
		"quot": "\"",
		"QUOT": "\"",
		"raquo": "»",
		"reg": "®",
		"REG": "®",
		"sect": "§",
		"shy": "­",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"szlig": "ß",
		"THORN": "Þ",
		"thorn": "þ",
		"times": "×",
		"Uacute": "Ú",
		"uacute": "ú",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uml": "¨",
		"Uuml": "Ü",
		"uuml": "ü",
		"Yacute": "Ý",
		"yacute": "ý",
		"yen": "¥",
		"yuml": "ÿ"
	};

/***/ },
/* 25 */
/***/ function(module, exports) {

	module.exports = {
		"amp": "&",
		"apos": "'",
		"gt": ">",
		"lt": "<",
		"quot": "\""
	};

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }

	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};


	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }

	  if (process.noDeprecation === true) {
	    return fn;
	  }

	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }

	  return deprecated;
	};


	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};


	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;


	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};

	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};


	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];

	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}


	function stylizeNoColor(str, styleType) {
	  return str;
	}


	function arrayToHash(array) {
	  var hash = {};

	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });

	  return hash;
	}


	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }

	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }

	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);

	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }

	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }

	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '', array = false, braces = ['{', '}'];

	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }

	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }

	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }

	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }

	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);

	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();

	  return reduceToSingleString(output, base, braces);
	}


	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}


	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}


	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}


	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}


	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}


	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	exports.isBuffer = __webpack_require__(27);

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}


	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}


	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];

	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}


	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};


	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(28);

	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;

	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};

	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(5)))

/***/ },
/* 27 */
/***/ function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ },
/* 28 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 29 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;

	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;

	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;

	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;

	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};

	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;

	  if (!this._events)
	    this._events = {};

	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      } else {
	        // At least give some kind of context to the user
	        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
	        err.context = er;
	        throw err;
	      }
	    }
	  }

	  handler = this._events[type];

	  if (isUndefined(handler))
	    return false;

	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }

	  return true;
	};

	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;

	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  if (!this._events)
	    this._events = {};

	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);

	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];

	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }

	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }

	  return this;
	};

	EventEmitter.prototype.on = EventEmitter.prototype.addListener;

	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  var fired = false;

	  function g() {
	    this.removeListener(type, g);

	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }

	  g.listener = listener;
	  this.on(type, g);

	  return this;
	};

	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;

	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  if (!this._events || !this._events[type])
	    return this;

	  list = this._events[type];
	  length = list.length;
	  position = -1;

	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);

	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }

	    if (position < 0)
	      return this;

	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }

	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }

	  return this;
	};

	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;

	  if (!this._events)
	    return this;

	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }

	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }

	  listeners = this._events[type];

	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];

	  return this;
	};

	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};

	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];

	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};

	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};

	function isFunction(arg) {
	  return typeof arg === 'function';
	}

	function isNumber(arg) {
	  return typeof arg === 'number';
	}

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}

	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(31);

	var re_whitespace = /\s+/g;
	var NodePrototype = __webpack_require__(32);
	var ElementPrototype = __webpack_require__(33);

	function DomHandler(callback, options, elementCB){
		if(typeof callback === "object"){
			elementCB = options;
			options = callback;
			callback = null;
		} else if(typeof options === "function"){
			elementCB = options;
			options = defaultOpts;
		}
		this._callback = callback;
		this._options = options || defaultOpts;
		this._elementCB = elementCB;
		this.dom = [];
		this._done = false;
		this._tagStack = [];
		this._parser = this._parser || null;
	}

	//default options
	var defaultOpts = {
		normalizeWhitespace: false, //Replace all whitespace with single spaces
		withStartIndices: false, //Add startIndex properties to nodes
	};

	DomHandler.prototype.onparserinit = function(parser){
		this._parser = parser;
	};

	//Resets the handler back to starting state
	DomHandler.prototype.onreset = function(){
		DomHandler.call(this, this._callback, this._options, this._elementCB);
	};

	//Signals the handler that parsing is done
	DomHandler.prototype.onend = function(){
		if(this._done) return;
		this._done = true;
		this._parser = null;
		this._handleCallback(null);
	};

	DomHandler.prototype._handleCallback =
	DomHandler.prototype.onerror = function(error){
		if(typeof this._callback === "function"){
			this._callback(error, this.dom);
		} else {
			if(error) throw error;
		}
	};

	DomHandler.prototype.onclosetag = function(){
		//if(this._tagStack.pop().name !== name) this._handleCallback(Error("Tagname didn't match!"));
		var elem = this._tagStack.pop();
		if(this._elementCB) this._elementCB(elem);
	};

	DomHandler.prototype._addDomElement = function(element){
		var parent = this._tagStack[this._tagStack.length - 1];
		var siblings = parent ? parent.children : this.dom;
		var previousSibling = siblings[siblings.length - 1];

		element.next = null;

		if(this._options.withStartIndices){
			element.startIndex = this._parser.startIndex;
		}

		if (this._options.withDomLvl1) {
			element.__proto__ = element.type === "tag" ? ElementPrototype : NodePrototype;
		}

		if(previousSibling){
			element.prev = previousSibling;
			previousSibling.next = element;
		} else {
			element.prev = null;
		}

		siblings.push(element);
		element.parent = parent || null;
	};

	DomHandler.prototype.onopentag = function(name, attribs){
		var element = {
			type: name === "script" ? ElementType.Script : name === "style" ? ElementType.Style : ElementType.Tag,
			name: name,
			attribs: attribs,
			children: []
		};

		this._addDomElement(element);

		this._tagStack.push(element);
	};

	DomHandler.prototype.ontext = function(data){
		//the ignoreWhitespace is officially dropped, but for now,
		//it's an alias for normalizeWhitespace
		var normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;

		var lastTag;

		if(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length-1]).type === ElementType.Text){
			if(normalize){
				lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
			} else {
				lastTag.data += data;
			}
		} else {
			if(
				this._tagStack.length &&
				(lastTag = this._tagStack[this._tagStack.length - 1]) &&
				(lastTag = lastTag.children[lastTag.children.length - 1]) &&
				lastTag.type === ElementType.Text
			){
				if(normalize){
					lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
				} else {
					lastTag.data += data;
				}
			} else {
				if(normalize){
					data = data.replace(re_whitespace, " ");
				}

				this._addDomElement({
					data: data,
					type: ElementType.Text
				});
			}
		}
	};

	DomHandler.prototype.oncomment = function(data){
		var lastTag = this._tagStack[this._tagStack.length - 1];

		if(lastTag && lastTag.type === ElementType.Comment){
			lastTag.data += data;
			return;
		}

		var element = {
			data: data,
			type: ElementType.Comment
		};

		this._addDomElement(element);
		this._tagStack.push(element);
	};

	DomHandler.prototype.oncdatastart = function(){
		var element = {
			children: [{
				data: "",
				type: ElementType.Text
			}],
			type: ElementType.CDATA
		};

		this._addDomElement(element);
		this._tagStack.push(element);
	};

	DomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){
		this._tagStack.pop();
	};

	DomHandler.prototype.onprocessinginstruction = function(name, data){
		this._addDomElement({
			name: name,
			data: data,
			type: ElementType.Directive
		});
	};

	module.exports = DomHandler;


/***/ },
/* 31 */
/***/ function(module, exports) {

	//Types of elements found in the DOM
	module.exports = {
		Text: "text", //Text
		Directive: "directive", //<? ... ?>
		Comment: "comment", //<!-- ... -->
		Script: "script", //<script> tags
		Style: "style", //<style> tags
		Tag: "tag", //Any tag
		CDATA: "cdata", //<![CDATA[ ... ]]>
		Doctype: "doctype",

		isTag: function(elem){
			return elem.type === "tag" || elem.type === "script" || elem.type === "style";
		}
	};


/***/ },
/* 32 */
/***/ function(module, exports) {

	// This object will be used as the prototype for Nodes when creating a
	// DOM-Level-1-compliant structure.
	var NodePrototype = module.exports = {
		get firstChild() {
			var children = this.children;
			return children && children[0] || null;
		},
		get lastChild() {
			var children = this.children;
			return children && children[children.length - 1] || null;
		},
		get nodeType() {
			return nodeTypes[this.type] || nodeTypes.element;
		}
	};

	var domLvl1 = {
		tagName: "name",
		childNodes: "children",
		parentNode: "parent",
		previousSibling: "prev",
		nextSibling: "next",
		nodeValue: "data"
	};

	var nodeTypes = {
		element: 1,
		text: 3,
		cdata: 4,
		comment: 8
	};

	Object.keys(domLvl1).forEach(function(key) {
		var shorthand = domLvl1[key];
		Object.defineProperty(NodePrototype, key, {
			get: function() {
				return this[shorthand] || null;
			},
			set: function(val) {
				this[shorthand] = val;
				return val;
			}
		});
	});


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	// DOM-Level-1-compliant structure
	var NodePrototype = __webpack_require__(32);
	var ElementPrototype = module.exports = Object.create(NodePrototype);

	var domLvl1 = {
		tagName: "name"
	};

	Object.keys(domLvl1).forEach(function(key) {
		var shorthand = domLvl1[key];
		Object.defineProperty(ElementPrototype, key, {
			get: function() {
				return this[shorthand] || null;
			},
			set: function(val) {
				this[shorthand] = val;
				return val;
			}
		});
	});


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var index = __webpack_require__(18),
	    DomHandler = index.DomHandler,
		DomUtils = index.DomUtils;

	//TODO: make this a streamable handler
	function FeedHandler(callback, options){
		this.init(callback, options);
	}

	__webpack_require__(26).inherits(FeedHandler, DomHandler);

	FeedHandler.prototype.init = DomHandler;

	function getElements(what, where){
		return DomUtils.getElementsByTagName(what, where, true);
	}
	function getOneElement(what, where){
		return DomUtils.getElementsByTagName(what, where, true, 1)[0];
	}
	function fetch(what, where, recurse){
		return DomUtils.getText(
			DomUtils.getElementsByTagName(what, where, recurse, 1)
		).trim();
	}

	function addConditionally(obj, prop, what, where, recurse){
		var tmp = fetch(what, where, recurse);
		if(tmp) obj[prop] = tmp;
	}

	var isValidFeed = function(value){
		return value === "rss" || value === "feed" || value === "rdf:RDF";
	};

	FeedHandler.prototype.onend = function(){
		var feed = {},
			feedRoot = getOneElement(isValidFeed, this.dom),
			tmp, childs;

		if(feedRoot){
			if(feedRoot.name === "feed"){
				childs = feedRoot.children;

				feed.type = "atom";
				addConditionally(feed, "id", "id", childs);
				addConditionally(feed, "title", "title", childs);
				if((tmp = getOneElement("link", childs)) && (tmp = tmp.attribs) && (tmp = tmp.href)) feed.link = tmp;
				addConditionally(feed, "description", "subtitle", childs);
				if((tmp = fetch("updated", childs))) feed.updated = new Date(tmp);
				addConditionally(feed, "author", "email", childs, true);

				feed.items = getElements("entry", childs).map(function(item){
					var entry = {}, tmp;

					item = item.children;

					addConditionally(entry, "id", "id", item);
					addConditionally(entry, "title", "title", item);
					if((tmp = getOneElement("link", item)) && (tmp = tmp.attribs) && (tmp = tmp.href)) entry.link = tmp;
					if((tmp = fetch("summary", item) || fetch("content", item))) entry.description = tmp;
					if((tmp = fetch("updated", item))) entry.pubDate = new Date(tmp);
					return entry;
				});
			} else {
				childs = getOneElement("channel", feedRoot.children).children;

				feed.type = feedRoot.name.substr(0, 3);
				feed.id = "";
				addConditionally(feed, "title", "title", childs);
				addConditionally(feed, "link", "link", childs);
				addConditionally(feed, "description", "description", childs);
				if((tmp = fetch("lastBuildDate", childs))) feed.updated = new Date(tmp);
				addConditionally(feed, "author", "managingEditor", childs, true);

				feed.items = getElements("item", feedRoot.children).map(function(item){
					var entry = {}, tmp;

					item = item.children;

					addConditionally(entry, "id", "guid", item);
					addConditionally(entry, "title", "title", item);
					addConditionally(entry, "link", "link", item);
					addConditionally(entry, "description", "description", item);
					if((tmp = fetch("pubDate", item))) entry.pubDate = new Date(tmp);
					return entry;
				});
			}
		}
		this.dom = feed;
		DomHandler.prototype._handleCallback.call(
			this, feedRoot ? null : Error("couldn't find root of feed")
		);
	};

	module.exports = FeedHandler;


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = Stream;

	var Parser = __webpack_require__(36);

	function Stream(options){
		Parser.call(this, new Cbs(this), options);
	}

	__webpack_require__(26).inherits(Stream, Parser);

	Stream.prototype.readable = true;

	function Cbs(scope){
		this.scope = scope;
	}

	var EVENTS = __webpack_require__(18).EVENTS;

	Object.keys(EVENTS).forEach(function(name){
		if(EVENTS[name] === 0){
			Cbs.prototype["on" + name] = function(){
				this.scope.emit(name);
			};
		} else if(EVENTS[name] === 1){
			Cbs.prototype["on" + name] = function(a){
				this.scope.emit(name, a);
			};
		} else if(EVENTS[name] === 2){
			Cbs.prototype["on" + name] = function(a, b){
				this.scope.emit(name, a, b);
			};
		} else {
			throw Error("wrong number of arguments!");
		}
	});

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = Stream;

	var Parser = __webpack_require__(19),
	    WritableStream = __webpack_require__(37).Writable || __webpack_require__(56).Writable;

	function Stream(cbs, options){
		var parser = this._parser = new Parser(cbs, options);

		WritableStream.call(this, {decodeStrings: false});

		this.once("finish", function(){
			parser.end();
		});
	}

	__webpack_require__(26).inherits(Stream, WritableStream);

	WritableStream.prototype._write = function(chunk, encoding, cb){
		this._parser.write(chunk);
		cb();
	};

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	module.exports = Stream;

	var EE = __webpack_require__(29).EventEmitter;
	var inherits = __webpack_require__(28);

	inherits(Stream, EE);
	Stream.Readable = __webpack_require__(38);
	Stream.Writable = __webpack_require__(52);
	Stream.Duplex = __webpack_require__(53);
	Stream.Transform = __webpack_require__(54);
	Stream.PassThrough = __webpack_require__(55);

	// Backwards-compat with node 0.4.x
	Stream.Stream = Stream;



	// old-style streams.  Note that the pipe method (the only relevant
	// part of this class) is overridden in the Readable class.

	function Stream() {
	  EE.call(this);
	}

	Stream.prototype.pipe = function(dest, options) {
	  var source = this;

	  function ondata(chunk) {
	    if (dest.writable) {
	      if (false === dest.write(chunk) && source.pause) {
	        source.pause();
	      }
	    }
	  }

	  source.on('data', ondata);

	  function ondrain() {
	    if (source.readable && source.resume) {
	      source.resume();
	    }
	  }

	  dest.on('drain', ondrain);

	  // If the 'end' option is not supplied, dest.end() will be called when
	  // source gets the 'end' or 'close' events.  Only dest.end() once.
	  if (!dest._isStdio && (!options || options.end !== false)) {
	    source.on('end', onend);
	    source.on('close', onclose);
	  }

	  var didOnEnd = false;
	  function onend() {
	    if (didOnEnd) return;
	    didOnEnd = true;

	    dest.end();
	  }


	  function onclose() {
	    if (didOnEnd) return;
	    didOnEnd = true;

	    if (typeof dest.destroy === 'function') dest.destroy();
	  }

	  // don't leave dangling pipes when there are errors.
	  function onerror(er) {
	    cleanup();
	    if (EE.listenerCount(this, 'error') === 0) {
	      throw er; // Unhandled stream error in pipe.
	    }
	  }

	  source.on('error', onerror);
	  dest.on('error', onerror);

	  // remove all the event listeners that were added.
	  function cleanup() {
	    source.removeListener('data', ondata);
	    dest.removeListener('drain', ondrain);

	    source.removeListener('end', onend);
	    source.removeListener('close', onclose);

	    source.removeListener('error', onerror);
	    dest.removeListener('error', onerror);

	    source.removeListener('end', cleanup);
	    source.removeListener('close', cleanup);

	    dest.removeListener('close', cleanup);
	  }

	  source.on('end', cleanup);
	  source.on('close', cleanup);

	  dest.on('close', cleanup);

	  dest.emit('pipe', source);

	  // Allow for unix-like usage: A.pipe(B).pipe(C)
	  return dest;
	};


/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {exports = module.exports = __webpack_require__(39);
	exports.Stream = __webpack_require__(37);
	exports.Readable = exports;
	exports.Writable = __webpack_require__(48);
	exports.Duplex = __webpack_require__(47);
	exports.Transform = __webpack_require__(50);
	exports.PassThrough = __webpack_require__(51);
	if (!process.browser && process.env.READABLE_STREAM === 'disable') {
	  module.exports = __webpack_require__(37);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	module.exports = Readable;

	/*<replacement>*/
	var isArray = __webpack_require__(40);
	/*</replacement>*/


	/*<replacement>*/
	var Buffer = __webpack_require__(41).Buffer;
	/*</replacement>*/

	Readable.ReadableState = ReadableState;

	var EE = __webpack_require__(29).EventEmitter;

	/*<replacement>*/
	if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
	  return emitter.listeners(type).length;
	};
	/*</replacement>*/

	var Stream = __webpack_require__(37);

	/*<replacement>*/
	var util = __webpack_require__(45);
	util.inherits = __webpack_require__(28);
	/*</replacement>*/

	var StringDecoder;


	/*<replacement>*/
	var debug = __webpack_require__(46);
	if (debug && debug.debuglog) {
	  debug = debug.debuglog('stream');
	} else {
	  debug = function () {};
	}
	/*</replacement>*/


	util.inherits(Readable, Stream);

	function ReadableState(options, stream) {
	  var Duplex = __webpack_require__(47);

	  options = options || {};

	  // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"
	  var hwm = options.highWaterMark;
	  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;

	  this.buffer = [];
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = null;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false;

	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;

	  // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.
	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;


	  // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away
	  this.objectMode = !!options.objectMode;

	  if (stream instanceof Duplex)
	    this.objectMode = this.objectMode || !!options.readableObjectMode;

	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';

	  // when piping, we only care about 'readable' events that happen
	  // after read()ing all the bytes and not getting any pushback.
	  this.ranOut = false;

	  // the number of writers that are awaiting a drain event in .pipe()s
	  this.awaitDrain = 0;

	  // if true, a maybeReadMore has been scheduled
	  this.readingMore = false;

	  this.decoder = null;
	  this.encoding = null;
	  if (options.encoding) {
	    if (!StringDecoder)
	      StringDecoder = __webpack_require__(49).StringDecoder;
	    this.decoder = new StringDecoder(options.encoding);
	    this.encoding = options.encoding;
	  }
	}

	function Readable(options) {
	  var Duplex = __webpack_require__(47);

	  if (!(this instanceof Readable))
	    return new Readable(options);

	  this._readableState = new ReadableState(options, this);

	  // legacy
	  this.readable = true;

	  Stream.call(this);
	}

	// Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.
	Readable.prototype.push = function(chunk, encoding) {
	  var state = this._readableState;

	  if (util.isString(chunk) && !state.objectMode) {
	    encoding = encoding || state.defaultEncoding;
	    if (encoding !== state.encoding) {
	      chunk = new Buffer(chunk, encoding);
	      encoding = '';
	    }
	  }

	  return readableAddChunk(this, state, chunk, encoding, false);
	};

	// Unshift should *always* be something directly out of read()
	Readable.prototype.unshift = function(chunk) {
	  var state = this._readableState;
	  return readableAddChunk(this, state, chunk, '', true);
	};

	function readableAddChunk(stream, state, chunk, encoding, addToFront) {
	  var er = chunkInvalid(state, chunk);
	  if (er) {
	    stream.emit('error', er);
	  } else if (util.isNullOrUndefined(chunk)) {
	    state.reading = false;
	    if (!state.ended)
	      onEofChunk(stream, state);
	  } else if (state.objectMode || chunk && chunk.length > 0) {
	    if (state.ended && !addToFront) {
	      var e = new Error('stream.push() after EOF');
	      stream.emit('error', e);
	    } else if (state.endEmitted && addToFront) {
	      var e = new Error('stream.unshift() after end event');
	      stream.emit('error', e);
	    } else {
	      if (state.decoder && !addToFront && !encoding)
	        chunk = state.decoder.write(chunk);

	      if (!addToFront)
	        state.reading = false;

	      // if we want the data now, just emit it.
	      if (state.flowing && state.length === 0 && !state.sync) {
	        stream.emit('data', chunk);
	        stream.read(0);
	      } else {
	        // update the buffer info.
	        state.length += state.objectMode ? 1 : chunk.length;
	        if (addToFront)
	          state.buffer.unshift(chunk);
	        else
	          state.buffer.push(chunk);

	        if (state.needReadable)
	          emitReadable(stream);
	      }

	      maybeReadMore(stream, state);
	    }
	  } else if (!addToFront) {
	    state.reading = false;
	  }

	  return needMoreData(state);
	}



	// if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.
	function needMoreData(state) {
	  return !state.ended &&
	         (state.needReadable ||
	          state.length < state.highWaterMark ||
	          state.length === 0);
	}

	// backwards compatibility.
	Readable.prototype.setEncoding = function(enc) {
	  if (!StringDecoder)
	    StringDecoder = __webpack_require__(49).StringDecoder;
	  this._readableState.decoder = new StringDecoder(enc);
	  this._readableState.encoding = enc;
	  return this;
	};

	// Don't raise the hwm > 128MB
	var MAX_HWM = 0x800000;
	function roundUpToNextPowerOf2(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2
	    n--;
	    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
	    n++;
	  }
	  return n;
	}

	function howMuchToRead(n, state) {
	  if (state.length === 0 && state.ended)
	    return 0;

	  if (state.objectMode)
	    return n === 0 ? 0 : 1;

	  if (isNaN(n) || util.isNull(n)) {
	    // only flow one buffer at a time
	    if (state.flowing && state.buffer.length)
	      return state.buffer[0].length;
	    else
	      return state.length;
	  }

	  if (n <= 0)
	    return 0;

	  // If we're asking for more than the target buffer level,
	  // then raise the water mark.  Bump up to the next highest
	  // power of 2, to prevent increasing it excessively in tiny
	  // amounts.
	  if (n > state.highWaterMark)
	    state.highWaterMark = roundUpToNextPowerOf2(n);

	  // don't have that much.  return null, unless we've ended.
	  if (n > state.length) {
	    if (!state.ended) {
	      state.needReadable = true;
	      return 0;
	    } else
	      return state.length;
	  }

	  return n;
	}

	// you can override either this method, or the async _read(n) below.
	Readable.prototype.read = function(n) {
	  debug('read', n);
	  var state = this._readableState;
	  var nOrig = n;

	  if (!util.isNumber(n) || n > 0)
	    state.emittedReadable = false;

	  // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.
	  if (n === 0 &&
	      state.needReadable &&
	      (state.length >= state.highWaterMark || state.ended)) {
	    debug('read: emitReadable', state.length, state.ended);
	    if (state.length === 0 && state.ended)
	      endReadable(this);
	    else
	      emitReadable(this);
	    return null;
	  }

	  n = howMuchToRead(n, state);

	  // if we've ended, and we're now clear, then finish it up.
	  if (n === 0 && state.ended) {
	    if (state.length === 0)
	      endReadable(this);
	    return null;
	  }

	  // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.

	  // if we need a readable event, then we need to do some reading.
	  var doRead = state.needReadable;
	  debug('need readable', doRead);

	  // if we currently have less than the highWaterMark, then also read some
	  if (state.length === 0 || state.length - n < state.highWaterMark) {
	    doRead = true;
	    debug('length less than watermark', doRead);
	  }

	  // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.
	  if (state.ended || state.reading) {
	    doRead = false;
	    debug('reading or ended', doRead);
	  }

	  if (doRead) {
	    debug('do read');
	    state.reading = true;
	    state.sync = true;
	    // if the length is currently zero, then we *need* a readable event.
	    if (state.length === 0)
	      state.needReadable = true;
	    // call internal read method
	    this._read(state.highWaterMark);
	    state.sync = false;
	  }

	  // If _read pushed data synchronously, then `reading` will be false,
	  // and we need to re-evaluate how much data we can return to the user.
	  if (doRead && !state.reading)
	    n = howMuchToRead(nOrig, state);

	  var ret;
	  if (n > 0)
	    ret = fromList(n, state);
	  else
	    ret = null;

	  if (util.isNull(ret)) {
	    state.needReadable = true;
	    n = 0;
	  }

	  state.length -= n;

	  // If we have nothing in the buffer, then we want to know
	  // as soon as we *do* get something into the buffer.
	  if (state.length === 0 && !state.ended)
	    state.needReadable = true;

	  // If we tried to read() past the EOF, then emit end on the next tick.
	  if (nOrig !== n && state.ended && state.length === 0)
	    endReadable(this);

	  if (!util.isNull(ret))
	    this.emit('data', ret);

	  return ret;
	};

	function chunkInvalid(state, chunk) {
	  var er = null;
	  if (!util.isBuffer(chunk) &&
	      !util.isString(chunk) &&
	      !util.isNullOrUndefined(chunk) &&
	      !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  return er;
	}


	function onEofChunk(stream, state) {
	  if (state.decoder && !state.ended) {
	    var chunk = state.decoder.end();
	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }
	  state.ended = true;

	  // emit 'readable' now to make sure it gets picked up.
	  emitReadable(stream);
	}

	// Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.
	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;
	  if (!state.emittedReadable) {
	    debug('emitReadable', state.flowing);
	    state.emittedReadable = true;
	    if (state.sync)
	      process.nextTick(function() {
	        emitReadable_(stream);
	      });
	    else
	      emitReadable_(stream);
	  }
	}

	function emitReadable_(stream) {
	  debug('emit readable');
	  stream.emit('readable');
	  flow(stream);
	}


	// at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.
	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    process.nextTick(function() {
	      maybeReadMore_(stream, state);
	    });
	  }
	}

	function maybeReadMore_(stream, state) {
	  var len = state.length;
	  while (!state.reading && !state.flowing && !state.ended &&
	         state.length < state.highWaterMark) {
	    debug('maybeReadMore read 0');
	    stream.read(0);
	    if (len === state.length)
	      // didn't get any data, stop spinning.
	      break;
	    else
	      len = state.length;
	  }
	  state.readingMore = false;
	}

	// abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.
	Readable.prototype._read = function(n) {
	  this.emit('error', new Error('not implemented'));
	};

	Readable.prototype.pipe = function(dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;

	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;
	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;
	    default:
	      state.pipes.push(dest);
	      break;
	  }
	  state.pipesCount += 1;
	  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

	  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
	              dest !== process.stdout &&
	              dest !== process.stderr;

	  var endFn = doEnd ? onend : cleanup;
	  if (state.endEmitted)
	    process.nextTick(endFn);
	  else
	    src.once('end', endFn);

	  dest.on('unpipe', onunpipe);
	  function onunpipe(readable) {
	    debug('onunpipe');
	    if (readable === src) {
	      cleanup();
	    }
	  }

	  function onend() {
	    debug('onend');
	    dest.end();
	  }

	  // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.
	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);

	  function cleanup() {
	    debug('cleanup');
	    // cleanup event handlers once the pipe is broken
	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', cleanup);
	    src.removeListener('data', ondata);

	    // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.
	    if (state.awaitDrain &&
	        (!dest._writableState || dest._writableState.needDrain))
	      ondrain();
	  }

	  src.on('data', ondata);
	  function ondata(chunk) {
	    debug('ondata');
	    var ret = dest.write(chunk);
	    if (false === ret) {
	      debug('false write response, pause',
	            src._readableState.awaitDrain);
	      src._readableState.awaitDrain++;
	      src.pause();
	    }
	  }

	  // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.
	  function onerror(er) {
	    debug('onerror', er);
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (EE.listenerCount(dest, 'error') === 0)
	      dest.emit('error', er);
	  }
	  // This is a brutally ugly hack to make sure that our error handler
	  // is attached before any userland ones.  NEVER DO THIS.
	  if (!dest._events || !dest._events.error)
	    dest.on('error', onerror);
	  else if (isArray(dest._events.error))
	    dest._events.error.unshift(onerror);
	  else
	    dest._events.error = [onerror, dest._events.error];



	  // Both close and finish should trigger unpipe, but only once.
	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }
	  dest.once('close', onclose);
	  function onfinish() {
	    debug('onfinish');
	    dest.removeListener('close', onclose);
	    unpipe();
	  }
	  dest.once('finish', onfinish);

	  function unpipe() {
	    debug('unpipe');
	    src.unpipe(dest);
	  }

	  // tell the dest that it's being piped to
	  dest.emit('pipe', src);

	  // start the flow if it hasn't been started already.
	  if (!state.flowing) {
	    debug('pipe resume');
	    src.resume();
	  }

	  return dest;
	};

	function pipeOnDrain(src) {
	  return function() {
	    var state = src._readableState;
	    debug('pipeOnDrain', state.awaitDrain);
	    if (state.awaitDrain)
	      state.awaitDrain--;
	    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {
	      state.flowing = true;
	      flow(src);
	    }
	  };
	}


	Readable.prototype.unpipe = function(dest) {
	  var state = this._readableState;

	  // if we're not piping anywhere, then do nothing.
	  if (state.pipesCount === 0)
	    return this;

	  // just one destination.  most common case.
	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes)
	      return this;

	    if (!dest)
	      dest = state.pipes;

	    // got a match.
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	    if (dest)
	      dest.emit('unpipe', this);
	    return this;
	  }

	  // slow case. multiple pipe destinations.

	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;

	    for (var i = 0; i < len; i++)
	      dests[i].emit('unpipe', this);
	    return this;
	  }

	  // try to find the right one.
	  var i = indexOf(state.pipes, dest);
	  if (i === -1)
	    return this;

	  state.pipes.splice(i, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1)
	    state.pipes = state.pipes[0];

	  dest.emit('unpipe', this);

	  return this;
	};

	// set up data events if they are asked for
	// Ensure readable listeners eventually get something
	Readable.prototype.on = function(ev, fn) {
	  var res = Stream.prototype.on.call(this, ev, fn);

	  // If listening to data, and it has not explicitly been paused,
	  // then call resume to start the flow of data on the next tick.
	  if (ev === 'data' && false !== this._readableState.flowing) {
	    this.resume();
	  }

	  if (ev === 'readable' && this.readable) {
	    var state = this._readableState;
	    if (!state.readableListening) {
	      state.readableListening = true;
	      state.emittedReadable = false;
	      state.needReadable = true;
	      if (!state.reading) {
	        var self = this;
	        process.nextTick(function() {
	          debug('readable nexttick read 0');
	          self.read(0);
	        });
	      } else if (state.length) {
	        emitReadable(this, state);
	      }
	    }
	  }

	  return res;
	};
	Readable.prototype.addListener = Readable.prototype.on;

	// pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.
	Readable.prototype.resume = function() {
	  var state = this._readableState;
	  if (!state.flowing) {
	    debug('resume');
	    state.flowing = true;
	    if (!state.reading) {
	      debug('resume read 0');
	      this.read(0);
	    }
	    resume(this, state);
	  }
	  return this;
	};

	function resume(stream, state) {
	  if (!state.resumeScheduled) {
	    state.resumeScheduled = true;
	    process.nextTick(function() {
	      resume_(stream, state);
	    });
	  }
	}

	function resume_(stream, state) {
	  state.resumeScheduled = false;
	  stream.emit('resume');
	  flow(stream);
	  if (state.flowing && !state.reading)
	    stream.read(0);
	}

	Readable.prototype.pause = function() {
	  debug('call pause flowing=%j', this._readableState.flowing);
	  if (false !== this._readableState.flowing) {
	    debug('pause');
	    this._readableState.flowing = false;
	    this.emit('pause');
	  }
	  return this;
	};

	function flow(stream) {
	  var state = stream._readableState;
	  debug('flow', state.flowing);
	  if (state.flowing) {
	    do {
	      var chunk = stream.read();
	    } while (null !== chunk && state.flowing);
	  }
	}

	// wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.
	Readable.prototype.wrap = function(stream) {
	  var state = this._readableState;
	  var paused = false;

	  var self = this;
	  stream.on('end', function() {
	    debug('wrapped end');
	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length)
	        self.push(chunk);
	    }

	    self.push(null);
	  });

	  stream.on('data', function(chunk) {
	    debug('wrapped data');
	    if (state.decoder)
	      chunk = state.decoder.write(chunk);
	    if (!chunk || !state.objectMode && !chunk.length)
	      return;

	    var ret = self.push(chunk);
	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  });

	  // proxy all the other methods.
	  // important when wrapping filters and duplexes.
	  for (var i in stream) {
	    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {
	      this[i] = function(method) { return function() {
	        return stream[method].apply(stream, arguments);
	      }}(i);
	    }
	  }

	  // proxy certain important events.
	  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
	  forEach(events, function(ev) {
	    stream.on(ev, self.emit.bind(self, ev));
	  });

	  // when we try to consume some more bytes, simply unpause the
	  // underlying stream.
	  self._read = function(n) {
	    debug('wrapped _read', n);
	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };

	  return self;
	};



	// exposed for testing purposes only.
	Readable._fromList = fromList;

	// Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	function fromList(n, state) {
	  var list = state.buffer;
	  var length = state.length;
	  var stringMode = !!state.decoder;
	  var objectMode = !!state.objectMode;
	  var ret;

	  // nothing in the list, definitely empty.
	  if (list.length === 0)
	    return null;

	  if (length === 0)
	    ret = null;
	  else if (objectMode)
	    ret = list.shift();
	  else if (!n || n >= length) {
	    // read it all, truncate the array.
	    if (stringMode)
	      ret = list.join('');
	    else
	      ret = Buffer.concat(list, length);
	    list.length = 0;
	  } else {
	    // read just some of it.
	    if (n < list[0].length) {
	      // just take a part of the first list item.
	      // slice is the same for buffers and strings.
	      var buf = list[0];
	      ret = buf.slice(0, n);
	      list[0] = buf.slice(n);
	    } else if (n === list[0].length) {
	      // first list is a perfect match
	      ret = list.shift();
	    } else {
	      // complex case.
	      // we have enough to cover it, but it spans past the first buffer.
	      if (stringMode)
	        ret = '';
	      else
	        ret = new Buffer(n);

	      var c = 0;
	      for (var i = 0, l = list.length; i < l && c < n; i++) {
	        var buf = list[0];
	        var cpy = Math.min(n - c, buf.length);

	        if (stringMode)
	          ret += buf.slice(0, cpy);
	        else
	          buf.copy(ret, c, 0, cpy);

	        if (cpy < buf.length)
	          list[0] = buf.slice(cpy);
	        else
	          list.shift();

	        c += cpy;
	      }
	    }
	  }

	  return ret;
	}

	function endReadable(stream) {
	  var state = stream._readableState;

	  // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.
	  if (state.length > 0)
	    throw new Error('endReadable called on non-empty stream');

	  if (!state.endEmitted) {
	    state.ended = true;
	    process.nextTick(function() {
	      // Check that we didn't get one last unshift.
	      if (!state.endEmitted && state.length === 0) {
	        state.endEmitted = true;
	        stream.readable = false;
	        stream.emit('end');
	      }
	    });
	  }
	}

	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}

	function indexOf (xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }
	  return -1;
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 40 */
/***/ function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict'

	var base64 = __webpack_require__(42)
	var ieee754 = __webpack_require__(43)
	var isArray = __webpack_require__(44)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	/*
	 * Export kMaxLength after typed array support is determined.
	 */
	exports.kMaxLength = kMaxLength()

	function typedArraySupport () {
	  try {
	    var arr = new Uint8Array(1)
	    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
	    return arr.foo() === 42 && // typed array instances can be augmented
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	function createBuffer (that, length) {
	  if (kMaxLength() < length) {
	    throw new RangeError('Invalid typed array length')
	  }
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = new Uint8Array(length)
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    if (that === null) {
	      that = new Buffer(length)
	    }
	    that.length = length
	  }

	  return that
	}

	/**
	 * The Buffer constructor returns instances of `Uint8Array` that have their
	 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
	 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
	 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
	 * returns a single octet.
	 *
	 * The `Uint8Array` prototype remains unmodified.
	 */

	function Buffer (arg, encodingOrOffset, length) {
	  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
	    return new Buffer(arg, encodingOrOffset, length)
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    if (typeof encodingOrOffset === 'string') {
	      throw new Error(
	        'If encoding is specified then the first argument must be a string'
	      )
	    }
	    return allocUnsafe(this, arg)
	  }
	  return from(this, arg, encodingOrOffset, length)
	}

	Buffer.poolSize = 8192 // not used by this implementation

	// TODO: Legacy, not needed anymore. Remove in next major version.
	Buffer._augment = function (arr) {
	  arr.__proto__ = Buffer.prototype
	  return arr
	}

	function from (that, value, encodingOrOffset, length) {
	  if (typeof value === 'number') {
	    throw new TypeError('"value" argument must not be a number')
	  }

	  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
	    return fromArrayBuffer(that, value, encodingOrOffset, length)
	  }

	  if (typeof value === 'string') {
	    return fromString(that, value, encodingOrOffset)
	  }

	  return fromObject(that, value)
	}

	/**
	 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
	 * if value is a number.
	 * Buffer.from(str[, encoding])
	 * Buffer.from(array)
	 * Buffer.from(buffer)
	 * Buffer.from(arrayBuffer[, byteOffset[, length]])
	 **/
	Buffer.from = function (value, encodingOrOffset, length) {
	  return from(null, value, encodingOrOffset, length)
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	  if (typeof Symbol !== 'undefined' && Symbol.species &&
	      Buffer[Symbol.species] === Buffer) {
	    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
	    Object.defineProperty(Buffer, Symbol.species, {
	      value: null,
	      configurable: true
	    })
	  }
	}

	function assertSize (size) {
	  if (typeof size !== 'number') {
	    throw new TypeError('"size" argument must be a number')
	  } else if (size < 0) {
	    throw new RangeError('"size" argument must not be negative')
	  }
	}

	function alloc (that, size, fill, encoding) {
	  assertSize(size)
	  if (size <= 0) {
	    return createBuffer(that, size)
	  }
	  if (fill !== undefined) {
	    // Only pay attention to encoding if it's a string. This
	    // prevents accidentally sending in a number that would
	    // be interpretted as a start offset.
	    return typeof encoding === 'string'
	      ? createBuffer(that, size).fill(fill, encoding)
	      : createBuffer(that, size).fill(fill)
	  }
	  return createBuffer(that, size)
	}

	/**
	 * Creates a new filled Buffer instance.
	 * alloc(size[, fill[, encoding]])
	 **/
	Buffer.alloc = function (size, fill, encoding) {
	  return alloc(null, size, fill, encoding)
	}

	function allocUnsafe (that, size) {
	  assertSize(size)
	  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < size; ++i) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	/**
	 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
	 * */
	Buffer.allocUnsafe = function (size) {
	  return allocUnsafe(null, size)
	}
	/**
	 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
	 */
	Buffer.allocUnsafeSlow = function (size) {
	  return allocUnsafe(null, size)
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') {
	    encoding = 'utf8'
	  }

	  if (!Buffer.isEncoding(encoding)) {
	    throw new TypeError('"encoding" must be a valid string encoding')
	  }

	  var length = byteLength(string, encoding) | 0
	  that = createBuffer(that, length)

	  var actual = that.write(string, encoding)

	  if (actual !== length) {
	    // Writing a hex string, for example, that contains invalid characters will
	    // cause everything after the first invalid character to be ignored. (e.g.
	    // 'abxxcd' will be treated as 'ab')
	    that = that.slice(0, actual)
	  }

	  return that
	}

	function fromArrayLike (that, array) {
	  var length = array.length < 0 ? 0 : checked(array.length) | 0
	  that = createBuffer(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array, byteOffset, length) {
	  array.byteLength // this throws if `array` is not a valid ArrayBuffer

	  if (byteOffset < 0 || array.byteLength < byteOffset) {
	    throw new RangeError('\'offset\' is out of bounds')
	  }

	  if (array.byteLength < byteOffset + (length || 0)) {
	    throw new RangeError('\'length\' is out of bounds')
	  }

	  if (byteOffset === undefined && length === undefined) {
	    array = new Uint8Array(array)
	  } else if (length === undefined) {
	    array = new Uint8Array(array, byteOffset)
	  } else {
	    array = new Uint8Array(array, byteOffset, length)
	  }

	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = array
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromArrayLike(that, array)
	  }
	  return that
	}

	function fromObject (that, obj) {
	  if (Buffer.isBuffer(obj)) {
	    var len = checked(obj.length) | 0
	    that = createBuffer(that, len)

	    if (that.length === 0) {
	      return that
	    }

	    obj.copy(that, 0, 0, len)
	    return that
	  }

	  if (obj) {
	    if ((typeof ArrayBuffer !== 'undefined' &&
	        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
	      if (typeof obj.length !== 'number' || isnan(obj.length)) {
	        return createBuffer(that, 0)
	      }
	      return fromArrayLike(that, obj)
	    }

	    if (obj.type === 'Buffer' && isArray(obj.data)) {
	      return fromArrayLike(that, obj.data)
	    }
	  }

	  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength()` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (length) {
	  if (+length != length) { // eslint-disable-line eqeqeq
	    length = 0
	  }
	  return Buffer.alloc(+length)
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
	    if (a[i] !== b[i]) {
	      x = a[i]
	      y = b[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'latin1':
	    case 'binary':
	    case 'base64':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) {
	    throw new TypeError('"list" argument must be an Array of Buffers')
	  }

	  if (list.length === 0) {
	    return Buffer.alloc(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; ++i) {
	      length += list[i].length
	    }
	  }

	  var buffer = Buffer.allocUnsafe(length)
	  var pos = 0
	  for (i = 0; i < list.length; ++i) {
	    var buf = list[i]
	    if (!Buffer.isBuffer(buf)) {
	      throw new TypeError('"list" argument must be an Array of Buffers')
	    }
	    buf.copy(buffer, pos)
	    pos += buf.length
	  }
	  return buffer
	}

	function byteLength (string, encoding) {
	  if (Buffer.isBuffer(string)) {
	    return string.length
	  }
	  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
	      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
	    return string.byteLength
	  }
	  if (typeof string !== 'string') {
	    string = '' + string
	  }

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'latin1':
	      case 'binary':
	        return len
	      case 'utf8':
	      case 'utf-8':
	      case undefined:
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
	  // property of a typed array.

	  // This behaves neither like String nor Uint8Array in that we set start/end
	  // to their upper/lower bounds if the value passed is out of range.
	  // undefined is handled specially as per ECMA-262 6th Edition,
	  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
	  if (start === undefined || start < 0) {
	    start = 0
	  }
	  // Return early if start > this.length. Done here to prevent potential uint32
	  // coercion fail below.
	  if (start > this.length) {
	    return ''
	  }

	  if (end === undefined || end > this.length) {
	    end = this.length
	  }

	  if (end <= 0) {
	    return ''
	  }

	  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
	  end >>>= 0
	  start >>>= 0

	  if (end <= start) {
	    return ''
	  }

	  if (!encoding) encoding = 'utf8'

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'latin1':
	      case 'binary':
	        return latin1Slice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
	// Buffer instances.
	Buffer.prototype._isBuffer = true

	function swap (b, n, m) {
	  var i = b[n]
	  b[n] = b[m]
	  b[m] = i
	}

	Buffer.prototype.swap16 = function swap16 () {
	  var len = this.length
	  if (len % 2 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 16-bits')
	  }
	  for (var i = 0; i < len; i += 2) {
	    swap(this, i, i + 1)
	  }
	  return this
	}

	Buffer.prototype.swap32 = function swap32 () {
	  var len = this.length
	  if (len % 4 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 32-bits')
	  }
	  for (var i = 0; i < len; i += 4) {
	    swap(this, i, i + 3)
	    swap(this, i + 1, i + 2)
	  }
	  return this
	}

	Buffer.prototype.swap64 = function swap64 () {
	  var len = this.length
	  if (len % 8 !== 0) {
	    throw new RangeError('Buffer size must be a multiple of 64-bits')
	  }
	  for (var i = 0; i < len; i += 8) {
	    swap(this, i, i + 7)
	    swap(this, i + 1, i + 6)
	    swap(this, i + 2, i + 5)
	    swap(this, i + 3, i + 4)
	  }
	  return this
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
	  if (!Buffer.isBuffer(target)) {
	    throw new TypeError('Argument must be a Buffer')
	  }

	  if (start === undefined) {
	    start = 0
	  }
	  if (end === undefined) {
	    end = target ? target.length : 0
	  }
	  if (thisStart === undefined) {
	    thisStart = 0
	  }
	  if (thisEnd === undefined) {
	    thisEnd = this.length
	  }

	  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
	    throw new RangeError('out of range index')
	  }

	  if (thisStart >= thisEnd && start >= end) {
	    return 0
	  }
	  if (thisStart >= thisEnd) {
	    return -1
	  }
	  if (start >= end) {
	    return 1
	  }

	  start >>>= 0
	  end >>>= 0
	  thisStart >>>= 0
	  thisEnd >>>= 0

	  if (this === target) return 0

	  var x = thisEnd - thisStart
	  var y = end - start
	  var len = Math.min(x, y)

	  var thisCopy = this.slice(thisStart, thisEnd)
	  var targetCopy = target.slice(start, end)

	  for (var i = 0; i < len; ++i) {
	    if (thisCopy[i] !== targetCopy[i]) {
	      x = thisCopy[i]
	      y = targetCopy[i]
	      break
	    }
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
	// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
	//
	// Arguments:
	// - buffer - a Buffer to search
	// - val - a string, Buffer, or number
	// - byteOffset - an index into `buffer`; will be clamped to an int32
	// - encoding - an optional encoding, relevant is val is a string
	// - dir - true for indexOf, false for lastIndexOf
	function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
	  // Empty buffer means no match
	  if (buffer.length === 0) return -1

	  // Normalize byteOffset
	  if (typeof byteOffset === 'string') {
	    encoding = byteOffset
	    byteOffset = 0
	  } else if (byteOffset > 0x7fffffff) {
	    byteOffset = 0x7fffffff
	  } else if (byteOffset < -0x80000000) {
	    byteOffset = -0x80000000
	  }
	  byteOffset = +byteOffset  // Coerce to Number.
	  if (isNaN(byteOffset)) {
	    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
	    byteOffset = dir ? 0 : (buffer.length - 1)
	  }

	  // Normalize byteOffset: negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
	  if (byteOffset >= buffer.length) {
	    if (dir) return -1
	    else byteOffset = buffer.length - 1
	  } else if (byteOffset < 0) {
	    if (dir) byteOffset = 0
	    else return -1
	  }

	  // Normalize val
	  if (typeof val === 'string') {
	    val = Buffer.from(val, encoding)
	  }

	  // Finally, search either indexOf (if dir is true) or lastIndexOf
	  if (Buffer.isBuffer(val)) {
	    // Special case: looking for empty string/buffer always fails
	    if (val.length === 0) {
	      return -1
	    }
	    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
	  } else if (typeof val === 'number') {
	    val = val & 0xFF // Search for a byte value [0-255]
	    if (Buffer.TYPED_ARRAY_SUPPORT &&
	        typeof Uint8Array.prototype.indexOf === 'function') {
	      if (dir) {
	        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
	      } else {
	        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
	      }
	    }
	    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
	  var indexSize = 1
	  var arrLength = arr.length
	  var valLength = val.length

	  if (encoding !== undefined) {
	    encoding = String(encoding).toLowerCase()
	    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
	        encoding === 'utf16le' || encoding === 'utf-16le') {
	      if (arr.length < 2 || val.length < 2) {
	        return -1
	      }
	      indexSize = 2
	      arrLength /= 2
	      valLength /= 2
	      byteOffset /= 2
	    }
	  }

	  function read (buf, i) {
	    if (indexSize === 1) {
	      return buf[i]
	    } else {
	      return buf.readUInt16BE(i * indexSize)
	    }
	  }

	  var i
	  if (dir) {
	    var foundIndex = -1
	    for (i = byteOffset; i < arrLength; i++) {
	      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
	      } else {
	        if (foundIndex !== -1) i -= i - foundIndex
	        foundIndex = -1
	      }
	    }
	  } else {
	    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
	    for (i = byteOffset; i >= 0; i--) {
	      var found = true
	      for (var j = 0; j < valLength; j++) {
	        if (read(arr, i + j) !== read(val, j)) {
	          found = false
	          break
	        }
	      }
	      if (found) return i
	    }
	  }

	  return -1
	}

	Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
	  return this.indexOf(val, byteOffset, encoding) !== -1
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
	}

	Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
	  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; ++i) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) return i
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function latin1Write (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    throw new Error(
	      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
	    )
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('Attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'latin1':
	      case 'binary':
	        return latin1Write(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function latin1Slice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; ++i) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; ++i) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = this.subarray(start, end)
	    newBuf.__proto__ = Buffer.prototype
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; ++i) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    var maxBytes = Math.pow(2, 8 * byteLength) - 1
	    checkInt(this, value, offset, byteLength, maxBytes, 0)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
	      sub = 1
	    }
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (offset + ext > buf.length) throw new RangeError('Index out of range')
	  if (offset < 0) throw new RangeError('Index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; --i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; ++i) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    Uint8Array.prototype.set.call(
	      target,
	      this.subarray(start, start + len),
	      targetStart
	    )
	  }

	  return len
	}

	// Usage:
	//    buffer.fill(number[, offset[, end]])
	//    buffer.fill(buffer[, offset[, end]])
	//    buffer.fill(string[, offset[, end]][, encoding])
	Buffer.prototype.fill = function fill (val, start, end, encoding) {
	  // Handle string cases:
	  if (typeof val === 'string') {
	    if (typeof start === 'string') {
	      encoding = start
	      start = 0
	      end = this.length
	    } else if (typeof end === 'string') {
	      encoding = end
	      end = this.length
	    }
	    if (val.length === 1) {
	      var code = val.charCodeAt(0)
	      if (code < 256) {
	        val = code
	      }
	    }
	    if (encoding !== undefined && typeof encoding !== 'string') {
	      throw new TypeError('encoding must be a string')
	    }
	    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
	      throw new TypeError('Unknown encoding: ' + encoding)
	    }
	  } else if (typeof val === 'number') {
	    val = val & 255
	  }

	  // Invalid ranges are not set to a default, so can range check early.
	  if (start < 0 || this.length < start || this.length < end) {
	    throw new RangeError('Out of range index')
	  }

	  if (end <= start) {
	    return this
	  }

	  start = start >>> 0
	  end = end === undefined ? this.length : end >>> 0

	  if (!val) val = 0

	  var i
	  if (typeof val === 'number') {
	    for (i = start; i < end; ++i) {
	      this[i] = val
	    }
	  } else {
	    var bytes = Buffer.isBuffer(val)
	      ? val
	      : utf8ToBytes(new Buffer(val, encoding).toString())
	    var len = bytes.length
	    for (i = 0; i < end - start; ++i) {
	      this[i + start] = bytes[i % len]
	    }
	  }

	  return this
	}

	// HELPER FUNCTIONS
	// ================

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; ++i) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; ++i) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; ++i) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	function isnan (val) {
	  return val !== val // eslint-disable-line no-self-compare
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41).Buffer, (function() { return this; }())))

/***/ },
/* 42 */
/***/ function(module, exports) {

	'use strict'

	exports.byteLength = byteLength
	exports.toByteArray = toByteArray
	exports.fromByteArray = fromByteArray

	var lookup = []
	var revLookup = []
	var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

	var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
	for (var i = 0, len = code.length; i < len; ++i) {
	  lookup[i] = code[i]
	  revLookup[code.charCodeAt(i)] = i
	}

	// Support decoding URL-safe base64 strings, as Node.js does.
	// See: https://en.wikipedia.org/wiki/Base64#URL_applications
	revLookup['-'.charCodeAt(0)] = 62
	revLookup['_'.charCodeAt(0)] = 63

	function getLens (b64) {
	  var len = b64.length

	  if (len % 4 > 0) {
	    throw new Error('Invalid string. Length must be a multiple of 4')
	  }

	  // Trim off extra bytes after placeholder bytes are found
	  // See: https://github.com/beatgammit/base64-js/issues/42
	  var validLen = b64.indexOf('=')
	  if (validLen === -1) validLen = len

	  var placeHoldersLen = validLen === len
	    ? 0
	    : 4 - (validLen % 4)

	  return [validLen, placeHoldersLen]
	}

	// base64 is 4/3 + up to two characters of the original data
	function byteLength (b64) {
	  var lens = getLens(b64)
	  var validLen = lens[0]
	  var placeHoldersLen = lens[1]
	  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
	}

	function _byteLength (b64, validLen, placeHoldersLen) {
	  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
	}

	function toByteArray (b64) {
	  var tmp
	  var lens = getLens(b64)
	  var validLen = lens[0]
	  var placeHoldersLen = lens[1]

	  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

	  var curByte = 0

	  // if there are placeholders, only get up to the last complete 4 chars
	  var len = placeHoldersLen > 0
	    ? validLen - 4
	    : validLen

	  for (var i = 0; i < len; i += 4) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 18) |
	      (revLookup[b64.charCodeAt(i + 1)] << 12) |
	      (revLookup[b64.charCodeAt(i + 2)] << 6) |
	      revLookup[b64.charCodeAt(i + 3)]
	    arr[curByte++] = (tmp >> 16) & 0xFF
	    arr[curByte++] = (tmp >> 8) & 0xFF
	    arr[curByte++] = tmp & 0xFF
	  }

	  if (placeHoldersLen === 2) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 2) |
	      (revLookup[b64.charCodeAt(i + 1)] >> 4)
	    arr[curByte++] = tmp & 0xFF
	  }

	  if (placeHoldersLen === 1) {
	    tmp =
	      (revLookup[b64.charCodeAt(i)] << 10) |
	      (revLookup[b64.charCodeAt(i + 1)] << 4) |
	      (revLookup[b64.charCodeAt(i + 2)] >> 2)
	    arr[curByte++] = (tmp >> 8) & 0xFF
	    arr[curByte++] = tmp & 0xFF
	  }

	  return arr
	}

	function tripletToBase64 (num) {
	  return lookup[num >> 18 & 0x3F] +
	    lookup[num >> 12 & 0x3F] +
	    lookup[num >> 6 & 0x3F] +
	    lookup[num & 0x3F]
	}

	function encodeChunk (uint8, start, end) {
	  var tmp
	  var output = []
	  for (var i = start; i < end; i += 3) {
	    tmp =
	      ((uint8[i] << 16) & 0xFF0000) +
	      ((uint8[i + 1] << 8) & 0xFF00) +
	      (uint8[i + 2] & 0xFF)
	    output.push(tripletToBase64(tmp))
	  }
	  return output.join('')
	}

	function fromByteArray (uint8) {
	  var tmp
	  var len = uint8.length
	  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
	  var parts = []
	  var maxChunkLength = 16383 // must be multiple of 3

	  // go through the array every three bytes, we'll deal with trailing stuff later
	  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
	    parts.push(encodeChunk(
	      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
	    ))
	  }

	  // pad the end with zeros, but make sure to not forget the extra bytes
	  if (extraBytes === 1) {
	    tmp = uint8[len - 1]
	    parts.push(
	      lookup[tmp >> 2] +
	      lookup[(tmp << 4) & 0x3F] +
	      '=='
	    )
	  } else if (extraBytes === 2) {
	    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
	    parts.push(
	      lookup[tmp >> 10] +
	      lookup[(tmp >> 4) & 0x3F] +
	      lookup[(tmp << 2) & 0x3F] +
	      '='
	    )
	  }

	  return parts.join('')
	}


/***/ },
/* 43 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = (nBytes * 8) - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]

	  i += d

	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = (nBytes * 8) - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

	  value = Math.abs(value)

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }

	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = ((value * c) - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 44 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.

	function isArray(arg) {
	  if (Array.isArray) {
	    return Array.isArray(arg);
	  }
	  return objectToString(arg) === '[object Array]';
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	exports.isBuffer = Buffer.isBuffer;

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41).Buffer))

/***/ },
/* 46 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// a duplex stream is just a stream that is both readable and writable.
	// Since JS doesn't have multiple prototypal inheritance, this class
	// prototypally inherits from Readable, and then parasitically from
	// Writable.

	module.exports = Duplex;

	/*<replacement>*/
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}
	/*</replacement>*/


	/*<replacement>*/
	var util = __webpack_require__(45);
	util.inherits = __webpack_require__(28);
	/*</replacement>*/

	var Readable = __webpack_require__(39);
	var Writable = __webpack_require__(48);

	util.inherits(Duplex, Readable);

	forEach(objectKeys(Writable.prototype), function(method) {
	  if (!Duplex.prototype[method])
	    Duplex.prototype[method] = Writable.prototype[method];
	});

	function Duplex(options) {
	  if (!(this instanceof Duplex))
	    return new Duplex(options);

	  Readable.call(this, options);
	  Writable.call(this, options);

	  if (options && options.readable === false)
	    this.readable = false;

	  if (options && options.writable === false)
	    this.writable = false;

	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false)
	    this.allowHalfOpen = false;

	  this.once('end', onend);
	}

	// the no-half-open enforcer
	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended)
	    return;

	  // no more data can be written.
	  // But allow more writes to happen in this tick.
	  process.nextTick(this.end.bind(this));
	}

	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// A bit simpler than readable streams.
	// Implement an async ._write(chunk, cb), and it'll handle all
	// the drain event emission and buffering.

	module.exports = Writable;

	/*<replacement>*/
	var Buffer = __webpack_require__(41).Buffer;
	/*</replacement>*/

	Writable.WritableState = WritableState;


	/*<replacement>*/
	var util = __webpack_require__(45);
	util.inherits = __webpack_require__(28);
	/*</replacement>*/

	var Stream = __webpack_require__(37);

	util.inherits(Writable, Stream);

	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	}

	function WritableState(options, stream) {
	  var Duplex = __webpack_require__(47);

	  options = options || {};

	  // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()
	  var hwm = options.highWaterMark;
	  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

	  // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.
	  this.objectMode = !!options.objectMode;

	  if (stream instanceof Duplex)
	    this.objectMode = this.objectMode || !!options.writableObjectMode;

	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;

	  this.needDrain = false;
	  // at the start of calling end()
	  this.ending = false;
	  // when end() has been called, and returned
	  this.ended = false;
	  // when 'finish' is emitted
	  this.finished = false;

	  // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.
	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode;

	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';

	  // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.
	  this.length = 0;

	  // a flag to see when we're in the middle of a write.
	  this.writing = false;

	  // when true all writes will be buffered until .uncork() call
	  this.corked = 0;

	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;

	  // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.
	  this.bufferProcessing = false;

	  // the callback that's passed to _write(chunk,cb)
	  this.onwrite = function(er) {
	    onwrite(stream, er);
	  };

	  // the callback that the user supplies to write(chunk,encoding,cb)
	  this.writecb = null;

	  // the amount that is being written when _write is called.
	  this.writelen = 0;

	  this.buffer = [];

	  // number of pending user-supplied write callbacks
	  // this must be 0 before 'finish' can be emitted
	  this.pendingcb = 0;

	  // emit prefinish if the only thing we're waiting for is _write cbs
	  // This is relevant for synchronous Transform streams
	  this.prefinished = false;

	  // True if the error was already emitted and should not be thrown again
	  this.errorEmitted = false;
	}

	function Writable(options) {
	  var Duplex = __webpack_require__(47);

	  // Writable ctor is applied to Duplexes, though they're not
	  // instanceof Writable, they're instanceof Readable.
	  if (!(this instanceof Writable) && !(this instanceof Duplex))
	    return new Writable(options);

	  this._writableState = new WritableState(options, this);

	  // legacy.
	  this.writable = true;

	  Stream.call(this);
	}

	// Otherwise people can pipe Writable streams, which is just wrong.
	Writable.prototype.pipe = function() {
	  this.emit('error', new Error('Cannot pipe. Not readable.'));
	};


	function writeAfterEnd(stream, state, cb) {
	  var er = new Error('write after end');
	  // TODO: defer error events consistently everywhere, not just the cb
	  stream.emit('error', er);
	  process.nextTick(function() {
	    cb(er);
	  });
	}

	// If we get something that is not a buffer, string, null, or undefined,
	// and we're not in objectMode, then that's an error.
	// Otherwise stream chunks are all considered to be of length=1, and the
	// watermarks determine how many objects to keep in the buffer, rather than
	// how many bytes or characters.
	function validChunk(stream, state, chunk, cb) {
	  var valid = true;
	  if (!util.isBuffer(chunk) &&
	      !util.isString(chunk) &&
	      !util.isNullOrUndefined(chunk) &&
	      !state.objectMode) {
	    var er = new TypeError('Invalid non-string/buffer chunk');
	    stream.emit('error', er);
	    process.nextTick(function() {
	      cb(er);
	    });
	    valid = false;
	  }
	  return valid;
	}

	Writable.prototype.write = function(chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;

	  if (util.isFunction(encoding)) {
	    cb = encoding;
	    encoding = null;
	  }

	  if (util.isBuffer(chunk))
	    encoding = 'buffer';
	  else if (!encoding)
	    encoding = state.defaultEncoding;

	  if (!util.isFunction(cb))
	    cb = function() {};

	  if (state.ended)
	    writeAfterEnd(this, state, cb);
	  else if (validChunk(this, state, chunk, cb)) {
	    state.pendingcb++;
	    ret = writeOrBuffer(this, state, chunk, encoding, cb);
	  }

	  return ret;
	};

	Writable.prototype.cork = function() {
	  var state = this._writableState;

	  state.corked++;
	};

	Writable.prototype.uncork = function() {
	  var state = this._writableState;

	  if (state.corked) {
	    state.corked--;

	    if (!state.writing &&
	        !state.corked &&
	        !state.finished &&
	        !state.bufferProcessing &&
	        state.buffer.length)
	      clearBuffer(this, state);
	  }
	};

	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode &&
	      state.decodeStrings !== false &&
	      util.isString(chunk)) {
	    chunk = new Buffer(chunk, encoding);
	  }
	  return chunk;
	}

	// if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.
	function writeOrBuffer(stream, state, chunk, encoding, cb) {
	  chunk = decodeChunk(state, chunk, encoding);
	  if (util.isBuffer(chunk))
	    encoding = 'buffer';
	  var len = state.objectMode ? 1 : chunk.length;

	  state.length += len;

	  var ret = state.length < state.highWaterMark;
	  // we must ensure that previous needDrain will not be reset to false.
	  if (!ret)
	    state.needDrain = true;

	  if (state.writing || state.corked)
	    state.buffer.push(new WriteReq(chunk, encoding, cb));
	  else
	    doWrite(stream, state, false, len, chunk, encoding, cb);

	  return ret;
	}

	function doWrite(stream, state, writev, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  if (writev)
	    stream._writev(chunk, state.onwrite);
	  else
	    stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}

	function onwriteError(stream, state, sync, er, cb) {
	  if (sync)
	    process.nextTick(function() {
	      state.pendingcb--;
	      cb(er);
	    });
	  else {
	    state.pendingcb--;
	    cb(er);
	  }

	  stream._writableState.errorEmitted = true;
	  stream.emit('error', er);
	}

	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}

	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;

	  onwriteStateUpdate(state);

	  if (er)
	    onwriteError(stream, state, sync, er, cb);
	  else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(stream, state);

	    if (!finished &&
	        !state.corked &&
	        !state.bufferProcessing &&
	        state.buffer.length) {
	      clearBuffer(stream, state);
	    }

	    if (sync) {
	      process.nextTick(function() {
	        afterWrite(stream, state, finished, cb);
	      });
	    } else {
	      afterWrite(stream, state, finished, cb);
	    }
	  }
	}

	function afterWrite(stream, state, finished, cb) {
	  if (!finished)
	    onwriteDrain(stream, state);
	  state.pendingcb--;
	  cb();
	  finishMaybe(stream, state);
	}

	// Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.
	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	}


	// if there's something in the buffer waiting, then process it
	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;

	  if (stream._writev && state.buffer.length > 1) {
	    // Fast case, write everything using _writev()
	    var cbs = [];
	    for (var c = 0; c < state.buffer.length; c++)
	      cbs.push(state.buffer[c].callback);

	    // count the one we are adding, as well.
	    // TODO(isaacs) clean this up
	    state.pendingcb++;
	    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {
	      for (var i = 0; i < cbs.length; i++) {
	        state.pendingcb--;
	        cbs[i](err);
	      }
	    });

	    // Clear buffer
	    state.buffer = [];
	  } else {
	    // Slow case, write chunks one-by-one
	    for (var c = 0; c < state.buffer.length; c++) {
	      var entry = state.buffer[c];
	      var chunk = entry.chunk;
	      var encoding = entry.encoding;
	      var cb = entry.callback;
	      var len = state.objectMode ? 1 : chunk.length;

	      doWrite(stream, state, false, len, chunk, encoding, cb);

	      // if we didn't call the onwrite immediately, then
	      // it means that we need to wait until it does.
	      // also, that means that the chunk and cb are currently
	      // being processed, so move the buffer counter past them.
	      if (state.writing) {
	        c++;
	        break;
	      }
	    }

	    if (c < state.buffer.length)
	      state.buffer = state.buffer.slice(c);
	    else
	      state.buffer.length = 0;
	  }

	  state.bufferProcessing = false;
	}

	Writable.prototype._write = function(chunk, encoding, cb) {
	  cb(new Error('not implemented'));

	};

	Writable.prototype._writev = null;

	Writable.prototype.end = function(chunk, encoding, cb) {
	  var state = this._writableState;

	  if (util.isFunction(chunk)) {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (util.isFunction(encoding)) {
	    cb = encoding;
	    encoding = null;
	  }

	  if (!util.isNullOrUndefined(chunk))
	    this.write(chunk, encoding);

	  // .end() fully uncorks
	  if (state.corked) {
	    state.corked = 1;
	    this.uncork();
	  }

	  // ignore unnecessary end() calls.
	  if (!state.ending && !state.finished)
	    endWritable(this, state, cb);
	};


	function needFinish(stream, state) {
	  return (state.ending &&
	          state.length === 0 &&
	          !state.finished &&
	          !state.writing);
	}

	function prefinish(stream, state) {
	  if (!state.prefinished) {
	    state.prefinished = true;
	    stream.emit('prefinish');
	  }
	}

	function finishMaybe(stream, state) {
	  var need = needFinish(stream, state);
	  if (need) {
	    if (state.pendingcb === 0) {
	      prefinish(stream, state);
	      state.finished = true;
	      stream.emit('finish');
	    } else
	      prefinish(stream, state);
	  }
	  return need;
	}

	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);
	  if (cb) {
	    if (state.finished)
	      process.nextTick(cb);
	    else
	      stream.once('finish', cb);
	  }
	  state.ended = true;
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var Buffer = __webpack_require__(41).Buffer;

	var isBufferEncoding = Buffer.isEncoding
	  || function(encoding) {
	       switch (encoding && encoding.toLowerCase()) {
	         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
	         default: return false;
	       }
	     }


	function assertEncoding(encoding) {
	  if (encoding && !isBufferEncoding(encoding)) {
	    throw new Error('Unknown encoding: ' + encoding);
	  }
	}

	// StringDecoder provides an interface for efficiently splitting a series of
	// buffers into a series of JS strings without breaking apart multi-byte
	// characters. CESU-8 is handled as part of the UTF-8 encoding.
	//
	// @TODO Handling all encodings inside a single object makes it very difficult
	// to reason about this code, so it should be split up in the future.
	// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
	// points as used by CESU-8.
	var StringDecoder = exports.StringDecoder = function(encoding) {
	  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
	  assertEncoding(encoding);
	  switch (this.encoding) {
	    case 'utf8':
	      // CESU-8 represents each of Surrogate Pair by 3-bytes
	      this.surrogateSize = 3;
	      break;
	    case 'ucs2':
	    case 'utf16le':
	      // UTF-16 represents each of Surrogate Pair by 2-bytes
	      this.surrogateSize = 2;
	      this.detectIncompleteChar = utf16DetectIncompleteChar;
	      break;
	    case 'base64':
	      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
	      this.surrogateSize = 3;
	      this.detectIncompleteChar = base64DetectIncompleteChar;
	      break;
	    default:
	      this.write = passThroughWrite;
	      return;
	  }

	  // Enough space to store all bytes of a single character. UTF-8 needs 4
	  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
	  this.charBuffer = new Buffer(6);
	  // Number of bytes received for the current incomplete multi-byte character.
	  this.charReceived = 0;
	  // Number of bytes expected for the current incomplete multi-byte character.
	  this.charLength = 0;
	};


	// write decodes the given buffer and returns it as JS string that is
	// guaranteed to not contain any partial multi-byte characters. Any partial
	// character found at the end of the buffer is buffered up, and will be
	// returned when calling write again with the remaining bytes.
	//
	// Note: Converting a Buffer containing an orphan surrogate to a String
	// currently works, but converting a String to a Buffer (via `new Buffer`, or
	// Buffer#write) will replace incomplete surrogates with the unicode
	// replacement character. See https://codereview.chromium.org/121173009/ .
	StringDecoder.prototype.write = function(buffer) {
	  var charStr = '';
	  // if our last write ended with an incomplete multibyte character
	  while (this.charLength) {
	    // determine how many remaining bytes this buffer has to offer for this char
	    var available = (buffer.length >= this.charLength - this.charReceived) ?
	        this.charLength - this.charReceived :
	        buffer.length;

	    // add the new bytes to the char buffer
	    buffer.copy(this.charBuffer, this.charReceived, 0, available);
	    this.charReceived += available;

	    if (this.charReceived < this.charLength) {
	      // still not enough chars in this buffer? wait for more ...
	      return '';
	    }

	    // remove bytes belonging to the current character from the buffer
	    buffer = buffer.slice(available, buffer.length);

	    // get the character that was split
	    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

	    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	    var charCode = charStr.charCodeAt(charStr.length - 1);
	    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	      this.charLength += this.surrogateSize;
	      charStr = '';
	      continue;
	    }
	    this.charReceived = this.charLength = 0;

	    // if there are no more bytes in this buffer, just emit our char
	    if (buffer.length === 0) {
	      return charStr;
	    }
	    break;
	  }

	  // determine and set charLength / charReceived
	  this.detectIncompleteChar(buffer);

	  var end = buffer.length;
	  if (this.charLength) {
	    // buffer the incomplete character bytes we got
	    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
	    end -= this.charReceived;
	  }

	  charStr += buffer.toString(this.encoding, 0, end);

	  var end = charStr.length - 1;
	  var charCode = charStr.charCodeAt(end);
	  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	    var size = this.surrogateSize;
	    this.charLength += size;
	    this.charReceived += size;
	    this.charBuffer.copy(this.charBuffer, size, 0, size);
	    buffer.copy(this.charBuffer, 0, 0, size);
	    return charStr.substring(0, end);
	  }

	  // or just emit the charStr
	  return charStr;
	};

	// detectIncompleteChar determines if there is an incomplete UTF-8 character at
	// the end of the given buffer. If so, it sets this.charLength to the byte
	// length that character, and sets this.charReceived to the number of bytes
	// that are available for this character.
	StringDecoder.prototype.detectIncompleteChar = function(buffer) {
	  // determine how many bytes we have to check at the end of this buffer
	  var i = (buffer.length >= 3) ? 3 : buffer.length;

	  // Figure out if one of the last i bytes of our buffer announces an
	  // incomplete char.
	  for (; i > 0; i--) {
	    var c = buffer[buffer.length - i];

	    // See http://en.wikipedia.org/wiki/UTF-8#Description

	    // 110XXXXX
	    if (i == 1 && c >> 5 == 0x06) {
	      this.charLength = 2;
	      break;
	    }

	    // 1110XXXX
	    if (i <= 2 && c >> 4 == 0x0E) {
	      this.charLength = 3;
	      break;
	    }

	    // 11110XXX
	    if (i <= 3 && c >> 3 == 0x1E) {
	      this.charLength = 4;
	      break;
	    }
	  }
	  this.charReceived = i;
	};

	StringDecoder.prototype.end = function(buffer) {
	  var res = '';
	  if (buffer && buffer.length)
	    res = this.write(buffer);

	  if (this.charReceived) {
	    var cr = this.charReceived;
	    var buf = this.charBuffer;
	    var enc = this.encoding;
	    res += buf.slice(0, cr).toString(enc);
	  }

	  return res;
	};

	function passThroughWrite(buffer) {
	  return buffer.toString(this.encoding);
	}

	function utf16DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 2;
	  this.charLength = this.charReceived ? 2 : 0;
	}

	function base64DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 3;
	  this.charLength = this.charReceived ? 3 : 0;
	}


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.


	// a transform stream is a readable/writable stream where you do
	// something with the data.  Sometimes it's called a "filter",
	// but that's not a great name for it, since that implies a thing where
	// some bits pass through, and others are simply ignored.  (That would
	// be a valid example of a transform, of course.)
	//
	// While the output is causally related to the input, it's not a
	// necessarily symmetric or synchronous transformation.  For example,
	// a zlib stream might take multiple plain-text writes(), and then
	// emit a single compressed chunk some time in the future.
	//
	// Here's how this works:
	//
	// The Transform stream has all the aspects of the readable and writable
	// stream classes.  When you write(chunk), that calls _write(chunk,cb)
	// internally, and returns false if there's a lot of pending writes
	// buffered up.  When you call read(), that calls _read(n) until
	// there's enough pending readable data buffered up.
	//
	// In a transform stream, the written data is placed in a buffer.  When
	// _read(n) is called, it transforms the queued up data, calling the
	// buffered _write cb's as it consumes chunks.  If consuming a single
	// written chunk would result in multiple output chunks, then the first
	// outputted bit calls the readcb, and subsequent chunks just go into
	// the read buffer, and will cause it to emit 'readable' if necessary.
	//
	// This way, back-pressure is actually determined by the reading side,
	// since _read has to be called to start processing a new chunk.  However,
	// a pathological inflate type of transform can cause excessive buffering
	// here.  For example, imagine a stream where every byte of input is
	// interpreted as an integer from 0-255, and then results in that many
	// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
	// 1kb of data being output.  In this case, you could write a very small
	// amount of input, and end up with a very large amount of output.  In
	// such a pathological inflating mechanism, there'd be no way to tell
	// the system to stop doing the transform.  A single 4MB write could
	// cause the system to run out of memory.
	//
	// However, even in such a pathological case, only a single written chunk
	// would be consumed, and then the rest would wait (un-transformed) until
	// the results of the previous transformed chunk were consumed.

	module.exports = Transform;

	var Duplex = __webpack_require__(47);

	/*<replacement>*/
	var util = __webpack_require__(45);
	util.inherits = __webpack_require__(28);
	/*</replacement>*/

	util.inherits(Transform, Duplex);


	function TransformState(options, stream) {
	  this.afterTransform = function(er, data) {
	    return afterTransform(stream, er, data);
	  };

	  this.needTransform = false;
	  this.transforming = false;
	  this.writecb = null;
	  this.writechunk = null;
	}

	function afterTransform(stream, er, data) {
	  var ts = stream._transformState;
	  ts.transforming = false;

	  var cb = ts.writecb;

	  if (!cb)
	    return stream.emit('error', new Error('no writecb in Transform class'));

	  ts.writechunk = null;
	  ts.writecb = null;

	  if (!util.isNullOrUndefined(data))
	    stream.push(data);

	  if (cb)
	    cb(er);

	  var rs = stream._readableState;
	  rs.reading = false;
	  if (rs.needReadable || rs.length < rs.highWaterMark) {
	    stream._read(rs.highWaterMark);
	  }
	}


	function Transform(options) {
	  if (!(this instanceof Transform))
	    return new Transform(options);

	  Duplex.call(this, options);

	  this._transformState = new TransformState(options, this);

	  // when the writable side finishes, then flush out anything remaining.
	  var stream = this;

	  // start out asking for a readable event once data is transformed.
	  this._readableState.needReadable = true;

	  // we have implemented the _read method, and done the other things
	  // that Readable wants before the first _read call, so unset the
	  // sync guard flag.
	  this._readableState.sync = false;

	  this.once('prefinish', function() {
	    if (util.isFunction(this._flush))
	      this._flush(function(er) {
	        done(stream, er);
	      });
	    else
	      done(stream);
	  });
	}

	Transform.prototype.push = function(chunk, encoding) {
	  this._transformState.needTransform = false;
	  return Duplex.prototype.push.call(this, chunk, encoding);
	};

	// This is the part where you do stuff!
	// override this function in implementation classes.
	// 'chunk' is an input chunk.
	//
	// Call `push(newChunk)` to pass along transformed output
	// to the readable side.  You may call 'push' zero or more times.
	//
	// Call `cb(err)` when you are done with this chunk.  If you pass
	// an error, then that'll put the hurt on the whole operation.  If you
	// never call cb(), then you'll never get another chunk.
	Transform.prototype._transform = function(chunk, encoding, cb) {
	  throw new Error('not implemented');
	};

	Transform.prototype._write = function(chunk, encoding, cb) {
	  var ts = this._transformState;
	  ts.writecb = cb;
	  ts.writechunk = chunk;
	  ts.writeencoding = encoding;
	  if (!ts.transforming) {
	    var rs = this._readableState;
	    if (ts.needTransform ||
	        rs.needReadable ||
	        rs.length < rs.highWaterMark)
	      this._read(rs.highWaterMark);
	  }
	};

	// Doesn't matter what the args are here.
	// _transform does all the work.
	// That we got here means that the readable side wants more data.
	Transform.prototype._read = function(n) {
	  var ts = this._transformState;

	  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {
	    ts.transforming = true;
	    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
	  } else {
	    // mark that we need a transform, so that any data that comes in
	    // will get processed, now that we've asked for it.
	    ts.needTransform = true;
	  }
	};


	function done(stream, er) {
	  if (er)
	    return stream.emit('error', er);

	  // if there's nothing in the write buffer, then that means
	  // that nothing more will ever be provided
	  var ws = stream._writableState;
	  var ts = stream._transformState;

	  if (ws.length)
	    throw new Error('calling transform done when ws.length != 0');

	  if (ts.transforming)
	    throw new Error('calling transform done when still transforming');

	  return stream.push(null);
	}


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// a passthrough stream.
	// basically just the most minimal sort of Transform stream.
	// Every written chunk gets output as-is.

	module.exports = PassThrough;

	var Transform = __webpack_require__(50);

	/*<replacement>*/
	var util = __webpack_require__(45);
	util.inherits = __webpack_require__(28);
	/*</replacement>*/

	util.inherits(PassThrough, Transform);

	function PassThrough(options) {
	  if (!(this instanceof PassThrough))
	    return new PassThrough(options);

	  Transform.call(this, options);
	}

	PassThrough.prototype._transform = function(chunk, encoding, cb) {
	  cb(null, chunk);
	};


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(48)


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(47)


/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(50)


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(51)


/***/ },
/* 56 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = ProxyHandler;

	function ProxyHandler(cbs){
		this._cbs = cbs || {};
	}

	var EVENTS = __webpack_require__(18).EVENTS;
	Object.keys(EVENTS).forEach(function(name){
		if(EVENTS[name] === 0){
			name = "on" + name;
			ProxyHandler.prototype[name] = function(){
				if(this._cbs[name]) this._cbs[name]();
			};
		} else if(EVENTS[name] === 1){
			name = "on" + name;
			ProxyHandler.prototype[name] = function(a){
				if(this._cbs[name]) this._cbs[name](a);
			};
		} else if(EVENTS[name] === 2){
			name = "on" + name;
			ProxyHandler.prototype[name] = function(a, b){
				if(this._cbs[name]) this._cbs[name](a, b);
			};
		} else {
			throw Error("wrong number of arguments");
		}
	});

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	var DomUtils = module.exports;

	[
		__webpack_require__(59),
		__webpack_require__(70),
		__webpack_require__(71),
		__webpack_require__(72),
		__webpack_require__(73),
		__webpack_require__(74)
	].forEach(function(ext){
		Object.keys(ext).forEach(function(key){
			DomUtils[key] = ext[key].bind(DomUtils);
		});
	});


/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(31),
	    getOuterHTML = __webpack_require__(60),
	    isTag = ElementType.isTag;

	module.exports = {
		getInnerHTML: getInnerHTML,
		getOuterHTML: getOuterHTML,
		getText: getText
	};

	function getInnerHTML(elem, opts){
		return elem.children ? elem.children.map(function(elem){
			return getOuterHTML(elem, opts);
		}).join("") : "";
	}

	function getText(elem){
		if(Array.isArray(elem)) return elem.map(getText).join("");
		if(isTag(elem) || elem.type === ElementType.CDATA) return getText(elem.children);
		if(elem.type === ElementType.Text) return elem.data;
		return "";
	}


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/*
	  Module dependencies
	*/
	var ElementType = __webpack_require__(61);
	var entities = __webpack_require__(62);

	/*
	  Boolean Attributes
	*/
	var booleanAttributes = {
	  __proto__: null,
	  allowfullscreen: true,
	  async: true,
	  autofocus: true,
	  autoplay: true,
	  checked: true,
	  controls: true,
	  default: true,
	  defer: true,
	  disabled: true,
	  hidden: true,
	  ismap: true,
	  loop: true,
	  multiple: true,
	  muted: true,
	  open: true,
	  readonly: true,
	  required: true,
	  reversed: true,
	  scoped: true,
	  seamless: true,
	  selected: true,
	  typemustmatch: true
	};

	var unencodedElements = {
	  __proto__: null,
	  style: true,
	  script: true,
	  xmp: true,
	  iframe: true,
	  noembed: true,
	  noframes: true,
	  plaintext: true,
	  noscript: true
	};

	/*
	  Format attributes
	*/
	function formatAttrs(attributes, opts) {
	  if (!attributes) return;

	  var output = '',
	      value;

	  // Loop through the attributes
	  for (var key in attributes) {
	    value = attributes[key];
	    if (output) {
	      output += ' ';
	    }

	    if (!value && booleanAttributes[key]) {
	      output += key;
	    } else {
	      output += key + '="' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '"';
	    }
	  }

	  return output;
	}

	/*
	  Self-enclosing tags (stolen from node-htmlparser)
	*/
	var singleTag = {
	  __proto__: null,
	  area: true,
	  base: true,
	  basefont: true,
	  br: true,
	  col: true,
	  command: true,
	  embed: true,
	  frame: true,
	  hr: true,
	  img: true,
	  input: true,
	  isindex: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true,
	};


	var render = module.exports = function(dom, opts) {
	  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];
	  opts = opts || {};

	  var output = '';

	  for(var i = 0; i < dom.length; i++){
	    var elem = dom[i];

	    if (elem.type === 'root')
	      output += render(elem.children, opts);
	    else if (ElementType.isTag(elem))
	      output += renderTag(elem, opts);
	    else if (elem.type === ElementType.Directive)
	      output += renderDirective(elem);
	    else if (elem.type === ElementType.Comment)
	      output += renderComment(elem);
	    else if (elem.type === ElementType.CDATA)
	      output += renderCdata(elem);
	    else
	      output += renderText(elem, opts);
	  }

	  return output;
	};

	function renderTag(elem, opts) {
	  // Handle SVG
	  if (elem.name === "svg") opts = {decodeEntities: opts.decodeEntities, xmlMode: true};

	  var tag = '<' + elem.name,
	      attribs = formatAttrs(elem.attribs, opts);

	  if (attribs) {
	    tag += ' ' + attribs;
	  }

	  if (
	    opts.xmlMode
	    && (!elem.children || elem.children.length === 0)
	  ) {
	    tag += '/>';
	  } else {
	    tag += '>';
	    if (elem.children) {
	      tag += render(elem.children, opts);
	    }

	    if (!singleTag[elem.name] || opts.xmlMode) {
	      tag += '</' + elem.name + '>';
	    }
	  }

	  return tag;
	}

	function renderDirective(elem) {
	  return '<' + elem.data + '>';
	}

	function renderText(elem, opts) {
	  var data = elem.data || '';

	  // if entities weren't decoded, no need to encode them back
	  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {
	    data = entities.encodeXML(data);
	  }

	  return data;
	}

	function renderCdata(elem) {
	  return '<![CDATA[' + elem.children[0].data + ']]>';
	}

	function renderComment(elem) {
	  return '<!--' + elem.data + '-->';
	}


/***/ },
/* 61 */
/***/ function(module, exports) {

	//Types of elements found in the DOM
	module.exports = {
		Text: "text", //Text
		Directive: "directive", //<? ... ?>
		Comment: "comment", //<!-- ... -->
		Script: "script", //<script> tags
		Style: "style", //<style> tags
		Tag: "tag", //Any tag
		CDATA: "cdata", //<![CDATA[ ... ]]>

		isTag: function(elem){
			return elem.type === "tag" || elem.type === "script" || elem.type === "style";
		}
	};

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	var encode = __webpack_require__(63),
	    decode = __webpack_require__(66);

	exports.decode = function(data, level){
		return (!level || level <= 0 ? decode.XML : decode.HTML)(data);
	};

	exports.decodeStrict = function(data, level){
		return (!level || level <= 0 ? decode.XML : decode.HTMLStrict)(data);
	};

	exports.encode = function(data, level){
		return (!level || level <= 0 ? encode.XML : encode.HTML)(data);
	};

	exports.encodeXML = encode.XML;

	exports.encodeHTML4 =
	exports.encodeHTML5 =
	exports.encodeHTML  = encode.HTML;

	exports.decodeXML =
	exports.decodeXMLStrict = decode.XML;

	exports.decodeHTML4 =
	exports.decodeHTML5 =
	exports.decodeHTML = decode.HTML;

	exports.decodeHTML4Strict =
	exports.decodeHTML5Strict =
	exports.decodeHTMLStrict = decode.HTMLStrict;

	exports.escape = encode.escape;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	var inverseXML = getInverseObj(__webpack_require__(64)),
	    xmlReplacer = getInverseReplacer(inverseXML);

	exports.XML = getInverse(inverseXML, xmlReplacer);

	var inverseHTML = getInverseObj(__webpack_require__(65)),
	    htmlReplacer = getInverseReplacer(inverseHTML);

	exports.HTML = getInverse(inverseHTML, htmlReplacer);

	function getInverseObj(obj){
		return Object.keys(obj).sort().reduce(function(inverse, name){
			inverse[obj[name]] = "&" + name + ";";
			return inverse;
		}, {});
	}

	function getInverseReplacer(inverse){
		var single = [],
		    multiple = [];

		Object.keys(inverse).forEach(function(k){
			if(k.length === 1){
				single.push("\\" + k);
			} else {
				multiple.push(k);
			}
		});

		//TODO add ranges
		multiple.unshift("[" + single.join("") + "]");

		return new RegExp(multiple.join("|"), "g");
	}

	var re_nonASCII = /[^\0-\x7F]/g,
	    re_astralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

	function singleCharReplacer(c){
		return "&#x" + c.charCodeAt(0).toString(16).toUpperCase() + ";";
	}

	function astralReplacer(c){
		// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
		var high = c.charCodeAt(0);
		var low  = c.charCodeAt(1);
		var codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;
		return "&#x" + codePoint.toString(16).toUpperCase() + ";";
	}

	function getInverse(inverse, re){
		function func(name){
			return inverse[name];
		}

		return function(data){
			return data
					.replace(re, func)
					.replace(re_astralSymbols, astralReplacer)
					.replace(re_nonASCII, singleCharReplacer);
		};
	}

	var re_xmlChars = getInverseReplacer(inverseXML);

	function escapeXML(data){
		return data
				.replace(re_xmlChars, singleCharReplacer)
				.replace(re_astralSymbols, astralReplacer)
				.replace(re_nonASCII, singleCharReplacer);
	}

	exports.escape = escapeXML;


/***/ },
/* 64 */
/***/ function(module, exports) {

	module.exports = {
		"amp": "&",
		"apos": "'",
		"gt": ">",
		"lt": "<",
		"quot": "\""
	};

/***/ },
/* 65 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Abreve": "Ă",
		"abreve": "ă",
		"ac": "∾",
		"acd": "∿",
		"acE": "∾̳",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"Acy": "А",
		"acy": "а",
		"AElig": "Æ",
		"aelig": "æ",
		"af": "⁡",
		"Afr": "𝔄",
		"afr": "𝔞",
		"Agrave": "À",
		"agrave": "à",
		"alefsym": "ℵ",
		"aleph": "ℵ",
		"Alpha": "Α",
		"alpha": "α",
		"Amacr": "Ā",
		"amacr": "ā",
		"amalg": "⨿",
		"amp": "&",
		"AMP": "&",
		"andand": "⩕",
		"And": "⩓",
		"and": "∧",
		"andd": "⩜",
		"andslope": "⩘",
		"andv": "⩚",
		"ang": "∠",
		"ange": "⦤",
		"angle": "∠",
		"angmsdaa": "⦨",
		"angmsdab": "⦩",
		"angmsdac": "⦪",
		"angmsdad": "⦫",
		"angmsdae": "⦬",
		"angmsdaf": "⦭",
		"angmsdag": "⦮",
		"angmsdah": "⦯",
		"angmsd": "∡",
		"angrt": "∟",
		"angrtvb": "⊾",
		"angrtvbd": "⦝",
		"angsph": "∢",
		"angst": "Å",
		"angzarr": "⍼",
		"Aogon": "Ą",
		"aogon": "ą",
		"Aopf": "𝔸",
		"aopf": "𝕒",
		"apacir": "⩯",
		"ap": "≈",
		"apE": "⩰",
		"ape": "≊",
		"apid": "≋",
		"apos": "'",
		"ApplyFunction": "⁡",
		"approx": "≈",
		"approxeq": "≊",
		"Aring": "Å",
		"aring": "å",
		"Ascr": "𝒜",
		"ascr": "𝒶",
		"Assign": "≔",
		"ast": "*",
		"asymp": "≈",
		"asympeq": "≍",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"awconint": "∳",
		"awint": "⨑",
		"backcong": "≌",
		"backepsilon": "϶",
		"backprime": "‵",
		"backsim": "∽",
		"backsimeq": "⋍",
		"Backslash": "∖",
		"Barv": "⫧",
		"barvee": "⊽",
		"barwed": "⌅",
		"Barwed": "⌆",
		"barwedge": "⌅",
		"bbrk": "⎵",
		"bbrktbrk": "⎶",
		"bcong": "≌",
		"Bcy": "Б",
		"bcy": "б",
		"bdquo": "„",
		"becaus": "∵",
		"because": "∵",
		"Because": "∵",
		"bemptyv": "⦰",
		"bepsi": "϶",
		"bernou": "ℬ",
		"Bernoullis": "ℬ",
		"Beta": "Β",
		"beta": "β",
		"beth": "ℶ",
		"between": "≬",
		"Bfr": "𝔅",
		"bfr": "𝔟",
		"bigcap": "⋂",
		"bigcirc": "◯",
		"bigcup": "⋃",
		"bigodot": "⨀",
		"bigoplus": "⨁",
		"bigotimes": "⨂",
		"bigsqcup": "⨆",
		"bigstar": "★",
		"bigtriangledown": "▽",
		"bigtriangleup": "△",
		"biguplus": "⨄",
		"bigvee": "⋁",
		"bigwedge": "⋀",
		"bkarow": "⤍",
		"blacklozenge": "⧫",
		"blacksquare": "▪",
		"blacktriangle": "▴",
		"blacktriangledown": "▾",
		"blacktriangleleft": "◂",
		"blacktriangleright": "▸",
		"blank": "␣",
		"blk12": "▒",
		"blk14": "░",
		"blk34": "▓",
		"block": "█",
		"bne": "=⃥",
		"bnequiv": "≡⃥",
		"bNot": "⫭",
		"bnot": "⌐",
		"Bopf": "𝔹",
		"bopf": "𝕓",
		"bot": "⊥",
		"bottom": "⊥",
		"bowtie": "⋈",
		"boxbox": "⧉",
		"boxdl": "┐",
		"boxdL": "╕",
		"boxDl": "╖",
		"boxDL": "╗",
		"boxdr": "┌",
		"boxdR": "╒",
		"boxDr": "╓",
		"boxDR": "╔",
		"boxh": "─",
		"boxH": "═",
		"boxhd": "┬",
		"boxHd": "╤",
		"boxhD": "╥",
		"boxHD": "╦",
		"boxhu": "┴",
		"boxHu": "╧",
		"boxhU": "╨",
		"boxHU": "╩",
		"boxminus": "⊟",
		"boxplus": "⊞",
		"boxtimes": "⊠",
		"boxul": "┘",
		"boxuL": "╛",
		"boxUl": "╜",
		"boxUL": "╝",
		"boxur": "└",
		"boxuR": "╘",
		"boxUr": "╙",
		"boxUR": "╚",
		"boxv": "│",
		"boxV": "║",
		"boxvh": "┼",
		"boxvH": "╪",
		"boxVh": "╫",
		"boxVH": "╬",
		"boxvl": "┤",
		"boxvL": "╡",
		"boxVl": "╢",
		"boxVL": "╣",
		"boxvr": "├",
		"boxvR": "╞",
		"boxVr": "╟",
		"boxVR": "╠",
		"bprime": "‵",
		"breve": "˘",
		"Breve": "˘",
		"brvbar": "¦",
		"bscr": "𝒷",
		"Bscr": "ℬ",
		"bsemi": "⁏",
		"bsim": "∽",
		"bsime": "⋍",
		"bsolb": "⧅",
		"bsol": "\\",
		"bsolhsub": "⟈",
		"bull": "•",
		"bullet": "•",
		"bump": "≎",
		"bumpE": "⪮",
		"bumpe": "≏",
		"Bumpeq": "≎",
		"bumpeq": "≏",
		"Cacute": "Ć",
		"cacute": "ć",
		"capand": "⩄",
		"capbrcup": "⩉",
		"capcap": "⩋",
		"cap": "∩",
		"Cap": "⋒",
		"capcup": "⩇",
		"capdot": "⩀",
		"CapitalDifferentialD": "ⅅ",
		"caps": "∩︀",
		"caret": "⁁",
		"caron": "ˇ",
		"Cayleys": "ℭ",
		"ccaps": "⩍",
		"Ccaron": "Č",
		"ccaron": "č",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"Ccirc": "Ĉ",
		"ccirc": "ĉ",
		"Cconint": "∰",
		"ccups": "⩌",
		"ccupssm": "⩐",
		"Cdot": "Ċ",
		"cdot": "ċ",
		"cedil": "¸",
		"Cedilla": "¸",
		"cemptyv": "⦲",
		"cent": "¢",
		"centerdot": "·",
		"CenterDot": "·",
		"cfr": "𝔠",
		"Cfr": "ℭ",
		"CHcy": "Ч",
		"chcy": "ч",
		"check": "✓",
		"checkmark": "✓",
		"Chi": "Χ",
		"chi": "χ",
		"circ": "ˆ",
		"circeq": "≗",
		"circlearrowleft": "↺",
		"circlearrowright": "↻",
		"circledast": "⊛",
		"circledcirc": "⊚",
		"circleddash": "⊝",
		"CircleDot": "⊙",
		"circledR": "®",
		"circledS": "Ⓢ",
		"CircleMinus": "⊖",
		"CirclePlus": "⊕",
		"CircleTimes": "⊗",
		"cir": "○",
		"cirE": "⧃",
		"cire": "≗",
		"cirfnint": "⨐",
		"cirmid": "⫯",
		"cirscir": "⧂",
		"ClockwiseContourIntegral": "∲",
		"CloseCurlyDoubleQuote": "”",
		"CloseCurlyQuote": "’",
		"clubs": "♣",
		"clubsuit": "♣",
		"colon": ":",
		"Colon": "∷",
		"Colone": "⩴",
		"colone": "≔",
		"coloneq": "≔",
		"comma": ",",
		"commat": "@",
		"comp": "∁",
		"compfn": "∘",
		"complement": "∁",
		"complexes": "ℂ",
		"cong": "≅",
		"congdot": "⩭",
		"Congruent": "≡",
		"conint": "∮",
		"Conint": "∯",
		"ContourIntegral": "∮",
		"copf": "𝕔",
		"Copf": "ℂ",
		"coprod": "∐",
		"Coproduct": "∐",
		"copy": "©",
		"COPY": "©",
		"copysr": "℗",
		"CounterClockwiseContourIntegral": "∳",
		"crarr": "↵",
		"cross": "✗",
		"Cross": "⨯",
		"Cscr": "𝒞",
		"cscr": "𝒸",
		"csub": "⫏",
		"csube": "⫑",
		"csup": "⫐",
		"csupe": "⫒",
		"ctdot": "⋯",
		"cudarrl": "⤸",
		"cudarrr": "⤵",
		"cuepr": "⋞",
		"cuesc": "⋟",
		"cularr": "↶",
		"cularrp": "⤽",
		"cupbrcap": "⩈",
		"cupcap": "⩆",
		"CupCap": "≍",
		"cup": "∪",
		"Cup": "⋓",
		"cupcup": "⩊",
		"cupdot": "⊍",
		"cupor": "⩅",
		"cups": "∪︀",
		"curarr": "↷",
		"curarrm": "⤼",
		"curlyeqprec": "⋞",
		"curlyeqsucc": "⋟",
		"curlyvee": "⋎",
		"curlywedge": "⋏",
		"curren": "¤",
		"curvearrowleft": "↶",
		"curvearrowright": "↷",
		"cuvee": "⋎",
		"cuwed": "⋏",
		"cwconint": "∲",
		"cwint": "∱",
		"cylcty": "⌭",
		"dagger": "†",
		"Dagger": "‡",
		"daleth": "ℸ",
		"darr": "↓",
		"Darr": "↡",
		"dArr": "⇓",
		"dash": "‐",
		"Dashv": "⫤",
		"dashv": "⊣",
		"dbkarow": "⤏",
		"dblac": "˝",
		"Dcaron": "Ď",
		"dcaron": "ď",
		"Dcy": "Д",
		"dcy": "д",
		"ddagger": "‡",
		"ddarr": "⇊",
		"DD": "ⅅ",
		"dd": "ⅆ",
		"DDotrahd": "⤑",
		"ddotseq": "⩷",
		"deg": "°",
		"Del": "∇",
		"Delta": "Δ",
		"delta": "δ",
		"demptyv": "⦱",
		"dfisht": "⥿",
		"Dfr": "𝔇",
		"dfr": "𝔡",
		"dHar": "⥥",
		"dharl": "⇃",
		"dharr": "⇂",
		"DiacriticalAcute": "´",
		"DiacriticalDot": "˙",
		"DiacriticalDoubleAcute": "˝",
		"DiacriticalGrave": "`",
		"DiacriticalTilde": "˜",
		"diam": "⋄",
		"diamond": "⋄",
		"Diamond": "⋄",
		"diamondsuit": "♦",
		"diams": "♦",
		"die": "¨",
		"DifferentialD": "ⅆ",
		"digamma": "ϝ",
		"disin": "⋲",
		"div": "÷",
		"divide": "÷",
		"divideontimes": "⋇",
		"divonx": "⋇",
		"DJcy": "Ђ",
		"djcy": "ђ",
		"dlcorn": "⌞",
		"dlcrop": "⌍",
		"dollar": "$",
		"Dopf": "𝔻",
		"dopf": "𝕕",
		"Dot": "¨",
		"dot": "˙",
		"DotDot": "⃜",
		"doteq": "≐",
		"doteqdot": "≑",
		"DotEqual": "≐",
		"dotminus": "∸",
		"dotplus": "∔",
		"dotsquare": "⊡",
		"doublebarwedge": "⌆",
		"DoubleContourIntegral": "∯",
		"DoubleDot": "¨",
		"DoubleDownArrow": "⇓",
		"DoubleLeftArrow": "⇐",
		"DoubleLeftRightArrow": "⇔",
		"DoubleLeftTee": "⫤",
		"DoubleLongLeftArrow": "⟸",
		"DoubleLongLeftRightArrow": "⟺",
		"DoubleLongRightArrow": "⟹",
		"DoubleRightArrow": "⇒",
		"DoubleRightTee": "⊨",
		"DoubleUpArrow": "⇑",
		"DoubleUpDownArrow": "⇕",
		"DoubleVerticalBar": "∥",
		"DownArrowBar": "⤓",
		"downarrow": "↓",
		"DownArrow": "↓",
		"Downarrow": "⇓",
		"DownArrowUpArrow": "⇵",
		"DownBreve": "̑",
		"downdownarrows": "⇊",
		"downharpoonleft": "⇃",
		"downharpoonright": "⇂",
		"DownLeftRightVector": "⥐",
		"DownLeftTeeVector": "⥞",
		"DownLeftVectorBar": "⥖",
		"DownLeftVector": "↽",
		"DownRightTeeVector": "⥟",
		"DownRightVectorBar": "⥗",
		"DownRightVector": "⇁",
		"DownTeeArrow": "↧",
		"DownTee": "⊤",
		"drbkarow": "⤐",
		"drcorn": "⌟",
		"drcrop": "⌌",
		"Dscr": "𝒟",
		"dscr": "𝒹",
		"DScy": "Ѕ",
		"dscy": "ѕ",
		"dsol": "⧶",
		"Dstrok": "Đ",
		"dstrok": "đ",
		"dtdot": "⋱",
		"dtri": "▿",
		"dtrif": "▾",
		"duarr": "⇵",
		"duhar": "⥯",
		"dwangle": "⦦",
		"DZcy": "Џ",
		"dzcy": "џ",
		"dzigrarr": "⟿",
		"Eacute": "É",
		"eacute": "é",
		"easter": "⩮",
		"Ecaron": "Ě",
		"ecaron": "ě",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"ecir": "≖",
		"ecolon": "≕",
		"Ecy": "Э",
		"ecy": "э",
		"eDDot": "⩷",
		"Edot": "Ė",
		"edot": "ė",
		"eDot": "≑",
		"ee": "ⅇ",
		"efDot": "≒",
		"Efr": "𝔈",
		"efr": "𝔢",
		"eg": "⪚",
		"Egrave": "È",
		"egrave": "è",
		"egs": "⪖",
		"egsdot": "⪘",
		"el": "⪙",
		"Element": "∈",
		"elinters": "⏧",
		"ell": "ℓ",
		"els": "⪕",
		"elsdot": "⪗",
		"Emacr": "Ē",
		"emacr": "ē",
		"empty": "∅",
		"emptyset": "∅",
		"EmptySmallSquare": "◻",
		"emptyv": "∅",
		"EmptyVerySmallSquare": "▫",
		"emsp13": " ",
		"emsp14": " ",
		"emsp": " ",
		"ENG": "Ŋ",
		"eng": "ŋ",
		"ensp": " ",
		"Eogon": "Ę",
		"eogon": "ę",
		"Eopf": "𝔼",
		"eopf": "𝕖",
		"epar": "⋕",
		"eparsl": "⧣",
		"eplus": "⩱",
		"epsi": "ε",
		"Epsilon": "Ε",
		"epsilon": "ε",
		"epsiv": "ϵ",
		"eqcirc": "≖",
		"eqcolon": "≕",
		"eqsim": "≂",
		"eqslantgtr": "⪖",
		"eqslantless": "⪕",
		"Equal": "⩵",
		"equals": "=",
		"EqualTilde": "≂",
		"equest": "≟",
		"Equilibrium": "⇌",
		"equiv": "≡",
		"equivDD": "⩸",
		"eqvparsl": "⧥",
		"erarr": "⥱",
		"erDot": "≓",
		"escr": "ℯ",
		"Escr": "ℰ",
		"esdot": "≐",
		"Esim": "⩳",
		"esim": "≂",
		"Eta": "Η",
		"eta": "η",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"euro": "€",
		"excl": "!",
		"exist": "∃",
		"Exists": "∃",
		"expectation": "ℰ",
		"exponentiale": "ⅇ",
		"ExponentialE": "ⅇ",
		"fallingdotseq": "≒",
		"Fcy": "Ф",
		"fcy": "ф",
		"female": "♀",
		"ffilig": "ﬃ",
		"fflig": "ﬀ",
		"ffllig": "ﬄ",
		"Ffr": "𝔉",
		"ffr": "𝔣",
		"filig": "ﬁ",
		"FilledSmallSquare": "◼",
		"FilledVerySmallSquare": "▪",
		"fjlig": "fj",
		"flat": "♭",
		"fllig": "ﬂ",
		"fltns": "▱",
		"fnof": "ƒ",
		"Fopf": "𝔽",
		"fopf": "𝕗",
		"forall": "∀",
		"ForAll": "∀",
		"fork": "⋔",
		"forkv": "⫙",
		"Fouriertrf": "ℱ",
		"fpartint": "⨍",
		"frac12": "½",
		"frac13": "⅓",
		"frac14": "¼",
		"frac15": "⅕",
		"frac16": "⅙",
		"frac18": "⅛",
		"frac23": "⅔",
		"frac25": "⅖",
		"frac34": "¾",
		"frac35": "⅗",
		"frac38": "⅜",
		"frac45": "⅘",
		"frac56": "⅚",
		"frac58": "⅝",
		"frac78": "⅞",
		"frasl": "⁄",
		"frown": "⌢",
		"fscr": "𝒻",
		"Fscr": "ℱ",
		"gacute": "ǵ",
		"Gamma": "Γ",
		"gamma": "γ",
		"Gammad": "Ϝ",
		"gammad": "ϝ",
		"gap": "⪆",
		"Gbreve": "Ğ",
		"gbreve": "ğ",
		"Gcedil": "Ģ",
		"Gcirc": "Ĝ",
		"gcirc": "ĝ",
		"Gcy": "Г",
		"gcy": "г",
		"Gdot": "Ġ",
		"gdot": "ġ",
		"ge": "≥",
		"gE": "≧",
		"gEl": "⪌",
		"gel": "⋛",
		"geq": "≥",
		"geqq": "≧",
		"geqslant": "⩾",
		"gescc": "⪩",
		"ges": "⩾",
		"gesdot": "⪀",
		"gesdoto": "⪂",
		"gesdotol": "⪄",
		"gesl": "⋛︀",
		"gesles": "⪔",
		"Gfr": "𝔊",
		"gfr": "𝔤",
		"gg": "≫",
		"Gg": "⋙",
		"ggg": "⋙",
		"gimel": "ℷ",
		"GJcy": "Ѓ",
		"gjcy": "ѓ",
		"gla": "⪥",
		"gl": "≷",
		"glE": "⪒",
		"glj": "⪤",
		"gnap": "⪊",
		"gnapprox": "⪊",
		"gne": "⪈",
		"gnE": "≩",
		"gneq": "⪈",
		"gneqq": "≩",
		"gnsim": "⋧",
		"Gopf": "𝔾",
		"gopf": "𝕘",
		"grave": "`",
		"GreaterEqual": "≥",
		"GreaterEqualLess": "⋛",
		"GreaterFullEqual": "≧",
		"GreaterGreater": "⪢",
		"GreaterLess": "≷",
		"GreaterSlantEqual": "⩾",
		"GreaterTilde": "≳",
		"Gscr": "𝒢",
		"gscr": "ℊ",
		"gsim": "≳",
		"gsime": "⪎",
		"gsiml": "⪐",
		"gtcc": "⪧",
		"gtcir": "⩺",
		"gt": ">",
		"GT": ">",
		"Gt": "≫",
		"gtdot": "⋗",
		"gtlPar": "⦕",
		"gtquest": "⩼",
		"gtrapprox": "⪆",
		"gtrarr": "⥸",
		"gtrdot": "⋗",
		"gtreqless": "⋛",
		"gtreqqless": "⪌",
		"gtrless": "≷",
		"gtrsim": "≳",
		"gvertneqq": "≩︀",
		"gvnE": "≩︀",
		"Hacek": "ˇ",
		"hairsp": " ",
		"half": "½",
		"hamilt": "ℋ",
		"HARDcy": "Ъ",
		"hardcy": "ъ",
		"harrcir": "⥈",
		"harr": "↔",
		"hArr": "⇔",
		"harrw": "↭",
		"Hat": "^",
		"hbar": "ℏ",
		"Hcirc": "Ĥ",
		"hcirc": "ĥ",
		"hearts": "♥",
		"heartsuit": "♥",
		"hellip": "…",
		"hercon": "⊹",
		"hfr": "𝔥",
		"Hfr": "ℌ",
		"HilbertSpace": "ℋ",
		"hksearow": "⤥",
		"hkswarow": "⤦",
		"hoarr": "⇿",
		"homtht": "∻",
		"hookleftarrow": "↩",
		"hookrightarrow": "↪",
		"hopf": "𝕙",
		"Hopf": "ℍ",
		"horbar": "―",
		"HorizontalLine": "─",
		"hscr": "𝒽",
		"Hscr": "ℋ",
		"hslash": "ℏ",
		"Hstrok": "Ħ",
		"hstrok": "ħ",
		"HumpDownHump": "≎",
		"HumpEqual": "≏",
		"hybull": "⁃",
		"hyphen": "‐",
		"Iacute": "Í",
		"iacute": "í",
		"ic": "⁣",
		"Icirc": "Î",
		"icirc": "î",
		"Icy": "И",
		"icy": "и",
		"Idot": "İ",
		"IEcy": "Е",
		"iecy": "е",
		"iexcl": "¡",
		"iff": "⇔",
		"ifr": "𝔦",
		"Ifr": "ℑ",
		"Igrave": "Ì",
		"igrave": "ì",
		"ii": "ⅈ",
		"iiiint": "⨌",
		"iiint": "∭",
		"iinfin": "⧜",
		"iiota": "℩",
		"IJlig": "Ĳ",
		"ijlig": "ĳ",
		"Imacr": "Ī",
		"imacr": "ī",
		"image": "ℑ",
		"ImaginaryI": "ⅈ",
		"imagline": "ℐ",
		"imagpart": "ℑ",
		"imath": "ı",
		"Im": "ℑ",
		"imof": "⊷",
		"imped": "Ƶ",
		"Implies": "⇒",
		"incare": "℅",
		"in": "∈",
		"infin": "∞",
		"infintie": "⧝",
		"inodot": "ı",
		"intcal": "⊺",
		"int": "∫",
		"Int": "∬",
		"integers": "ℤ",
		"Integral": "∫",
		"intercal": "⊺",
		"Intersection": "⋂",
		"intlarhk": "⨗",
		"intprod": "⨼",
		"InvisibleComma": "⁣",
		"InvisibleTimes": "⁢",
		"IOcy": "Ё",
		"iocy": "ё",
		"Iogon": "Į",
		"iogon": "į",
		"Iopf": "𝕀",
		"iopf": "𝕚",
		"Iota": "Ι",
		"iota": "ι",
		"iprod": "⨼",
		"iquest": "¿",
		"iscr": "𝒾",
		"Iscr": "ℐ",
		"isin": "∈",
		"isindot": "⋵",
		"isinE": "⋹",
		"isins": "⋴",
		"isinsv": "⋳",
		"isinv": "∈",
		"it": "⁢",
		"Itilde": "Ĩ",
		"itilde": "ĩ",
		"Iukcy": "І",
		"iukcy": "і",
		"Iuml": "Ï",
		"iuml": "ï",
		"Jcirc": "Ĵ",
		"jcirc": "ĵ",
		"Jcy": "Й",
		"jcy": "й",
		"Jfr": "𝔍",
		"jfr": "𝔧",
		"jmath": "ȷ",
		"Jopf": "𝕁",
		"jopf": "𝕛",
		"Jscr": "𝒥",
		"jscr": "𝒿",
		"Jsercy": "Ј",
		"jsercy": "ј",
		"Jukcy": "Є",
		"jukcy": "є",
		"Kappa": "Κ",
		"kappa": "κ",
		"kappav": "ϰ",
		"Kcedil": "Ķ",
		"kcedil": "ķ",
		"Kcy": "К",
		"kcy": "к",
		"Kfr": "𝔎",
		"kfr": "𝔨",
		"kgreen": "ĸ",
		"KHcy": "Х",
		"khcy": "х",
		"KJcy": "Ќ",
		"kjcy": "ќ",
		"Kopf": "𝕂",
		"kopf": "𝕜",
		"Kscr": "𝒦",
		"kscr": "𝓀",
		"lAarr": "⇚",
		"Lacute": "Ĺ",
		"lacute": "ĺ",
		"laemptyv": "⦴",
		"lagran": "ℒ",
		"Lambda": "Λ",
		"lambda": "λ",
		"lang": "⟨",
		"Lang": "⟪",
		"langd": "⦑",
		"langle": "⟨",
		"lap": "⪅",
		"Laplacetrf": "ℒ",
		"laquo": "«",
		"larrb": "⇤",
		"larrbfs": "⤟",
		"larr": "←",
		"Larr": "↞",
		"lArr": "⇐",
		"larrfs": "⤝",
		"larrhk": "↩",
		"larrlp": "↫",
		"larrpl": "⤹",
		"larrsim": "⥳",
		"larrtl": "↢",
		"latail": "⤙",
		"lAtail": "⤛",
		"lat": "⪫",
		"late": "⪭",
		"lates": "⪭︀",
		"lbarr": "⤌",
		"lBarr": "⤎",
		"lbbrk": "❲",
		"lbrace": "{",
		"lbrack": "[",
		"lbrke": "⦋",
		"lbrksld": "⦏",
		"lbrkslu": "⦍",
		"Lcaron": "Ľ",
		"lcaron": "ľ",
		"Lcedil": "Ļ",
		"lcedil": "ļ",
		"lceil": "⌈",
		"lcub": "{",
		"Lcy": "Л",
		"lcy": "л",
		"ldca": "⤶",
		"ldquo": "“",
		"ldquor": "„",
		"ldrdhar": "⥧",
		"ldrushar": "⥋",
		"ldsh": "↲",
		"le": "≤",
		"lE": "≦",
		"LeftAngleBracket": "⟨",
		"LeftArrowBar": "⇤",
		"leftarrow": "←",
		"LeftArrow": "←",
		"Leftarrow": "⇐",
		"LeftArrowRightArrow": "⇆",
		"leftarrowtail": "↢",
		"LeftCeiling": "⌈",
		"LeftDoubleBracket": "⟦",
		"LeftDownTeeVector": "⥡",
		"LeftDownVectorBar": "⥙",
		"LeftDownVector": "⇃",
		"LeftFloor": "⌊",
		"leftharpoondown": "↽",
		"leftharpoonup": "↼",
		"leftleftarrows": "⇇",
		"leftrightarrow": "↔",
		"LeftRightArrow": "↔",
		"Leftrightarrow": "⇔",
		"leftrightarrows": "⇆",
		"leftrightharpoons": "⇋",
		"leftrightsquigarrow": "↭",
		"LeftRightVector": "⥎",
		"LeftTeeArrow": "↤",
		"LeftTee": "⊣",
		"LeftTeeVector": "⥚",
		"leftthreetimes": "⋋",
		"LeftTriangleBar": "⧏",
		"LeftTriangle": "⊲",
		"LeftTriangleEqual": "⊴",
		"LeftUpDownVector": "⥑",
		"LeftUpTeeVector": "⥠",
		"LeftUpVectorBar": "⥘",
		"LeftUpVector": "↿",
		"LeftVectorBar": "⥒",
		"LeftVector": "↼",
		"lEg": "⪋",
		"leg": "⋚",
		"leq": "≤",
		"leqq": "≦",
		"leqslant": "⩽",
		"lescc": "⪨",
		"les": "⩽",
		"lesdot": "⩿",
		"lesdoto": "⪁",
		"lesdotor": "⪃",
		"lesg": "⋚︀",
		"lesges": "⪓",
		"lessapprox": "⪅",
		"lessdot": "⋖",
		"lesseqgtr": "⋚",
		"lesseqqgtr": "⪋",
		"LessEqualGreater": "⋚",
		"LessFullEqual": "≦",
		"LessGreater": "≶",
		"lessgtr": "≶",
		"LessLess": "⪡",
		"lesssim": "≲",
		"LessSlantEqual": "⩽",
		"LessTilde": "≲",
		"lfisht": "⥼",
		"lfloor": "⌊",
		"Lfr": "𝔏",
		"lfr": "𝔩",
		"lg": "≶",
		"lgE": "⪑",
		"lHar": "⥢",
		"lhard": "↽",
		"lharu": "↼",
		"lharul": "⥪",
		"lhblk": "▄",
		"LJcy": "Љ",
		"ljcy": "љ",
		"llarr": "⇇",
		"ll": "≪",
		"Ll": "⋘",
		"llcorner": "⌞",
		"Lleftarrow": "⇚",
		"llhard": "⥫",
		"lltri": "◺",
		"Lmidot": "Ŀ",
		"lmidot": "ŀ",
		"lmoustache": "⎰",
		"lmoust": "⎰",
		"lnap": "⪉",
		"lnapprox": "⪉",
		"lne": "⪇",
		"lnE": "≨",
		"lneq": "⪇",
		"lneqq": "≨",
		"lnsim": "⋦",
		"loang": "⟬",
		"loarr": "⇽",
		"lobrk": "⟦",
		"longleftarrow": "⟵",
		"LongLeftArrow": "⟵",
		"Longleftarrow": "⟸",
		"longleftrightarrow": "⟷",
		"LongLeftRightArrow": "⟷",
		"Longleftrightarrow": "⟺",
		"longmapsto": "⟼",
		"longrightarrow": "⟶",
		"LongRightArrow": "⟶",
		"Longrightarrow": "⟹",
		"looparrowleft": "↫",
		"looparrowright": "↬",
		"lopar": "⦅",
		"Lopf": "𝕃",
		"lopf": "𝕝",
		"loplus": "⨭",
		"lotimes": "⨴",
		"lowast": "∗",
		"lowbar": "_",
		"LowerLeftArrow": "↙",
		"LowerRightArrow": "↘",
		"loz": "◊",
		"lozenge": "◊",
		"lozf": "⧫",
		"lpar": "(",
		"lparlt": "⦓",
		"lrarr": "⇆",
		"lrcorner": "⌟",
		"lrhar": "⇋",
		"lrhard": "⥭",
		"lrm": "‎",
		"lrtri": "⊿",
		"lsaquo": "‹",
		"lscr": "𝓁",
		"Lscr": "ℒ",
		"lsh": "↰",
		"Lsh": "↰",
		"lsim": "≲",
		"lsime": "⪍",
		"lsimg": "⪏",
		"lsqb": "[",
		"lsquo": "‘",
		"lsquor": "‚",
		"Lstrok": "Ł",
		"lstrok": "ł",
		"ltcc": "⪦",
		"ltcir": "⩹",
		"lt": "<",
		"LT": "<",
		"Lt": "≪",
		"ltdot": "⋖",
		"lthree": "⋋",
		"ltimes": "⋉",
		"ltlarr": "⥶",
		"ltquest": "⩻",
		"ltri": "◃",
		"ltrie": "⊴",
		"ltrif": "◂",
		"ltrPar": "⦖",
		"lurdshar": "⥊",
		"luruhar": "⥦",
		"lvertneqq": "≨︀",
		"lvnE": "≨︀",
		"macr": "¯",
		"male": "♂",
		"malt": "✠",
		"maltese": "✠",
		"Map": "⤅",
		"map": "↦",
		"mapsto": "↦",
		"mapstodown": "↧",
		"mapstoleft": "↤",
		"mapstoup": "↥",
		"marker": "▮",
		"mcomma": "⨩",
		"Mcy": "М",
		"mcy": "м",
		"mdash": "—",
		"mDDot": "∺",
		"measuredangle": "∡",
		"MediumSpace": " ",
		"Mellintrf": "ℳ",
		"Mfr": "𝔐",
		"mfr": "𝔪",
		"mho": "℧",
		"micro": "µ",
		"midast": "*",
		"midcir": "⫰",
		"mid": "∣",
		"middot": "·",
		"minusb": "⊟",
		"minus": "−",
		"minusd": "∸",
		"minusdu": "⨪",
		"MinusPlus": "∓",
		"mlcp": "⫛",
		"mldr": "…",
		"mnplus": "∓",
		"models": "⊧",
		"Mopf": "𝕄",
		"mopf": "𝕞",
		"mp": "∓",
		"mscr": "𝓂",
		"Mscr": "ℳ",
		"mstpos": "∾",
		"Mu": "Μ",
		"mu": "μ",
		"multimap": "⊸",
		"mumap": "⊸",
		"nabla": "∇",
		"Nacute": "Ń",
		"nacute": "ń",
		"nang": "∠⃒",
		"nap": "≉",
		"napE": "⩰̸",
		"napid": "≋̸",
		"napos": "ŉ",
		"napprox": "≉",
		"natural": "♮",
		"naturals": "ℕ",
		"natur": "♮",
		"nbsp": " ",
		"nbump": "≎̸",
		"nbumpe": "≏̸",
		"ncap": "⩃",
		"Ncaron": "Ň",
		"ncaron": "ň",
		"Ncedil": "Ņ",
		"ncedil": "ņ",
		"ncong": "≇",
		"ncongdot": "⩭̸",
		"ncup": "⩂",
		"Ncy": "Н",
		"ncy": "н",
		"ndash": "–",
		"nearhk": "⤤",
		"nearr": "↗",
		"neArr": "⇗",
		"nearrow": "↗",
		"ne": "≠",
		"nedot": "≐̸",
		"NegativeMediumSpace": "​",
		"NegativeThickSpace": "​",
		"NegativeThinSpace": "​",
		"NegativeVeryThinSpace": "​",
		"nequiv": "≢",
		"nesear": "⤨",
		"nesim": "≂̸",
		"NestedGreaterGreater": "≫",
		"NestedLessLess": "≪",
		"NewLine": "\n",
		"nexist": "∄",
		"nexists": "∄",
		"Nfr": "𝔑",
		"nfr": "𝔫",
		"ngE": "≧̸",
		"nge": "≱",
		"ngeq": "≱",
		"ngeqq": "≧̸",
		"ngeqslant": "⩾̸",
		"nges": "⩾̸",
		"nGg": "⋙̸",
		"ngsim": "≵",
		"nGt": "≫⃒",
		"ngt": "≯",
		"ngtr": "≯",
		"nGtv": "≫̸",
		"nharr": "↮",
		"nhArr": "⇎",
		"nhpar": "⫲",
		"ni": "∋",
		"nis": "⋼",
		"nisd": "⋺",
		"niv": "∋",
		"NJcy": "Њ",
		"njcy": "њ",
		"nlarr": "↚",
		"nlArr": "⇍",
		"nldr": "‥",
		"nlE": "≦̸",
		"nle": "≰",
		"nleftarrow": "↚",
		"nLeftarrow": "⇍",
		"nleftrightarrow": "↮",
		"nLeftrightarrow": "⇎",
		"nleq": "≰",
		"nleqq": "≦̸",
		"nleqslant": "⩽̸",
		"nles": "⩽̸",
		"nless": "≮",
		"nLl": "⋘̸",
		"nlsim": "≴",
		"nLt": "≪⃒",
		"nlt": "≮",
		"nltri": "⋪",
		"nltrie": "⋬",
		"nLtv": "≪̸",
		"nmid": "∤",
		"NoBreak": "⁠",
		"NonBreakingSpace": " ",
		"nopf": "𝕟",
		"Nopf": "ℕ",
		"Not": "⫬",
		"not": "¬",
		"NotCongruent": "≢",
		"NotCupCap": "≭",
		"NotDoubleVerticalBar": "∦",
		"NotElement": "∉",
		"NotEqual": "≠",
		"NotEqualTilde": "≂̸",
		"NotExists": "∄",
		"NotGreater": "≯",
		"NotGreaterEqual": "≱",
		"NotGreaterFullEqual": "≧̸",
		"NotGreaterGreater": "≫̸",
		"NotGreaterLess": "≹",
		"NotGreaterSlantEqual": "⩾̸",
		"NotGreaterTilde": "≵",
		"NotHumpDownHump": "≎̸",
		"NotHumpEqual": "≏̸",
		"notin": "∉",
		"notindot": "⋵̸",
		"notinE": "⋹̸",
		"notinva": "∉",
		"notinvb": "⋷",
		"notinvc": "⋶",
		"NotLeftTriangleBar": "⧏̸",
		"NotLeftTriangle": "⋪",
		"NotLeftTriangleEqual": "⋬",
		"NotLess": "≮",
		"NotLessEqual": "≰",
		"NotLessGreater": "≸",
		"NotLessLess": "≪̸",
		"NotLessSlantEqual": "⩽̸",
		"NotLessTilde": "≴",
		"NotNestedGreaterGreater": "⪢̸",
		"NotNestedLessLess": "⪡̸",
		"notni": "∌",
		"notniva": "∌",
		"notnivb": "⋾",
		"notnivc": "⋽",
		"NotPrecedes": "⊀",
		"NotPrecedesEqual": "⪯̸",
		"NotPrecedesSlantEqual": "⋠",
		"NotReverseElement": "∌",
		"NotRightTriangleBar": "⧐̸",
		"NotRightTriangle": "⋫",
		"NotRightTriangleEqual": "⋭",
		"NotSquareSubset": "⊏̸",
		"NotSquareSubsetEqual": "⋢",
		"NotSquareSuperset": "⊐̸",
		"NotSquareSupersetEqual": "⋣",
		"NotSubset": "⊂⃒",
		"NotSubsetEqual": "⊈",
		"NotSucceeds": "⊁",
		"NotSucceedsEqual": "⪰̸",
		"NotSucceedsSlantEqual": "⋡",
		"NotSucceedsTilde": "≿̸",
		"NotSuperset": "⊃⃒",
		"NotSupersetEqual": "⊉",
		"NotTilde": "≁",
		"NotTildeEqual": "≄",
		"NotTildeFullEqual": "≇",
		"NotTildeTilde": "≉",
		"NotVerticalBar": "∤",
		"nparallel": "∦",
		"npar": "∦",
		"nparsl": "⫽⃥",
		"npart": "∂̸",
		"npolint": "⨔",
		"npr": "⊀",
		"nprcue": "⋠",
		"nprec": "⊀",
		"npreceq": "⪯̸",
		"npre": "⪯̸",
		"nrarrc": "⤳̸",
		"nrarr": "↛",
		"nrArr": "⇏",
		"nrarrw": "↝̸",
		"nrightarrow": "↛",
		"nRightarrow": "⇏",
		"nrtri": "⋫",
		"nrtrie": "⋭",
		"nsc": "⊁",
		"nsccue": "⋡",
		"nsce": "⪰̸",
		"Nscr": "𝒩",
		"nscr": "𝓃",
		"nshortmid": "∤",
		"nshortparallel": "∦",
		"nsim": "≁",
		"nsime": "≄",
		"nsimeq": "≄",
		"nsmid": "∤",
		"nspar": "∦",
		"nsqsube": "⋢",
		"nsqsupe": "⋣",
		"nsub": "⊄",
		"nsubE": "⫅̸",
		"nsube": "⊈",
		"nsubset": "⊂⃒",
		"nsubseteq": "⊈",
		"nsubseteqq": "⫅̸",
		"nsucc": "⊁",
		"nsucceq": "⪰̸",
		"nsup": "⊅",
		"nsupE": "⫆̸",
		"nsupe": "⊉",
		"nsupset": "⊃⃒",
		"nsupseteq": "⊉",
		"nsupseteqq": "⫆̸",
		"ntgl": "≹",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"ntlg": "≸",
		"ntriangleleft": "⋪",
		"ntrianglelefteq": "⋬",
		"ntriangleright": "⋫",
		"ntrianglerighteq": "⋭",
		"Nu": "Ν",
		"nu": "ν",
		"num": "#",
		"numero": "№",
		"numsp": " ",
		"nvap": "≍⃒",
		"nvdash": "⊬",
		"nvDash": "⊭",
		"nVdash": "⊮",
		"nVDash": "⊯",
		"nvge": "≥⃒",
		"nvgt": ">⃒",
		"nvHarr": "⤄",
		"nvinfin": "⧞",
		"nvlArr": "⤂",
		"nvle": "≤⃒",
		"nvlt": "<⃒",
		"nvltrie": "⊴⃒",
		"nvrArr": "⤃",
		"nvrtrie": "⊵⃒",
		"nvsim": "∼⃒",
		"nwarhk": "⤣",
		"nwarr": "↖",
		"nwArr": "⇖",
		"nwarrow": "↖",
		"nwnear": "⤧",
		"Oacute": "Ó",
		"oacute": "ó",
		"oast": "⊛",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"ocir": "⊚",
		"Ocy": "О",
		"ocy": "о",
		"odash": "⊝",
		"Odblac": "Ő",
		"odblac": "ő",
		"odiv": "⨸",
		"odot": "⊙",
		"odsold": "⦼",
		"OElig": "Œ",
		"oelig": "œ",
		"ofcir": "⦿",
		"Ofr": "𝔒",
		"ofr": "𝔬",
		"ogon": "˛",
		"Ograve": "Ò",
		"ograve": "ò",
		"ogt": "⧁",
		"ohbar": "⦵",
		"ohm": "Ω",
		"oint": "∮",
		"olarr": "↺",
		"olcir": "⦾",
		"olcross": "⦻",
		"oline": "‾",
		"olt": "⧀",
		"Omacr": "Ō",
		"omacr": "ō",
		"Omega": "Ω",
		"omega": "ω",
		"Omicron": "Ο",
		"omicron": "ο",
		"omid": "⦶",
		"ominus": "⊖",
		"Oopf": "𝕆",
		"oopf": "𝕠",
		"opar": "⦷",
		"OpenCurlyDoubleQuote": "“",
		"OpenCurlyQuote": "‘",
		"operp": "⦹",
		"oplus": "⊕",
		"orarr": "↻",
		"Or": "⩔",
		"or": "∨",
		"ord": "⩝",
		"order": "ℴ",
		"orderof": "ℴ",
		"ordf": "ª",
		"ordm": "º",
		"origof": "⊶",
		"oror": "⩖",
		"orslope": "⩗",
		"orv": "⩛",
		"oS": "Ⓢ",
		"Oscr": "𝒪",
		"oscr": "ℴ",
		"Oslash": "Ø",
		"oslash": "ø",
		"osol": "⊘",
		"Otilde": "Õ",
		"otilde": "õ",
		"otimesas": "⨶",
		"Otimes": "⨷",
		"otimes": "⊗",
		"Ouml": "Ö",
		"ouml": "ö",
		"ovbar": "⌽",
		"OverBar": "‾",
		"OverBrace": "⏞",
		"OverBracket": "⎴",
		"OverParenthesis": "⏜",
		"para": "¶",
		"parallel": "∥",
		"par": "∥",
		"parsim": "⫳",
		"parsl": "⫽",
		"part": "∂",
		"PartialD": "∂",
		"Pcy": "П",
		"pcy": "п",
		"percnt": "%",
		"period": ".",
		"permil": "‰",
		"perp": "⊥",
		"pertenk": "‱",
		"Pfr": "𝔓",
		"pfr": "𝔭",
		"Phi": "Φ",
		"phi": "φ",
		"phiv": "ϕ",
		"phmmat": "ℳ",
		"phone": "☎",
		"Pi": "Π",
		"pi": "π",
		"pitchfork": "⋔",
		"piv": "ϖ",
		"planck": "ℏ",
		"planckh": "ℎ",
		"plankv": "ℏ",
		"plusacir": "⨣",
		"plusb": "⊞",
		"pluscir": "⨢",
		"plus": "+",
		"plusdo": "∔",
		"plusdu": "⨥",
		"pluse": "⩲",
		"PlusMinus": "±",
		"plusmn": "±",
		"plussim": "⨦",
		"plustwo": "⨧",
		"pm": "±",
		"Poincareplane": "ℌ",
		"pointint": "⨕",
		"popf": "𝕡",
		"Popf": "ℙ",
		"pound": "£",
		"prap": "⪷",
		"Pr": "⪻",
		"pr": "≺",
		"prcue": "≼",
		"precapprox": "⪷",
		"prec": "≺",
		"preccurlyeq": "≼",
		"Precedes": "≺",
		"PrecedesEqual": "⪯",
		"PrecedesSlantEqual": "≼",
		"PrecedesTilde": "≾",
		"preceq": "⪯",
		"precnapprox": "⪹",
		"precneqq": "⪵",
		"precnsim": "⋨",
		"pre": "⪯",
		"prE": "⪳",
		"precsim": "≾",
		"prime": "′",
		"Prime": "″",
		"primes": "ℙ",
		"prnap": "⪹",
		"prnE": "⪵",
		"prnsim": "⋨",
		"prod": "∏",
		"Product": "∏",
		"profalar": "⌮",
		"profline": "⌒",
		"profsurf": "⌓",
		"prop": "∝",
		"Proportional": "∝",
		"Proportion": "∷",
		"propto": "∝",
		"prsim": "≾",
		"prurel": "⊰",
		"Pscr": "𝒫",
		"pscr": "𝓅",
		"Psi": "Ψ",
		"psi": "ψ",
		"puncsp": " ",
		"Qfr": "𝔔",
		"qfr": "𝔮",
		"qint": "⨌",
		"qopf": "𝕢",
		"Qopf": "ℚ",
		"qprime": "⁗",
		"Qscr": "𝒬",
		"qscr": "𝓆",
		"quaternions": "ℍ",
		"quatint": "⨖",
		"quest": "?",
		"questeq": "≟",
		"quot": "\"",
		"QUOT": "\"",
		"rAarr": "⇛",
		"race": "∽̱",
		"Racute": "Ŕ",
		"racute": "ŕ",
		"radic": "√",
		"raemptyv": "⦳",
		"rang": "⟩",
		"Rang": "⟫",
		"rangd": "⦒",
		"range": "⦥",
		"rangle": "⟩",
		"raquo": "»",
		"rarrap": "⥵",
		"rarrb": "⇥",
		"rarrbfs": "⤠",
		"rarrc": "⤳",
		"rarr": "→",
		"Rarr": "↠",
		"rArr": "⇒",
		"rarrfs": "⤞",
		"rarrhk": "↪",
		"rarrlp": "↬",
		"rarrpl": "⥅",
		"rarrsim": "⥴",
		"Rarrtl": "⤖",
		"rarrtl": "↣",
		"rarrw": "↝",
		"ratail": "⤚",
		"rAtail": "⤜",
		"ratio": "∶",
		"rationals": "ℚ",
		"rbarr": "⤍",
		"rBarr": "⤏",
		"RBarr": "⤐",
		"rbbrk": "❳",
		"rbrace": "}",
		"rbrack": "]",
		"rbrke": "⦌",
		"rbrksld": "⦎",
		"rbrkslu": "⦐",
		"Rcaron": "Ř",
		"rcaron": "ř",
		"Rcedil": "Ŗ",
		"rcedil": "ŗ",
		"rceil": "⌉",
		"rcub": "}",
		"Rcy": "Р",
		"rcy": "р",
		"rdca": "⤷",
		"rdldhar": "⥩",
		"rdquo": "”",
		"rdquor": "”",
		"rdsh": "↳",
		"real": "ℜ",
		"realine": "ℛ",
		"realpart": "ℜ",
		"reals": "ℝ",
		"Re": "ℜ",
		"rect": "▭",
		"reg": "®",
		"REG": "®",
		"ReverseElement": "∋",
		"ReverseEquilibrium": "⇋",
		"ReverseUpEquilibrium": "⥯",
		"rfisht": "⥽",
		"rfloor": "⌋",
		"rfr": "𝔯",
		"Rfr": "ℜ",
		"rHar": "⥤",
		"rhard": "⇁",
		"rharu": "⇀",
		"rharul": "⥬",
		"Rho": "Ρ",
		"rho": "ρ",
		"rhov": "ϱ",
		"RightAngleBracket": "⟩",
		"RightArrowBar": "⇥",
		"rightarrow": "→",
		"RightArrow": "→",
		"Rightarrow": "⇒",
		"RightArrowLeftArrow": "⇄",
		"rightarrowtail": "↣",
		"RightCeiling": "⌉",
		"RightDoubleBracket": "⟧",
		"RightDownTeeVector": "⥝",
		"RightDownVectorBar": "⥕",
		"RightDownVector": "⇂",
		"RightFloor": "⌋",
		"rightharpoondown": "⇁",
		"rightharpoonup": "⇀",
		"rightleftarrows": "⇄",
		"rightleftharpoons": "⇌",
		"rightrightarrows": "⇉",
		"rightsquigarrow": "↝",
		"RightTeeArrow": "↦",
		"RightTee": "⊢",
		"RightTeeVector": "⥛",
		"rightthreetimes": "⋌",
		"RightTriangleBar": "⧐",
		"RightTriangle": "⊳",
		"RightTriangleEqual": "⊵",
		"RightUpDownVector": "⥏",
		"RightUpTeeVector": "⥜",
		"RightUpVectorBar": "⥔",
		"RightUpVector": "↾",
		"RightVectorBar": "⥓",
		"RightVector": "⇀",
		"ring": "˚",
		"risingdotseq": "≓",
		"rlarr": "⇄",
		"rlhar": "⇌",
		"rlm": "‏",
		"rmoustache": "⎱",
		"rmoust": "⎱",
		"rnmid": "⫮",
		"roang": "⟭",
		"roarr": "⇾",
		"robrk": "⟧",
		"ropar": "⦆",
		"ropf": "𝕣",
		"Ropf": "ℝ",
		"roplus": "⨮",
		"rotimes": "⨵",
		"RoundImplies": "⥰",
		"rpar": ")",
		"rpargt": "⦔",
		"rppolint": "⨒",
		"rrarr": "⇉",
		"Rrightarrow": "⇛",
		"rsaquo": "›",
		"rscr": "𝓇",
		"Rscr": "ℛ",
		"rsh": "↱",
		"Rsh": "↱",
		"rsqb": "]",
		"rsquo": "’",
		"rsquor": "’",
		"rthree": "⋌",
		"rtimes": "⋊",
		"rtri": "▹",
		"rtrie": "⊵",
		"rtrif": "▸",
		"rtriltri": "⧎",
		"RuleDelayed": "⧴",
		"ruluhar": "⥨",
		"rx": "℞",
		"Sacute": "Ś",
		"sacute": "ś",
		"sbquo": "‚",
		"scap": "⪸",
		"Scaron": "Š",
		"scaron": "š",
		"Sc": "⪼",
		"sc": "≻",
		"sccue": "≽",
		"sce": "⪰",
		"scE": "⪴",
		"Scedil": "Ş",
		"scedil": "ş",
		"Scirc": "Ŝ",
		"scirc": "ŝ",
		"scnap": "⪺",
		"scnE": "⪶",
		"scnsim": "⋩",
		"scpolint": "⨓",
		"scsim": "≿",
		"Scy": "С",
		"scy": "с",
		"sdotb": "⊡",
		"sdot": "⋅",
		"sdote": "⩦",
		"searhk": "⤥",
		"searr": "↘",
		"seArr": "⇘",
		"searrow": "↘",
		"sect": "§",
		"semi": ";",
		"seswar": "⤩",
		"setminus": "∖",
		"setmn": "∖",
		"sext": "✶",
		"Sfr": "𝔖",
		"sfr": "𝔰",
		"sfrown": "⌢",
		"sharp": "♯",
		"SHCHcy": "Щ",
		"shchcy": "щ",
		"SHcy": "Ш",
		"shcy": "ш",
		"ShortDownArrow": "↓",
		"ShortLeftArrow": "←",
		"shortmid": "∣",
		"shortparallel": "∥",
		"ShortRightArrow": "→",
		"ShortUpArrow": "↑",
		"shy": "­",
		"Sigma": "Σ",
		"sigma": "σ",
		"sigmaf": "ς",
		"sigmav": "ς",
		"sim": "∼",
		"simdot": "⩪",
		"sime": "≃",
		"simeq": "≃",
		"simg": "⪞",
		"simgE": "⪠",
		"siml": "⪝",
		"simlE": "⪟",
		"simne": "≆",
		"simplus": "⨤",
		"simrarr": "⥲",
		"slarr": "←",
		"SmallCircle": "∘",
		"smallsetminus": "∖",
		"smashp": "⨳",
		"smeparsl": "⧤",
		"smid": "∣",
		"smile": "⌣",
		"smt": "⪪",
		"smte": "⪬",
		"smtes": "⪬︀",
		"SOFTcy": "Ь",
		"softcy": "ь",
		"solbar": "⌿",
		"solb": "⧄",
		"sol": "/",
		"Sopf": "𝕊",
		"sopf": "𝕤",
		"spades": "♠",
		"spadesuit": "♠",
		"spar": "∥",
		"sqcap": "⊓",
		"sqcaps": "⊓︀",
		"sqcup": "⊔",
		"sqcups": "⊔︀",
		"Sqrt": "√",
		"sqsub": "⊏",
		"sqsube": "⊑",
		"sqsubset": "⊏",
		"sqsubseteq": "⊑",
		"sqsup": "⊐",
		"sqsupe": "⊒",
		"sqsupset": "⊐",
		"sqsupseteq": "⊒",
		"square": "□",
		"Square": "□",
		"SquareIntersection": "⊓",
		"SquareSubset": "⊏",
		"SquareSubsetEqual": "⊑",
		"SquareSuperset": "⊐",
		"SquareSupersetEqual": "⊒",
		"SquareUnion": "⊔",
		"squarf": "▪",
		"squ": "□",
		"squf": "▪",
		"srarr": "→",
		"Sscr": "𝒮",
		"sscr": "𝓈",
		"ssetmn": "∖",
		"ssmile": "⌣",
		"sstarf": "⋆",
		"Star": "⋆",
		"star": "☆",
		"starf": "★",
		"straightepsilon": "ϵ",
		"straightphi": "ϕ",
		"strns": "¯",
		"sub": "⊂",
		"Sub": "⋐",
		"subdot": "⪽",
		"subE": "⫅",
		"sube": "⊆",
		"subedot": "⫃",
		"submult": "⫁",
		"subnE": "⫋",
		"subne": "⊊",
		"subplus": "⪿",
		"subrarr": "⥹",
		"subset": "⊂",
		"Subset": "⋐",
		"subseteq": "⊆",
		"subseteqq": "⫅",
		"SubsetEqual": "⊆",
		"subsetneq": "⊊",
		"subsetneqq": "⫋",
		"subsim": "⫇",
		"subsub": "⫕",
		"subsup": "⫓",
		"succapprox": "⪸",
		"succ": "≻",
		"succcurlyeq": "≽",
		"Succeeds": "≻",
		"SucceedsEqual": "⪰",
		"SucceedsSlantEqual": "≽",
		"SucceedsTilde": "≿",
		"succeq": "⪰",
		"succnapprox": "⪺",
		"succneqq": "⪶",
		"succnsim": "⋩",
		"succsim": "≿",
		"SuchThat": "∋",
		"sum": "∑",
		"Sum": "∑",
		"sung": "♪",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"sup": "⊃",
		"Sup": "⋑",
		"supdot": "⪾",
		"supdsub": "⫘",
		"supE": "⫆",
		"supe": "⊇",
		"supedot": "⫄",
		"Superset": "⊃",
		"SupersetEqual": "⊇",
		"suphsol": "⟉",
		"suphsub": "⫗",
		"suplarr": "⥻",
		"supmult": "⫂",
		"supnE": "⫌",
		"supne": "⊋",
		"supplus": "⫀",
		"supset": "⊃",
		"Supset": "⋑",
		"supseteq": "⊇",
		"supseteqq": "⫆",
		"supsetneq": "⊋",
		"supsetneqq": "⫌",
		"supsim": "⫈",
		"supsub": "⫔",
		"supsup": "⫖",
		"swarhk": "⤦",
		"swarr": "↙",
		"swArr": "⇙",
		"swarrow": "↙",
		"swnwar": "⤪",
		"szlig": "ß",
		"Tab": "\t",
		"target": "⌖",
		"Tau": "Τ",
		"tau": "τ",
		"tbrk": "⎴",
		"Tcaron": "Ť",
		"tcaron": "ť",
		"Tcedil": "Ţ",
		"tcedil": "ţ",
		"Tcy": "Т",
		"tcy": "т",
		"tdot": "⃛",
		"telrec": "⌕",
		"Tfr": "𝔗",
		"tfr": "𝔱",
		"there4": "∴",
		"therefore": "∴",
		"Therefore": "∴",
		"Theta": "Θ",
		"theta": "θ",
		"thetasym": "ϑ",
		"thetav": "ϑ",
		"thickapprox": "≈",
		"thicksim": "∼",
		"ThickSpace": "  ",
		"ThinSpace": " ",
		"thinsp": " ",
		"thkap": "≈",
		"thksim": "∼",
		"THORN": "Þ",
		"thorn": "þ",
		"tilde": "˜",
		"Tilde": "∼",
		"TildeEqual": "≃",
		"TildeFullEqual": "≅",
		"TildeTilde": "≈",
		"timesbar": "⨱",
		"timesb": "⊠",
		"times": "×",
		"timesd": "⨰",
		"tint": "∭",
		"toea": "⤨",
		"topbot": "⌶",
		"topcir": "⫱",
		"top": "⊤",
		"Topf": "𝕋",
		"topf": "𝕥",
		"topfork": "⫚",
		"tosa": "⤩",
		"tprime": "‴",
		"trade": "™",
		"TRADE": "™",
		"triangle": "▵",
		"triangledown": "▿",
		"triangleleft": "◃",
		"trianglelefteq": "⊴",
		"triangleq": "≜",
		"triangleright": "▹",
		"trianglerighteq": "⊵",
		"tridot": "◬",
		"trie": "≜",
		"triminus": "⨺",
		"TripleDot": "⃛",
		"triplus": "⨹",
		"trisb": "⧍",
		"tritime": "⨻",
		"trpezium": "⏢",
		"Tscr": "𝒯",
		"tscr": "𝓉",
		"TScy": "Ц",
		"tscy": "ц",
		"TSHcy": "Ћ",
		"tshcy": "ћ",
		"Tstrok": "Ŧ",
		"tstrok": "ŧ",
		"twixt": "≬",
		"twoheadleftarrow": "↞",
		"twoheadrightarrow": "↠",
		"Uacute": "Ú",
		"uacute": "ú",
		"uarr": "↑",
		"Uarr": "↟",
		"uArr": "⇑",
		"Uarrocir": "⥉",
		"Ubrcy": "Ў",
		"ubrcy": "ў",
		"Ubreve": "Ŭ",
		"ubreve": "ŭ",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ucy": "У",
		"ucy": "у",
		"udarr": "⇅",
		"Udblac": "Ű",
		"udblac": "ű",
		"udhar": "⥮",
		"ufisht": "⥾",
		"Ufr": "𝔘",
		"ufr": "𝔲",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uHar": "⥣",
		"uharl": "↿",
		"uharr": "↾",
		"uhblk": "▀",
		"ulcorn": "⌜",
		"ulcorner": "⌜",
		"ulcrop": "⌏",
		"ultri": "◸",
		"Umacr": "Ū",
		"umacr": "ū",
		"uml": "¨",
		"UnderBar": "_",
		"UnderBrace": "⏟",
		"UnderBracket": "⎵",
		"UnderParenthesis": "⏝",
		"Union": "⋃",
		"UnionPlus": "⊎",
		"Uogon": "Ų",
		"uogon": "ų",
		"Uopf": "𝕌",
		"uopf": "𝕦",
		"UpArrowBar": "⤒",
		"uparrow": "↑",
		"UpArrow": "↑",
		"Uparrow": "⇑",
		"UpArrowDownArrow": "⇅",
		"updownarrow": "↕",
		"UpDownArrow": "↕",
		"Updownarrow": "⇕",
		"UpEquilibrium": "⥮",
		"upharpoonleft": "↿",
		"upharpoonright": "↾",
		"uplus": "⊎",
		"UpperLeftArrow": "↖",
		"UpperRightArrow": "↗",
		"upsi": "υ",
		"Upsi": "ϒ",
		"upsih": "ϒ",
		"Upsilon": "Υ",
		"upsilon": "υ",
		"UpTeeArrow": "↥",
		"UpTee": "⊥",
		"upuparrows": "⇈",
		"urcorn": "⌝",
		"urcorner": "⌝",
		"urcrop": "⌎",
		"Uring": "Ů",
		"uring": "ů",
		"urtri": "◹",
		"Uscr": "𝒰",
		"uscr": "𝓊",
		"utdot": "⋰",
		"Utilde": "Ũ",
		"utilde": "ũ",
		"utri": "▵",
		"utrif": "▴",
		"uuarr": "⇈",
		"Uuml": "Ü",
		"uuml": "ü",
		"uwangle": "⦧",
		"vangrt": "⦜",
		"varepsilon": "ϵ",
		"varkappa": "ϰ",
		"varnothing": "∅",
		"varphi": "ϕ",
		"varpi": "ϖ",
		"varpropto": "∝",
		"varr": "↕",
		"vArr": "⇕",
		"varrho": "ϱ",
		"varsigma": "ς",
		"varsubsetneq": "⊊︀",
		"varsubsetneqq": "⫋︀",
		"varsupsetneq": "⊋︀",
		"varsupsetneqq": "⫌︀",
		"vartheta": "ϑ",
		"vartriangleleft": "⊲",
		"vartriangleright": "⊳",
		"vBar": "⫨",
		"Vbar": "⫫",
		"vBarv": "⫩",
		"Vcy": "В",
		"vcy": "в",
		"vdash": "⊢",
		"vDash": "⊨",
		"Vdash": "⊩",
		"VDash": "⊫",
		"Vdashl": "⫦",
		"veebar": "⊻",
		"vee": "∨",
		"Vee": "⋁",
		"veeeq": "≚",
		"vellip": "⋮",
		"verbar": "|",
		"Verbar": "‖",
		"vert": "|",
		"Vert": "‖",
		"VerticalBar": "∣",
		"VerticalLine": "|",
		"VerticalSeparator": "❘",
		"VerticalTilde": "≀",
		"VeryThinSpace": " ",
		"Vfr": "𝔙",
		"vfr": "𝔳",
		"vltri": "⊲",
		"vnsub": "⊂⃒",
		"vnsup": "⊃⃒",
		"Vopf": "𝕍",
		"vopf": "𝕧",
		"vprop": "∝",
		"vrtri": "⊳",
		"Vscr": "𝒱",
		"vscr": "𝓋",
		"vsubnE": "⫋︀",
		"vsubne": "⊊︀",
		"vsupnE": "⫌︀",
		"vsupne": "⊋︀",
		"Vvdash": "⊪",
		"vzigzag": "⦚",
		"Wcirc": "Ŵ",
		"wcirc": "ŵ",
		"wedbar": "⩟",
		"wedge": "∧",
		"Wedge": "⋀",
		"wedgeq": "≙",
		"weierp": "℘",
		"Wfr": "𝔚",
		"wfr": "𝔴",
		"Wopf": "𝕎",
		"wopf": "𝕨",
		"wp": "℘",
		"wr": "≀",
		"wreath": "≀",
		"Wscr": "𝒲",
		"wscr": "𝓌",
		"xcap": "⋂",
		"xcirc": "◯",
		"xcup": "⋃",
		"xdtri": "▽",
		"Xfr": "𝔛",
		"xfr": "𝔵",
		"xharr": "⟷",
		"xhArr": "⟺",
		"Xi": "Ξ",
		"xi": "ξ",
		"xlarr": "⟵",
		"xlArr": "⟸",
		"xmap": "⟼",
		"xnis": "⋻",
		"xodot": "⨀",
		"Xopf": "𝕏",
		"xopf": "𝕩",
		"xoplus": "⨁",
		"xotime": "⨂",
		"xrarr": "⟶",
		"xrArr": "⟹",
		"Xscr": "𝒳",
		"xscr": "𝓍",
		"xsqcup": "⨆",
		"xuplus": "⨄",
		"xutri": "△",
		"xvee": "⋁",
		"xwedge": "⋀",
		"Yacute": "Ý",
		"yacute": "ý",
		"YAcy": "Я",
		"yacy": "я",
		"Ycirc": "Ŷ",
		"ycirc": "ŷ",
		"Ycy": "Ы",
		"ycy": "ы",
		"yen": "¥",
		"Yfr": "𝔜",
		"yfr": "𝔶",
		"YIcy": "Ї",
		"yicy": "ї",
		"Yopf": "𝕐",
		"yopf": "𝕪",
		"Yscr": "𝒴",
		"yscr": "𝓎",
		"YUcy": "Ю",
		"yucy": "ю",
		"yuml": "ÿ",
		"Yuml": "Ÿ",
		"Zacute": "Ź",
		"zacute": "ź",
		"Zcaron": "Ž",
		"zcaron": "ž",
		"Zcy": "З",
		"zcy": "з",
		"Zdot": "Ż",
		"zdot": "ż",
		"zeetrf": "ℨ",
		"ZeroWidthSpace": "​",
		"Zeta": "Ζ",
		"zeta": "ζ",
		"zfr": "𝔷",
		"Zfr": "ℨ",
		"ZHcy": "Ж",
		"zhcy": "ж",
		"zigrarr": "⇝",
		"zopf": "𝕫",
		"Zopf": "ℤ",
		"Zscr": "𝒵",
		"zscr": "𝓏",
		"zwj": "‍",
		"zwnj": "‌"
	};

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	var entityMap = __webpack_require__(65),
	    legacyMap = __webpack_require__(67),
	    xmlMap    = __webpack_require__(64),
	    decodeCodePoint = __webpack_require__(68);

	var decodeXMLStrict  = getStrictDecoder(xmlMap),
	    decodeHTMLStrict = getStrictDecoder(entityMap);

	function getStrictDecoder(map){
		var keys = Object.keys(map).join("|"),
		    replace = getReplacer(map);

		keys += "|#[xX][\\da-fA-F]+|#\\d+";

		var re = new RegExp("&(?:" + keys + ");", "g");

		return function(str){
			return String(str).replace(re, replace);
		};
	}

	var decodeHTML = (function(){
		var legacy = Object.keys(legacyMap)
			.sort(sorter);

		var keys = Object.keys(entityMap)
			.sort(sorter);

		for(var i = 0, j = 0; i < keys.length; i++){
			if(legacy[j] === keys[i]){
				keys[i] += ";?";
				j++;
			} else {
				keys[i] += ";";
			}
		}

		var re = new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g"),
		    replace = getReplacer(entityMap);

		function replacer(str){
			if(str.substr(-1) !== ";") str += ";";
			return replace(str);
		}

		//TODO consider creating a merged map
		return function(str){
			return String(str).replace(re, replacer);
		};
	}());

	function sorter(a, b){
		return a < b ? 1 : -1;
	}

	function getReplacer(map){
		return function replace(str){
			if(str.charAt(1) === "#"){
				if(str.charAt(2) === "X" || str.charAt(2) === "x"){
					return decodeCodePoint(parseInt(str.substr(3), 16));
				}
				return decodeCodePoint(parseInt(str.substr(2), 10));
			}
			return map[str.slice(1, -1)];
		};
	}

	module.exports = {
		XML: decodeXMLStrict,
		HTML: decodeHTML,
		HTMLStrict: decodeHTMLStrict
	};

/***/ },
/* 67 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"AElig": "Æ",
		"aelig": "æ",
		"Agrave": "À",
		"agrave": "à",
		"amp": "&",
		"AMP": "&",
		"Aring": "Å",
		"aring": "å",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"brvbar": "¦",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"cedil": "¸",
		"cent": "¢",
		"copy": "©",
		"COPY": "©",
		"curren": "¤",
		"deg": "°",
		"divide": "÷",
		"Eacute": "É",
		"eacute": "é",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"Egrave": "È",
		"egrave": "è",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"frac12": "½",
		"frac14": "¼",
		"frac34": "¾",
		"gt": ">",
		"GT": ">",
		"Iacute": "Í",
		"iacute": "í",
		"Icirc": "Î",
		"icirc": "î",
		"iexcl": "¡",
		"Igrave": "Ì",
		"igrave": "ì",
		"iquest": "¿",
		"Iuml": "Ï",
		"iuml": "ï",
		"laquo": "«",
		"lt": "<",
		"LT": "<",
		"macr": "¯",
		"micro": "µ",
		"middot": "·",
		"nbsp": " ",
		"not": "¬",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"Oacute": "Ó",
		"oacute": "ó",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"Ograve": "Ò",
		"ograve": "ò",
		"ordf": "ª",
		"ordm": "º",
		"Oslash": "Ø",
		"oslash": "ø",
		"Otilde": "Õ",
		"otilde": "õ",
		"Ouml": "Ö",
		"ouml": "ö",
		"para": "¶",
		"plusmn": "±",
		"pound": "£",
		"quot": "\"",
		"QUOT": "\"",
		"raquo": "»",
		"reg": "®",
		"REG": "®",
		"sect": "§",
		"shy": "­",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"szlig": "ß",
		"THORN": "Þ",
		"thorn": "þ",
		"times": "×",
		"Uacute": "Ú",
		"uacute": "ú",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uml": "¨",
		"Uuml": "Ü",
		"uuml": "ü",
		"Yacute": "Ý",
		"yacute": "ý",
		"yen": "¥",
		"yuml": "ÿ"
	};

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	var decodeMap = __webpack_require__(69);

	module.exports = decodeCodePoint;

	// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
	function decodeCodePoint(codePoint){

		if((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){
			return "\uFFFD";
		}

		if(codePoint in decodeMap){
			codePoint = decodeMap[codePoint];
		}

		var output = "";

		if(codePoint > 0xFFFF){
			codePoint -= 0x10000;
			output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
			codePoint = 0xDC00 | codePoint & 0x3FF;
		}

		output += String.fromCharCode(codePoint);
		return output;
	}


/***/ },
/* 69 */
/***/ function(module, exports) {

	module.exports = {
		"0": 65533,
		"128": 8364,
		"130": 8218,
		"131": 402,
		"132": 8222,
		"133": 8230,
		"134": 8224,
		"135": 8225,
		"136": 710,
		"137": 8240,
		"138": 352,
		"139": 8249,
		"140": 338,
		"142": 381,
		"145": 8216,
		"146": 8217,
		"147": 8220,
		"148": 8221,
		"149": 8226,
		"150": 8211,
		"151": 8212,
		"152": 732,
		"153": 8482,
		"154": 353,
		"155": 8250,
		"156": 339,
		"158": 382,
		"159": 376
	};

/***/ },
/* 70 */
/***/ function(module, exports) {

	var getChildren = exports.getChildren = function(elem){
		return elem.children;
	};

	var getParent = exports.getParent = function(elem){
		return elem.parent;
	};

	exports.getSiblings = function(elem){
		var parent = getParent(elem);
		return parent ? getChildren(parent) : [elem];
	};

	exports.getAttributeValue = function(elem, name){
		return elem.attribs && elem.attribs[name];
	};

	exports.hasAttrib = function(elem, name){
		return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);
	};

	exports.getName = function(elem){
		return elem.name;
	};


/***/ },
/* 71 */
/***/ function(module, exports) {

	exports.removeElement = function(elem){
		if(elem.prev) elem.prev.next = elem.next;
		if(elem.next) elem.next.prev = elem.prev;

		if(elem.parent){
			var childs = elem.parent.children;
			childs.splice(childs.lastIndexOf(elem), 1);
		}
	};

	exports.replaceElement = function(elem, replacement){
		var prev = replacement.prev = elem.prev;
		if(prev){
			prev.next = replacement;
		}

		var next = replacement.next = elem.next;
		if(next){
			next.prev = replacement;
		}

		var parent = replacement.parent = elem.parent;
		if(parent){
			var childs = parent.children;
			childs[childs.lastIndexOf(elem)] = replacement;
		}
	};

	exports.appendChild = function(elem, child){
		child.parent = elem;

		if(elem.children.push(child) !== 1){
			var sibling = elem.children[elem.children.length - 2];
			sibling.next = child;
			child.prev = sibling;
			child.next = null;
		}
	};

	exports.append = function(elem, next){
		var parent = elem.parent,
			currNext = elem.next;

		next.next = currNext;
		next.prev = elem;
		elem.next = next;
		next.parent = parent;

		if(currNext){
			currNext.prev = next;
			if(parent){
				var childs = parent.children;
				childs.splice(childs.lastIndexOf(currNext), 0, next);
			}
		} else if(parent){
			parent.children.push(next);
		}
	};

	exports.prepend = function(elem, prev){
		var parent = elem.parent;
		if(parent){
			var childs = parent.children;
			childs.splice(childs.lastIndexOf(elem), 0, prev);
		}

		if(elem.prev){
			elem.prev.next = prev;
		}
		
		prev.parent = parent;
		prev.prev = elem.prev;
		prev.next = elem;
		elem.prev = prev;
	};




/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	var isTag = __webpack_require__(31).isTag;

	module.exports = {
		filter: filter,
		find: find,
		findOneChild: findOneChild,
		findOne: findOne,
		existsOne: existsOne,
		findAll: findAll
	};

	function filter(test, element, recurse, limit){
		if(!Array.isArray(element)) element = [element];

		if(typeof limit !== "number" || !isFinite(limit)){
			limit = Infinity;
		}
		return find(test, element, recurse !== false, limit);
	}

	function find(test, elems, recurse, limit){
		var result = [], childs;

		for(var i = 0, j = elems.length; i < j; i++){
			if(test(elems[i])){
				result.push(elems[i]);
				if(--limit <= 0) break;
			}

			childs = elems[i].children;
			if(recurse && childs && childs.length > 0){
				childs = find(test, childs, recurse, limit);
				result = result.concat(childs);
				limit -= childs.length;
				if(limit <= 0) break;
			}
		}

		return result;
	}

	function findOneChild(test, elems){
		for(var i = 0, l = elems.length; i < l; i++){
			if(test(elems[i])) return elems[i];
		}

		return null;
	}

	function findOne(test, elems){
		var elem = null;

		for(var i = 0, l = elems.length; i < l && !elem; i++){
			if(!isTag(elems[i])){
				continue;
			} else if(test(elems[i])){
				elem = elems[i];
			} else if(elems[i].children.length > 0){
				elem = findOne(test, elems[i].children);
			}
		}

		return elem;
	}

	function existsOne(test, elems){
		for(var i = 0, l = elems.length; i < l; i++){
			if(
				isTag(elems[i]) && (
					test(elems[i]) || (
						elems[i].children.length > 0 &&
						existsOne(test, elems[i].children)
					)
				)
			){
				return true;
			}
		}

		return false;
	}

	function findAll(test, elems){
		var result = [];
		for(var i = 0, j = elems.length; i < j; i++){
			if(!isTag(elems[i])) continue;
			if(test(elems[i])) result.push(elems[i]);

			if(elems[i].children.length > 0){
				result = result.concat(findAll(test, elems[i].children));
			}
		}
		return result;
	}


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(31);
	var isTag = exports.isTag = ElementType.isTag;

	exports.testElement = function(options, element){
		for(var key in options){
			if(!options.hasOwnProperty(key));
			else if(key === "tag_name"){
				if(!isTag(element) || !options.tag_name(element.name)){
					return false;
				}
			} else if(key === "tag_type"){
				if(!options.tag_type(element.type)) return false;
			} else if(key === "tag_contains"){
				if(isTag(element) || !options.tag_contains(element.data)){
					return false;
				}
			} else if(!element.attribs || !options[key](element.attribs[key])){
				return false;
			}
		}
		return true;
	};

	var Checks = {
		tag_name: function(name){
			if(typeof name === "function"){
				return function(elem){ return isTag(elem) && name(elem.name); };
			} else if(name === "*"){
				return isTag;
			} else {
				return function(elem){ return isTag(elem) && elem.name === name; };
			}
		},
		tag_type: function(type){
			if(typeof type === "function"){
				return function(elem){ return type(elem.type); };
			} else {
				return function(elem){ return elem.type === type; };
			}
		},
		tag_contains: function(data){
			if(typeof data === "function"){
				return function(elem){ return !isTag(elem) && data(elem.data); };
			} else {
				return function(elem){ return !isTag(elem) && elem.data === data; };
			}
		}
	};

	function getAttribCheck(attrib, value){
		if(typeof value === "function"){
			return function(elem){ return elem.attribs && value(elem.attribs[attrib]); };
		} else {
			return function(elem){ return elem.attribs && elem.attribs[attrib] === value; };
		}
	}

	function combineFuncs(a, b){
		return function(elem){
			return a(elem) || b(elem);
		};
	}

	exports.getElements = function(options, element, recurse, limit){
		var funcs = Object.keys(options).map(function(key){
			var value = options[key];
			return key in Checks ? Checks[key](value) : getAttribCheck(key, value);
		});

		return funcs.length === 0 ? [] : this.filter(
			funcs.reduce(combineFuncs),
			element, recurse, limit
		);
	};

	exports.getElementById = function(id, element, recurse){
		if(!Array.isArray(element)) element = [element];
		return this.findOne(getAttribCheck("id", id), element, recurse !== false);
	};

	exports.getElementsByTagName = function(name, element, recurse, limit){
		return this.filter(Checks.tag_name(name), element, recurse, limit);
	};

	exports.getElementsByTagType = function(type, element, recurse, limit){
		return this.filter(Checks.tag_type(type), element, recurse, limit);
	};


/***/ },
/* 74 */
/***/ function(module, exports) {

	// removeSubsets
	// Given an array of nodes, remove any member that is contained by another.
	exports.removeSubsets = function(nodes) {
		var idx = nodes.length, node, ancestor, replace;

		// Check if each node (or one of its ancestors) is already contained in the
		// array.
		while (--idx > -1) {
			node = ancestor = nodes[idx];

			// Temporarily remove the node under consideration
			nodes[idx] = null;
			replace = true;

			while (ancestor) {
				if (nodes.indexOf(ancestor) > -1) {
					replace = false;
					nodes.splice(idx, 1);
					break;
				}
				ancestor = ancestor.parent;
			}

			// If the node has been found to be unique, re-insert it.
			if (replace) {
				nodes[idx] = node;
			}
		}

		return nodes;
	};

	// Source: http://dom.spec.whatwg.org/#dom-node-comparedocumentposition
	var POSITION = {
		DISCONNECTED: 1,
		PRECEDING: 2,
		FOLLOWING: 4,
		CONTAINS: 8,
		CONTAINED_BY: 16
	};

	// Compare the position of one node against another node in any other document.
	// The return value is a bitmask with the following values:
	//
	// document order:
	// > There is an ordering, document order, defined on all the nodes in the
	// > document corresponding to the order in which the first character of the
	// > XML representation of each node occurs in the XML representation of the
	// > document after expansion of general entities. Thus, the document element
	// > node will be the first node. Element nodes occur before their children.
	// > Thus, document order orders element nodes in order of the occurrence of
	// > their start-tag in the XML (after expansion of entities). The attribute
	// > nodes of an element occur after the element and before its children. The
	// > relative order of attribute nodes is implementation-dependent./
	// Source:
	// http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
	//
	// @argument {Node} nodaA The first node to use in the comparison
	// @argument {Node} nodeB The second node to use in the comparison
	//
	// @return {Number} A bitmask describing the input nodes' relative position.
	//         See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
	//         a description of these values.
	var comparePos = exports.compareDocumentPosition = function(nodeA, nodeB) {
		var aParents = [];
		var bParents = [];
		var current, sharedParent, siblings, aSibling, bSibling, idx;

		if (nodeA === nodeB) {
			return 0;
		}

		current = nodeA;
		while (current) {
			aParents.unshift(current);
			current = current.parent;
		}
		current = nodeB;
		while (current) {
			bParents.unshift(current);
			current = current.parent;
		}

		idx = 0;
		while (aParents[idx] === bParents[idx]) {
			idx++;
		}

		if (idx === 0) {
			return POSITION.DISCONNECTED;
		}

		sharedParent = aParents[idx - 1];
		siblings = sharedParent.children;
		aSibling = aParents[idx];
		bSibling = bParents[idx];

		if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
			if (sharedParent === nodeB) {
				return POSITION.FOLLOWING | POSITION.CONTAINED_BY;
			}
			return POSITION.FOLLOWING;
		} else {
			if (sharedParent === nodeA) {
				return POSITION.PRECEDING | POSITION.CONTAINS;
			}
			return POSITION.PRECEDING;
		}
	};

	// Sort an array of nodes based on their relative position in the document and
	// remove any duplicate nodes. If the array contains nodes that do not belong
	// to the same document, sort order is unspecified.
	//
	// @argument {Array} nodes Array of DOM nodes
	//
	// @returns {Array} collection of unique nodes, sorted in document order
	exports.uniqueSort = function(nodes) {
		var idx = nodes.length, node, position;

		nodes = nodes.slice();

		while (--idx > -1) {
			node = nodes[idx];
			position = nodes.indexOf(node);
			if (position > -1 && position < idx) {
				nodes.splice(idx, 1);
			}
		}
		nodes.sort(function(a, b) {
			var relative = comparePos(a, b);
			if (relative & POSITION.PRECEDING) {
				return -1;
			} else if (relative & POSITION.FOLLOWING) {
				return 1;
			}
			return 0;
		});

		return nodes;
	};


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = CollectingHandler;

	function CollectingHandler(cbs){
		this._cbs = cbs || {};
		this.events = [];
	}

	var EVENTS = __webpack_require__(18).EVENTS;
	Object.keys(EVENTS).forEach(function(name){
		if(EVENTS[name] === 0){
			name = "on" + name;
			CollectingHandler.prototype[name] = function(){
				this.events.push([name]);
				if(this._cbs[name]) this._cbs[name]();
			};
		} else if(EVENTS[name] === 1){
			name = "on" + name;
			CollectingHandler.prototype[name] = function(a){
				this.events.push([name, a]);
				if(this._cbs[name]) this._cbs[name](a);
			};
		} else if(EVENTS[name] === 2){
			name = "on" + name;
			CollectingHandler.prototype[name] = function(a, b){
				this.events.push([name, a, b]);
				if(this._cbs[name]) this._cbs[name](a, b);
			};
		} else {
			throw Error("wrong number of arguments");
		}
	});

	CollectingHandler.prototype.onreset = function(){
		this.events = [];
		if(this._cbs.onreset) this._cbs.onreset();
	};

	CollectingHandler.prototype.restart = function(){
		if(this._cbs.onreset) this._cbs.onreset();

		for(var i = 0, len = this.events.length; i < len; i++){
			if(this._cbs[this.events[i][0]]){

				var num = this.events[i].length;

				if(num === 1){
					this._cbs[this.events[i][0]]();
				} else if(num === 2){
					this._cbs[this.events[i][0]](this.events[i][1]);
				} else {
					this._cbs[this.events[i][0]](this.events[i][1], this.events[i][2]);
				}
			}
		}
	};


/***/ },
/* 76 */
/***/ function(module, exports) {

	module.exports = extend

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	function extend() {
	    var target = {}

	    for (var i = 0; i < arguments.length; i++) {
	        var source = arguments[i]

	        for (var key in source) {
	            if (hasOwnProperty.call(source, key)) {
	                target[key] = source[key]
	            }
	        }
	    }

	    return target
	}


/***/ },
/* 77 */
/***/ function(module, exports) {

	module.exports = function (string) {
	  return string.replace(/[-\\^$*+?.()|[\]{}]/g, "\\$&")
	}


/***/ },
/* 78 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var COUNTRIES = exports.COUNTRIES = ['United States', 'Afghanistan', 'Albania', 'Algeria', 'American Samoa', 'Andorra', 'Angola', 'Anguilla', 'Antigua and Barbuda', 'Argentina', 'Armenia', 'Aruba', 'Australia', 'Austria', 'Azerbaijan', 'The Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin', 'Bermuda', 'Bhutan', 'Bolivia', 'Bosnia and Herzegovina', 'Botswana', 'Brazil', 'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi', 'Cambodia', 'Cameroon', 'Canada', 'Cape Verde', 'Cayman Islands', 'Central African Republic', 'Chad', 'Chile', 'China', 'Christmas Island', 'Cocos (Keeling) Islands', 'Colombia', 'Comoros', 'Congo', 'Cook Islands', 'Costa Rica', 'Cote d\'Ivoire', 'Croatia', 'Cuba', 'Curacao', 'Cyprus', 'Czech Republic', 'Democratic Republic of the Congo', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'Ecuador', 'Egypt', 'El Salvador', 'Equatorial Guinea', 'Eritrea', 'Estonia', 'Ethiopia', 'Falkland Islands', 'Faroe Islands', 'Fiji', 'Finland', 'France', 'French Polynesia', 'Gabon', 'The Gambia', 'Georgia', 'Germany', 'Ghana', 'Gibraltar', 'Greece', 'Greenland', 'Grenada', 'Guadeloupe', 'Guam', 'Guatemala', 'Guernsey', 'Guinea', 'Guinea-Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Israel', 'Italy', 'Jamaica', 'Japan', 'Jersey', 'Jordan', 'Kazakhstan', 'Kenya', 'Kiribati', 'North Korea', 'South Korea', 'Kosovo', 'Kuwait', 'Kyrgyzstan', 'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Libya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Macau', 'Macedonia', 'Madagascar', 'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Marshall Islands', 'Martinique', 'Mauritania', 'Mauritius', 'Mayotte', 'Mexico', 'Micronesia', 'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Montserrat', 'Morocco', 'Mozambique', 'Myanmar', 'Nagorno-Karabakh', 'Namibia', 'Nauru', 'Nepal', 'Netherlands', 'Netherlands Antilles', 'New Caledonia', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'Niue', 'Norfolk Island', 'Turkish Republic of Northern Cyprus', 'Northern Mariana', 'Norway', 'Oman', 'Pakistan', 'Palau', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines', 'Pitcairn Islands', 'Poland', 'Portugal', 'Puerto Rico', 'Qatar', 'Republic of the Congo', 'Romania', 'Russia', 'Rwanda', 'Saint Barthelemy', 'Saint Helena', 'Saint Kitts and Nevis', 'Saint Lucia', 'Saint Martin', 'Saint Pierre and Miquelon', 'Saint Vincent and the Grenadines', 'Samoa', 'San Marino', 'Sao Tome and Principe', 'Saudi Arabia', 'Senegal', 'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia', 'Solomon Islands', 'Somalia', 'Somaliland', 'South Africa', 'South Ossetia', 'South Sudan', 'Spain', 'Sri Lanka', 'Sudan', 'Suriname', 'Svalbard', 'eSwatini', 'Sweden', 'Switzerland', 'Syria', 'Taiwan', 'Tajikistan', 'Tanzania', 'Thailand', 'Timor-Leste', 'Togo', 'Tokelau', 'Tonga', 'Transnistria Pridnestrovie', 'Trinidad and Tobago', 'Tristan da Cunha', 'Tunisia', 'Turkey', 'Turkmenistan', 'Turks and Caicos Islands', 'Tuvalu', 'Uganda', 'Ukraine', 'United Arab Emirates', 'United Kingdom', 'Uruguay', 'Uzbekistan', 'Vanuatu', 'Vatican City', 'Venezuela', 'Vietnam', 'British Virgin Islands', 'Isle of Man', 'US Virgin Islands', 'Wallis and Futuna', 'Western Sahara', 'Yemen', 'Zambia', 'Zimbabwe'];

	exports.default = COUNTRIES;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _FormatPrice = __webpack_require__(15);

	var _FormatPrice2 = _interopRequireDefault(_FormatPrice);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var MakeProductText = function (_Component) {
	  _inherits(MakeProductText, _Component);

	  function MakeProductText() {
	    _classCallCheck(this, MakeProductText);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  MakeProductText.prototype.createFormatPrice = function createFormatPrice(currencyDisplay, priceAmount, priceID) {
	    var useDecimal = this.props.useDecimal;

	    return _react2.default.createElement(
	      'b',
	      null,
	      _react2.default.createElement(_FormatPrice2.default, {
	        priceAmount: priceAmount,
	        currency: currencyDisplay,
	        priceID: priceID,
	        useDecimal: useDecimal
	      })
	    );
	  };

	  MakeProductText.prototype.createPriceInputBox = function createPriceInputBox(readOnly, currencyDisplay) {
	    return _react2.default.createElement(
	      'b',
	      null,
	      _react2.default.createElement('input', {
	        value: this.props.price,
	        id: this.props.id ? this.props.id.replace('_price', '') + '_custom_price' : '',
	        className: 'form-product-custom_price',
	        type: 'text',
	        name: this.props.customPriceName ? this.props.customPriceName : '',
	        readOnly: readOnly,
	        'data-price-source': this.props.customPriceSource > 0 ? this.props.customPriceSource : null
	      }),
	      currencyDisplay
	    );
	  };

	  MakeProductText.prototype.createFirstPaymentPriceInput = function createFirstPaymentPriceInput(readOnly, currencyDisplay) {
	    return _react2.default.createElement(
	      'b',
	      null,
	      _react2.default.createElement('input', {
	        value: this.props.setupfee ? this.props.setupfee : '0',
	        id: this.props.id ? this.props.id.replace('_price', '') + '_custom_first_payment_price' : '',
	        className: 'form-product-custom_price',
	        type: 'text',
	        name: this.props.customFirstPaymentPriceName ? this.props.customFirstPaymentPriceName : '',
	        readOnly: readOnly,
	        'data-price-source': this.props.customFirstPaymentPriceSource > 0 ? this.props.customFirstPaymentPriceSource : null
	      }),
	      currencyDisplay
	    );
	  };

	  MakeProductText.prototype.makeText = function makeText() {
	    var _props = this.props,
	        curr = _props.curr,
	        customPrice = _props.customPrice,
	        customPriceSource = _props.customPriceSource,
	        passive = _props.passive,
	        interval = _props.interval,
	        setupfee = _props.setupfee,
	        duration = _props.duration,
	        productTrial = _props.productTrial,
	        price = _props.price,
	        id = _props.id,
	        noPrice = _props.noPrice,
	        gateway = _props.gateway,
	        times = _props.times,
	        setupfeePeriod = _props.setupfeePeriod,
	        customFirstPaymentPrice = _props.customFirstPaymentPrice,
	        customFirstPaymentPriceSource = _props.customFirstPaymentPriceSource,
	        isNewUi = _props.isNewUi,
	        hasSpecialPricing = _props.hasSpecialPricing,
	        options = _props.options;


	    var currencyDisplay = curr && curr === 'TRY' ? 'TL' : curr;
	    var readOnly = customPrice && customPriceSource > 0 || passive ? true : null;
	    var priceChecker = null;
	    if (customPrice) {
	      priceChecker = 'customPrice';
	    } else if (noPrice) {
	      priceChecker = null;
	    } else {
	      priceChecker = 'price';
	    }
	    var priceType = {
	      customPrice: this.createPriceInputBox(readOnly, currencyDisplay),
	      price: this.createFormatPrice(currencyDisplay, price || 0, id || '')
	    };
	    var fprice = priceType[priceChecker];
	    var fsetupfee = null;
	    if (customFirstPaymentPrice) {
	      var readOnlyFirstPayment = customFirstPaymentPrice && customFirstPaymentPriceSource > 0 || passive ? true : null;
	      fsetupfee = this.createFirstPaymentPriceInput(readOnlyFirstPayment, currencyDisplay);
	    } else {
	      fsetupfee = this.createFormatPrice(currencyDisplay, Number(setupfee) || 0, id ? id.replace('price', 'setupfee') : '');
	    }

	    var trialText = setupfee > 0 ? fsetupfee : 'Free'.locale() + ' ';
	    // add payment gateway if it is declared in new subscription settings
	    var hasNewSubscriptionSettings = ['control_cybersource'];
	    var durationText = hasNewSubscriptionSettings.indexOf(gateway) > -1 && setupfeePeriod && setupfeePeriod.toLowerCase() === 'none' && setupfee > 0 ? 'first-payment' : duration;
	    var trial = interval;
	    var trialTextTranslation = null;
	    var trialTextArray = '';
	    var pieceOfTrialText = [];

	    // Sorry, comprehensive refactoring needed
	    // Temporary subscription text for CyberSource, this will be implemented to all other gateways
	    if (hasNewSubscriptionSettings.indexOf(gateway) > -1 && setupfee) {
	      trial = setupfee;
	      var setupFeeTextEnd = setupfeePeriod !== 'None' ? setupfeePeriod : 'payment';
	      var freeTrialText = productTrial.toLowerCase() !== 'none' ? 'Free for the ' + productTrial.toLowerCase() + ' then,' : '';
	      var replaceTextObject = {
	        '{freeTrialText}': freeTrialText,
	        '{setupFeeTextEnd}': setupFeeTextEnd
	      };
	      trialTextTranslation = (' ' + '{freeTrialText} {trialText} for the first {setupFeeTextEnd},'.locale() + ' ').replace(/{freeTrialText}|{setupFeeTextEnd}/gi, function (textItem) {
	        return replaceTextObject[textItem];
	      });
	    } else if (trial === 'One Day') {
	      trialTextTranslation = '{trialText} for the first day then,'.locale().concat(' ');
	    } else {
	      trialTextTranslation = '{trialText} for the first {interval} then,'.locale();
	    }
	    trialTextTranslation.split(' ').forEach(function (element) {
	      if (element !== '{trialText}' && element !== '{interval}') {
	        trialTextArray += element + ' ';
	      } else {
	        pieceOfTrialText.push(trialTextArray);
	        pieceOfTrialText.push(element);
	        trialTextArray = '';
	      }
	    });
	    pieceOfTrialText.push(trialTextArray);

	    var trialField = durationText && productTrial && (productTrial.toLowerCase() !== 'none' || hasNewSubscriptionSettings.indexOf(gateway) > -1 && setupfeePeriod && setupfeePeriod.toLowerCase() !== 'none') && productTrial !== 'Enable' ? _react2.default.createElement(
	      'span',
	      {
	        'data-wrapper-react': 'true'
	      },
	      isNewUi ? null : '(',
	      pieceOfTrialText.map(function (text) {
	        if (text === '{trialText}') {
	          return trialText;
	        } else if (text === '{interval}') {
	          return _react2.default.createElement(
	            'u',
	            null,
	            trial.locale(),
	            ' '
	          );
	        }
	        return text;
	      })
	    ) : null;
	    if (trial === 'Enable') {
	      fsetupfee = 'Free'.locale() + ' ';
	    }
	    var setupTextField = null;
	    var textField = null;
	    if (duration) {
	      // If recurring duration is set
	      // If flag is false that means trial is enabled
	      var flag = (!trial || trial === 'None') && (setupfee > 0 || customFirstPaymentPrice || trial === 'Enable') ? true : false;
	      // If recurring times is equal to 1
	      if (times === '1') {
	        setupTextField = flag ? this.createSetupTextField(fsetupfee, 'first-payment') : null;
	        textField = this.createTextField(flag, fprice, 'first-payment');
	      } else {
	        setupTextField = flag ? this.createSetupTextField(fsetupfee, durationText) : null;
	        textField = this.createTextField(flag, fprice, duration);
	      }
	    } else if (hasSpecialPricing && hasSpecialPricing === '1' && options && options.length > 0) {
	      var _options = typeof options === 'string' ? JSON.parse(options) : options;
	      var specialPricingOption = _options.find(function (option) {
	        return option.specialPricing === true;
	      });
	      if (specialPricingOption && specialPricingOption.specialPrices) {
	        var specialPricingFirstOptionPrice = specialPricingOption.specialPrices.split(',')[0];
	        textField = this.createFormatPrice(currencyDisplay, specialPricingFirstOptionPrice || 0, id || '');
	      }
	      textField = fprice;
	    } else {
	      textField = fprice;
	    }

	    return _react2.default.createElement(
	      'span',
	      { className: 'form-product-details' },
	      trialField,
	      setupTextField,
	      textField
	    );
	  };

	  MakeProductText.prototype.createSetupTextField = function createSetupTextField(fsetupfee, duration) {
	    var isNewUi = this.props.isNewUi;


	    var leadingClosingParentheses = isNewUi ? '' : '(';

	    var setupText = '';
	    var timeIntervals = {
	      'first-payment': 'for the <u>first payment</u> then,'.locale(),
	      'Bi-Weekly': 'for the <u>first payment</u> then,'.locale(),
	      'Bi-Monthly': 'for the <u>first payment</u> then,'.locale(),
	      Quarterly: 'for the <u>first payment</u> then,'.locale(),
	      'Semi-Yearly': 'for the <u>first payment</u> then,'.locale(),
	      'Bi-Yearly': 'for the <u>first payment</u> then,'.locale(),
	      Daily: 'for the <u>first day</u> then,'.locale(),
	      Weekly: 'for the <u>first week</u> then,'.locale(),
	      Mountly: 'for the <u>first month</u> then,'.locale(),
	      Yearly: 'for the <u>first year</u> then,'.locale()
	    };
	    if (timeIntervals[duration]) {
	      setupText = ' ' + timeIntervals[duration];
	    } else if (duration.match(/custom-/g)) {
	      var days = duration.replace(/custom-/g, '');
	      setupText = ' ' + 'for the <u>first {days} days</u> then,'.locale().replace('{days}', days);
	    } else {
	      setupText = ' ' + 'for the <u>first month</u> then,'.locale();
	    }
	    return _react2.default.createElement(
	      'span',
	      { 'data-wrapper-react': 'true', className: 'setupFeeField' },
	      leadingClosingParentheses,
	      fsetupfee,
	      _react2.default.createElement('span', {
	        'data-wrapper-react': 'true',
	        dangerouslySetInnerHTML: { __html: setupText }
	      })
	    );
	  };

	  MakeProductText.prototype.createTextField = function createTextField(flag, fprice, duration) {
	    var _props2 = this.props,
	        productTrial = _props2.productTrial,
	        setupfeePeriod = _props2.setupfeePeriod,
	        isNewUi = _props2.isNewUi;


	    var leadingClosingParentheses = isNewUi ? '' : '(';
	    var trailingClosingParentheses = isNewUi ? '' : ')';

	    var text = '';
	    var timeIntervals = {
	      'first-payment': '' + 'one-time payment'.locale() + trailingClosingParentheses,
	      'Bi-Weekly': '' + 'for each <u>two weeks</u>'.locale() + trailingClosingParentheses,
	      'Bi-Monthly': '' + 'for each <u>two months</u>'.locale() + trailingClosingParentheses,
	      'Every Two Months': '' + 'for each <u>two months</u>'.locale() + trailingClosingParentheses,
	      Quarterly: '' + 'for each <u>three months</u>'.locale() + trailingClosingParentheses,
	      'Every Three Months': '' + 'for each <u>three months</u>'.locale() + trailingClosingParentheses,
	      'Semi-Yearly': '' + 'for each <u>six months</u>'.locale() + trailingClosingParentheses,
	      'Every Six Months': '' + 'for each <u>six months</u>'.locale() + trailingClosingParentheses,
	      'Bi-Yearly': '' + 'for each <u>two years</u>'.locale() + trailingClosingParentheses,
	      'Every Two Years': '' + 'for each <u>two years</u>'.locale() + trailingClosingParentheses,
	      Daily: '' + 'for each <u>day</u>'.locale() + trailingClosingParentheses,
	      Weekly: '' + 'for each <u>week</u>'.locale() + trailingClosingParentheses,
	      Monthly: '' + 'for each <u>month</u>'.locale() + trailingClosingParentheses,
	      Yearly: '' + 'for each <u>year</u>'.locale() + trailingClosingParentheses
	    };
	    if (timeIntervals[duration]) {
	      text = ' ' + timeIntervals[duration];
	    } else if (duration.match(/custom-/g)) {
	      var days = duration.replace(/custom-/g, '') + ' ';
	      text = ' ' + '{price} every <u>{intervalCountText} days</u>'.locale().replace('{intervalCountText}', days).replace('{price}', fprice) + ')';
	    } else {
	      text = ' ' + 'for each <u>month</u>'.locale() + ')';
	    }
	    var openBracket = flag || duration && productTrial && (productTrial.toLowerCase() !== 'none' || setupfeePeriod && setupfeePeriod.toLowerCase() !== 'none') && productTrial !== 'Enable' ? '' : leadingClosingParentheses;

	    return _react2.default.createElement(
	      'span',
	      { 'data-wrapper-react': 'true' },
	      openBracket,
	      fprice,
	      _react2.default.createElement('span', {
	        'data-wrapper-react': 'true',
	        dangerouslySetInnerHTML: { __html: text }
	      })
	    );
	  };

	  MakeProductText.prototype.render = function render() {
	    var productText = this.makeText();
	    return _react2.default.createElement(
	      'span',
	      { 'data-wrapper-react': 'true' },
	      this.props.children,
	      productText
	    );
	  };

	  return MakeProductText;
	}(_react.Component);

	exports.default = MakeProductText;


	MakeProductText.propTypes = {
	  children: _propTypes2.default.node,
	  price: _propTypes2.default.string,
	  options: _propTypes2.default.string,
	  hasSpecialPricing: _propTypes2.default.string,
	  curr: _propTypes2.default.string,
	  useDecimal: _propTypes2.default.bool,
	  duration: _propTypes2.default.string,
	  setupfee: _propTypes2.default.string,
	  setupfeePeriod: _propTypes2.default.string,
	  productTrial: _propTypes2.default.string,
	  id: _propTypes2.default.string,
	  times: _propTypes2.default.string,
	  noPrice: _propTypes2.default.string,
	  passive: _propTypes2.default.string,
	  customPrice: _propTypes2.default.string,
	  customPriceSource: _propTypes2.default.string,
	  customPriceName: _propTypes2.default.string,
	  customFirstPaymentPrice: _propTypes2.default.string,
	  customFirstPaymentPriceSource: _propTypes2.default.string,
	  customFirstPaymentPriceName: _propTypes2.default.string,
	  interval: _propTypes2.default.string,
	  gateway: _propTypes2.default.string,
	  isNewUi: _propTypes2.default.bool
	};

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SubLabel = function (_Component) {
	  _inherits(SubLabel, _Component);

	  function SubLabel() {
	    _classCallCheck(this, SubLabel);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  SubLabel.prototype.render = function render() {
	    var themeVersionIsV2 = this.props.themeVersion && this.props.themeVersion === 'v2';
	    var children = Array.isArray(this.props.children) ? this.props.children.filter(function (p) {
	      return p;
	    }) : [this.props.children].filter(function (p) {
	      return p;
	    });

	    if (this.props.inlineEditClass || this.props.labelValue || this.props.wrapAlways) {
	      var label = this.props.labelValue || '';
	      var htmlId = void 0;
	      if (label !== undefined && typeof label !== 'string' && 'text' in label) {
	        htmlId = 'sublabel_' + label.id;
	        label = label.text;
	      }

	      var sanitizedLabel = typeof label !== 'undefined' ? (0, _Utils.sanitize)((0, _Utils.htmlDecode)(label)) : '';

	      var spanStyle = { verticalAlign: 'top' };
	      var style = { minHeight: '13px' };
	      if (this.props.reverseMargin) {
	        style.margin = '0 0 3px 0';
	      }

	      var _props = this.props,
	          hidePartLabelA11Y = _props.hidePartLabelA11Y,
	          ariaHidden = _props.ariaHidden,
	          type = _props.type,
	          defaultValue = _props.defaultValue,
	          liteMode = _props.liteMode;

	      var dateTypes = ['Year', 'Day', 'Month'];
	      var dateTypeClass = themeVersionIsV2 && type.value === 'control_datetime' && liteMode && liteMode.value === 'No' && defaultValue && dateTypes.indexOf(defaultValue) > -1 ? ' ' + defaultValue.toLowerCase() : '';

	      var partLabel = _react2.default.createElement('label', {
	        className: 'form-sub-label' + (themeVersionIsV2 && String(label).length === 0 ? ' is-empty' : ''),
	        htmlFor: this.props.for,
	        id: htmlId,
	        style: hidePartLabelA11Y === true ? (0, _Utils.accessibleHiddenStyle)() : style,
	        dangerouslySetInnerHTML: { __html: sanitizedLabel || '' },
	        'aria-hidden': ariaHidden
	      });

	      if (this.props.editable && this.props.inlineEditClass) {
	        var inlineEditLabel = _react2.default.createElement(this.props.inlineEditClass, {
	          id: this.props.id.value,
	          propPath: this.props.propPath,
	          text: label,
	          className: 'form-sub-label',
	          defaultValue: this.props.defaultValue,
	          placeholder: 'Type a sublabel',
	          sanitizeText: true,
	          stripSeparators: true
	        });

	        partLabel = _react2.default.createElement(
	          'span',
	          { className: 'form-sub-label' },
	          inlineEditLabel
	        );
	      }

	      if ((!this.props.editable || !this.props.inlineEditClass) && this.props.hidePartLabel === true) {
	        partLabel = '';
	      }

	      var containerClasses = 'form-sub-label-container' + (this.props.containerClasses ? ' ' + this.props.containerClasses : '') + dateTypeClass;

	      var genericCurrency = void 0;
	      if (this.props.propPath && this.props.propPath === 'donationText') {
	        genericCurrency = _react2.default.createElement(
	          'span',
	          { className: 'donation_currency' },
	          this.props.link || ' '
	        );
	      }

	      if (this.props.reverse) {
	        return _react2.default.createElement(
	          'span',
	          { className: containerClasses, style: spanStyle },
	          partLabel,
	          this.props.children,
	          this.props.link || ' '
	        );
	      } else if (themeVersionIsV2 && this.props.type && this.props.type.value === 'control_time' && containerClasses.split(' ').indexOf('until-wrapper') === -1) {
	        return _react2.default.createElement(
	          'div',
	          { className: 'time-wrapper' },
	          _react2.default.createElement(
	            'span',
	            { className: containerClasses, style: spanStyle, 'data-colsize': this.props.colSize, 'data-input-type': this.props.dataComponent || null },
	            this.props.children,
	            this.props.link || ' ',
	            partLabel
	          )
	        );
	      }return _react2.default.createElement(
	        'span',
	        { className: containerClasses, style: spanStyle, 'data-colsize': this.props.colSize, 'data-input-type': this.props.dataComponent || null },
	        this.props.children,
	        genericCurrency || this.props.link || ' ',
	        partLabel
	      );
	    } else if (children.length === 1) {
	      if (this.props.type && this.props.type.value === 'control_spinner') {
	        return _react2.default.createElement(
	          'div',
	          { 'data-wrapper-react': 'true' },
	          children[0]
	        );
	      }
	      return children[0];
	    }
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      this.props.children
	    );
	  };

	  return SubLabel;
	}(_react.Component);

	SubLabel.propTypes = {
	  children: _propTypes2.default.node,
	  labelValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
	  link: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
	  for: _propTypes2.default.string,
	  reverse: _propTypes2.default.bool,
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  propPath: _propTypes2.default.string,
	  defaultValue: _propTypes2.default.string,
	  wrapAlways: _propTypes2.default.bool,
	  editable: _propTypes2.default.bool,
	  reverseMargin: _propTypes2.default.bool,
	  hidePartLabel: _propTypes2.default.bool,
	  hidePartLabelA11Y: _propTypes2.default.bool,
	  colSize: _propTypes2.default.number,
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  containerClasses: _propTypes2.default.string,
	  ariaHidden: _propTypes2.default.bool,
	  dataComponent: _propTypes2.default.string,
	  themeVersion: _propTypes2.default.string,
	  liteMode: _propTypes2.default.string
	};

	SubLabel.defaultProps = {
	  editable: true,
	  hidePartLabelA11Y: false,
	  ariaHidden: false,
	  dataComponent: null
	};

	exports.default = SubLabel;

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function fixProductFormat(unformattedProduct) {
	  return typeof unformattedProduct === 'string' ? JSON.parse(unformattedProduct) : unformattedProduct;
	}

	function renderSlider() {
	  return _react2.default.createElement(
	    _react2.default.Fragment,
	    null,
	    _react2.default.createElement('img', { id: 'current-image' }),
	    _react2.default.createElement(
	      'span',
	      { className: 'lb-prev-button' },
	      'prev'
	    ),
	    _react2.default.createElement(
	      'span',
	      { className: 'lb-next-button' },
	      'next'
	    ),
	    _react2.default.createElement(
	      'span',
	      { className: 'lb-close-button' },
	      '( X )'
	    )
	  );
	}

	function renderImageProductContainer(unformattedProduct) {
	  var imageIndex = 0;
	  var products = fixProductFormat(unformattedProduct);
	  return _react2.default.createElement(
	    'span',
	    { className: 'image-overlay-product-container' },
	    products && products.map(function (product) {
	      if (product.disabled === 'hide') return false;
	      return _react2.default.createElement(
	        'ul',
	        {
	          className: 'form-overlay-item',
	          key: 'product_' + product.pid,
	          hasicon: product.icon ? 'true' : 'false',
	          hasimages: product.images && fixProductFormat(product.images).length > 0 ? 'true' : 'false',
	          iconvalue: product.icon
	        },
	        product.images ? fixProductFormat(product.images).map(function (image) {
	          return _react2.default.createElement(
	            'li',
	            { className: 'image-overlay-image', key: 'image_' + imageIndex++ },
	            _react2.default.createElement('img', { src: image })
	          );
	        }) : null
	      );
	    })
	  );
	}

	function ImageOverLay(props) {
	  var products = props.products;


	  return _react2.default.createElement(
	    'div',
	    { id: 'image-overlay', className: 'overlay-content', style: { display: 'none' } },
	    renderSlider(),
	    renderImageProductContainer(products)
	  );
	}

	ImageOverLay.propTypes = {
	  products: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.object), _propTypes2.default.string])
	};

	exports.default = ImageOverLay;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var MultiSelectDropdown = function (_Component) {
	  _inherits(MultiSelectDropdown, _Component);

	  function MultiSelectDropdown() {
	    _classCallCheck(this, MultiSelectDropdown);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  // Note for developers: I develop the component to use into Payment Category System.
	  // I tried to make a dynamic component and added some functionalities for future usage.
	  // But we don't use some of these functionalities. So please tested it before you can use.

	  MultiSelectDropdown.prototype.render = function render() {
	    var _props = this.props,
	        hint = _props.hint,
	        additionalClass = _props.additionalClass,
	        selectFirstOption = _props.selectFirstOption,
	        uid = _props.uid,
	        addSelectAll = _props.addSelectAll,
	        selectAllText = _props.selectAllText;
	    var options = this.props.options;


	    if (!options || Array.isArray(options) === false) {
	      options = [];
	    }

	    if (addSelectAll) {
	      options = [{ label: selectAllText.locale(), value: 'All' }].concat(options);
	    }

	    return _react2.default.createElement(
	      'div',
	      { className: 'multi-select-dropdown ' + additionalClass + ' ' + (addSelectAll ? 'hasSelectAll' : ''), id: uid },
	      _react2.default.createElement(
	        'div',
	        { className: 'dropdown-container' },
	        _react2.default.createElement(
	          'div',
	          { className: 'select-area' },
	          hint && _react2.default.createElement(
	            'span',
	            { className: 'dropdown-hint' },
	            hint
	          ),
	          _react2.default.createElement(
	            'span',
	            { className: 'selected-values' },
	            options[0] && options[0].label
	          ),
	          _react2.default.createElement('i', { className: 'icon' })
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'select-content' },
	          _react2.default.createElement(
	            'div',
	            { className: 'options' },
	            options && options.length > 0 && options.map(function (option, index) {
	              return _react2.default.createElement(
	                'div',
	                { className: 'option ' + (index === 0 && selectFirstOption ? 'selected' : '') },
	                _react2.default.createElement('input', {
	                  type: 'checkbox',
	                  checked: index === 0 && selectFirstOption,
	                  value: option.value // If select all opened, input value must stay as 'All'
	                }),
	                _react2.default.createElement(
	                  'span',
	                  null,
	                  option.label
	                )
	              );
	            })
	          )
	        )
	      )
	    );
	  };

	  return MultiSelectDropdown;
	}(_react.Component);

	exports.default = MultiSelectDropdown;


	MultiSelectDropdown.propTypes = {
	  hint: _propTypes2.default.string,
	  additionalClass: _propTypes2.default.string,
	  uid: _propTypes2.default.string,
	  addSelectAll: _propTypes2.default.bool,
	  selectAllText: _propTypes2.default.string,
	  selectFirstOption: _propTypes2.default.bool,
	  options: _propTypes2.default.shape({})
	};

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Address = function (_Component) {
	  _inherits(Address, _Component);

	  function Address() {
	    _classCallCheck(this, Address);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Address.prototype.getFieldProps = function getFieldProps(key) {
	    return this.props[key] && this.props[key].value ? this.props[key].value : null;
	  };

	  Address.prototype.renderAddrLine1 = function renderAddrLine1(placeholder) {
	    var className = _Utils.classNames.textbox;
	    var addrLineRequired = { value: 'No' };
	    if (this.getFieldProps('requiredInputs')) {
	      if (this.getFieldProps('requiredInputs').split('|').indexOf('st1') >= 0) {
	        className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	        addrLineRequired = { value: 'Yes' };
	      }
	    } else {
	      className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    }
	    var addr1Label = (0, _Utils.subLabel)(this.props, 'addr_line1', this.props.id.value);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.addr_line1',
	        labelValue: addr1Label.text === '' ? null : addr1Label,
	        hidePartLabel: addr1Label.text === '',
	        wrapAlways: true,
	        'for': this.props.qid.value + '_addr_line1',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.addr_line1
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'text',
	        hint: { value: placeholder },
	        additionalClass: className + ' form-address-line',
	        qname: this.props.qname.value + '[addr_line1]',
	        qid: this.props.qid.value + '_addr_line1',
	        dataComponent: 'address_line_1',
	        inlineEditClass: this.props.inlineEditClass,
	        required: addrLineRequired,
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, addr1Label)
	      })
	    );
	  };

	  Address.prototype.renderAddrLine2 = function renderAddrLine2(placeholder) {
	    var className = _Utils.classNames.textbox + ' form-address-line';

	    var addr2Label = (0, _Utils.subLabel)(this.props, 'addr_line2', this.props.id.value);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.addr_line2',
	        labelValue: addr2Label.text === '' ? null : addr2Label,
	        hidePartLabel: addr2Label.text === '',
	        wrapAlways: true,
	        'for': this.props.qid.value + '_addr_line2',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.addr_line2
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'text',
	        hint: { value: placeholder },
	        additionalClass: className,
	        qname: this.props.qname.value + '[addr_line2]',
	        qid: this.props.qid.value + '_addr_line2',
	        dataComponent: 'address_line_2',
	        inlineEditClass: this.props.inlineEditClass,
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, addr2Label)
	      })
	    );
	  };

	  Address.prototype.renderCity = function renderCity(placeholder) {
	    var className = _Utils.classNames.textbox;
	    var cityRequired = { value: 'No' };
	    if (this.getFieldProps('requiredInputs')) {
	      if (this.getFieldProps('requiredInputs').split('|').indexOf('city') >= 0) {
	        className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	        cityRequired = { value: 'Yes' };
	      }
	    } else {
	      className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    }
	    var cityLabel = (0, _Utils.subLabel)(this.props, 'city', this.props.id.value);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.city',
	        labelValue: cityLabel.text === '' ? null : cityLabel,
	        hidePartLabel: cityLabel.text === '',
	        wrapAlways: true,
	        'for': this.props.qid.value + '_city',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.city
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'text',
	        hint: { value: placeholder },
	        additionalClass: className + ' form-address-city',
	        qname: this.props.qname.value + '[city]',
	        qid: this.props.qid.value + '_city',
	        dataComponent: 'city',
	        inlineEditClass: this.props.inlineEditClass,
	        required: cityRequired,
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, cityLabel)
	      })
	    );
	  };

	  Address.prototype.renderStateOption = function renderStateOption() {
	    var states = _Utils.specialOptions['US States'].value;

	    var options = states.map(function (option) {
	      return _react2.default.createElement(
	        'option',
	        { value: option, key: option },
	        option
	      );
	    });
	    return options;
	  };

	  Address.prototype.renderState = function renderState(placeholder) {
	    var stateLabel = (0, _Utils.subLabel)(this.props, 'state', this.props.id.value);
	    var stateRequired = { value: 'No' };
	    if (this.getFieldProps('states') === 'americanStates') {
	      var _className = _Utils.classNames.dropdown;
	      if (this.getFieldProps('requiredInputs')) {
	        if (this.getFieldProps('requiredInputs').split('|').indexOf('state') >= 0) {
	          _className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);
	          stateRequired = { value: 'Yes' };
	        }
	      } else {
	        _className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);
	      }
	      return _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          propPath: 'sublabels.state',
	          labelValue: stateLabel.text === '' ? null : stateLabel,
	          hidePartLabel: stateLabel.text === '',
	          wrapAlways: true,
	          'for': this.props.qid.value + '_state',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.state
	        }),
	        _react2.default.createElement(
	          'select',
	          {
	            className: _className + ' form-address-state',
	            name: this.props.qname.value + '[state]',
	            id: this.props.qid.value + '_state',
	            'data-component': 'state',
	            defaultValue: '',
	            disabled: this.props.inlineEditClass,
	            required: stateRequired,
	            'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, stateLabel)
	          },
	          _react2.default.createElement(
	            'option',
	            {
	              value: ''
	            },
	            'Please Select'
	          ),
	          this.renderStateOption()
	        )
	      );
	    }
	    var className = _Utils.classNames.textbox;
	    if (this.getFieldProps('requiredInputs')) {
	      if (this.getFieldProps('requiredInputs').split('|').indexOf('state') >= 0) {
	        className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	        stateRequired = { value: 'Yes' };
	      }
	    } else {
	      className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    }
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.state',
	        labelValue: stateLabel.text === '' ? null : stateLabel,
	        hidePartLabel: stateLabel.text === '',
	        wrapAlways: true,
	        'for': this.props.qid.value + '_state',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.state
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'text',
	        hint: { value: placeholder },
	        additionalClass: className + ' form-address-state',
	        qname: this.props.qname.value + '[state]',
	        qid: this.props.qid.value + '_state',
	        dataComponent: 'state',
	        inlineEditClass: this.props.inlineEditClass,
	        required: stateRequired,
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, stateLabel)
	      })
	    );
	  };

	  Address.prototype.renderZip = function renderZip(placeholder) {
	    var className = _Utils.classNames.textbox;
	    var zipRequired = { value: 'No' };
	    if (this.getFieldProps('requiredInputs') && this.getFieldProps('requiredInputs').split('|').indexOf('zip') >= 0) {
	      className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	      zipRequired = { value: 'Yes' };
	    }
	    var zipLabel = (0, _Utils.subLabel)(this.props, 'postal', this.props.id.value);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.postal',
	        labelValue: zipLabel.text === '' ? null : zipLabel,
	        hidePartLabel: zipLabel.text === '',
	        wrapAlways: true,
	        'for': this.props.qid.value + '_postal',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.postal
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'text',
	        hint: { value: placeholder },
	        additionalClass: className + ' form-address-postal',
	        qname: this.props.qname.value + '[postal]',
	        qid: this.props.qid.value + '_postal',
	        dataComponent: 'zip',
	        inlineEditClass: this.props.inlineEditClass,
	        required: zipRequired,
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, zipLabel)
	      })
	    );
	  };

	  Address.prototype.renderCountryOptions = function renderCountryOptions() {
	    var locCountries = _Utils.specialOptions.Countries.value;

	    var options = locCountries.map(function (option) {
	      return _react2.default.createElement(
	        'option',
	        {
	          value: option,
	          key: option
	        },
	        option
	      );
	    });
	    return options;
	  };

	  Address.prototype.renderCountry = function renderCountry() {
	    var className = _Utils.classNames.dropdown;
	    var countryRequired = { value: 'No' };
	    if (this.getFieldProps('requiredInputs')) {
	      if (this.getFieldProps('requiredInputs').split('|').indexOf('country') >= 0) {
	        className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);
	        countryRequired = { value: 'Yes' };
	      }
	    } else {
	      className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);
	    }
	    var defaultCountry = this.getFieldProps('selectedCountry');
	    defaultCountry = this.props.subfields.value.split('|').indexOf('country') < 0 ? null : defaultCountry;
	    var countryLabel = (0, _Utils.subLabel)(this.props, 'country', this.props.id.value);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.country',
	        labelValue: countryLabel === '' ? null : countryLabel,
	        hidePartLabel: countryLabel.text === '',
	        wrapAlways: true,
	        'for': this.props.qid.value + '_country',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.country
	      }),
	      _react2.default.createElement(
	        'select',
	        {
	          className: className + ' form-address-country noTranslate',
	          name: this.props.qname.value + '[country]',
	          id: this.props.qid.value + '_country',
	          'data-component': 'country',
	          defaultValue: defaultCountry,
	          tabIndex: this.props.inlineEditClass ? -1 : null,
	          disabled: this.props.inlineEditClass,
	          required: countryRequired,
	          'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, countryLabel)
	        },
	        _react2.default.createElement(
	          'option',
	          {
	            value: ''
	          },
	          this.props.countryDropdownDefaultText ? this.props.countryDropdownDefaultText.value : 'Please Select'
	        ),
	        this.renderCountryOptions(),
	        _react2.default.createElement(
	          'option',
	          {
	            value: 'other'
	          },
	          'Other'.locale()
	        )
	      )
	    );
	  };

	  Address.prototype.render = function render() {
	    var hintList = this.props.compoundHint && this.props.compoundHint.value && this.props.compoundHint.value.length > 0 ? this.props.compoundHint.value.split(',') : [];
	    var hintIndex = 0;

	    // const addrLine1 = null;
	    var addrLine1 = this.renderAddrLine1(hintIndex < hintList.length ? hintList[hintIndex] : null);
	    hintIndex += 1;
	    // const addrLine2 = null;
	    var addrLine2 = this.renderAddrLine2(hintIndex < hintList.length ? hintList[hintIndex] : null);
	    hintIndex += 1;
	    // const addrCity = null;
	    var addrCity = this.renderCity(hintIndex < hintList.length ? hintList[hintIndex] : null);
	    hintIndex += 1;
	    // const addrState = null;
	    var addrState = this.renderState(hintIndex < hintList.length ? hintList[hintIndex] : null);
	    var isUSState = this.props.states && this.props.states.value === 'americanStates';
	    if (!isUSState) hintIndex += 1;
	    // const addrZip = null;
	    var addrZip = this.renderZip(hintIndex < hintList.length ? hintList[hintIndex] : null);
	    hintIndex += 1;
	    // const addrCountry = null;
	    var addrCountry = this.renderCountry();

	    var sfStyle = {};

	    if (this.props.subfields) {
	      var allSf = ['st1', 'st2', 'city', 'state', 'zip', 'country'];
	      // If subfield value is empty, fill it up
	      var subfieldsValue = this.props.subfields.value.length === 0 ? allSf.join('|') : this.props.subfields.value;
	      // Loop through all sub-fields
	      allSf.forEach(function (sf, index) {
	        // If a sub-field is unchecked
	        if (subfieldsValue.indexOf(allSf[index]) === -1) {
	          // Hide using css
	          sfStyle[allSf[index]] = { display: 'none' };
	        }
	      });
	    }

	    var combinedCityState = sfStyle.city && sfStyle.state;
	    var combinedZipCountry = sfStyle.zip && sfStyle.country;

	    return _react2.default.createElement(
	      'div',
	      {
	        summary: '',
	        className: 'form-address-table jsTest-addressField'
	      },
	      _react2.default.createElement(
	        'div',
	        { className: 'form-address-line-wrapper jsTest-address-line-wrapperField', style: sfStyle.st1 ? sfStyle.st1 : null },
	        _react2.default.createElement(
	          'span',
	          { className: 'form-address-line form-address-street-line jsTest-address-lineField' },
	          addrLine1
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: 'form-address-line-wrapper jsTest-address-line-wrapperField', style: sfStyle.st2 ? sfStyle.st2 : null },
	        _react2.default.createElement(
	          'span',
	          { className: 'form-address-line form-address-street-line jsTest-address-lineField' },
	          addrLine2
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: 'form-address-line-wrapper jsTest-address-line-wrapperField', style: combinedCityState && this.props.themeVersion === 'v2' ? combinedCityState : null },
	        _react2.default.createElement(
	          'span',
	          { className: 'form-address-line form-address-city-line jsTest-address-lineField ' + (sfStyle.city ? 'form-address-hiddenLine' : ''), style: sfStyle.city ? sfStyle.city : null },
	          addrCity
	        ),
	        _react2.default.createElement(
	          'span',
	          { className: 'form-address-line form-address-state-line jsTest-address-lineField ' + (sfStyle.state ? 'form-address-hiddenLine' : ''), style: sfStyle.state ? sfStyle.state : null },
	          addrState
	        )
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: 'form-address-line-wrapper jsTest-address-line-wrapperField', style: combinedZipCountry && this.props.themeVersion === 'v2' ? combinedZipCountry : null },
	        _react2.default.createElement(
	          'span',
	          { className: 'form-address-line form-address-zip-line jsTest-address-lineField ' + (sfStyle.zip ? 'form-address-hiddenLine' : ''), style: sfStyle.zip ? sfStyle.zip : null },
	          addrZip
	        ),
	        !sfStyle.country ? _react2.default.createElement(
	          'span',
	          {
	            className: 'form-address-line form-address-country-line jsTest-address-lineField ' + (sfStyle.country ? 'form-address-hiddenLine' : ''), style: sfStyle.country ? sfStyle.country : null
	          },
	          addrCountry
	        ) : null
	      )
	    );
	  };

	  return Address;
	}(_react.Component);

	exports.default = Address;


	Address.getState = function () {
	  return {};
	};

	Address.getScript = function () {
	  return '';
	};

	Address.propTypes = {
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  compoundHint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subfields: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  states: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  selectedCountry: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  countryDropdownDefaultText: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  required: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  themeVersion: _propTypes2.default.string
	};

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _Countries = __webpack_require__(78);

	var QuestionProps = {
	    "control_text": {
	        "text": {
	            "text": "HTML",
	            // "value": "Double-click to edit this text...",
	            "value": "",
	            "nolabel": true,
	            "forceDisplay": true,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-font_new",
	            "type": "textarea",
	            "hint": "Be careful with the code. If you place unclosed tags or broken HTML it may break your form completely."
	        }
	    },
	    "control_screenshot": {
	        "text": {
	            "text": "Button Text",
	            "value": "Take a Screenshot of The Problem",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-font_new"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "height": {
	            "text": "Height",
	            "value": "100"
	        },
	        "width": {
	            "text": "Width",
	            "value": "320"
	        },
	        "entryLimit": {
	            "text": "Entry Limit",
	            "value": "None-0",
	            "values": [["None", "No-Limit"], ["Words", "Words"], ["Letters", "Letters"]],
	            "type": "textarea-combined",
	            "hint": "Limit entry by words or letters"
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "hint": {
	            "text": "Hint Example",
	            "value": ""
	        }
	    },
	    "control_head": {
	        "text": {
	            "text": "Text",
	            "value": "Heading",
	            "nolabel": true
	        },
	        "subHeader": {
	            "text": "Sub Heading",
	            "value": ""
	        },
	        "headerType": {
	            "text": "Heading Type",
	            "value": "Default",
	            "dropdown": [["Default", "Default"], ["Large", "Large"], ["Small", "Small"]]
	        },
	        "headerImage": {
	            "text": "Image Source",
	            "value": "",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-image_source"
	        },
	        "width": {
	            "text": "Image Width",
	            "value": ""
	        },
	        "imageAlign": {
	            "text": "Image Align",
	            "value": "Left",
	            "dropdown": [["Left", "Left"], ["Right", "Right"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-image_align"
	        },
	        "textAlign": {
	            "text": "Text Align",
	            "value": "Left",
	            "dropdown": [["Left", "Left"], ["Center", "Center"], ["Right", "Right"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-label_align"
	        },
	        "verticalTextAlign": {
	            "text": "Vertical Text Align",
	            "value": "Middle",
	            "dropdown": [["Top", "Top"], ["Middle", "Middle"], ["Bottom", "Bottom"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-label_align"
	        }
	    },
	    "control_footer": {
	        "text": {
	            "text": "Text",
	            "value": "Click to edit this text...",
	            "nolabel": true
	        },
	        "subHeader": {
	            "text": "Sub Heading",
	            "value": ""
	        },
	        "headerType": {
	            "text": "Heading Type",
	            "value": "Small",
	            "dropdown": [["Default", "Default"], ["Large", "Large"], ["Small", "Small"]]
	        },
	        "textAlign": {
	            "text": "Text Align",
	            "value": "Center",
	            "dropdown": [["Left", "Left"], ["Center", "Center"], ["Right", "Right"]]
	        }
	    },
	    "control_textbox": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "size": {
	            "text": "Size",
	            "value": 20
	        },
	        "validation": {
	            "text": "Validation",
	            "value": "None",
	            "dropdown": [["None", "None"], ["Alphabetic", "Alphabetic"], ["AlphaNumeric", "AlphaNumeric"], ["Currency", "Currency"], ["Cyrillic", "Cyrillic"], ["Email", "Email"], ["Fill Mask", "Fill Mask"], ["Numeric", "Numeric"], ["Url", "URL"]]
	        },
	        "maxsize": {
	            "text": "Max Size",
	            "value": ""
	        },
	        "inputTextMask": {
	            "text": "Input Mask",
	            "value": "",
	            "hint": "Use <b>@</b> symbol to mask letters,<br/><b>#</b> for numbers and <b>*</b> for both.",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-collapse_open"
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": ""
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "hint": {
	            "text": "Hint Example",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_textarea": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "cols": {
	            "text": "Columns",
	            "value": 40
	        },
	        "rows": {
	            "text": "Rows",
	            "value": 6
	        },
	        "validation": {
	            "text": "Validation",
	            "value": "None",
	            "dropdown": [["None", "None"], ["Alphabetic", "Alphabetic"], ["AlphaNumeric", "AlphaNumeric"], ["Cyrillic", "Cyrillic"], ["Email", "Email"], ["Numeric", "Numeric"]],
	            "toolbar": false
	        },
	        "entryLimitMin": {
	            "text": "Minimum Entry Limit",
	            "value": "None-0",
	            "values": [["None", "No-Limit"], ["Words", "Words"], ["Letters", "Letters"]],
	            "type": "textarea-combined",
	            "hint": "Limit entry by words or letters"
	        },
	        "entryLimit": {
	            "text": "Maximum Entry Limit",
	            "value": "None-0",
	            "values": [["None", "No-Limit"], ["Words", "Words"], ["Letters", "Letters"]],
	            "type": "textarea-combined",
	            "hint": "Limit entry by words or letters"
	        },
	        "maxsize": {
	            "text": "Max Length",
	            "value": "",
	            "toolbar": false
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": ""
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": "",
	            "toolbar": false
	        },
	        "hint": {
	            "text": "Hint Example",
	            "value": "",
	            "customhint": true
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "wysiwyg": {
	            "text": "Editor Mode",
	            "value": "Disable",
	            "dropdown": [["Disable", "Plain Text"], ["Enable", "Rich Text"], ["Widearea", "Fullscreen Mode"]],
	            "toolbar": true,
	            "icon": "images/wysiwyg.icon.png"
	        }
	    },
	    "control_dropdown": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "options": {
	            "text": "Options",
	            "value": "Option 1|Option 2|Option 3",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_options"
	        },
	        "special": {
	            "text": "Special Options",
	            "value": "None",
	            "dropdown": ["None", "US States", "US States Abbr", "Canadian Provinces", "Countries", "Last 100 Years", "Gender", "Days", "Months", "Time Zones"],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_special"
	        },
	        "calcValues": {
	            "text": "Calculation Values",
	            "value": "",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_options",
	            "toolbar": false
	        },
	        "size": {
	            "text": "Height",
	            "value": 0,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_size",
	            "hidden": true
	        },
	        "visibleOptions": {
	            "text": "Visible Options",
	            "value": 1,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_size",
	            "minValue": 1
	        },
	        "multipleSelections": {
	            "text": "Allow Multiple",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "width": {
	            "text": "Width",
	            "value": 150,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_width"
	        },
	        "selected": {
	            "text": "Selected",
	            "value": "",
	            "dropdown": "options",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_selected"
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "emptyText": {
	            "text": "Empty Option Text",
	            "value": "",
	            "toolbar": false
	        },
	        "shuffle": {
	            "text": "Shuffle Options",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_checkbox": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "options": {
	            "text": "Options",
	            "value": "Type option 1|Type option 2|Type option 3|Type option 4",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-checkbox_options"
	        },
	        "special": {
	            "text": "Special Options",
	            "value": "None",
	            "dropdown": ["None", "Gender", "Days", "Months"],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-checkbox_special"
	        },
	        "calcValues": {
	            "text": "Calculation Values",
	            "value": "",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-checkbox_options",
	            "toolbar": false
	        },
	        "allowOther": {
	            "text": "Allow Other",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_other"
	        },
	        "otherText": {
	            "text": "Other Text",
	            "value": "Other",
	            "toolbar": false
	        },
	        "spreadCols": {
	            "text": "Spread to Columns",
	            "value": "1",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-checkbox_columns"
	        },
	        "selected": {
	            "text": "Selected",
	            "value": "",
	            "useCheckbox": true,
	            "dropdown": "options",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-checkbox_selected"
	        },
	        "minSelection": {
	            "text": "Minimum Selections",
	            "value": "",
	            "toolbar": false
	        },
	        "maxSelection": {
	            "text": "Maximum Selections",
	            "value": "",
	            "toolbar": false
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "shuffle": {
	            "text": "Shuffle Options",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_radio": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "options": {
	            "text": "Options",
	            "value": "Type option 1|Type option 2|Type option 3|Type option 4",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_options"
	        },
	        "special": {
	            "text": "Special Options",
	            "value": "None",
	            "dropdown": ["None", "Gender", "Days", "Months"],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_special"
	        },
	        "calcValues": {
	            "text": "Calculation Values",
	            "value": "",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_options",
	            "toolbar": false
	        },
	        "allowOther": {
	            "text": "Allow Other",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_other"
	        },
	        "otherText": {
	            "text": "Other Text",
	            "value": "Other",
	            "toolbar": false
	        },
	        "selected": {
	            "text": "Selected",
	            "value": "",
	            "dropdown": "options",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_selected"
	        },
	        "spreadCols": {
	            "text": "Spread to Columns",
	            "value": "1",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_columns"
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "shuffle": {
	            "text": "Shuffle Options",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_yesno": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "options": {
	            "text": "Options",
	            "value": "Yes|No",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_options"
	        },
	        "calcValues": {
	            "text": "Calculation Values",
	            "value": "",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_options",
	            "toolbar": false
	        },
	        "selected": {
	            "text": "Selected",
	            "value": "",
	            "dropdown": "options",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_selected"
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_emojislider": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Left", "Left"], ["Right", "Right"], ["Top", "Top"]],
	            "checkbox": {
	                name: 'labelAlign',
	                text: 'Set as form default',
	                value: 'Auto'
	            }
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "emojiCount": {
	            "text": "Emoji Amount",
	            "value": "5",
	            "icon": "images/blank.gif"
	        }
	    },
	    "control_imagechoice": {
	        "multipleSelection": {
	            "text": "Allow Multiple Selection",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "options": {
	            "text": "Options",
	            "value": "Type option 1|Type option 2|Type option 3|Type option 4",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-checkbox_options"
	        },
	        "special": {
	            "text": "Special Options",
	            "value": "None",
	            "dropdown": ["None", "Gender", "Days", "Months"],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-checkbox_special"
	        },
	        "calcValues": {
	            "text": "Calculation Values",
	            "value": "",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-checkbox_options",
	            "toolbar": false
	        },
	        "allowOther": {
	            "text": "Allow Other",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-radio_other"
	        },
	        "otherText": {
	            "text": "Other Text",
	            "value": "Other",
	            "toolbar": false
	        },
	        "spreadCols": {
	            "text": "Spread to Columns",
	            "value": "1",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-checkbox_columns"
	        },
	        "selected": {
	            "text": "Selected",
	            "value": "",
	            "useCheckbox": true,
	            "dropdown": "options",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-checkbox_selected"
	        },
	        "minSelection": {
	            "text": "Minimum Selections",
	            "value": "",
	            "toolbar": false
	        },
	        "maxSelection": {
	            "text": "Maximum Selections",
	            "value": "",
	            "toolbar": false
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "shuffle": {
	            "text": "Shuffle Options",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_datetime": {
	        "text": {
	            "text": "Question",
	            "value": "Date"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "format": {
	            "text": "Date Format",
	            "value": "mmddyyyy",
	            "dropdown": [["mmddyyyy", "mmddyyyy"], ["ddmmyyyy", "ddmmyyyy"], ["yyyymmdd", "yyyymmdd"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-date_format"
	        },
	        "defaultDate": {
	            "text": "Default Date",
	            "value": "none"
	        },
	        "dateSeparator": {
	            "text": "Separator",
	            "value": "-",
	            "dropdown": [["-", "-"], ["/", "/"], [".", "."]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-date_format"
	        },
	        "allowTime": {
	            "text": "Time",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-allow_time"
	        },
	        "timeFormat": {
	            "text": "Time Format",
	            "value": "AM/PM",
	            "dropdown": [["24 Hour", "24 Hour"], ["AM/PM", "AM/PM"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-time_format_24"
	        },
	        "showDayPeriods": {
	            "text": "Show Day Period",
	            "value": "both",
	            "dropdown": [["both", "Both AM & PM"], ["amOnly", "AM only"], ["pmOnly", "PM only"]],
	            "toolbar": false
	        },
	        "defaultTime": {
	            "text": "Default Time",
	            "value": "none"
	        },
	        "onlyFuture": {
	            "text": "Disable Past Dates",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false
	        },
	        "step": {
	            "text": "Minute Stepping",
	            "value": "10",
	            "dropdown": [["1", "1"], ["5", "5"], ["10", "10"], ["15", "15"], ["20", "20"], ["30", "30"]],
	            "toolbar": false
	        },
	        "autoCalendar": {
	            "text": "Calendar Popup",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "startWeekOn": {
	            "text": "Start Week On",
	            "value": "Sunday",
	            "dropdown": [["Monday", "Monday"], ["Sunday", "Sunday"]],
	            "toolbar": false
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "day": "Day",
	                "month": "Month",
	                "year": "Year",
	                "last": "Last Name",
	                "hour": "Hour",
	                "minutes": "Minutes",
	                "litemode": "Date"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "months": {
	            "value": "January|February|March|April|May|June|July|August|September|October|November|December",
	            "hidden": true
	        },
	        "days": {
	            "value": "Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday",
	            "hidden": true
	        },
	        "today": {
	            "value": "Today",
	            "hidden": true
	        },
	        "liteMode": {
	            "text": "Lite Mode",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "validateLiteDate": {
	            "text": "Validate Lite Mode Date",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "limitDate": {
	            "text": "Limit Dates",
	            "value": {
	                "days": {
	                    "monday": true,
	                    "tuesday": true,
	                    "wednesday": true,
	                    "thursday": true,
	                    "friday": true,
	                    "saturday": true,
	                    "sunday": true
	                },
	                "future": true,
	                "past": true,
	                "custom": false,
	                "ranges": false,
	                "start": "",
	                "end": ""
	            },
	            "toolbar": false
	        },
	        "ageVerification": {
	            "text": "Age Verification",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "minAge": {
	            "text": "Minimum Age",
	            "value": ""
	        }
	    },
	    "control_time": {
	        "text": {
	            "text": "Question",
	            "value": "Time"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "range": {
	            "text": "Range",
	            "value": "No",
	            "type": "toggle",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "icon": "images/toolbar/range.png",
	            "iconClassName": "toolbar-range"
	        },
	        "timeFormat": {
	            "text": "Time Format",
	            "value": "AM/PM",
	            "dropdown": [["24 Hour", "24 Hour"], ["AM/PM", "AM/PM"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-time_format_24"
	        },
	        "showDayPeriods": {
	            "text": "Show Day Period",
	            "value": "both",
	            "dropdown": [["both", "Both AM & PM"], ["amOnly", "AM only"], ["pmOnly", "PM only"]],
	            "toolbar": false
	        },
	        "defaultTime": {
	            "text": "Default Time",
	            "value": "none"
	        },
	        "step": {
	            "text": "Minute Stepping",
	            "value": "10",
	            "dropdown": [["1", "1"], ["5", "5"], ["10", "10"], ["15", "15"], ["20", "20"], ["30", "30"]],
	            "toolbar": false
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "timeDiff": {
	            "text": "Time Range Duration",
	            "toolbar": false,
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "hour": "Hour",
	                "minutes": "Minutes",
	                "hourRange": "Hour",
	                "minutesRange": "Minutes"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_timev2": {
	        "text": {
	            "text": "Question",
	            "value": "Time"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "range": {
	            "text": "Range",
	            "value": "No",
	            "type": "toggle",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "icon": "images/toolbar/range.png",
	            "iconClassName": "toolbar-range"
	        },
	        "timeFormat": {
	            "text": "Time Format",
	            "value": "AM/PM",
	            "dropdown": [["24 Hour", "24 Hour"], ["AM/PM", "AM/PM"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-time_format_24"
	        },
	        "showDayPeriods": {
	            "text": "Show Day Period",
	            "value": "both",
	            "dropdown": [["both", "Both AM & PM"], ["amOnly", "AM only"], ["pmOnly", "PM only"]],
	            "toolbar": false
	        },
	        "defaultTime": {
	            "text": "Default Time",
	            "value": "none"
	        },
	        "step": {
	            "text": "Minute Stepping",
	            "value": "1",
	            "dropdown": [["1", "1"], ["5", "5"], ["10", "10"], ["15", "15"], ["20", "20"], ["30", "30"]],
	            "toolbar": false
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "timeDiff": {
	            "text": "Time Range Duration",
	            "toolbar": false,
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "hour": "Hour",
	                "minutes": "Minutes",
	                "hourRange": "Hour",
	                "minutesRange": "Minutes"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_filepickerIO": {
	        "apiKey": {
	            "text": "API Key",
	            "value": "",
	            "toolbar": false
	        },
	        "buttonText": {
	            "text": "Button Text",
	            "value": "Pick File",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-font_new"
	        },
	        "text": {
	            "text": "Question",
	            "value": "...."
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "allowMultiple": {
	            "text": "Allow Multiple",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "fpModal": {
	            "text": "Modal",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "maxFileSize": {
	            "text": "Max File Size",
	            "value": "1024",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-max_value",
	            "hint": "Enter a value in Kilobyte(KB).<br>Default is 1024(1MB)"
	        },
	        "mimetypes": {
	            "text": "Mimetypes",
	            "value": "image/*, video/*, audio/*, application/*",
	            "hint": "Use <b>*(asterisk)</b> to allow all.<br>e.g <b><font color=\"green\">image/*</font></b> will allow all type of images.<br><i>--Use <b><font color=\"green\">*/*</font></b> to allow all types of mimetypes.<br>--Be sure that the services integrated are compatible with the mimetype(s) specified.</i>",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-upload_extensions"
	        },
	        "buttonStyle": {
	            "text": "Button Style",
	            "value": "simple_blue",
	            "dropdown": [["None", "None"], ["simple_white", "Simple White"], ["simple_grey", "Simple Grey"], ["simple_black", "Simple Black"], ["simple_pink", "Simple Pink"], ["simple_rose", "Simple Rose"], ["simple_red", "Simple Red"], ["simple_blue", "Simple Blue"], ["simple_carolina_blue", "Simple Carolina Blue"], ["simple_green", "Simple Green"], ["simple_green_apple", "Simple Green Apple"], ["simple_yellow", "Simple Yellow"], ["simple_orange", "Simple Orange"], ["light", "Light"], ["light_rounded", "Light Rounded"], ["cool_grey", "Cool Grey"], ["cool_grey_rounded", "Cool Grey Rounded"], ["carbon", "Carbon"], ["carbon_rounded", "Carbon Rounded"], ["blue", "Blue"], ["black_blue", "Black Blue"], ["black_glass", "Black Glass"], ["wood", "Wood"], ["wood_3d", "Wood 3D"], ["3d_edgy_yellow", "3D Edgy Yellow"], ["denim_dark_blue", "Denim Dark Blue"], ["flat_round_teal", "Flat Round Teal"], ["leather_black", "Leather Black"], ["metal_brushed", "Metal Brushed"], ["steel", "Steel"], ["3d_round_yellow", "3D Round Yellow"], ["big_green", "Big Green"], ["book_blue1", "Book Blue"], ["book_blue2", "Book Blue 2"], ["big_square_blue", "Big Square Blue"], ["push_red", "Push Red"], ["big_white", "Big White"]]
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "services": {
	            "text": "Services",
	            "hidden": true,
	            "toolbar": false,
	            "value": "1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,23"
	        },
	        "openToService": {
	            "text": "Default Service",
	            "value": "1",
	            "toolbar": false,
	            "dropdown": []
	        },
	        "cropImage": {
	            "text": "Crop Image",
	            "value": "disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "tab": "advanced"
	        },
	        "cropImageRatio": {
	            "text": "Crop Image Ratio",
	            "value": "none",
	            "dropdown": [["none", "Unconstrained"], ["1/1", "1x1 (Square)"], ["2/3", "2x3 (4x6)"], ["8.5/11", "8.5x11"], ["4/5", "4x5 (8x10)"], ["5/7", "5x7"], ["4/3", "4/3"], ["16/9", "16/9"]],
	            "toolbar": false,
	            "tab": "advanced"
	        },
	        "compressImage": {
	            "text": "Compress Image",
	            "value": "disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "tab": "advanced"
	        },
	        "compressImageLvl": {
	            "text": "Quality Level",
	            "value": "100",
	            "dropdown": [["100", "100% (No compression)"], ["90", "90% (Very Low)"], ["80", "80% (Low)"], ["70", "70% (Medium)"], ["60", "60% (High)"], ["50", "50% (Very High)"], ["40", "40%"], ["30", "30%"], ["20", "20%"], ["10", "10%"], ["0", "0%"]],
	            "toolbar": false,
	            "tab": "advanced"
	        },
	        "imageDim": {
	            "text": "Image dimensions",
	            "value": "",
	            "toolbar": false,
	            "hidden": true,
	            "tab": "advanced"
	        },
	        "imageMin": {
	            "text": "Min Dimensions",
	            "value": "",
	            "toolbar": false,
	            "hidden": true,
	            "tab": "advanced"
	        },
	        "imageMax": {
	            "text": "Max Dimensions",
	            "value": "",
	            "toolbar": false,
	            "hidden": true,
	            "tab": "advanced"
	        },
	        "allowUploadToS3": {
	            "text": "Store files to S3",
	            "value": "disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "tab": "advanced"
	        },
	        "s3UploadingPath": {
	            "text": "Upload Path",
	            "value": "JotForm/{formID}",
	            "toolbar": false,
	            "tab": "advanced"
	        },
	        "s3UploadAccess": {
	            "text": "File Access",
	            "value": "public",
	            "dropdown": [["public", "Public"], ["private", "Private"]],
	            "toolbar": false,
	            "tab": "advanced"
	        }
	    },
	    "control_fileupload": {
	        "buttonText": {
	            "text": "Button Text",
	            "value": "Browse Files",
	            "toolbar": false,
	            "condition": [["allowMultiple", "Yes"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "allowMultiple": {
	            "text": "Allow Multiple",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "fileLimit": {
	            "text": "Maximum number of files",
	            "value": "0",
	            "toolbar": false
	        },
	        "maxFileSize": {
	            "text": "Max File Size",
	            "value": "1024",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-max_value",
	            "hint": "Enter a value in Kilobyte(KB).<br>Default is 1024(1MB)"
	        },
	        "minFileSize": {
	            "text": "Min File Size",
	            "value": "0",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-max_value",
	            "hint": "Enter a value in Kilobyte(KB).<br>Default is 0",
	            "toolbar": false
	        },
	        "extensions": {
	            "text": "Extensions",
	            "value": "pdf, doc, docx, xls, xlsx, csv, txt, rtf, html, zip, mp3, wma, mpg, flv, avi, jpg, jpeg, png, gif",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-upload_extensions"
	        },
	        "validateImg": {
	            "text": "Validate Image",
	            "value": "enable",
	            "dropdown": [["disable", "Disabled"], ["enable", "Enabled"]],
	            "type": "toggle",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-validation"
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "downloadImg": {
	            "text": "Download Images",
	            "value": "Yes",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false
	        },
	        "buttonStyle": {
	            "text": "Button Style",
	            "value": "None",
	            "toolbar": false,
	            "dropdown": [["None", "None"], ["simple_white", "Simple White"], ["simple_grey", "Simple Grey"], ["simple_black", "Simple Black"], ["simple_pink", "Simple Pink"], ["simple_rose", "Simple Rose"], ["simple_red", "Simple Red"], ["simple_blue", "Simple Blue"], ["simple_carolina_blue", "Simple Carolina Blue"], ["simple_green", "Simple Green"], ["simple_green_apple", "Simple Green Apple"], ["simple_yellow", "Simple Yellow"], ["simple_orange", "Simple Orange"], ["light", "Light"], ["light_rounded", "Light Rounded"], ["cool_grey", "Cool Grey"], ["cool_grey_rounded", "Cool Grey Rounded"], ["carbon", "Carbon"], ["carbon_rounded", "Carbon Rounded"], ["blue", "Blue"], ["black_blue", "Black Blue"], ["black_glass", "Black Glass"], ["wood", "Wood"], ["wood_3d", "Wood 3D"], ["3d_edgy_yellow", "3D Edgy Yellow"], ["denim_dark_blue", "Denim Dark Blue"], ["flat_round_teal", "Flat Round Teal"], ["leather_black", "Leather Black"], ["metal_brushed", "Metal Brushed"], ["steel", "Steel"], ["3d_round_yellow", "3D Round Yellow"], ["big_green", "Big Green"], ["book_blue1", "Book Blue"], ["book_blue2", "Book Blue 2"], ["big_square_blue", "Big Square Blue"], ["push_red", "Push Red"], ["big_white", "Big White"]]
	        }
	    },
	    "control_fileuploadv2": {
	        "buttonText": {
	            "text": "Button Text",
	            "value": "Browse Files",
	            "toolbar": false,
	            "condition": [["allowMultiple", "Yes"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "allowMultiple": {
	            "text": "Allow Multiple",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "fileLimit": {
	            "text": "Maximum number of files",
	            "value": "0",
	            "toolbar": false
	        },
	        "maxFileSize": {
	            "text": "Max File Size",
	            "value": "1024",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-max_value",
	            "hint": "Enter a value in Kilobyte(KB).<br>Default is 1024(1MB)"
	        },
	        "minFileSize": {
	            "text": "Min File Size",
	            "value": "0",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-max_value",
	            "hint": "Enter a value in Kilobyte(KB).<br>Default is 0",
	            "toolbar": false
	        },
	        "extensions": {
	            "text": "Extensions",
	            "value": "pdf, doc, docx, xls, xlsx, csv, txt, rtf, html, zip, mp3, wma, mpg, flv, avi, jpg, jpeg, png, gif",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-upload_extensions"
	        },
	        "validateImg": {
	            "text": "Validate Image",
	            "value": "enable",
	            "dropdown": [["disable", "Disabled"], ["enable", "Enabled"]],
	            "type": "toggle",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-validation"
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "downloadImg": {
	            "text": "Download Images",
	            "value": "Yes",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false
	        },
	        "buttonStyle": {
	            "text": "Button Style",
	            "value": "None",
	            "toolbar": false,
	            "dropdown": [["None", "None"], ["simple_white", "Simple White"], ["simple_grey", "Simple Grey"], ["simple_black", "Simple Black"], ["simple_pink", "Simple Pink"], ["simple_rose", "Simple Rose"], ["simple_red", "Simple Red"], ["simple_blue", "Simple Blue"], ["simple_carolina_blue", "Simple Carolina Blue"], ["simple_green", "Simple Green"], ["simple_green_apple", "Simple Green Apple"], ["simple_yellow", "Simple Yellow"], ["simple_orange", "Simple Orange"], ["light", "Light"], ["light_rounded", "Light Rounded"], ["cool_grey", "Cool Grey"], ["cool_grey_rounded", "Cool Grey Rounded"], ["carbon", "Carbon"], ["carbon_rounded", "Carbon Rounded"], ["blue", "Blue"], ["black_blue", "Black Blue"], ["black_glass", "Black Glass"], ["wood", "Wood"], ["wood_3d", "Wood 3D"], ["3d_edgy_yellow", "3D Edgy Yellow"], ["denim_dark_blue", "Denim Dark Blue"], ["flat_round_teal", "Flat Round Teal"], ["leather_black", "Leather Black"], ["metal_brushed", "Metal Brushed"], ["steel", "Steel"], ["3d_round_yellow", "3D Round Yellow"], ["big_green", "Big Green"], ["book_blue1", "Book Blue"], ["book_blue2", "Book Blue 2"], ["big_square_blue", "Big Square Blue"], ["push_red", "Push Red"], ["big_white", "Big White"]]
	        }
	    },
	    "control_newfileupload": {
	        "buttonText": {
	            "text": "Button Text",
	            "value": "Upload a File",
	            "toolbar": false,
	            "condition": [["allowMultiple", "Yes"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "...."
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "allowMultiple": {
	            "text": "Allow Multiple",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "fileLimit": {
	            "text": "Maximum number of files",
	            "value": "0",
	            "toolbar": false
	        },
	        "maxFileSize": {
	            "text": "Max File Size",
	            "value": "1024",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-max_value",
	            "hint": "Enter a value in Kilobyte(KB).<br>Default is 1024(1MB)"
	        },
	        "minFileSize": {
	            "text": "Min File Size",
	            "value": "0",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-max_value",
	            "hint": "Enter a value in Kilobyte(KB).<br>Default is 0",
	            "toolbar": false
	        },
	        "extensions": {
	            "text": "Extensions",
	            "value": "pdf, doc, docx, xls, xlsx, csv, txt, rtf, html, zip, mp3, wma, mpg, flv, avi, jpg, jpeg, png, gif",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-upload_extensions"
	        },
	        "validateImg": {
	            "text": "Validate Image",
	            "value": "enable",
	            "dropdown": [["disable", "Disabled"], ["enable", "Enabled"]],
	            "type": "toggle",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-validation"
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "buttonStyle": {
	            "text": "Button Style",
	            "value": "None",
	            "toolbar": false,
	            "dropdown": [["None", "None"], ["simple_white", "Simple White"], ["simple_grey", "Simple Grey"], ["simple_black", "Simple Black"], ["simple_pink", "Simple Pink"], ["simple_rose", "Simple Rose"], ["simple_red", "Simple Red"], ["simple_blue", "Simple Blue"], ["simple_carolina_blue", "Simple Carolina Blue"], ["simple_green", "Simple Green"], ["simple_green_apple", "Simple Green Apple"], ["simple_yellow", "Simple Yellow"], ["simple_orange", "Simple Orange"], ["light", "Light"], ["light_rounded", "Light Rounded"], ["cool_grey", "Cool Grey"], ["cool_grey_rounded", "Cool Grey Rounded"], ["carbon", "Carbon"], ["carbon_rounded", "Carbon Rounded"], ["blue", "Blue"], ["black_blue", "Black Blue"], ["black_glass", "Black Glass"], ["wood", "Wood"], ["wood_3d", "Wood 3D"], ["3d_edgy_yellow", "3D Edgy Yellow"], ["denim_dark_blue", "Denim Dark Blue"], ["flat_round_teal", "Flat Round Teal"], ["leather_black", "Leather Black"], ["metal_brushed", "Metal Brushed"], ["steel", "Steel"], ["3d_round_yellow", "3D Round Yellow"], ["big_green", "Big Green"], ["book_blue1", "Book Blue"], ["book_blue2", "Book Blue 2"], ["big_square_blue", "Big Square Blue"], ["push_red", "Push Red"], ["big_white", "Big White"]]
	        }
	    },
	    "control_button": {
	        "text": {
	            "text": "Submit Text",
	            "value": "Submit",
	            "nolabel": true,
	            "forceDisplay": true,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-font_new"
	        },
	        "useImage": {
	            "text": "Button Image",
	            "value": "",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-image_source"
	        },
	        "buttonAlign": {
	            "text": "Button Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Center", "Center"], ["Right", "Right"]]
	        },
	        "clear": {
	            "text": "Reset Button",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]]
	        },
	        "encryptIcon": {
	            "text": "Encrypt Icon",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false,
	            "hidden": true
	        },
	        "clearText": {
	            "text": "Clear Form Text",
	            "value": "Clear Form",
	            "toolbar": false,
	            "hidden": false
	        },
	        "print": {
	            "text": "Print Button",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]]
	        },
	        "printText": {
	            "text": "Print Form Text",
	            "value": "Print Form",
	            "toolbar": false,
	            "hidden": false
	        },
	        "preview": {
	            "text": "Preview PDF Button",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]]
	        },
	        "previewText": {
	            "text": "Preview PDF Button Text",
	            "value": "Preview PDF",
	            "toolbar": false,
	            "hidden": false
	        },
	        "paypalBt": {
	            "text": "Use Checkout Buttons",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "buttonStyle": {
	            "text": "Button Style",
	            "value": "None",
	            "dropdown": [["None", "None"], ["simple_white", "Simple White"], ["simple_grey", "Simple Grey"], ["simple_black", "Simple Black"], ["simple_pink", "Simple Pink"], ["simple_rose", "Simple Rose"], ["simple_red", "Simple Red"], ["simple_blue", "Simple Blue"], ["simple_carolina_blue", "Simple Carolina Blue"], ["simple_green", "Simple Green"], ["simple_green_apple", "Simple Green Apple"], ["simple_yellow", "Simple Yellow"], ["simple_orange", "Simple Orange"], ["light", "Light"], ["light_rounded", "Light Rounded"], ["cool_grey", "Cool Grey"], ["cool_grey_rounded", "Cool Grey Rounded"], ["carbon", "Carbon"], ["carbon_rounded", "Carbon Rounded"], ["blue", "Blue"], ["black_blue", "Black Blue"], ["black_glass", "Black Glass"], ["wood", "Wood"], ["wood_3d", "Wood 3D"], ["3d_edgy_yellow", "3D Edgy Yellow"], ["denim_dark_blue", "Denim Dark Blue"], ["flat_round_teal", "Flat Round Teal"], ["leather_black", "Leather Black"], ["metal_brushed", "Metal Brushed"], ["steel", "Steel"], ["3d_round_yellow", "3D Round Yellow"], ["big_green", "Big Green"], ["book_blue1", "Book Blue"], ["book_blue2", "Book Blue 2"], ["big_square_blue", "Big Square Blue"], ["push_red", "Push Red"], ["big_white", "Big White"]]
	        }
	    },
	    "control_geolocation": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "special": {
	            "text": "Special Options",
	            "value": "None",
	            "dropdown": ["None", "US States", "US States Abbr", "Canadian Provinces", "Countries", "Last 100 Years", "Gender", "Days", "Months", "Time Zones"],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_special"
	        },
	        "size": {
	            "text": "Height",
	            "value": 0,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_size"
	        },
	        "width": {
	            "text": "Width",
	            "value": 150,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_width"
	        },
	        "selected": {
	            "text": "Selected",
	            "value": "",
	            "dropdown": "options",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_selected"
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        }
	    },
	    "control_passwordbox": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "size": {
	            "text": "Size",
	            "value": 20
	        },
	        "validation": {
	            "text": "Validation",
	            "value": "None",
	            "dropdown": [["None", "None"], ["Email", "Email"], ["AlphaNumeric", "AlphaNumeric"], ["Alphabetic", "Alphabetic"], ["Numeric", "Numeric"]]
	        },
	        "maxsize": {
	            "text": "Max Size",
	            "value": ""
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_hidden": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": ""
	        },
	        "browserInfo": {
	            "text": "Browser Info",
	            "toolbar": false,
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        }
	    },
	    "control_separator": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question",
	            "toolbar": false,
	            "nolabel": true
	        },
	        "borderStyle": {
	            "text": "",
	            "toolbar": false,
	            "nolabel": true
	        },
	        "borderColor": {
	            "text": "",
	            "toolbar": false,
	            "nolabel": true
	        },
	        "borderWidth": {
	            "text": "",
	            "toolbar": false,
	            "nolabel": true
	        }
	    },
	    "control_clear": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question",
	            "toolbar": false,
	            "nolabel": true
	        }
	    },
	    "control_helper": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": ""
	        },
	        "relation": {
	            "text": "relation",
	            "value": ""
	        },
	        "data": {
	            "text": "data",
	            "value": ""
	        }
	    },
	    "control_autoincrement": {
	        "text": {
	            "text": "Auto Increment",
	            "value": "Type a question"
	        },
	        "currentIndex": {
	            "text": "Current Index",
	            "value": "0"
	        },
	        "idPrefix": {
	            "text": "Prefix",
	            "value": ""
	        },
	        "idPadding": {
	            "text": "Number Padding",
	            "value": "0"
	        },
	        "generationType": {
	            "text": "Unique ID Generation Method",
	            "value": "sequential",
	            "dropdown": [["sequential", "Sequential Numbers"], ["random", "Random Values"]]
	        },
	        "idLength": {
	            "text": "Number of Characters",
	            "value": "6"
	        },
	        "characters": {
	            "text": "Include character(s)",
	            "value": ["numbers, uppercase"]
	        },
	        "hidden": {
	            "text": "Hidden and cannot be changed",
	            "value": "Yes"
	        }
	    },
	    "control_image": {
	        "text": {
	            "text": "File Reference",
	            "value": "Image",
	            "nolabel": true
	        },
	        "labelText": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "src": {
	            "text": "Image Source",
	            "value": "https://www.jotform.com/images/logo.png",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-image_source"
	        },
	        "link": {
	            "text": "Image Link",
	            "value": "",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-image_link"
	        },
	        "alt": {
	            "text": "Alt",
	            "value": "",
	            "toolbar": false
	        },
	        "target": {
	            "text": "Target",
	            "value": "_blank",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-image_target",
	            "dropdown": [["_blank", "Blank"], ["_self", "Self"], ["_parent", "Parent"], ["_top", "Top"]]
	        },
	        "height": {
	            "text": "Height",
	            "value": "55"
	        },
	        "width": {
	            "text": "Width",
	            "value": "164"
	        },
	        "align": {
	            "text": "Align",
	            "value": "Left",
	            "dropdown": [["Left", "Left"], ["Center", "Center"], ["Right", "Right"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-image_align"
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        }
	    },
	    "control_captcha": {
	        "text": {
	            "text": "Question",
	            "value": "Enter the message as it's shown"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "useReCaptcha": {
	            "text": "reCaptcha",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        }
	    },
	    "control_autocomp": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "items": {
	            "text": "Items",
	            "value": "Item 1|Item 2|Item 3",
	            "textarea": true,
	            "splitter": "|"
	        },
	        "size": {
	            "text": "Size",
	            "value": 20
	        },
	        "validation": {
	            "text": "Validation",
	            "value": "None",
	            "dropdown": [["None", "None"], ["Email", "Email"], ["AlphaNumeric", "AlphaNumeric"], ["Alphabetic", "Alphabetic"], ["Numeric", "Numeric"], ["Url", "URL"]]
	        },
	        "maxsize": {
	            "text": "Max Size",
	            "value": ""
	        },
	        "maxMatches": {
	            "text": "Max Matches",
	            "value": 100,
	            "toolbar": false
	        },
	        "fuzzySearch": {
	            "text": "Fuzzy Search",
	            "value": "Yes",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": ""
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "hint": {
	            "text": "Hint Example",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        }
	    },
	    "control_rating": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "stars": {
	            "text": "Star Amount",
	            "value": "5",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-star_amount"
	        },
	        "starStyle": {
	            "text": "Star Style",
	            "value": "Stars",
	            "dropdown": [["Stars", "Stars"], ["Stars 2", "Stars 2"], ["Hearts", "Hearts"], ["Light Bulps", "Light Bulbs"], ["Lightnings", "Lightnings"], ["Flags", "Flags"], ["Shields", "Shields"], ["Pluses", "Pluses"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-star_style"
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        }
	    },
	    "control_scale": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "fromText": {
	            "text": "\"Worst\" Text",
	            "value": "Worst",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-scale_from"
	        },
	        "toText": {
	            "text": "\"Best\" Text",
	            "value": "Best",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-scale_to"
	        },
	        "scaleAmount": {
	            "text": "Scale Amount",
	            "value": "5",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-scale_amount"
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        }
	    },
	    "control_slider": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "maxValue": {
	            "text": "Maximum Value",
	            "value": "100"
	        },
	        "width": {
	            "text": "Width",
	            "value": "200"
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": "0"
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        }
	    },
	    "control_spinner": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "width": {
	            "text": "Width",
	            "value": "60",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-spinner_size"
	        },
	        "minValue": {
	            "text": "Minimum Value",
	            "value": ""
	        },
	        "maxValue": {
	            "text": "Maximum Value",
	            "value": ""
	        },
	        "addAmount": {
	            "text": "Stepping",
	            "value": "1"
	        },
	        "allowMinus": {
	            "text": "Allow Negatives",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "disallowDecimals": {
	            "text": "Disallow Decimals",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        }
	    },
	    "control_range": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "addAmount": {
	            "text": "Stepping",
	            "value": "1"
	        },
	        "allowMinus": {
	            "text": "Allow Negatives",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "defaultFrom": {
	            "text": "Default From",
	            "value": "0",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-range_default_from"
	        },
	        "defaultTo": {
	            "text": "Default To",
	            "value": "0",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-range_default_to"
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "from": "From",
	                "to": "To"
	            },
	            "hidden": true,
	            "toolbar": false
	        }
	    },
	    "control_grading": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "options": {
	            "text": "Options",
	            "value": "Item 1|Item 2|Item 3",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-grading_options"
	        },
	        "total": {
	            "text": "Total",
	            "value": "100",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-grading_total"
	        },
	        "boxAlign": {
	            "text": "Box Alignment",
	            "value": "Left",
	            "dropdown": [["Left", "Left"], ["Right", "Right"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-label_align"
	        }
	    },
	    "control_matrix": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Top",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "toolbar": false,
	            "dropdown": [["No", "No"], ["Require an answer on every row", "Require an answer on every row"], ["Require at least one answer", "Require at least one answer"], ["Require an answer in every cell", "Require an answer in every cell"]]
	        },
	        "matrixwidth": {
	            "text": "Table Width",
	            "type": "spinner",
	            "value": "",
	            "toolbar": false
	        },
	        "matrixcells": {
	            "text": "Cell Width",
	            "type": "spinner",
	            "value": "",
	            "toolbar": false
	        },
	        "mrows": {
	            "text": "Rows",
	            "value": "Service Quality|Overall Hygiene|Responsiveness|Kindness",
	            "textarea": true,
	            "splitter": "|"
	        },
	        "mcolumns": {
	            "text": "Columns",
	            "value": "Very Satisfied|Satisfied|Somewhat Satisfied|Not Satisfied",
	            "textarea": true,
	            "splitter": "|"
	        },
	        "inputType": {
	            "text": "Input Type",
	            "value": "Radio Button",
	            "dropdown": [["Radio Button", "Radio Button"], ["Check Box", "Check Box"], ["Text Box", "Text Box"], ["Currency Box", "Currency Box"], ["Drop Down", "Drop Down"], ["Numeric Text Box", "Numeric Text Box"], ["Dynamic", "Dynamic"]]
	        },
	        "dropdown": {
	            "text": "Dropdown Options",
	            "value": "Yes|No",
	            "textarea": true,
	            "splitter": "|",
	            "hidden": true
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "calcMatrixValues": {
	            "text": "Calculation Values",
	            "value": "",
	            "textarea": true,
	            "splitter": "|",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_options",
	            "toolbar": false
	        },
	        "shuffleMatrix": {
	            "text": "Shuffle Rows",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_collapse": {
	        "text": {
	            "text": "Text",
	            "value": "Click to edit this text...",
	            "nolabel": true
	        },
	        "status": {
	            "text": "Status",
	            "value": "Closed",
	            "dropdown": [["Closed", "Closed"], ["Open", "Open"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-collapse_open"
	        },
	        "visibility": {
	            "text": "Visibility",
	            "value": "Visible",
	            "dropdown": [["Visible", "Visible"], ["Hidden", "Hidden"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-visibility"
	        }
	    },
	    "control_pagebreak": {
	        "text": {
	            "text": "Text",
	            "value": "Page Break",
	            "nolabel": true
	        },
	        "backText": {
	            "text": "Back Button Text",
	            "value": "Back"
	        },
	        "nextText": {
	            "text": "Next Button Text",
	            "value": "Next"
	        },
	        "backVisi": {
	            "text": "Back Visibility",
	            "value": "Visible",
	            "dropdown": [["Visible", "Visible"], ["Hidden", "Hidden"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-visibility"
	        },
	        "nextVisi": {
	            "text": "Next Visibility",
	            "value": "Visible",
	            "dropdown": [["Visible", "Visible"], ["Hidden", "Hidden"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-visibility"
	        },
	        "autoNext": {
	            "text": "Auto Next",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "buttonStyle": {
	            "text": "Button Style",
	            "value": "None",
	            "dropdown": [["None", "None"], ["simple_white", "Simple White"], ["simple_grey", "Simple Grey"], ["simple_black", "Simple Black"], ["simple_pink", "Simple Pink"], ["simple_rose", "Simple Rose"], ["simple_red", "Simple Red"], ["simple_blue", "Simple Blue"], ["simple_carolina_blue", "Simple Carolina Blue"], ["simple_green", "Simple Green"], ["simple_green_apple", "Simple Green Apple"], ["simple_yellow", "Simple Yellow"], ["simple_orange", "Simple Orange"], ["light", "Light"], ["light_rounded", "Light Rounded"], ["cool_grey", "Cool Grey"], ["cool_grey_rounded", "Cool Grey Rounded"], ["carbon", "Carbon"], ["carbon_rounded", "Carbon Rounded"], ["blue", "Blue"], ["black_blue", "Black Blue"], ["black_glass", "Black Glass"], ["wood", "Wood"], ["wood_3d", "Wood 3D"], ["3d_edgy_yellow", "3D Edgy Yellow"], ["denim_dark_blue", "Denim Dark Blue"], ["flat_round_teal", "Flat Round Teal"], ["leather_black", "Leather Black"], ["metal_brushed", "Metal Brushed"], ["steel", "Steel"], ["3d_round_yellow", "3D Round Yellow"], ["big_green", "Big Green"], ["book_blue1", "Book Blue"], ["book_blue2", "Book Blue 2"], ["big_square_blue", "Big Square Blue"], ["push_red", "Push Red"], ["big_white", "Big White"]]
	        },
	        "pageInfo": {
	            "text": "Page Info",
	            "value": "",
	            "textarea": true
	        }
	    },
	    "control_fullname": {
	        "text": {
	            "text": "Question",
	            "value": "Name"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "prefix": {
	            "text": "Prefix",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]]
	        },
	        "prefixChoices": {
	            "text": "Prefix Choices",
	            "value": "",
	            "splitter": "|",
	            "textarea": true,
	            "toolbar": false
	        },
	        "suffix": {
	            "text": "Suffix",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]]
	        },
	        "middle": {
	            "text": "Middle Name",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "prefix": "Prefix",
	                "first": "First Name",
	                "middle": "Middle Name",
	                "last": "Last Name",
	                "suffix": "Suffix"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "compoundHint": {
	            "text": "Hint Example",
	            "value": "",
	            "hint": "Seperate textboxes with commas<br/>eg. James,Smith"
	        }
	    },
	    "control_location": {
	        "text": {
	            "text": "Question",
	            "value": "Type a question"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        }
	    },
	    "control_address": {
	        "text": {
	            "text": "Question",
	            "value": "Address"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "requiredInputs": {
	            "text": "Required Inputs",
	            "value": "state|zip|st1|city|st2",
	            "useCheckbox": true,
	            "toolbar": true,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-address_requiredInputs",
	            "noproperty": true,
	            "dropdown": [["st1", "Street Address"], ["st2", "Street Address Line 2"], ["city", "City"], ["state", "State"], ["zip", "Postal/Zip Code"], ["country", "Country"]]
	        },
	        "selectedCountry": {
	            "text": "Country",
	            "value": "",
	            "dropdown": [""].concat(_Countries.COUNTRIES),
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_selected"
	        },
	        "states": {
	            "text": "State / Province input",
	            "value": "textbox",
	            "dropdown": [["textbox", "Text Box"], ["americanStates", "American States"]],
	            "toolbar": false
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "subfields": {
	            "text": "Fields",
	            "value": "state|zip|st1|city|st2",
	            "useCheckbox": true,
	            "toolbar": true,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-address_subfields",
	            "noproperty": true,
	            "dropdown": [["st1", "Street Address"], ["st2", "Street Address Line 2"], ["city", "City"], ["state", "State"], ["zip", "Postal/Zip Code"], ["country", "Country"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "compoundHint": {
	            "text": "Hint Example",
	            "value": "",
	            "hint": "Seperate textboxes with commas<br/>eg. 8 The Greenway,Beverly Hills,Los Angeles,California,90210"
	        },
	        "countryDropdownDefaultText": {
	            "text": "Country Dropdown Default Text",
	            "value": "Please Select"
	        }
	    },
	    "control_email": {
	        "text": {
	            "text": "Question",
	            "value": "E-mail"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "size": {
	            "text": "Size",
	            "value": 30
	        },
	        "validation": {
	            "text": "Validation",
	            "value": "Email",
	            "dropdown": [["None", "None"], ["Email", "Email"], ["AlphaNumeric", "AlphaNumeric"], ["Alphabetic", "Alphabetic"], ["Numeric", "Numeric"]]
	        },
	        "maxsize": {
	            "text": "Max Size",
	            "value": ""
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": ""
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "hint": {
	            "text": "Hint Example",
	            "value": ""
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "confirmation": {
	            "text": "Confirmation",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "confirmationHint": {
	            "text": "Confirmation Hint Example",
	            "value": "Confirm Email",
	            "toolbar": false
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "disallowFree": {
	            "text": "Disallow Free Addresses",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_number": {
	        "text": {
	            "text": "Question",
	            "value": "Number"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "size": {
	            "text": "Size",
	            "value": 5
	        },
	        "maxsize": {
	            "text": "Max Size",
	            "value": ""
	        },
	        "minValue": {
	            "text": "Minimum Value",
	            "value": ""
	        },
	        "maxValue": {
	            "text": "Maximum Value",
	            "value": ""
	        },
	        "defaultValue": {
	            "text": "Default Value",
	            "value": ""
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "hint": {
	            "text": "Hint Example",
	            "value": "ex: 23"
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        }
	    },
	    "control_phone": {
	        "text": {
	            "text": "Question",
	            "value": "Phone Number"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "countryCode": {
	            "text": "Country Code",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "inputMask": {
	            "text": "Input Mask",
	            "value": "disable",
	            "dropdown": [["disable", "Disabled"], ["enable", "Enabled"]],
	            "type": "toggle",
	            "size": 20,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-collapse_open"
	        },
	        "inputMaskValue": {
	            "text": "Mask Value",
	            "value": "(###) ###-####",
	            "hint": "Use <b>#</b> symbol to mask inputs.",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-default",
	            "size": 10,
	            "toolbar": false
	        },
	        "validation": {
	            "text": "Validation",
	            "value": "None",
	            "dropdown": [["None", "None"], ["Fill Mask", "Fill Mask"]],
	            "toolbar": false
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "country": "Country Code",
	                "area": "Area Code",
	                "phone": "Phone Number",
	                "full": "Phone Number",
	                "masked": ""
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "readonly": {
	            "text": "Read-only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "compoundHint": {
	            "text": "Hint Example",
	            "value": "",
	            "hint": "Seperate textboxes with commas<br/>eg. 01562,887728"
	        }
	    },
	    "control_birthdate": {
	        "text": {
	            "text": "Question",
	            "value": "Birth Date"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "format": {
	            "text": "Date Format",
	            "value": "mmddyyyy",
	            "dropdown": [["mmddyyyy", "mmddyyyy"], ["ddmmyyyy", "ddmmyyyy"], ["yyyymmdd", "yyyymmdd"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-date_format"
	        },
	        "yearFrom": {
	            "text": "Year From",
	            "type": "spinner",
	            "size": 10,
	            "value": "",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-range_default_from"
	        },
	        "yearTo": {
	            "text": "Year To",
	            "type": "spinner",
	            "size": 10,
	            "value": "",
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-range_default_to"
	        },
	        "months": {
	            "text": "Months",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "month": "Month",
	                "day": "Day",
	                "year": "Year"
	            },
	            "hidden": true,
	            "toolbar": false
	        }
	    },
	    "control_payment": {
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [[" ", "No Currency"], ["USD", "U.S. Dollar"], ["ARS", "Argentine Peso"], ["AUD", "Australian Dollar"], ["BOB", "Bolivian Boliviano"], ["BRL", "Brazilian Real"], ["BGN", "Bulgarian Lev"], ["CAD", "Canadian Dollar"], ["CLP", "Chilean Peso"], ["HRK", "Croatian Kuna"], ["CZK", "Czech Koruna"], ["DKK", "Danish Krone"], ["EGP", "Egyptian Pound"], ["EUR", "Euro"], ["GHS", "Ghana Cedis"], ["HKD", "Hong Kong Dollar"], ["HUF", "Hungarian Forint"], ["INR", "Indian Rupee"], ["IDR", "Indonesian Rupiah"], ["ILS", "Israeli New Sheqel"], ["JPY", "Japanese Yen"], ["JMD", "Jamaican Dollar"], ["MYR", "Malaysian Ringgit"], ["MXN", "Mexican Peso"], ["TWD", "New Taiwan Dollars"], ["NZD", "New Zealand Dollar"], ["NOK", "Norwegian Krone"], ["PKR", "Pakistani Rupee"], ["PHP", "Philippine Peso"], ["PLN", "Polish Zloty"], ["GBP", "Pound Sterling"], ["SGD", "Singapore Dollar"], ["ZAR", "South African Rand"], ["KRW", "South Korean Won"], ["LKR", "Sri Lankan Rupee"], ["SEK", "Swedish Krona"], ["CHF", "Swiss Franc"], ["THB", "Thai baht"], ["RON", "Romanian Lei"], ["RUB", "Russian Ruble"], ["TRY", "Turkish Liras"], ["AED", "UAE Dirham"]]
	        },
	        "bridge": {
	            "text": "Bridge",
	            "hidden": true,
	            "toolbar": false,
	            "value": ""
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_paymentwall": {
	        "publicKey": {
	            "text": "Public Key",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "privateKey": {
	            "text": "privateKey",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["AED", "United Arab Emirates Dirham"], ["AFN", "Afghan Afghani"], ["ALL", "Albanian Lek"], ["AMD", "Armenian Dram"], ["ANG", "Netherlands Antillean Gulden"], ["AOA", "Angolan Kwanza"], ["ARS", "Argentine Peso"], ["AUD", "Australian Dollar"], ["AWG", "Aruban Florin"], ["AZN", "Azerbaijani Manat"], ["BAM", "Bosnia and Herzegovina Convertible Mark"], ["BBD", "Barbadian Dollar"], ["BDT", "Bangladeshi Taka"], ["BGN", "Bulgarian Lev"], ["BHD", "Bahraini Dinar"], ["BIF", "Burundian Franc"], ["BMD", "Bermudian Dollar"], ["BND", "Brunei Dollar"], ["BOB", "Bolivian Boliviano"], ["BRL", "Brazilian Real"], ["BSD", "Bahamian Dollar"], ["BTN", "Bhutanese Ngultrum"], ["BWP", "Botswana Pula"], ["BYR", "Belarusian Ruble"], ["BZD", "Belize Dollar"], ["CAD", "Canadian Dollar"], ["CDF", "Congolese Franc"], ["CHF", "Swiss Franc"], ["CLP", "Chilean Peso"], ["CNY", "Chinese Renminbi Yuan"], ["COP", "Colombian Peso"], ["CRC", "Costa Rican Colón"], ["CUC", "Cuban Convertible Peso"], ["CUP", "Cuban Peso"], ["CVE", "Cape Verdean Escudo"], ["CZK", "Czech Koruna"], ["DJF", "Djiboutian Franc"], ["DKK", "Danish Krone"], ["DOP", "Dominican Peso"], ["DZD", "Algerian Dinar"], ["EEK", "Estonian Kroon"], ["EGP", "Egyptian Pound"], ["ERN", "Eritrean Nakfa"], ["ETB", "Ethiopian Birr"], ["EUR", "Euro"], ["FJD", "Fijian Dollar"], ["FKP", "Falkland Pound"], ["GBP", "British Pound"], ["GEL", "Georgian Lari"], ["GHS", "Ghanaian Cedi"], ["GIP", "Gibraltar Pound"], ["GMD", "Gambian Dalasi"], ["GNF", "Guinean Franc"], ["GTQ", "Guatemalan Quetzal"], ["GYD", "Guyanese Dollar"], ["HKD", "Hong Kong Dollar"], ["HNL", "Honduran Lempira"], ["HRK", "Croatian Kuna"], ["HTG", "Haitian Gourde"], ["HUF", "Hungarian Forint"], ["IDR", "Indonesian Rupiah"], ["ILS", "Israeli New Sheqel"], ["INR", "Indian Rupee"], ["IQD", "Iraqi Dinar"], ["IRR", "Iranian Rial"], ["ISK", "Icelandic Króna"], ["JMD", "Jamaican Dollar"], ["JOD", "Jordanian Dinar"], ["JPY", "Japanese Yen"], ["KES", "Kenyan Shilling"], ["KGS", "Kyrgyzstani Som"], ["KHR", "Cambodian Riel"], ["KMF", "Comorian Franc"], ["KPW", "North Korean Won"], ["KRW", "South Korean Won"], ["KWD", "Kuwaiti Dinar"], ["KYD", "Cayman Islands Dollar"], ["KZT", "Kazakhstani Tenge"], ["LAK", "Lao Kip"], ["LBP", "Lebanese Lira"], ["LKR", "Sri Lankan Rupee"], ["LRD", "Liberian Dollar"], ["LSL", "Lesotho Loti"], ["LTL", "Lithuanian Litas"], ["LVL", "Latvian Lats"], ["LYD", "Libyan Dinar"], ["MAD", "Moroccan Dirham"], ["MDL", "Moldovan Leu"], ["MGA", "Malagasy Ariary"], ["MKD", "Macedonian Denar"], ["MMK", "Myanmar Kyat"], ["MNT", "Mongolian Tögrög"], ["MOP", "Macanese Pataca"], ["MRO", "Mauritanian Ouguiya"], ["MUR", "Mauritian Rupee"], ["MVR", "Maldivian Rufiyaa"], ["MWK", "Malawian Kwacha"], ["MXN", "Mexican Peso"], ["MYR", "Malaysian Ringgit"], ["MZN", "Mozambican Metical"], ["NAD", "Namibian Dollar"], ["NGN", "Nigerian Naira"], ["NIO", "Nicaraguan Córdoba"], ["NOK", "Norwegian Krone"], ["NPR", "Nepalese Rupee"], ["NZD", "New Zealand Dollar"], ["OMR", "Omani Rial"], ["PAB", "Panamanian Balboa"], ["PEN", "Peruvian Nuevo Sol"], ["PGK", "Papua New Guinean Kina"], ["PHP", "Philippine Peso"], ["PKR", "Pakistani Rupee"], ["PLN", "Polish Złoty"], ["PYG", "Paraguayan Guaraní"], ["QAR", "Qatari Riyal"], ["RON", "Romanian Leu"], ["RSD", "Serbian Dinar"], ["RUB", "Russian Ruble"], ["RWF", "Rwandan Franc"], ["SAR", "Saudi Riyal"], ["SBD", "Solomon Islands Dollar"], ["SCR", "Seychellois Rupee"], ["SDG", "Sudanese Pound"], ["SEK", "Swedish Krona"], ["SGD", "Singapore Dollar"], ["SHP", "Saint Helenian Pound"], ["SKK", "Slovak Koruna"], ["SLL", "Sierra Leonean Leone"], ["SOS", "Somali Shilling"], ["SRD", "Surinamese Dollar"], ["STD", "São Tomé and Príncipe Dobra"], ["SVC", "Salvadoran Colón"], ["SYP", "Syrian Pound"], ["SZL", "Swazi Lilangeni"], ["THB", "Thai Baht"], ["TJS", "Tajikistani Somoni"], ["TMM", "Turkmenistani Manat"], ["TMT", "Turkmenistani Manat"], ["TND", "Tunisian Dinar"], ["TOP", "Tongan Paʻanga"], ["TRY", "Turkish New Lira"], ["TTD", "Trinidad and Tobago Dollar"], ["TWD", "New Taiwan Dollar"], ["TZS", "Tanzanian Shilling"], ["UAH", "Ukrainian Hryvnia"], ["UGX", "Ugandan Shilling"], ["USD", "United States Dollar"], ["UYU", "Uruguayan Peso"], ["UZS", "Uzbekistani Som"], ["VEF", "Venezuelan Bolívar"], ["VND", "Vietnamese Đồng"], ["VUV", "Vanuatu Vatu"], ["WST", "Samoan Tala"], ["XAF", "Central African Cfa Franc"], ["XCD", "East Caribbean Dollar"], ["XOF", "West African Cfa Franc"], ["XPF", "Cfp Franc"], ["YER", "Yemeni Rial"], ["ZAR", "South African Rand"], ["ZMK", "Zambian Kwacha"], ["ZWD", "Zimbabwean Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_email": "E-mail",
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_dwolla": {
	        "merchantId": {
	            "text": "Dwolla ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "apiKey": {
	            "text": "Application Key",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "apiSecret": {
	            "text": "Application Secret",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "sandbox": {
	            "text": "Status",
	            "value": "disabled",
	            "dropdown": [["disabled", "Live"], ["enabled", "Sandbox"]],
	            "toolbar": false
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "U.S. Dollar"]],
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_stripe": {
	        "connect": {
	            "text": "Connect with Stripe",
	            "connectType": "stripeconnect",
	            "value": {
	                "name": "Stripe",
	                "url": "https://connect.stripe.com/oauth/authorize",
	                "response_type": "code",
	                "scope": "read_write",
	                "stripe_landing": "login",
	                "client_id_test": "ca_1eOr9d8rS4JHOxiabxdL7qcTv88FrAZk",
	                "client_id_live": "ca_1eOrq5RMioZTllO0kuM79LbzT5vxIL7D",
	                "apiKey_test": "",
	                "apiKey_live": "",
	                "access_token": "",
	                "stripe_user_id": "",
	                "publishableKey": "",
	                "stripeConnectLoaded": false,
	                "oldMethod": false,
	                "button_disabled": false
	            },
	            "hidden": true,
	            "hideAtwizard": false,
	            "toolbar": false
	        },
	        "connectionStatus": {
	            "text": "Stripe Connection Status",
	            "value": "not_connected",
	            "toolbar": false,
	            "size": 20
	        },
	        "allowTest": {
	            "text": "Test Mode",
	            "value": "false",
	            "hidden": true,
	            "hideAtwizard": false,
	            "toolbar": false
	        },
	        "attachCustomerID": {
	            "text": "Attach Customer ID to email alerts",
	            "value": "true",
	            "hidden": true,
	            "hideAtwizard": false,
	            "toolbar": false
	        },
	        "emailField": {
	            "text": "Customer Email Field",
	            "value": "",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "isBillingInformation": {
	            "text": "Ask billing fields to customer",
	            "value": "none",
	            "dropdown": [["none", "None"]],
	            "toolbar": false,
	            "hidden": true
	        },
	        "customDataField": {
	            "text": "Custom Field",
	            "value": "0",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sendEmail": {
	            "text": "Send Email To Customer",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "apiKey": {
	            "text": "Stripe Secret API Key",
	            "value": "",
	            "toolbar": false,
	            "size": 50
	        },
	        "publishableKey": {
	            "text": "Stripe Publishable Key",
	            "value": "",
	            "toolbar": false,
	            "size": 50
	        },
	        "laterCharge": {
	            "text": "Charge Customer",
	            "value": "immediately",
	            "dropdown": [["immediately", "Immediately"], ["later", "Later (manually)"]],
	            "hideAtwizard": false,
	            "toolbar": false
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "U.S. Dollar"], ["CAD", "Canadian Dollar"], ["GBP", "U.K. Pounds"], ["EUR", "Euro"], ["AUD", "Australian Dollars"], ["AFN", "Afghan Afghani"], ["ALL", "Albanian Lek"], ["AMD", "Armenian Dram"], ["ANG", "Netherlands Antillean Gulden"], ["AOA", "Angolan Kwanza"], ["ARS", "Argentine Peso"], ["AWG", "Aruban Florin"], ["AZN", "Azerbaijani Manat"], ["BAM", "Bosnia & Herzegovina Convertible Mark"], ["BBD", "Barbadian Dollar"], ["BDT", "Bangladeshi Taka"], ["BGN", "Bulgarian Lev"], ["BIF", "Burundian Franc"], ["BMD", "Bermudian Dollar"], ["BND", "Brunei Dollar"], ["BOB", "Bolivian Boliviano"], ["BRL", "Brazilian Real"], ["BSD", "Bahamian Dollar"], ["BWP", "Botswana Pula"], ["BZD", "Belize Dollar"], ["CDF", "Congolese Franc"], ["CHF", "Swiss Franc"], ["CLP", "Chilean Peso"], ["CNY", "Chinese Renminbi Yuan"], ["COP", "Colombian Peso"], ["CRC", "Costa Rican Colón"], ["CVE", "Cape Verdean Escudo"], ["CZK", "Czech Koruna"], ["DJF", "Djiboutian Franc"], ["DKK", "Danish Krone"], ["DOP", "Dominican Peso"], ["DZD", "Algerian Dinar"], ["EEK", "Estonian Kroon"], ["EGP", "Egyptian Pound"], ["ETB", "Ethiopian Birr"], ["FJD", "Fijian Dollar"], ["FKP", "Falkland Islands Pound"], ["GEL", "Georgian Lari"], ["GIP", "Gibraltar Pound"], ["GMD", "Gambian Dalasi"], ["GNF", "Guinean Franc"], ["GTQ", "Guatemalan Quetzal"], ["GYD", "Guyanese Dollar"], ["HKD", "Hong Kong Dollar"], ["HNL", "Honduran Lempira"], ["HRK", "Croatian Kuna"], ["HTG", "Haitian Gourde"], ["HUF", "Hungarian Forint"], ["IDR", "Indonesian Rupiah"], ["ILS", "Israeli New Sheqel"], ["INR", "Indian Rupee"], ["ISK", "Icelandic Króna"], ["JMD", "Jamaican Dollar"], ["JPY", "Japanese Yen"], ["KES", "Kenyan Shilling"], ["KGS", "Kyrgyzstani Som"], ["KHR", "Cambodian Riel"], ["KMF", "Comorian Franc"], ["KRW", "South Korean Won"], ["KYD", "Cayman Islands Dollar"], ["KZT", "Kazakhstani Tenge"], ["LAK", "Lao Kip"], ["LBP", "Lebanese Pound"], ["LKR", "Sri Lankan Rupee"], ["LRD", "Liberian Dollar"], ["LSL", "Lesotho Loti"], ["LTL", "Lithuanian Litas"], ["LVL", "Latvian Lats"], ["MAD", "Moroccan Dirham"], ["MDL", "Moldovan Leu"], ["MGA", "Malagasy Ariary"], ["MKD", "Macedonian Denar"], ["MNT", "Mongolian Tögrög"], ["MOP", "Macanese Pataca"], ["MRO", "Mauritanian Ouguiya"], ["MUR", "Mauritian Rupee"], ["MVR", "Maldivian Rufiyaa"], ["MWK", "Malawian Kwacha"], ["MXN", "Mexican Peso"], ["MYR", "Malaysian Ringgit"], ["MZN", "Mozambican Metical"], ["NAD", "Namibian Dollar"], ["NGN", "Nigerian Naira"], ["NIO", "Nicaraguan Córdoba"], ["NOK", "Norwegian Krone"], ["NPR", "Nepalese Rupee"], ["NZD", "New Zealand Dollar"], ["PAB", "Panamanian Balboa"], ["PEN", "Peruvian Nuevo Sol"], ["PGK", "Papua New Guinean Kina"], ["PHP", "Philippine Peso"], ["PKR", "Pakistani Rupee"], ["PLN", "Polish Złoty"], ["PYG", "Paraguayan Guaraní"], ["QAR", "Qatari Riyal"], ["RON", "Romanian Leu"], ["RSD", "Serbian Dinar"], ["RUB", "Russian Ruble"], ["RWF", "Rwandan Franc"], ["SAR", "Saudi Riyal"], ["SBD", "Solomon Islands Dollar"], ["SCR", "Seychellois Rupee"], ["SEK", "Swedish Krona"], ["SGD", "Singapore Dollar"], ["SHP", "Saint Helenian Pound"], ["SLL", "Sierra Leonean Leone"], ["SOS", "Somali Shilling"], ["SRD", "Surinamese Dollar"], ["STD", "São Tomé and Príncipe Dobra"], ["SVC", "Salvadoran Colón"], ["SZL", "Swazi Lilangeni"], ["THB", "Thai Baht"], ["TJS", "Tajikistani Somoni"], ["TOP", "Tongan Paʻanga"], ["TRY", "Turkish Lira"], ["TTD", "Trinidad and Tobago Dollar"], ["TWD", "New Taiwan Dollar"], ["TZS", "Tanzanian Shilling"], ["UAH", "Ukrainian Hryvnia"], ["UGX", "Ugandan Shilling"], ["AED", "UAE Dirham"], ["UYU", "Uruguayan Peso"], ["UZS", "Uzbekistani Som"], ["VEF", "Venezuelan Bolívar"], ["VND", "Vietnamese Đồng"], ["VUV", "Vanuatu Vatu"], ["WST", "Samoan Tala"], ["XAF", "Central African Cfa Franc"], ["XCD", "East Caribbean Dollar"], ["XOF", "West African Cfa Franc"], ["XPF", "Cfp Franc"], ["YER", "Yemeni Rial"], ["ZAR", "South African Rand"], ["ZMW", "Zambian Kwacha"]]
	        },
	        "billingAdd": {
	            "text": "Billing Address",
	            "value": "none",
	            "dropdown": [["none", "None"]],
	            "toolbar": false,
	            "hidden": true
	        },
	        "shippingAdd": {
	            "text": "Customer Shipping Address",
	            "value": "none",
	            "dropdown": [["none", "None"]],
	            "toolbar": false,
	            "hidden": true
	        },
	        "phoneField": {
	            "text": "Customer Phone Field",
	            "value": "none",
	            "dropdown": [["none", "None"]],
	            "toolbar": false,
	            "hidden": true
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "cc_card_expiry": "Card Expiration",
	                "cc_email": "E-mail"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "bridge": {
	            "text": "Bridge",
	            "hidden": true,
	            "toolbar": false,
	            "value": ""
	        },
	        "createCustomer": {
	            "text": "Create Customer",
	            "value": "Yes",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false,
	            "nopaymentwizard": true,
	            "condition": [["paymentType", "product OR donation"]]
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_stripeACH": {
	        "plaidClient": {
	            "text": "Plaid Client ID",
	            "value": "",
	            "toolbar": false
	        },
	        "plaidPublic": {
	            "text": "Plaid Public Key",
	            "value": "",
	            "toolbar": false
	        },
	        "plaidSecret": {
	            "text": "Plaid Secret Key",
	            "value": "",
	            "toolbar": false
	        },
	        "apiKey": {
	            "text": "Stripe Secret API Key",
	            "value": "",
	            "toolbar": false
	        },
	        "environment": {
	            "text": "Plaid Environment",
	            "value": "production",
	            "dropdown": [["sandbox", "sandbox"], ["development", "development"], ["production", "production"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "myBagButtonText": {
	            "text": "myBagButton Text",
	            "value": "My Bag"
	        },
	        "customValueDonationText": {
	            "text": "customValueDonationText",
	            "value": "+ OR enter a custom value"
	        },
	        "subscribeButtonText": {
	            "text": "subscribeButton Text",
	            "value": "SUBSCRIBE"
	        },
	        "backToListButtonText": {
	            "text": "Payment Strings",
	            "value": "Back to list"
	        },
	        "orderSummary": {
	            "text": "Order summary",
	            "value": "ORDER SUMMARY"
	        },
	        "totalCost": {
	            "text": "totalCost",
	            "value": "Total cost"
	        },
	        "removeButtonText": {
	            "text": "Remove",
	            "value": "Remove"
	        },
	        "updateButtonText": {
	            "text": "Update button text",
	            "value": "Update"
	        },
	        "addToBagButtonText": {
	            "text": "add to bag button text",
	            "value": "Add to Bag"
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "US Dollar"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Left", "Left"], ["Right", "Right"], ["Top", "Top"]],
	            "checkbox": {
	                name: 'labelAlign',
	                text: 'Set as form default',
	                value: 'Auto'
	            }
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "allowCustomAmount": {
	            "text": "Allow Custom amount",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationOptions": {
	            "text": "Predefined Donation Options",
	            "value": [10, 25, 50, 100],
	            "hidden": true,
	            "toolbar": false
	        },
	        "showPredefinedDonationValues": {
	            "text": "Show Predefined Options",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        }
	    },
	    "control_stripeACHManual": {
	        "apiKey": {
	            "text": "Secret API Key",
	            "value": "",
	            "toolbar": false
	        },
	        "publishableKey": {
	            "text": "Publishable Key",
	            "value": "",
	            "toolbar": false
	        },
	        "allowTest": {
	            "text": "Sandbox Mode",
	            "value": "False",
	            "dropdown": [["false", "False"], ["true", "True"]],
	            "toolbar": false
	        },
	        "myBagButtonText": {
	            "text": "myBagButton Text",
	            "value": "My Bag"
	        },
	        "customValueDonationText": {
	            "text": "customValueDonationText",
	            "value": "+ OR enter a custom value"
	        },
	        "subscribeButtonText": {
	            "text": "subscribeButton Text",
	            "value": "SUBSCRIBE"
	        },
	        "backToListButtonText": {
	            "text": "Payment Strings",
	            "value": "Back to list"
	        },
	        "orderSummary": {
	            "text": "Order summary",
	            "value": "ORDER SUMMARY"
	        },
	        "totalCost": {
	            "text": "totalCost",
	            "value": "Total cost"
	        },
	        "removeButtonText": {
	            "text": "Remove",
	            "value": "Remove"
	        },
	        "updateButtonText": {
	            "text": "Update button text",
	            "value": "Update"
	        },
	        "addToBagButtonText": {
	            "text": "add to bag button text",
	            "value": "Add to Bag"
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "US Dollar"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Left", "Left"], ["Right", "Right"], ["Top", "Top"]],
	            "checkbox": {
	                name: 'labelAlign',
	                text: 'Set as form default',
	                value: 'Auto'
	            }
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "allowCustomAmount": {
	            "text": "Allow Custom amount",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationOptions": {
	            "text": "Predefined Donation Options",
	            "value": [10, 25, 50, 100],
	            "hidden": true,
	            "toolbar": false
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_email": "Email",
	                "ec_email": "Email",
	                "ec_routingNumber": "Routing Number",
	                "ec_accountNumber": "Account Number",
	                "ec_nameOnAccount": "Name On Account",
	                "ec_bankAccountType": "Bank Account Type",
	                "depositA": "First Deposit",
	                "depositB": "Second Deposit",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "showPredefinedDonationValues": {
	            "text": "Show Predefined Options",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        }
	    },
	    "control_braintree": {
	        "merchantId": {
	            "text": "Merchant ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "publicKey": {
	            "text": "Public Key",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "privateKey": {
	            "text": "Private Key",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["AED", "United Arab Emirates Dirham"], ["AFN", "Afghan Afghani"], ["ALL", "Albanian Lek"], ["AMD", "Armenian Dram"], ["ANG", "Netherlands Antillean Gulden"], ["AOA", "Angolan Kwanza"], ["ARS", "Argentine Peso"], ["AUD", "Australian Dollar"], ["AWG", "Aruban Florin"], ["AZN", "Azerbaijani Manat"], ["BAM", "Bosnia and Herzegovina Convertible Mark"], ["BBD", "Barbadian Dollar"], ["BDT", "Bangladeshi Taka"], ["BGN", "Bulgarian Lev"], ["BHD", "Bahraini Dinar"], ["BIF", "Burundian Franc"], ["BMD", "Bermudian Dollar"], ["BND", "Brunei Dollar"], ["BOB", "Bolivian Boliviano"], ["BRL", "Brazilian Real"], ["BSD", "Bahamian Dollar"], ["BTN", "Bhutanese Ngultrum"], ["BWP", "Botswana Pula"], ["BYR", "Belarusian Ruble"], ["BZD", "Belize Dollar"], ["CAD", "Canadian Dollar"], ["CDF", "Congolese Franc"], ["CHF", "Swiss Franc"], ["CLP", "Chilean Peso"], ["CNY", "Chinese Renminbi Yuan"], ["COP", "Colombian Peso"], ["CRC", "Costa Rican Colón"], ["CUC", "Cuban Convertible Peso"], ["CUP", "Cuban Peso"], ["CVE", "Cape Verdean Escudo"], ["CZK", "Czech Koruna"], ["DJF", "Djiboutian Franc"], ["DKK", "Danish Krone"], ["DOP", "Dominican Peso"], ["DZD", "Algerian Dinar"], ["EEK", "Estonian Kroon"], ["EGP", "Egyptian Pound"], ["ERN", "Eritrean Nakfa"], ["ETB", "Ethiopian Birr"], ["EUR", "Euro"], ["FJD", "Fijian Dollar"], ["FKP", "Falkland Pound"], ["GBP", "British Pound"], ["GEL", "Georgian Lari"], ["GHS", "Ghanaian Cedi"], ["GIP", "Gibraltar Pound"], ["GMD", "Gambian Dalasi"], ["GNF", "Guinean Franc"], ["GTQ", "Guatemalan Quetzal"], ["GYD", "Guyanese Dollar"], ["HKD", "Hong Kong Dollar"], ["HNL", "Honduran Lempira"], ["HRK", "Croatian Kuna"], ["HTG", "Haitian Gourde"], ["HUF", "Hungarian Forint"], ["IDR", "Indonesian Rupiah"], ["ILS", "Israeli New Sheqel"], ["INR", "Indian Rupee"], ["IQD", "Iraqi Dinar"], ["IRR", "Iranian Rial"], ["ISK", "Icelandic Króna"], ["JMD", "Jamaican Dollar"], ["JOD", "Jordanian Dinar"], ["JPY", "Japanese Yen"], ["KES", "Kenyan Shilling"], ["KGS", "Kyrgyzstani Som"], ["KHR", "Cambodian Riel"], ["KMF", "Comorian Franc"], ["KPW", "North Korean Won"], ["KRW", "South Korean Won"], ["KWD", "Kuwaiti Dinar"], ["KYD", "Cayman Islands Dollar"], ["KZT", "Kazakhstani Tenge"], ["LAK", "Lao Kip"], ["LBP", "Lebanese Lira"], ["LKR", "Sri Lankan Rupee"], ["LRD", "Liberian Dollar"], ["LSL", "Lesotho Loti"], ["LTL", "Lithuanian Litas"], ["LVL", "Latvian Lats"], ["LYD", "Libyan Dinar"], ["MAD", "Moroccan Dirham"], ["MDL", "Moldovan Leu"], ["MGA", "Malagasy Ariary"], ["MKD", "Macedonian Denar"], ["MMK", "Myanmar Kyat"], ["MNT", "Mongolian Tögrög"], ["MOP", "Macanese Pataca"], ["MRO", "Mauritanian Ouguiya"], ["MUR", "Mauritian Rupee"], ["MVR", "Maldivian Rufiyaa"], ["MWK", "Malawian Kwacha"], ["MXN", "Mexican Peso"], ["MYR", "Malaysian Ringgit"], ["MZN", "Mozambican Metical"], ["NAD", "Namibian Dollar"], ["NGN", "Nigerian Naira"], ["NIO", "Nicaraguan Córdoba"], ["NOK", "Norwegian Krone"], ["NPR", "Nepalese Rupee"], ["NZD", "New Zealand Dollar"], ["OMR", "Omani Rial"], ["PAB", "Panamanian Balboa"], ["PEN", "Peruvian Nuevo Sol"], ["PGK", "Papua New Guinean Kina"], ["PHP", "Philippine Peso"], ["PKR", "Pakistani Rupee"], ["PLN", "Polish Złoty"], ["PYG", "Paraguayan Guaraní"], ["QAR", "Qatari Riyal"], ["RON", "Romanian Leu"], ["RSD", "Serbian Dinar"], ["RUB", "Russian Ruble"], ["RWF", "Rwandan Franc"], ["SAR", "Saudi Riyal"], ["SBD", "Solomon Islands Dollar"], ["SCR", "Seychellois Rupee"], ["SDG", "Sudanese Pound"], ["SEK", "Swedish Krona"], ["SGD", "Singapore Dollar"], ["SHP", "Saint Helenian Pound"], ["SKK", "Slovak Koruna"], ["SLL", "Sierra Leonean Leone"], ["SOS", "Somali Shilling"], ["SRD", "Surinamese Dollar"], ["STD", "São Tomé and Príncipe Dobra"], ["SVC", "Salvadoran Colón"], ["SYP", "Syrian Pound"], ["SZL", "Swazi Lilangeni"], ["THB", "Thai Baht"], ["TJS", "Tajikistani Somoni"], ["TMM", "Turkmenistani Manat"], ["TMT", "Turkmenistani Manat"], ["TND", "Tunisian Dinar"], ["TOP", "Tongan Paʻanga"], ["TRY", "Turkish New Lira"], ["TTD", "Trinidad and Tobago Dollar"], ["TWD", "New Taiwan Dollar"], ["TZS", "Tanzanian Shilling"], ["UAH", "Ukrainian Hryvnia"], ["UGX", "Ugandan Shilling"], ["USD", "United States Dollar"], ["UYU", "Uruguayan Peso"], ["UZS", "Uzbekistani Som"], ["VEF", "Venezuelan Bolívar"], ["VND", "Vietnamese Đồng"], ["VUV", "Vanuatu Vatu"], ["WST", "Samoan Tala"], ["XAF", "Central African Cfa Franc"], ["XCD", "East Caribbean Dollar"], ["XOF", "West African Cfa Franc"], ["XPF", "Cfp Franc"], ["YER", "Yemeni Rial"], ["ZAR", "South African Rand"], ["ZMK", "Zambian Kwacha"], ["ZWD", "Zimbabwean Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "exp_month": "Expiration Month",
	                "exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "braintreeDescriptionField": {
	            "text": "Product Description Field",
	            "value": "",
	            "toolbar": false,
	            "nopaymentwizard": true,
	            "condition": [["paymentType", "product"]]
	        },
	        "requireBillingAddr": {
	            "text": "Require Billing Address",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "authOnly": {
	            "text": "Authorization Only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "threeDSecure": {
	            "text": "Enable 3D Secure 2.0",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_bluepay": {
	        "accountId": {
	            "text": "Account ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "apiSecret": {
	            "text": "API Secret",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "apiSignature": {
	            "text": "API Signature",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["AED", "United Arab Emirates Dirham"], ["AFN", "Afghan Afghani"], ["ALL", "Albanian Lek"], ["AMD", "Armenian Dram"], ["ANG", "Netherlands Antillean Gulden"], ["AOA", "Angolan Kwanza"], ["ARS", "Argentine Peso"], ["AUD", "Australian Dollar"], ["AWG", "Aruban Florin"], ["AZN", "Azerbaijani Manat"], ["BAM", "Bosnia and Herzegovina Convertible Mark"], ["BBD", "Barbadian Dollar"], ["BDT", "Bangladeshi Taka"], ["BGN", "Bulgarian Lev"], ["BHD", "Bahraini Dinar"], ["BIF", "Burundian Franc"], ["BMD", "Bermudian Dollar"], ["BND", "Brunei Dollar"], ["BOB", "Bolivian Boliviano"], ["BRL", "Brazilian Real"], ["BSD", "Bahamian Dollar"], ["BTN", "Bhutanese Ngultrum"], ["BWP", "Botswana Pula"], ["BYR", "Belarusian Ruble"], ["BZD", "Belize Dollar"], ["CAD", "Canadian Dollar"], ["CDF", "Congolese Franc"], ["CHF", "Swiss Franc"], ["CLP", "Chilean Peso"], ["CNY", "Chinese Renminbi Yuan"], ["COP", "Colombian Peso"], ["CRC", "Costa Rican Colón"], ["CUC", "Cuban Convertible Peso"], ["CUP", "Cuban Peso"], ["CVE", "Cape Verdean Escudo"], ["CZK", "Czech Koruna"], ["DJF", "Djiboutian Franc"], ["DKK", "Danish Krone"], ["DOP", "Dominican Peso"], ["DZD", "Algerian Dinar"], ["EEK", "Estonian Kroon"], ["EGP", "Egyptian Pound"], ["ERN", "Eritrean Nakfa"], ["ETB", "Ethiopian Birr"], ["EUR", "Euro"], ["FJD", "Fijian Dollar"], ["FKP", "Falkland Pound"], ["GBP", "British Pound"], ["GEL", "Georgian Lari"], ["GHS", "Ghanaian Cedi"], ["GIP", "Gibraltar Pound"], ["GMD", "Gambian Dalasi"], ["GNF", "Guinean Franc"], ["GTQ", "Guatemalan Quetzal"], ["GYD", "Guyanese Dollar"], ["HKD", "Hong Kong Dollar"], ["HNL", "Honduran Lempira"], ["HRK", "Croatian Kuna"], ["HTG", "Haitian Gourde"], ["HUF", "Hungarian Forint"], ["IDR", "Indonesian Rupiah"], ["ILS", "Israeli New Sheqel"], ["INR", "Indian Rupee"], ["IQD", "Iraqi Dinar"], ["IRR", "Iranian Rial"], ["ISK", "Icelandic Króna"], ["JMD", "Jamaican Dollar"], ["JOD", "Jordanian Dinar"], ["JPY", "Japanese Yen"], ["KES", "Kenyan Shilling"], ["KGS", "Kyrgyzstani Som"], ["KHR", "Cambodian Riel"], ["KMF", "Comorian Franc"], ["KPW", "North Korean Won"], ["KRW", "South Korean Won"], ["KWD", "Kuwaiti Dinar"], ["KYD", "Cayman Islands Dollar"], ["KZT", "Kazakhstani Tenge"], ["LAK", "Lao Kip"], ["LBP", "Lebanese Lira"], ["LKR", "Sri Lankan Rupee"], ["LRD", "Liberian Dollar"], ["LSL", "Lesotho Loti"], ["LTL", "Lithuanian Litas"], ["LVL", "Latvian Lats"], ["LYD", "Libyan Dinar"], ["MAD", "Moroccan Dirham"], ["MDL", "Moldovan Leu"], ["MGA", "Malagasy Ariary"], ["MKD", "Macedonian Denar"], ["MMK", "Myanmar Kyat"], ["MNT", "Mongolian Tögrög"], ["MOP", "Macanese Pataca"], ["MRO", "Mauritanian Ouguiya"], ["MUR", "Mauritian Rupee"], ["MVR", "Maldivian Rufiyaa"], ["MWK", "Malawian Kwacha"], ["MXN", "Mexican Peso"], ["MYR", "Malaysian Ringgit"], ["MZN", "Mozambican Metical"], ["NAD", "Namibian Dollar"], ["NGN", "Nigerian Naira"], ["NIO", "Nicaraguan Córdoba"], ["NOK", "Norwegian Krone"], ["NPR", "Nepalese Rupee"], ["NZD", "New Zealand Dollar"], ["OMR", "Omani Rial"], ["PAB", "Panamanian Balboa"], ["PEN", "Peruvian Nuevo Sol"], ["PGK", "Papua New Guinean Kina"], ["PHP", "Philippine Peso"], ["PKR", "Pakistani Rupee"], ["PLN", "Polish Złoty"], ["PYG", "Paraguayan Guaraní"], ["QAR", "Qatari Riyal"], ["RON", "Romanian Leu"], ["RSD", "Serbian Dinar"], ["RUB", "Russian Ruble"], ["RWF", "Rwandan Franc"], ["SAR", "Saudi Riyal"], ["SBD", "Solomon Islands Dollar"], ["SCR", "Seychellois Rupee"], ["SDG", "Sudanese Pound"], ["SEK", "Swedish Krona"], ["SGD", "Singapore Dollar"], ["SHP", "Saint Helenian Pound"], ["SKK", "Slovak Koruna"], ["SLL", "Sierra Leonean Leone"], ["SOS", "Somali Shilling"], ["SRD", "Surinamese Dollar"], ["STD", "São Tomé and Príncipe Dobra"], ["SVC", "Salvadoran Colón"], ["SYP", "Syrian Pound"], ["SZL", "Swazi Lilangeni"], ["THB", "Thai Baht"], ["TJS", "Tajikistani Somoni"], ["TMM", "Turkmenistani Manat"], ["TMT", "Turkmenistani Manat"], ["TND", "Tunisian Dinar"], ["TOP", "Tongan Paʻanga"], ["TRY", "Turkish New Lira"], ["TTD", "Trinidad and Tobago Dollar"], ["TWD", "New Taiwan Dollar"], ["TZS", "Tanzanian Shilling"], ["UAH", "Ukrainian Hryvnia"], ["UGX", "Ugandan Shilling"], ["USD", "United States Dollar"], ["UYU", "Uruguayan Peso"], ["UZS", "Uzbekistani Som"], ["VEF", "Venezuelan Bolívar"], ["VND", "Vietnamese Đồng"], ["VUV", "Vanuatu Vatu"], ["WST", "Samoan Tala"], ["XAF", "Central African Cfa Franc"], ["XCD", "East Caribbean Dollar"], ["XOF", "West African Cfa Franc"], ["XPF", "Cfp Franc"], ["YER", "Yemeni Rial"], ["ZAR", "South African Rand"], ["ZMK", "Zambian Kwacha"], ["ZWD", "Zimbabwean Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_bluesnap": {
	        "apiKey": {
	            "text": "API Key",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "password": {
	            "text": "Password",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["AED", "United Arab Emirates Dirham"], ["AFN", "Afghan Afghani"], ["ALL", "Albanian Lek"], ["AMD", "Armenian Dram"], ["ANG", "Netherlands Antillean Gulden"], ["AOA", "Angolan Kwanza"], ["ARS", "Argentine Peso"], ["AUD", "Australian Dollar"], ["AWG", "Aruban Florin"], ["AZN", "Azerbaijani Manat"], ["BAM", "Bosnia and Herzegovina Convertible Mark"], ["BBD", "Barbadian Dollar"], ["BDT", "Bangladeshi Taka"], ["BGN", "Bulgarian Lev"], ["BHD", "Bahraini Dinar"], ["BIF", "Burundian Franc"], ["BMD", "Bermudian Dollar"], ["BND", "Brunei Dollar"], ["BOB", "Bolivian Boliviano"], ["BRL", "Brazilian Real"], ["BSD", "Bahamian Dollar"], ["BTN", "Bhutanese Ngultrum"], ["BWP", "Botswana Pula"], ["BYR", "Belarusian Ruble"], ["BZD", "Belize Dollar"], ["CAD", "Canadian Dollar"], ["CDF", "Congolese Franc"], ["CHF", "Swiss Franc"], ["CLP", "Chilean Peso"], ["CNY", "Chinese Renminbi Yuan"], ["COP", "Colombian Peso"], ["CRC", "Costa Rican Colón"], ["CUC", "Cuban Convertible Peso"], ["CUP", "Cuban Peso"], ["CVE", "Cape Verdean Escudo"], ["CZK", "Czech Koruna"], ["DJF", "Djiboutian Franc"], ["DKK", "Danish Krone"], ["DOP", "Dominican Peso"], ["DZD", "Algerian Dinar"], ["EEK", "Estonian Kroon"], ["EGP", "Egyptian Pound"], ["ERN", "Eritrean Nakfa"], ["ETB", "Ethiopian Birr"], ["EUR", "Euro"], ["FJD", "Fijian Dollar"], ["FKP", "Falkland Pound"], ["GBP", "British Pound"], ["GEL", "Georgian Lari"], ["GHS", "Ghanaian Cedi"], ["GIP", "Gibraltar Pound"], ["GMD", "Gambian Dalasi"], ["GNF", "Guinean Franc"], ["GTQ", "Guatemalan Quetzal"], ["GYD", "Guyanese Dollar"], ["HKD", "Hong Kong Dollar"], ["HNL", "Honduran Lempira"], ["HRK", "Croatian Kuna"], ["HTG", "Haitian Gourde"], ["HUF", "Hungarian Forint"], ["IDR", "Indonesian Rupiah"], ["ILS", "Israeli New Sheqel"], ["INR", "Indian Rupee"], ["IQD", "Iraqi Dinar"], ["IRR", "Iranian Rial"], ["ISK", "Icelandic Króna"], ["JMD", "Jamaican Dollar"], ["JOD", "Jordanian Dinar"], ["JPY", "Japanese Yen"], ["KES", "Kenyan Shilling"], ["KGS", "Kyrgyzstani Som"], ["KHR", "Cambodian Riel"], ["KMF", "Comorian Franc"], ["KPW", "North Korean Won"], ["KRW", "South Korean Won"], ["KWD", "Kuwaiti Dinar"], ["KYD", "Cayman Islands Dollar"], ["KZT", "Kazakhstani Tenge"], ["LAK", "Lao Kip"], ["LBP", "Lebanese Lira"], ["LKR", "Sri Lankan Rupee"], ["LRD", "Liberian Dollar"], ["LSL", "Lesotho Loti"], ["LTL", "Lithuanian Litas"], ["LVL", "Latvian Lats"], ["LYD", "Libyan Dinar"], ["MAD", "Moroccan Dirham"], ["MDL", "Moldovan Leu"], ["MGA", "Malagasy Ariary"], ["MKD", "Macedonian Denar"], ["MMK", "Myanmar Kyat"], ["MNT", "Mongolian Tögrög"], ["MOP", "Macanese Pataca"], ["MRO", "Mauritanian Ouguiya"], ["MUR", "Mauritian Rupee"], ["MVR", "Maldivian Rufiyaa"], ["MWK", "Malawian Kwacha"], ["MXN", "Mexican Peso"], ["MYR", "Malaysian Ringgit"], ["MZN", "Mozambican Metical"], ["NAD", "Namibian Dollar"], ["NGN", "Nigerian Naira"], ["NIO", "Nicaraguan Córdoba"], ["NOK", "Norwegian Krone"], ["NPR", "Nepalese Rupee"], ["NZD", "New Zealand Dollar"], ["OMR", "Omani Rial"], ["PAB", "Panamanian Balboa"], ["PEN", "Peruvian Nuevo Sol"], ["PGK", "Papua New Guinean Kina"], ["PHP", "Philippine Peso"], ["PKR", "Pakistani Rupee"], ["PLN", "Polish Złoty"], ["PYG", "Paraguayan Guaraní"], ["QAR", "Qatari Riyal"], ["RON", "Romanian Leu"], ["RSD", "Serbian Dinar"], ["RUB", "Russian Ruble"], ["RWF", "Rwandan Franc"], ["SAR", "Saudi Riyal"], ["SBD", "Solomon Islands Dollar"], ["SCR", "Seychellois Rupee"], ["SDG", "Sudanese Pound"], ["SEK", "Swedish Krona"], ["SGD", "Singapore Dollar"], ["SHP", "Saint Helenian Pound"], ["SKK", "Slovak Koruna"], ["SLL", "Sierra Leonean Leone"], ["SOS", "Somali Shilling"], ["SRD", "Surinamese Dollar"], ["STD", "São Tomé and Príncipe Dobra"], ["SVC", "Salvadoran Colón"], ["SYP", "Syrian Pound"], ["SZL", "Swazi Lilangeni"], ["THB", "Thai Baht"], ["TJS", "Tajikistani Somoni"], ["TMM", "Turkmenistani Manat"], ["TMT", "Turkmenistani Manat"], ["TND", "Tunisian Dinar"], ["TOP", "Tongan Paʻanga"], ["TRY", "Turkish New Lira"], ["TTD", "Trinidad and Tobago Dollar"], ["TWD", "New Taiwan Dollar"], ["TZS", "Tanzanian Shilling"], ["UAH", "Ukrainian Hryvnia"], ["UGX", "Ugandan Shilling"], ["USD", "United States Dollar"], ["UYU", "Uruguayan Peso"], ["UZS", "Uzbekistani Som"], ["VEF", "Venezuelan Bolívar"], ["VND", "Vietnamese Đồng"], ["VUV", "Vanuatu Vatu"], ["WST", "Samoan Tala"], ["XAF", "Central African Cfa Franc"], ["XCD", "East Caribbean Dollar"], ["XOF", "West African Cfa Franc"], ["XPF", "Cfp Franc"], ["YER", "Yemeni Rial"], ["ZAR", "South African Rand"], ["ZMK", "Zambian Kwacha"], ["ZWD", "Zimbabwean Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_cardconnect": {
	        "merchantId": {
	            "text": "Merchant ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "apiUsername": {
	            "text": "API Username",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "apiPassword": {
	            "text": "API Password",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "United States Dollar"], ["CAD", "Canadian Dollar"]]
	        },
	        "addCaptcha": {
	            "text": "Payment Captcha Field",
	            "value": "",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_chargify": {
	        "hostName": {
	            "text": "Host Name",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "apiKey": {
	            "text": "API Key",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "sharedSecret": {
	            "text": "Shared Secret",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "United States Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_email": "E-mail",
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        },
	        "billingAddress": {
	            "text": "Billing Address",
	            "value": "none",
	            "dropdown": [["none", "None"], ["billing", "Same as billing address"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        }
	    },
	    "control_firstdata": {
	        "accountId": {
	            "text": "Account ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "apiSecret": {
	            "text": "API Secret",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "apiSignature": {
	            "text": "API Signature",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["AED", "United Arab Emirates Dirham"], ["AFN", "Afghan Afghani"], ["ALL", "Albanian Lek"], ["AMD", "Armenian Dram"], ["ANG", "Netherlands Antillean Gulden"], ["AOA", "Angolan Kwanza"], ["ARS", "Argentine Peso"], ["AUD", "Australian Dollar"], ["AWG", "Aruban Florin"], ["AZN", "Azerbaijani Manat"], ["BAM", "Bosnia and Herzegovina Convertible Mark"], ["BBD", "Barbadian Dollar"], ["BDT", "Bangladeshi Taka"], ["BGN", "Bulgarian Lev"], ["BHD", "Bahraini Dinar"], ["BIF", "Burundian Franc"], ["BMD", "Bermudian Dollar"], ["BND", "Brunei Dollar"], ["BOB", "Bolivian Boliviano"], ["BRL", "Brazilian Real"], ["BSD", "Bahamian Dollar"], ["BTN", "Bhutanese Ngultrum"], ["BWP", "Botswana Pula"], ["BYR", "Belarusian Ruble"], ["BZD", "Belize Dollar"], ["CAD", "Canadian Dollar"], ["CDF", "Congolese Franc"], ["CHF", "Swiss Franc"], ["CLP", "Chilean Peso"], ["CNY", "Chinese Renminbi Yuan"], ["COP", "Colombian Peso"], ["CRC", "Costa Rican Colón"], ["CUC", "Cuban Convertible Peso"], ["CUP", "Cuban Peso"], ["CVE", "Cape Verdean Escudo"], ["CZK", "Czech Koruna"], ["DJF", "Djiboutian Franc"], ["DKK", "Danish Krone"], ["DOP", "Dominican Peso"], ["DZD", "Algerian Dinar"], ["EEK", "Estonian Kroon"], ["EGP", "Egyptian Pound"], ["ERN", "Eritrean Nakfa"], ["ETB", "Ethiopian Birr"], ["EUR", "Euro"], ["FJD", "Fijian Dollar"], ["FKP", "Falkland Pound"], ["GBP", "British Pound"], ["GEL", "Georgian Lari"], ["GHS", "Ghanaian Cedi"], ["GIP", "Gibraltar Pound"], ["GMD", "Gambian Dalasi"], ["GNF", "Guinean Franc"], ["GTQ", "Guatemalan Quetzal"], ["GYD", "Guyanese Dollar"], ["HKD", "Hong Kong Dollar"], ["HNL", "Honduran Lempira"], ["HRK", "Croatian Kuna"], ["HTG", "Haitian Gourde"], ["HUF", "Hungarian Forint"], ["IDR", "Indonesian Rupiah"], ["ILS", "Israeli New Sheqel"], ["INR", "Indian Rupee"], ["IQD", "Iraqi Dinar"], ["IRR", "Iranian Rial"], ["ISK", "Icelandic Króna"], ["JMD", "Jamaican Dollar"], ["JOD", "Jordanian Dinar"], ["JPY", "Japanese Yen"], ["KES", "Kenyan Shilling"], ["KGS", "Kyrgyzstani Som"], ["KHR", "Cambodian Riel"], ["KMF", "Comorian Franc"], ["KPW", "North Korean Won"], ["KRW", "South Korean Won"], ["KWD", "Kuwaiti Dinar"], ["KYD", "Cayman Islands Dollar"], ["KZT", "Kazakhstani Tenge"], ["LAK", "Lao Kip"], ["LBP", "Lebanese Lira"], ["LKR", "Sri Lankan Rupee"], ["LRD", "Liberian Dollar"], ["LSL", "Lesotho Loti"], ["LTL", "Lithuanian Litas"], ["LVL", "Latvian Lats"], ["LYD", "Libyan Dinar"], ["MAD", "Moroccan Dirham"], ["MDL", "Moldovan Leu"], ["MGA", "Malagasy Ariary"], ["MKD", "Macedonian Denar"], ["MMK", "Myanmar Kyat"], ["MNT", "Mongolian Tögrög"], ["MOP", "Macanese Pataca"], ["MRO", "Mauritanian Ouguiya"], ["MUR", "Mauritian Rupee"], ["MVR", "Maldivian Rufiyaa"], ["MWK", "Malawian Kwacha"], ["MXN", "Mexican Peso"], ["MYR", "Malaysian Ringgit"], ["MZN", "Mozambican Metical"], ["NAD", "Namibian Dollar"], ["NGN", "Nigerian Naira"], ["NIO", "Nicaraguan Córdoba"], ["NOK", "Norwegian Krone"], ["NPR", "Nepalese Rupee"], ["NZD", "New Zealand Dollar"], ["OMR", "Omani Rial"], ["PAB", "Panamanian Balboa"], ["PEN", "Peruvian Nuevo Sol"], ["PGK", "Papua New Guinean Kina"], ["PHP", "Philippine Peso"], ["PKR", "Pakistani Rupee"], ["PLN", "Polish Złoty"], ["PYG", "Paraguayan Guaraní"], ["QAR", "Qatari Riyal"], ["RON", "Romanian Leu"], ["RSD", "Serbian Dinar"], ["RUB", "Russian Ruble"], ["RWF", "Rwandan Franc"], ["SAR", "Saudi Riyal"], ["SBD", "Solomon Islands Dollar"], ["SCR", "Seychellois Rupee"], ["SDG", "Sudanese Pound"], ["SEK", "Swedish Krona"], ["SGD", "Singapore Dollar"], ["SHP", "Saint Helenian Pound"], ["SKK", "Slovak Koruna"], ["SLL", "Sierra Leonean Leone"], ["SOS", "Somali Shilling"], ["SRD", "Surinamese Dollar"], ["STD", "São Tomé and Príncipe Dobra"], ["SVC", "Salvadoran Colón"], ["SYP", "Syrian Pound"], ["SZL", "Swazi Lilangeni"], ["THB", "Thai Baht"], ["TJS", "Tajikistani Somoni"], ["TMM", "Turkmenistani Manat"], ["TMT", "Turkmenistani Manat"], ["TND", "Tunisian Dinar"], ["TOP", "Tongan Paʻanga"], ["TRY", "Turkish New Lira"], ["TTD", "Trinidad and Tobago Dollar"], ["TWD", "New Taiwan Dollar"], ["TZS", "Tanzanian Shilling"], ["UAH", "Ukrainian Hryvnia"], ["UGX", "Ugandan Shilling"], ["USD", "United States Dollar"], ["UYU", "Uruguayan Peso"], ["UZS", "Uzbekistani Som"], ["VEF", "Venezuelan Bolívar"], ["VND", "Vietnamese Đồng"], ["VUV", "Vanuatu Vatu"], ["WST", "Samoan Tala"], ["XAF", "Central African Cfa Franc"], ["XCD", "East Caribbean Dollar"], ["XOF", "West African Cfa Franc"], ["XPF", "Cfp Franc"], ["YER", "Yemeni Rial"], ["ZAR", "South African Rand"], ["ZMK", "Zambian Kwacha"], ["ZWD", "Zimbabwean Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_paypalInvoicing": {
	        "merchantId": {
	            "text": "Paypal ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "invoicingAccessToken": {
	            "text": "Invoicing Access Token",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "refreshToken": {
	            "text": "Invoicing Refresh Token",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "invoicingTokenExpiry": {
	            "text": "Access Token Expiration Date",
	            "value": "",
	            "toolbar": false,
	            "hideAtwizard": true,
	            "required": true,
	            "hidden": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "USD"], ["AUD", "Australian Dollar"], ["BRL", "Brazilian Real"], ["CAD", "Canadian Dollar"], ["CZK", "Czech Koruna"], ["DKK", "Danish Krone"], ["EUR", "Euro"], ["HKD", "Hong Kong Dollar"], ["HUF", "Hungarian Forint"], ["INR", "Indian Rupee"], ["ILS", "Israeli New Sheqel"], ["JPY", "Japanese Yen"], ["MYR", "Malaysian Ringgit "], ["MXN", "Mexican Peso"], ["TWD", "New Taiwan Dollar"], ["NZD", "New Zealand Dollar"], ["NOK", "Norwegian Krone"], ["PHP", "Philippine Peso"], ["PLN", "Polish Złoty"], ["GBP", "British Pound"], ["RUB", "Russian Ruble"], ["SGD", "Singapore Dollar"], ["SEK", "Swedish Krona"], ["CHF", "Swiss Franc"], ["THB", "Thai Baht"]]
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_payjunction": {
	        "username": {
	            "text": "Username",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "password": {
	            "text": "Password",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "appkey": {
	            "text": "App Key",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "United States Dollar"]]
	        },
	        "avsMatchType": {
	            "text": "AVS Match Type",
	            "value": 'NO',
	            "dropdown": [['NO', "Please Select"], ['BYPASS', "Bypass"], ['ADDRESS', "Address"], ['ADDRESS_AND_ZIP', "Address and Zip"], ['ADDRESS_OR_ZIP', "Address or Zip"], ['ZIP', "Zip"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_square": {
	        "accessToken": {
	            "text": "Access Token",
	            "value": "",
	            "toolbar": false,
	            "required": true,
	            "hideAtwizard": true,
	            "hidden": true
	        },
	        "tokenExpiry": {
	            "text": "Access Token Expiration Date",
	            "value": "",
	            "toolbar": false,
	            "hideAtwizard": true,
	            "required": true,
	            "hidden": true
	        },
	        "merchantId": {
	            "text": "Merchant ID",
	            "value": "",
	            "toolbar": false,
	            "required": true,
	            "hideAtwizard": true,
	            "hidden": true
	        },
	        "allowTest": {
	            "text": "Test Mode",
	            "value": "false",
	            "hidden": true,
	            "hideAtwizard": true,
	            "toolbar": false
	        },
	        "location": {
	            "text": "Business Location",
	            "value": "",
	            "toolbar": false,
	            "hideAtwizard": true,
	            "hidden": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "U.S. Dollar"], ["CAD", "Canadian Dollar"], ["GBP", "U.K. Pounds"], ["EUR", "Euro"], ["AUD", "Australian Dollars"], ["AFN", "Afghan Afghani"], ["ALL", "Albanian Lek"], ["AMD", "Armenian Dram"], ["ANG", "Netherlands Antillean Gulden"], ["AOA", "Angolan Kwanza"], ["ARS", "Argentine Peso"], ["AWG", "Aruban Florin"], ["AZN", "Azerbaijani Manat"], ["BAM", "Bosnia & Herzegovina Convertible Mark"], ["BBD", "Barbadian Dollar"], ["BDT", "Bangladeshi Taka"], ["BGN", "Bulgarian Lev"], ["BIF", "Burundian Franc"], ["BMD", "Bermudian Dollar"], ["BND", "Brunei Dollar"], ["BOB", "Bolivian Boliviano"], ["BRL", "Brazilian Real"], ["BSD", "Bahamian Dollar"], ["BWP", "Botswana Pula"], ["BZD", "Belize Dollar"], ["CDF", "Congolese Franc"], ["CHF", "Swiss Franc"], ["CLP", "Chilean Peso"], ["CNY", "Chinese Renminbi Yuan"], ["COP", "Colombian Peso"], ["CRC", "Costa Rican Colón"], ["CVE", "Cape Verdean Escudo"], ["CZK", "Czech Koruna"], ["DJF", "Djiboutian Franc"], ["DKK", "Danish Krone"], ["DOP", "Dominican Peso"], ["DZD", "Algerian Dinar"], ["EEK", "Estonian Kroon"], ["EGP", "Egyptian Pound"], ["ETB", "Ethiopian Birr"], ["FJD", "Fijian Dollar"], ["FKP", "Falkland Islands Pound"], ["GEL", "Georgian Lari"], ["GIP", "Gibraltar Pound"], ["GMD", "Gambian Dalasi"], ["GNF", "Guinean Franc"], ["GTQ", "Guatemalan Quetzal"], ["GYD", "Guyanese Dollar"], ["HKD", "Hong Kong Dollar"], ["HNL", "Honduran Lempira"], ["HRK", "Croatian Kuna"], ["HTG", "Haitian Gourde"], ["HUF", "Hungarian Forint"], ["IDR", "Indonesian Rupiah"], ["ILS", "Israeli New Sheqel"], ["INR", "Indian Rupee"], ["ISK", "Icelandic Króna"], ["JMD", "Jamaican Dollar"], ["JPY", "Japanese Yen"], ["KES", "Kenyan Shilling"], ["KGS", "Kyrgyzstani Som"], ["KHR", "Cambodian Riel"], ["KMF", "Comorian Franc"], ["KRW", "South Korean Won"], ["KYD", "Cayman Islands Dollar"], ["KZT", "Kazakhstani Tenge"], ["LAK", "Lao Kip"], ["LBP", "Lebanese Pound"], ["LKR", "Sri Lankan Rupee"], ["LRD", "Liberian Dollar"], ["LSL", "Lesotho Loti"], ["LTL", "Lithuanian Litas"], ["LVL", "Latvian Lats"], ["MAD", "Moroccan Dirham"], ["MDL", "Moldovan Leu"], ["MGA", "Malagasy Ariary"], ["MKD", "Macedonian Denar"], ["MNT", "Mongolian Tögrög"], ["MOP", "Macanese Pataca"], ["MRO", "Mauritanian Ouguiya"], ["MUR", "Mauritian Rupee"], ["MVR", "Maldivian Rufiyaa"], ["MWK", "Malawian Kwacha"], ["MXN", "Mexican Peso"], ["MYR", "Malaysian Ringgit"], ["MZN", "Mozambican Metical"], ["NAD", "Namibian Dollar"], ["NGN", "Nigerian Naira"], ["NIO", "Nicaraguan Córdoba"], ["NOK", "Norwegian Krone"], ["NPR", "Nepalese Rupee"], ["NZD", "New Zealand Dollar"], ["PAB", "Panamanian Balboa"], ["PEN", "Peruvian Nuevo Sol"], ["PGK", "Papua New Guinean Kina"], ["PHP", "Philippine Peso"], ["PKR", "Pakistani Rupee"], ["PLN", "Polish Złoty"], ["PYG", "Paraguayan Guaraní"], ["QAR", "Qatari Riyal"], ["RON", "Romanian Leu"], ["RSD", "Serbian Dinar"], ["RUB", "Russian Ruble"], ["RWF", "Rwandan Franc"], ["SAR", "Saudi Riyal"], ["SBD", "Solomon Islands Dollar"], ["SCR", "Seychellois Rupee"], ["SEK", "Swedish Krona"], ["SGD", "Singapore Dollar"], ["SHP", "Saint Helenian Pound"], ["SLL", "Sierra Leonean Leone"], ["SOS", "Somali Shilling"], ["SRD", "Surinamese Dollar"], ["STD", "São Tomé and Príncipe Dobra"], ["SVC", "Salvadoran Colón"], ["SZL", "Swazi Lilangeni"], ["THB", "Thai Baht"], ["TJS", "Tajikistani Somoni"], ["TOP", "Tongan Paʻanga"], ["TRY", "Turkish Lira"], ["TTD", "Trinidad and Tobago Dollar"], ["TWD", "New Taiwan Dollar"], ["TZS", "Tanzanian Shilling"], ["UAH", "Ukrainian Hryvnia"], ["UGX", "Ugandan Shilling"], ["AED", "UAE Dirham"], ["UYU", "Uruguayan Peso"], ["UZS", "Uzbekistani Som"], ["VEF", "Venezuelan Bolívar"], ["VND", "Vietnamese Đồng"], ["VUV", "Vanuatu Vatu"], ["WST", "Samoan Tala"], ["XAF", "Central African Cfa Franc"], ["XCD", "East Caribbean Dollar"], ["XOF", "West African Cfa Franc"], ["XPF", "Cfp Franc"], ["YER", "Yemeni Rial"], ["ZAR", "South African Rand"], ["ZMW", "Zambian Kwacha"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp": "Expiration Date",
	                "cc_postal": "Postal Code"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_paymentmethods": {
	        "paymentFieldType": {
	            "text": "Payment Field Type",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "text": {
	            "text": "Question",
	            "value": "Payment Methods"
	        }
	    },
	    "control_paymill": {
	        "apiKey": {
	            "text": "Paymill Private API Key",
	            "value": "",
	            "toolbar": false,
	            "size": 50
	        },
	        "publishableKey": {
	            "text": "Paymill Public Key",
	            "value": "",
	            "toolbar": false,
	            "size": 50
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "EUR",
	            "dropdown": [["EUR", "Euro"], ["USD", "U.S. Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "bridge": {
	            "text": "Bridge",
	            "hidden": true,
	            "toolbar": false,
	            "value": ""
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card",
	            "toolbar": false,
	            "hidden": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_paypal": {
	        "account": {
	            "text": "PayPal Account",
	            "value": "",
	            "toolbar": false,
	            "required": true
	        },
	        "payeraddress": {
	            "text": "Need Shipment Address",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "U.S. Dollar"], ["EUR", "Euro"], ["AUD", "Australian Dollar"], ["CAD", "Canadian Dollar"], ["BRL", "Brazilian Real"], ["CZK", "Czech Koruna"], ["DKK", "Danish Krone"], ["GBP", "Pound Sterling"], ["HKD", "Hong Kong Dollar"], ["HUF", "Hungarian Forint"], ["ILS", "Israeli New Sheqel"], ["JPY", "Japanese Yen"], ["MYR", "Malaysian Ringgit"], ["MXN", "Mexican Peso"], ["TWD", "New Taiwan Dollars"], ["NZD", "New Zealand Dollar"], ["NOK", "Norwegian Krone"], ["PHP", "Philippine Peso"], ["PLN", "Polish Zloty"], ["RUB", "Russian Ruble"], ["SGD", "Singapore Dollar"], ["SEK", "Swedish Krona"], ["CHF", "Swiss Franc"], ["THB", "Thai Baht"], ["TRY", "Turkish Liras"]]
	        },
	        "country": {
	            "text": "Checkout Language",
	            "toolbar": false,
	            "value": "",
	            "dropdown": [["", "Default"], ["AL", "Albania"], ["DZ", "Algeria"], ["AD", "Andorra"], ["AO", "Angola"], ["AI", "Anguilla"], ["AG", "Antigua and Barbuda"], ["AR", "Argentina"], ["AM", "Armenia"], ["AW", "Aruba"], ["AU", "Australia"], ["AT", "Austria"], ["AZ", "Azerbaijan Republic"], ["BS", "Bahamas"], ["BH", "Bahrain"], ["BB", "Barbados"], ["BE", "Belgium"], ["BZ", "Belize"], ["BJ", "Benin"], ["BM", "Bermuda"], ["BT", "Bhutan"], ["BO", "Bolivia"], ["BA", "Bosnia and Herzegovina"], ["BW", "Botswana"], ["BR", "Brazil"], ["BN", "Brunei"], ["BG", "Bulgaria"], ["BF", "Burkina Faso"], ["BI", "Burundi"], ["KH", "Cambodia"], ["CA", "Canada"], ["CV", "Cape Verde"], ["KY", "Cayman Islands"], ["CZ", "Czech Republic"], ["TD", "Chad"], ["CL", "Chile"], ["CN", "China"], ["CO", "Colombia"], ["KM", "Comoros"], ["CK", "Cook Islands"], ["CR", "Costa Rica"], ["HR", "Croatia"], ["CY", "Cyprus"], ["CD", "Democratic Republic of the Congo"], ["DK", "Denmark"], ["DJ", "Djibouti"], ["DM", "Dominica"], ["DO", "Dominican Republic"], ["EC", "Ecuador"], ["SV", "El Salvador"], ["ER", "Eritrea"], ["EE", "Estonia"], ["ET", "Ethiopia"], ["FK", "Falkland Islands"], ["FO", "Faroe Islands"], ["FJ", "Fiji"], ["FI", "Finland"], ["FR", "France"], ["GF", "French Guiana"], ["PF", "French Polynesia"], ["GA", "Gabon Republic"], ["GM", "Gambia"], ["DE", "Germany"], ["GI", "Gibraltar"], ["GR", "Greece"], ["GL", "Greenland"], ["GD", "Grenada"], ["GP", "Guadeloupe"], ["GT", "Guatemala"], ["GN", "Guinea"], ["GW", "Guinea Bissau"], ["GY", "Guyana"], ["HN", "Honduras"], ["HK", "Hong Kong"], ["HU", "Hungary"], ["IS", "Iceland"], ["IN", "India"], ["ID", "Indonesia"], ["IE", "Ireland"], ["IL", "Israel"], ["IT", "Italy"], ["JM", "Jamaica"], ["JP", "Japan"], ["JO", "Jordan"], ["KZ", "Kazakhstan"], ["KE", "Kenya"], ["KI", "Kiribati"], ["KW", "Kuwait"], ["KG", "Kyrgyzstan"], ["LA", "Laos"], ["LV", "Latvia"], ["LS", "Lesotho"], ["LI", "Liechtenstein"], ["LT", "Lithuania"], ["LU", "Luxembourg"], ["MG", "Madagascar"], ["MW", "Malawi"], ["MY", "Malaysia"], ["MV", "Maldives"], ["ML", "Mali"], ["MT", "Malta"], ["MH", "Marshall Islands"], ["MQ", "Martinique"], ["MR", "Mauritania"], ["MU", "Mauritius"], ["YT", "Mayotte"], ["MX", "Mexico"], ["FM", "Micronesia"], ["MN", "Mongolia"], ["MS", "Montserrat"], ["MA", "Morocco"], ["MZ", "Mozambique"], ["NA", "Namibia"], ["NR", "Nauru"], ["NP", "Nepal"], ["NL", "Netherlands"], ["AN", "Netherlands Antilles"], ["NC", "New Caledonia"], ["NZ", "New Zealand"], ["NI", "Nicaragua"], ["NE", "Niger"], ["NU", "Niue"], ["NF", "Norfolk Island"], ["NO", "Norway"], ["OM", "Oman"], ["PW", "Palau"], ["PA", "Panama"], ["PG", "Papua New Guinea"], ["PE", "Peru"], ["PH", "Philippines"], ["PN", "Pitcairn Islands"], ["PL", "Poland"], ["PT", "Portugal"], ["QA", "Qatar"], ["CG", "Republic of the Congo"], ["RE", "Reunion"], ["RO", "Romania"], ["RU", "Russia"], ["RW", "Rwanda"], ["KN", "Saint Kitts and Nevis Anguilla"], ["PM", "Saint Pierre and Miquelon"], ["VC", "Saint Vincent and Grenadines"], ["WS", "Samoa"], ["SM", "San Marino"], ["ST", "SÃ£o TomÃ© and PrÃ­ncipe"], ["SA", "Saudi Arabia"], ["SN", "Senegal"], ["SC", "Seychelles"], ["SL", "Sierra Leone"], ["SG", "Singapore"], ["SK", "Slovakia"], ["SI", "Slovenia"], ["SB", "Solomon Islands"], ["SO", "Somalia"], ["ZA", "South Africa"], ["KR", "South Korea"], ["ES", "Spain"], ["LK", "Sri Lanka"], ["SH", "St. Helena"], ["LC", "St. Lucia"], ["SR", "Suriname"], ["SJ", "Svalbard and Jan Mayen Islands"], ["SZ", "eSwatini"], ["SE", "Sweden"], ["CH", "Switzerland"], ["TW", "Taiwan"], ["TJ", "Tajikistan"], ["TZ", "Tanzania"], ["TH", "Thailand"], ["TG", "Togo"], ["TO", "Tonga"], ["TT", "Trinidad and Tobago"], ["TN", "Tunisia"], ["TR", "Turkey"], ["TM", "Turkmenistan"], ["TC", "Turks and Caicos Islands"], ["TV", "Tuvalu"], ["UG", "Uganda"], ["UA", "Ukraine"], ["AE", "United Arab Emirates"], ["GB", "United Kingdom"], ["US", "United States"], ["UY", "Uruguay"], ["VU", "Vanuatu"], ["VA", "Vatican City State"], ["VE", "Venezuela"], ["VN", "Vietnam"], ["VG", "Virgin Islands (British)"], ["WF", "Wallis and Futuna Islands"], ["YE", "Yemen"], ["ZM", "Zambia"]]
	        },
	        "pagestyle": {
	            "text": "Paypal Page Style",
	            "value": "",
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "checkoutLogo": {
	            "text": "Checkout Logo",
	            "value": "",
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "bridge": {
	            "text": "Bridge",
	            "hidden": true,
	            "toolbar": false,
	            "value": ""
	        },
	        "emailpending": {
	            "text": "Pending Payment E-mail",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Notifiers Only"], ["All", "Notifiers and Autoresponders"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "authOnly": {
	            "text": "Authorization Only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "condition": [["paymentType", "product OR subscription"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "customDataField": {
	            "text": "Custom Field",
	            "value": "0",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "ipnrelay": {
	            "text": "IPN Relay URL",
	            "value": "",
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "paypalButton": {
	            "text": "Use Checkout Buttons",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "cartColor": {
	            "text": "Checkout Cart Color",
	            "value": "",
	            "nopaymentwizard": true,
	            "toolbar": false
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_paypalexpress": {
	        "username": {
	            "text": "API Username",
	            "value": "",
	            "size": "40",
	            "required": true,
	            "toolbar": false
	        },
	        "password": {
	            "text": "API Password",
	            "value": "",
	            "size": "40",
	            "required": true,
	            "toolbar": false
	        },
	        "signature": {
	            "text": "Signature",
	            "value": "",
	            "size": "40",
	            "required": true,
	            "toolbar": false
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "U.S. Dollar"], ["EUR", "Euro"], ["AUD", "Australian Dollar"], ["CAD", "Canadian Dollar"], ["BRL", "Brazilian Real"], ["CZK", "Czech Koruna"], ["DKK", "Danish Krone"], ["GBP", "Pound Sterling"], ["HKD", "Hong Kong Dollar"], ["HUF", "Hungarian Forint"], ["ILS", "Israeli New Sheqel"], ["JPY", "Japanese Yen"], ["MYR", "Malaysian Ringgit"], ["MXN", "Mexican Peso"], ["TWD", "New Taiwan Dollars"], ["NZD", "New Zealand Dollar"], ["NOK", "Norwegian Krone"], ["PHP", "Philippine Peso"], ["PLN", "Polish Zloty"], ["RUB", "Russian Ruble"], ["SGD", "Singapore Dollar"], ["SEK", "Swedish Krona"], ["CHF", "Swiss Franc"], ["THB", "Thai Baht"], ["TRY", "Turkish Liras"]]
	        },
	        "authOnly": {
	            "text": "Authorization Only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "digitalGoods": {
	            "text": "Digital Goods",
	            "value": "Yes",
	            "useCheckbox": true,
	            "toolbar": false,
	            "noproperty": true
	        },
	        "payeraddress": {
	            "text": "Need Shipment Address",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false,
	            "noproperty": true
	        },
	        "customDataField": {
	            "text": "Custom Data Field",
	            "value": "0",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "paypalButton": {
	            "text": "Use PayPal Buttons",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "checkoutLogo": {
	            "text": "Checkout Logo",
	            "value": "",
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "cartColor": {
	            "text": "Checkout Cart Color",
	            "value": "",
	            "nopaymentwizard": true,
	            "toolbar": false
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "emailpending": {
	            "text": "Pending Payment E-mail",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Notification Only"], ["All", "All Emails"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_paypalpro": {
	        "username": {
	            "text": "API Username",
	            "value": "",
	            "size": "40",
	            "required": true,
	            "toolbar": false
	        },
	        "password": {
	            "text": "API Password",
	            "value": "",
	            "size": "40",
	            "required": true,
	            "toolbar": false
	        },
	        "signature": {
	            "text": "Signature",
	            "value": "",
	            "size": "40",
	            "required": true,
	            "toolbar": false
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "U.S. Dollar"], ["EUR", "Euro"], ["AUD", "Australian Dollar"], ["CAD", "Canadian Dollar"], ["BRL", "Brazilian Real"], ["CZK", "Czech Koruna"], ["DKK", "Danish Krone"], ["GBP", "Pound Sterling"], ["HKD", "Hong Kong Dollar"], ["HUF", "Hungarian Forint"], ["ILS", "Israeli New Sheqel"], ["JPY", "Japanese Yen"], ["MYR", "Malaysian Ringgit"], ["MXN", "Mexican Peso"], ["TWD", "New Taiwan Dollars"], ["NZD", "New Zealand Dollar"], ["NOK", "Norwegian Krone"], ["PHP", "Philippine Peso"], ["PLN", "Polish Zloty"], ["RUB", "Russian Ruble"], ["SGD", "Singapore Dollar"], ["SEK", "Swedish Krona"], ["CHF", "Swiss Franc"], ["THB", "Thai Baht"], ["TRY", "Turkish Liras"]]
	        },
	        "authOnly": {
	            "text": "Authorization Only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "shipToAddress": {
	            "text": "Shipping Address",
	            "value": "none",
	            "dropdown": [["none", "None"], ["billing", "Same as billing address"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address",
	                "paymentMethod": "Payment Method"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "customDataField": {
	            "text": "Custom Data Field",
	            "value": "0",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "pagestyle": {
	            "text": "Paypal Page Style",
	            "value": "",
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "checkoutLogo": {
	            "text": "Checkout Logo",
	            "value": "",
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "acceptedCc": {
	            "text": "Accepted Cards",
	            "noproperty": true,
	            "nopaymentwizard": true,
	            "useCheckbox": true,
	            "toolbar": true,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-paypalpro_cc",
	            "value": "",
	            "dropdown": [["visa", "Visa"], ["mc", "Mastercard"], ["amex", "American Express"], ["dc", "Discover"]]
	        },
	        "paymentMethod": {
	            "text": "Default Method",
	            "noproperty": true,
	            "nopaymentwizard": true,
	            "toolbar": true,
	            "value": "paypal",
	            "dropdown": [["paypal", "Paypal Checkout"], ["cc", "Credit Card"], ["none", "None"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-paypalpro_method"
	        },
	        "paypalButton": {
	            "text": "Use PayPal Buttons",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "cartColor": {
	            "text": "Checkout Cart Color",
	            "value": "",
	            "nopaymentwizard": true,
	            "toolbar": false
	        },
	        "paypalLink": {
	            "text": "Show PayPal Link",
	            "value": "No",
	            "useCheckbox": true,
	            "noproperty": true,
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card",
	            "toolbar": false,
	            "hidden": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_paypalcomplete": {
	        "merchantId": {
	            "text": "Paypal ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "isBillingInformation": {
	            "text": "Ask billing fields to customer",
	            "value": "none",
	            "dropdown": [["none", "None"]],
	            "toolbar": false,
	            "hidden": true
	        },
	        "billToAddress": {
	            "text": "Billing Address",
	            "value": "none",
	            "dropdown": [["none", "None"]],
	            "toolbar": false,
	            "hidden": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "U.S. Dollar"], ["EUR", "Euro"], ["AUD", "Australian Dollar"], ["CAD", "Canadian Dollar"], ["BRL", "Brazilian Real"], ["CZK", "Czech Koruna"], ["DKK", "Danish Krone"], ["GBP", "Pound Sterling"], ["HKD", "Hong Kong Dollar"], ["HUF", "Hungarian Forint"], ["ILS", "Israeli New Sheqel"], ["JPY", "Japanese Yen"], ["MYR", "Malaysian Ringgit"], ["MXN", "Mexican Peso"], ["TWD", "New Taiwan Dollars"], ["NZD", "New Zealand Dollar"], ["NOK", "Norwegian Krone"], ["PHP", "Philippine Peso"], ["PLN", "Polish Zloty"], ["RUB", "Russian Ruble"], ["SGD", "Singapore Dollar"], ["SEK", "Swedish Krona"], ["CHF", "Swiss Franc"], ["THB", "Thai Baht"], ["TRY", "Turkish Liras"]]
	        },
	        "authOnly": {
	            "text": "Authorization Only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "cc_card_expiry": "Card Expiration",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address",
	                "paymentMethod": "Payment Method"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "customDataField": {
	            "text": "Custom Data Field",
	            "value": "0",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card",
	            "toolbar": false,
	            "hidden": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        },
	        "styleColor": {
	            "text": "Button Color",
	            "value": "gold",
	            "dropdown": [["gold", "gold"], ["blue", "blue"], ["silver", "silver"], ["black", "black"]]
	        },
	        "styleShape": {
	            "text": "Button Shape",
	            "value": "rect",
	            "dropdown": [["pill", "pill"], ["rect", "rect"]]
	        },
	        "styleSize": {
	            "text": "Button Size",
	            "value": "medium",
	            "dropdown": [["small", "small"], ["medium", "medium"], ["large", "large"], ["responsive", "responsive"]]
	        },
	        "styleLabel": {
	            "text": "Button Label",
	            "value": "checkout",
	            "dropdown": [["checkout", "checkout"], ["pay", "pay"], ["buynow", "buynow"], ["paypal", "paypal"]]
	        },
	        "styleLayout": {
	            "text": "Button Layout",
	            "value": "vertical",
	            "dropdown": [["vertical", "vertical"], ["horizontal", "horizontal"]]
	        },
	        "payLaterEnabled": {
	            "text": "Enable pay later feature",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "payLaterLayout": {
	            "text": "Pay later layout",
	            "value": "text",
	            "dropdown": [["text", "text"], ["flex", "flex"]]
	        },
	        "payLaterLogoType": {
	            "text": "Pay later logo type",
	            "value": "inline",
	            "dropdown": [["primary", "primary"], ["alternative", "alternative"], ["inline", "inline"], ["none", "none"]]
	        },
	        "payLaterLogoPosition": {
	            "text": "Pay later logo position",
	            "value": "left",
	            "dropdown": [["left", "left"], ["right", "right"], ["top", "top"]]
	        },
	        "payLaterTextColor": {
	            "text": "Pay later text color",
	            "value": "black",
	            "dropdown": [["black", "black"], ["white", "white"], ["monochrome", "monochrome"], ["grayscale", "grayscale"]]
	        },
	        "payLaterTextSize": {
	            "text": "Pay later text size",
	            "value": "12",
	            "dropdown": [["10", "10"], ["11", "11"], ["12", "12"], ["13", "13"], ["14", "14"], ["15", "15"], ["16", "16"]]
	        },
	        "payLaterBackgroundColor": {
	            "text": "Pay later background color",
	            "value": "blue",
	            "dropdown": [["blue", "blue"], ["black", "black"], ["white", "white"], ["white-no-border", "white-no-border"], ["gray", "gray"], ["monochrome", "monochrome"], ["grayscale", "grayscale"]]
	        },
	        "payLaterRatio": {
	            "text": "Pay later banner ratio",
	            "value": "20x1",
	            "dropdown": [["8x1", "8x1"], ["20x1", "20x1"]]
	        }
	    },
	    "control_cybersource": {
	        "merchantID": {
	            "text": "Merchant ID",
	            "value": "",
	            "size": "40",
	            "required": true,
	            "toolbar": false
	        },
	        "transactionKey": {
	            "text": "Transaction Key",
	            "value": "",
	            "size": "40",
	            "required": true,
	            "toolbar": false
	        },
	        "signature": {
	            "text": "Signature",
	            "value": "",
	            "size": "40",
	            "required": true,
	            "toolbar": false
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "U.S. Dollar"], ["EUR", "Euro"], ["AUD", "Australian Dollar"], ["CAD", "Canadian Dollar"], ["BRL", "Brazilian Real"], ["CZK", "Czech Koruna"], ["DKK", "Danish Krone"], ["GBP", "Pound Sterling"], ["HKD", "Hong Kong Dollar"], ["HUF", "Hungarian Forint"], ["ILS", "Israeli New Sheqel"], ["JPY", "Japanese Yen"], ["MYR", "Malaysian Ringgit"], ["MXN", "Mexican Peso"], ["TWD", "New Taiwan Dollars"], ["NZD", "New Zealand Dollar"], ["NOK", "Norwegian Krone"], ["PHP", "Philippine Peso"], ["PLN", "Polish Zloty"], ["RUB", "Russian Ruble"], ["SGD", "Singapore Dollar"], ["SEK", "Swedish Krona"], ["CHF", "Swiss Franc"], ["THB", "Thai Baht"], ["TRY", "Turkish Liras"]]
	        },
	        "authOnly": {
	            "text": "Authorization Only",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "shipToAddress": {
	            "text": "Shipping Address",
	            "value": "none",
	            "dropdown": [["none", "None"], ["billing", "Same as billing address"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address",
	                "paymentMethod": "Payment Method"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "customDataField": {
	            "text": "Custom Data Field",
	            "value": "0",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "pagestyle": {
	            "text": "Paypal Page Style",
	            "value": "",
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "checkoutLogo": {
	            "text": "Checkout Logo",
	            "value": "",
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "acceptedCc": {
	            "text": "Accepted Cards",
	            "noproperty": true,
	            "nopaymentwizard": true,
	            "useCheckbox": true,
	            "toolbar": true,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-paypalpro_cc",
	            "value": "",
	            "dropdown": [["visa", "Visa"], ["mc", "Mastercard"], ["amex", "American Express"], ["dc", "Discover"]]
	        },
	        "paymentMethod": {
	            "text": "Default Method",
	            "noproperty": true,
	            "nopaymentwizard": true,
	            "toolbar": true,
	            "value": "paypal",
	            "dropdown": [["paypal", "Paypal Checkout"], ["cc", "Credit Card"], ["none", "None"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-paypalpro_method"
	        },
	        "paypalButton": {
	            "text": "Use PayPal Buttons",
	            "value": "No",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "cartColor": {
	            "text": "Checkout Cart Color",
	            "value": "",
	            "nopaymentwizard": true,
	            "toolbar": false
	        },
	        "paypalLink": {
	            "text": "Show PayPal Link",
	            "value": "No",
	            "useCheckbox": true,
	            "noproperty": true,
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card",
	            "toolbar": false,
	            "hidden": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_echeck": {
	        "ecTitle": {
	            "text": "eCheck Label",
	            "value": "eCheck",
	            "toolbar": false,
	            "hidden": true
	        },
	        "sandbox": {
	            "text": "Status",
	            "value": "disabled",
	            "dropdown": [["disabled", "Live"], ["enabled", "Sandbox"]],
	            "toolbar": false
	        },
	        "apiLoginId": {
	            "text": "API Login ID",
	            "value": "",
	            "toolbar": false
	        },
	        "transactionKey": {
	            "text": "Transaction Key",
	            "value": "",
	            "toolbar": false
	        },
	        "shipToAddress": {
	            "text": "Shipping Address Field",
	            "value": "none",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "shipToName": {
	            "text": "Shipping Name Field",
	            "value": "None",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "USD"]]
	        },
	        "eCheckType": {
	            "text": "eCheck Type",
	            "value": "WEB",
	            "dropdown": [["WEB", "WEB"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "ec_bankAccountType": "Bank Account Type",
	                "ec_routingNumber": "Routing Number",
	                "ec_accountNumber": "Account Number",
	                "ec_nameOnAccount": "Name On Account",
	                "ec_bankName": "Bank Name",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_eway": {
	        "apiKey": {
	            "text": "API Key",
	            "value": "",
	            "toolbar": false
	        },
	        "apiPassword": {
	            "text": "API Password",
	            "value": "",
	            "toolbar": false
	        },
	        "encryptionKey": {
	            "text": "Client-side Encryption Key",
	            "value": "",
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "shipToAddress": {
	            "text": "Shipping Address Field",
	            "value": "none",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "shipToName": {
	            "text": "Shipping Name Field",
	            "value": "None",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "USD"], ["CAD", "CAD"], ["GBP", "GBP"], ["EUR", "EUR"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card",
	            "toolbar": false,
	            "hidden": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Left", "Left"], ["Right", "Right"], ["Top", "Top"]],
	            "checkbox": {
	                name: 'labelAlign',
	                text: 'Set as form default',
	                value: 'Auto'
	            }
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        }
	    },
	    "control_authnet": {
	        "apiLoginId": {
	            "text": "API Login ID",
	            "value": "",
	            "toolbar": false
	        },
	        "transactionKey": {
	            "text": "Transaction Key",
	            "value": "",
	            "toolbar": false
	        },
	        "authInvoiceField": {
	            "text": "Invoice Number Field",
	            "value": "",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "emailField": {
	            "text": "Customer Email Field",
	            "value": "",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "shipToAddress": {
	            "text": "Shipping Address Field",
	            "value": "none",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "shipToName": {
	            "text": "Shipping Name Field",
	            "value": "None",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "USD"], ["CAD", "CAD"], ["GBP", "GBP"], ["EUR", "EUR"]]
	        },
	        "authnetEmulator": {
	            "text": "Emulator",
	            "value": "none",
	            "dropdown": [["none", "None"], ["epn", "EPN"], ["goemerchant", "GoEmerchant"], ["merchantone", "MerchantOne"], ["payjunction", "PayJunction"], ["usaepay", "USAePay"]],
	            "nopaymentwizard": true,
	            "condition": [["paymentType", "product OR donation"]],
	            "toolbar": false
	        },
	        "testmodeAuth": {
	            "text": "Sandbox Test Mode",
	            "value": "No",
	            "dropdownhidden": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "authOnly": {
	            "text": "Authorization Only",
	            "value": "No",
	            "dropdownhidden": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card",
	            "toolbar": false,
	            "hidden": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "askBillingInformation": {
	            "text": "Ask billing Information",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_googleco": {
	        "merchantID": {
	            "text": "Merchant ID",
	            "value": "",
	            "toolbar": false
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "USD"], ["GBP", "GBP"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_onebip": {
	        "username": {
	            "text": "OneBip Username",
	            "value": "",
	            "toolbar": false
	        },
	        "itemNo": {
	            "text": "Item Number",
	            "value": "",
	            "size": 6,
	            "toolbar": false
	        },
	        "productName": {
	            "text": "Product Name",
	            "value": "",
	            "toolbar": false
	        },
	        "productPrice": {
	            "text": "Product Price",
	            "value": "",
	            "size": 6,
	            "toolbar": false
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "USD"], ["EUR", "EUR"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_wepay": {
	        "accessToken": {
	            "text": "Access Token",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "allowTest": {
	            "text": "Test Mode",
	            "value": "Disabled",
	            "hidden": true,
	            "hideAtwizard": false,
	            "toolbar": false
	        },
	        "clientId": {
	            "text": "Client ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "clientSecret": {
	            "text": "Client Secret",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "accountId": {
	            "text": "Account ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "United States Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_email": "E-mail",
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_worldpay": {
	        "installationID": {
	            "text": "Installation ID",
	            "value": "",
	            "toolbar": false
	        },
	        "merchantCode": {
	            "text": "Merchant Code(s)",
	            "value": "",
	            "toolbar": false,
	            "nopaymentwizard": true,
	            "textarea": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "USD"], ["GBP", "GBP"], ["EUR", "EUR"], ["ARS", "ARS"], ["AUD", "AUD"], ["BRL", "BRL"], ["CAD", "CAD"], ["CHF", "CHF"], ["CLP", "CLP"], ["CNY", "CNY"], ["COP", "COP"], ["CZK", "CZK"], ["DKK", "DKK"], ["EUR", "EUR"], ["GBP", "GBP"], ["HKD", "HKD"], ["HUF", "HUF"], ["IDR", "IDR"], ["ISK", "ISK"], ["JPY", "JPY"], ["KES", "KES"], ["KRW", "KRW"], ["MXN", "MXN"], ["MYR", "MYR"], ["NOK", "NOK"], ["NZD", "NZD"], ["PHP", "PHP"], ["PLN", "PLN"], ["SEK", "SEK"], ["SGD", "SGD"], ["THB", "THB"], ["TRY", "TRY"], ["TWD", "TWD"], ["VND", "VND"], ["ZAR", "ZAR"]]
	        },
	        "testMode": {
	            "text": "Test Mode",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "emailpending": {
	            "text": "Pending Payment E-mail",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Notification Only"], ["All", "All Emails"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_worldpayus": {
	        "username": {
	            "text": "Username",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "password": {
	            "text": "Password",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "appkey": {
	            "text": "App Key",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "United States Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        }, "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_2co": {
	        "vendorNumber": {
	            "text": "2CheckOut Vendor Number",
	            "value": "",
	            "toolbar": false
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "U.S. Dollar"], ["EUR", "Euro"], ["AUD", "Australian Dollar"], ["CAD", "Canadian Dollar"], ["BRL", "Brazilian Real"], ["DKK", "Danish Krone"], ["GBP", "Pound Sterling"], ["HKD", "Hong Kong Dollar"], ["INR", "Indian Rupee"], ["ILS", "Israeli New Sheqel"], ["JPY", "Japanese Yen"], ["MYR", "Malaysian Ringgit"], ["MXN", "Mexican Peso"], ["NZD", "New Zealand Dollar"], ["NOK", "Norwegian Krone"], ["PHP", "Philippine Peso"], ["SGD", "Singapore Dollar"], ["SEK", "Swedish Krona"], ["CHF", "Swiss Franc"], ["TRY", "Turkish Liras"], ["AED", "UAE Dirham"], ["ZAR", "South African Rand"]]
	        },
	        "emailpending": {
	            "text": "Pending Payment E-mail",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Notification Only"], ["All", "All Emails"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_clickbank": {
	        "login": {
	            "text": "ClickBank Account name",
	            "value": "",
	            "toolbar": false
	        },
	        "itemNo": {
	            "text": "Item Number",
	            "value": "",
	            "size": 6,
	            "toolbar": false
	        },
	        "productName": {
	            "text": "Product Name",
	            "value": "",
	            "toolbar": false
	        },
	        "productPrice": {
	            "text": "Product Price",
	            "value": "",
	            "size": 6,
	            "toolbar": false
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "USD"], ["EUR", "EUR"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_payu": {
	        "payuid": {
	            "text": "Account ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "payuapi": {
	            "text": "API Secret",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["AED", "United Arab Emirates Dirham"], ["AFN", "Afghan Afghani"], ["ALL", "Albanian Lek"], ["AMD", "Armenian Dram"], ["ANG", "Netherlands Antillean Gulden"], ["AOA", "Angolan Kwanza"], ["ARS", "Argentine Peso"], ["AUD", "Australian Dollar"], ["AWG", "Aruban Florin"], ["AZN", "Azerbaijani Manat"], ["BAM", "Bosnia and Herzegovina Convertible Mark"], ["BBD", "Barbadian Dollar"], ["BDT", "Bangladeshi Taka"], ["BGN", "Bulgarian Lev"], ["BHD", "Bahraini Dinar"], ["BIF", "Burundian Franc"], ["BMD", "Bermudian Dollar"], ["BND", "Brunei Dollar"], ["BOB", "Bolivian Boliviano"], ["BRL", "Brazilian Real"], ["BSD", "Bahamian Dollar"], ["BTN", "Bhutanese Ngultrum"], ["BWP", "Botswana Pula"], ["BYR", "Belarusian Ruble"], ["BZD", "Belize Dollar"], ["CAD", "Canadian Dollar"], ["CDF", "Congolese Franc"], ["CHF", "Swiss Franc"], ["CLP", "Chilean Peso"], ["CNY", "Chinese Renminbi Yuan"], ["COP", "Colombian Peso"], ["CRC", "Costa Rican Colón"], ["CUC", "Cuban Convertible Peso"], ["CUP", "Cuban Peso"], ["CVE", "Cape Verdean Escudo"], ["CZK", "Czech Koruna"], ["DJF", "Djiboutian Franc"], ["DKK", "Danish Krone"], ["DOP", "Dominican Peso"], ["DZD", "Algerian Dinar"], ["EEK", "Estonian Kroon"], ["EGP", "Egyptian Pound"], ["ERN", "Eritrean Nakfa"], ["ETB", "Ethiopian Birr"], ["EUR", "Euro"], ["FJD", "Fijian Dollar"], ["FKP", "Falkland Pound"], ["GBP", "British Pound"], ["GEL", "Georgian Lari"], ["GHS", "Ghanaian Cedi"], ["GIP", "Gibraltar Pound"], ["GMD", "Gambian Dalasi"], ["GNF", "Guinean Franc"], ["GTQ", "Guatemalan Quetzal"], ["GYD", "Guyanese Dollar"], ["HKD", "Hong Kong Dollar"], ["HNL", "Honduran Lempira"], ["HRK", "Croatian Kuna"], ["HTG", "Haitian Gourde"], ["HUF", "Hungarian Forint"], ["IDR", "Indonesian Rupiah"], ["ILS", "Israeli New Sheqel"], ["INR", "Indian Rupee"], ["IQD", "Iraqi Dinar"], ["IRR", "Iranian Rial"], ["ISK", "Icelandic Króna"], ["JMD", "Jamaican Dollar"], ["JOD", "Jordanian Dinar"], ["JPY", "Japanese Yen"], ["KES", "Kenyan Shilling"], ["KGS", "Kyrgyzstani Som"], ["KHR", "Cambodian Riel"], ["KMF", "Comorian Franc"], ["KPW", "North Korean Won"], ["KRW", "South Korean Won"], ["KWD", "Kuwaiti Dinar"], ["KYD", "Cayman Islands Dollar"], ["KZT", "Kazakhstani Tenge"], ["LAK", "Lao Kip"], ["LBP", "Lebanese Lira"], ["LKR", "Sri Lankan Rupee"], ["LRD", "Liberian Dollar"], ["LSL", "Lesotho Loti"], ["LTL", "Lithuanian Litas"], ["LVL", "Latvian Lats"], ["LYD", "Libyan Dinar"], ["MAD", "Moroccan Dirham"], ["MDL", "Moldovan Leu"], ["MGA", "Malagasy Ariary"], ["MKD", "Macedonian Denar"], ["MMK", "Myanmar Kyat"], ["MNT", "Mongolian Tögrög"], ["MOP", "Macanese Pataca"], ["MRO", "Mauritanian Ouguiya"], ["MUR", "Mauritian Rupee"], ["MVR", "Maldivian Rufiyaa"], ["MWK", "Malawian Kwacha"], ["MXN", "Mexican Peso"], ["MYR", "Malaysian Ringgit"], ["MZN", "Mozambican Metical"], ["NAD", "Namibian Dollar"], ["NGN", "Nigerian Naira"], ["NIO", "Nicaraguan Córdoba"], ["NOK", "Norwegian Krone"], ["NPR", "Nepalese Rupee"], ["NZD", "New Zealand Dollar"], ["OMR", "Omani Rial"], ["PAB", "Panamanian Balboa"], ["PEN", "Peruvian Nuevo Sol"], ["PGK", "Papua New Guinean Kina"], ["PHP", "Philippine Peso"], ["PKR", "Pakistani Rupee"], ["PLN", "Polish Złoty"], ["PYG", "Paraguayan Guaraní"], ["QAR", "Qatari Riyal"], ["RON", "Romanian Leu"], ["RSD", "Serbian Dinar"], ["RUB", "Russian Ruble"], ["RWF", "Rwandan Franc"], ["SAR", "Saudi Riyal"], ["SBD", "Solomon Islands Dollar"], ["SCR", "Seychellois Rupee"], ["SDG", "Sudanese Pound"], ["SEK", "Swedish Krona"], ["SGD", "Singapore Dollar"], ["SHP", "Saint Helenian Pound"], ["SKK", "Slovak Koruna"], ["SLL", "Sierra Leonean Leone"], ["SOS", "Somali Shilling"], ["SRD", "Surinamese Dollar"], ["STD", "São Tomé and Príncipe Dobra"], ["SVC", "Salvadoran Colón"], ["SYP", "Syrian Pound"], ["SZL", "Swazi Lilangeni"], ["THB", "Thai Baht"], ["TJS", "Tajikistani Somoni"], ["TMM", "Turkmenistani Manat"], ["TMT", "Turkmenistani Manat"], ["TND", "Tunisian Dinar"], ["TOP", "Tongan Paʻanga"], ["TRY", "Turkish New Lira"], ["TTD", "Trinidad and Tobago Dollar"], ["TWD", "New Taiwan Dollar"], ["TZS", "Tanzanian Shilling"], ["UAH", "Ukrainian Hryvnia"], ["UGX", "Ugandan Shilling"], ["USD", "United States Dollar"], ["UYU", "Uruguayan Peso"], ["UZS", "Uzbekistani Som"], ["VEF", "Venezuelan Bolívar"], ["VND", "Vietnamese Đồng"], ["VUV", "Vanuatu Vatu"], ["WST", "Samoan Tala"], ["XAF", "Central African Cfa Franc"], ["XCD", "East Caribbean Dollar"], ["XOF", "West African Cfa Franc"], ["XPF", "Cfp Franc"], ["YER", "Yemeni Rial"], ["ZAR", "South African Rand"], ["ZMK", "Zambian Kwacha"], ["ZWD", "Zimbabwean Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "customerName": {
	            "text": "Customer Name Field",
	            "value": "None",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_skrill": {
	        "account": {
	            "text": "Merchant Account",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "USD"], ["GBP", "GBP"], ["EUR", "EUR"], ["ARS", "ARS"], ["AUD", "AUD"], ["BRL", "BRL"], ["CAD", "CAD"], ["CHF", "CHF"], ["CLP", "CLP"], ["CNY", "CNY"], ["COP", "COP"], ["CZK", "CZK"], ["DKK", "DKK"], ["EUR", "EUR"], ["GBP", "GBP"], ["HKD", "HKD"], ["HUF", "HUF"], ["IDR", "IDR"], ["ISK", "ISK"], ["JPY", "JPY"], ["KES", "KES"], ["KRW", "KRW"], ["MXN", "MXN"], ["MYR", "MYR"], ["NOK", "NOK"], ["NZD", "NZD"], ["PHP", "PHP"], ["PLN", "PLN"], ["SEK", "SEK"], ["SGD", "SGD"], ["THB", "THB"], ["TRY", "TRY"], ["TWD", "TWD"], ["VND", "VND"], ["ZAR", "ZAR"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "customerName": {
	            "text": "Customer Name Field",
	            "value": "None",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_pagseguro": {
	        "pagseguroid": {
	            "text": "E-mail",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "pagseguroapi": {
	            "text": "Token",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "BRL",
	            "dropdown": [["BRL", "BRL"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_email": "E-mail",
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street",
	                "addr_line2": "Number",
	                "district": "District",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address",
	                "cc_cpf": "CPF",
	                "area": "Area",
	                "phone": "Phone",
	                "cc_holderBirthdate": "Credit Card Holder Birthdate"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_mollie": {
	        "refreshToken": {
	            "text": "Refresh Token",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "profileId": {
	            "text": "Profile ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "mollieAPM": {
	            "text": "Mollie APM",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "billingData": {
	            "text": 'Billing Data',
	            "value": ''
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [[" ", "No Currency"], ["EUR", "Euro"], ["USD", "U.S. Dollar"], ["AED", "United Arab Emirates Dirham"], ["AUD", "Australian Dollar"], ["BGN", "Bulgarian Lev"], ["BRL", "Brazilian Real"], ["CAD", "Canadian Dollar"], ["CHF", "Swiss franc"], ["CLP", "Chilean Peso"], ["CZK", "Czech Koruna"], ["DKK", "Danish Krone"], ["GBP", "British Pound"], ["HKD", "Hong Kong Dollar"], ["HRK", "Croatian Kuna"], ["HUF", "Hungarian Forint"], ["ILS", "Israeli New Sheqel"], ["MXN", "Mexican Peso"], ["MYR", "Malaysian Ringgit"], ["NOK", "Norwegian Krone"], ["NZD", "New Zealand Dollar"], ["PHP", "Philippine Peso"], ["PLN", "Polish Zloty"], ["RON", "Romanian Lei"], ["RUB", "Russian Ruble"], ["SEK", "Swedish Krona"], ["SGD", "Singapore Dollar"], ["THB", "Thai Baht"], ["TWD", "New Taiwan Dollars"], ["ZAR", "South African Rand"]]
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "Full Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "cc_card_expiry": "Expiration Date",
	                "ccExpMonthWithYear": "Expiration Date"
	            },
	            "hidden": true,
	            "toolbar": false
	        }
	    },
	    "control_moneris": {
	        "monerisid": {
	            "text": "Account ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "monerisapi": {
	            "text": "API Secret",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "billingData": {
	            "text": 'Billing Data',
	            "value": ''
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["AED", "United Arab Emirates Dirham"], ["AFN", "Afghan Afghani"], ["ALL", "Albanian Lek"], ["AMD", "Armenian Dram"], ["ANG", "Netherlands Antillean Gulden"], ["AOA", "Angolan Kwanza"], ["ARS", "Argentine Peso"], ["AUD", "Australian Dollar"], ["AWG", "Aruban Florin"], ["AZN", "Azerbaijani Manat"], ["BAM", "Bosnia and Herzegovina Convertible Mark"], ["BBD", "Barbadian Dollar"], ["BDT", "Bangladeshi Taka"], ["BGN", "Bulgarian Lev"], ["BHD", "Bahraini Dinar"], ["BIF", "Burundian Franc"], ["BMD", "Bermudian Dollar"], ["BND", "Brunei Dollar"], ["BOB", "Bolivian Boliviano"], ["BRL", "Brazilian Real"], ["BSD", "Bahamian Dollar"], ["BTN", "Bhutanese Ngultrum"], ["BWP", "Botswana Pula"], ["BYR", "Belarusian Ruble"], ["BZD", "Belize Dollar"], ["CAD", "Canadian Dollar"], ["CDF", "Congolese Franc"], ["CHF", "Swiss Franc"], ["CLP", "Chilean Peso"], ["CNY", "Chinese Renminbi Yuan"], ["COP", "Colombian Peso"], ["CRC", "Costa Rican Colón"], ["CUC", "Cuban Convertible Peso"], ["CUP", "Cuban Peso"], ["CVE", "Cape Verdean Escudo"], ["CZK", "Czech Koruna"], ["DJF", "Djiboutian Franc"], ["DKK", "Danish Krone"], ["DOP", "Dominican Peso"], ["DZD", "Algerian Dinar"], ["EEK", "Estonian Kroon"], ["EGP", "Egyptian Pound"], ["ERN", "Eritrean Nakfa"], ["ETB", "Ethiopian Birr"], ["EUR", "Euro"], ["FJD", "Fijian Dollar"], ["FKP", "Falkland Pound"], ["GBP", "British Pound"], ["GEL", "Georgian Lari"], ["GHS", "Ghanaian Cedi"], ["GIP", "Gibraltar Pound"], ["GMD", "Gambian Dalasi"], ["GNF", "Guinean Franc"], ["GTQ", "Guatemalan Quetzal"], ["GYD", "Guyanese Dollar"], ["HKD", "Hong Kong Dollar"], ["HNL", "Honduran Lempira"], ["HRK", "Croatian Kuna"], ["HTG", "Haitian Gourde"], ["HUF", "Hungarian Forint"], ["IDR", "Indonesian Rupiah"], ["ILS", "Israeli New Sheqel"], ["INR", "Indian Rupee"], ["IQD", "Iraqi Dinar"], ["IRR", "Iranian Rial"], ["ISK", "Icelandic Króna"], ["JMD", "Jamaican Dollar"], ["JOD", "Jordanian Dinar"], ["JPY", "Japanese Yen"], ["KES", "Kenyan Shilling"], ["KGS", "Kyrgyzstani Som"], ["KHR", "Cambodian Riel"], ["KMF", "Comorian Franc"], ["KPW", "North Korean Won"], ["KRW", "South Korean Won"], ["KWD", "Kuwaiti Dinar"], ["KYD", "Cayman Islands Dollar"], ["KZT", "Kazakhstani Tenge"], ["LAK", "Lao Kip"], ["LBP", "Lebanese Lira"], ["LKR", "Sri Lankan Rupee"], ["LRD", "Liberian Dollar"], ["LSL", "Lesotho Loti"], ["LTL", "Lithuanian Litas"], ["LVL", "Latvian Lats"], ["LYD", "Libyan Dinar"], ["MAD", "Moroccan Dirham"], ["MDL", "Moldovan Leu"], ["MGA", "Malagasy Ariary"], ["MKD", "Macedonian Denar"], ["MMK", "Myanmar Kyat"], ["MNT", "Mongolian Tögrög"], ["MOP", "Macanese Pataca"], ["MRO", "Mauritanian Ouguiya"], ["MUR", "Mauritian Rupee"], ["MVR", "Maldivian Rufiyaa"], ["MWK", "Malawian Kwacha"], ["MXN", "Mexican Peso"], ["MYR", "Malaysian Ringgit"], ["MZN", "Mozambican Metical"], ["NAD", "Namibian Dollar"], ["NGN", "Nigerian Naira"], ["NIO", "Nicaraguan Córdoba"], ["NOK", "Norwegian Krone"], ["NPR", "Nepalese Rupee"], ["NZD", "New Zealand Dollar"], ["OMR", "Omani Rial"], ["PAB", "Panamanian Balboa"], ["PEN", "Peruvian Nuevo Sol"], ["PGK", "Papua New Guinean Kina"], ["PHP", "Philippine Peso"], ["PKR", "Pakistani Rupee"], ["PLN", "Polish Złoty"], ["PYG", "Paraguayan Guaraní"], ["QAR", "Qatari Riyal"], ["RON", "Romanian Leu"], ["RSD", "Serbian Dinar"], ["RUB", "Russian Ruble"], ["RWF", "Rwandan Franc"], ["SAR", "Saudi Riyal"], ["SBD", "Solomon Islands Dollar"], ["SCR", "Seychellois Rupee"], ["SDG", "Sudanese Pound"], ["SEK", "Swedish Krona"], ["SGD", "Singapore Dollar"], ["SHP", "Saint Helenian Pound"], ["SKK", "Slovak Koruna"], ["SLL", "Sierra Leonean Leone"], ["SOS", "Somali Shilling"], ["SRD", "Surinamese Dollar"], ["STD", "São Tomé and Príncipe Dobra"], ["SVC", "Salvadoran Colón"], ["SYP", "Syrian Pound"], ["SZL", "Swazi Lilangeni"], ["THB", "Thai Baht"], ["TJS", "Tajikistani Somoni"], ["TMM", "Turkmenistani Manat"], ["TMT", "Turkmenistani Manat"], ["TND", "Tunisian Dinar"], ["TOP", "Tongan Paʻanga"], ["TRY", "Turkish New Lira"], ["TTD", "Trinidad and Tobago Dollar"], ["TWD", "New Taiwan Dollar"], ["TZS", "Tanzanian Shilling"], ["UAH", "Ukrainian Hryvnia"], ["UGX", "Ugandan Shilling"], ["USD", "United States Dollar"], ["UYU", "Uruguayan Peso"], ["UZS", "Uzbekistani Som"], ["VEF", "Venezuelan Bolívar"], ["VND", "Vietnamese Đồng"], ["VUV", "Vanuatu Vatu"], ["WST", "Samoan Tala"], ["XAF", "Central African Cfa Franc"], ["XCD", "East Caribbean Dollar"], ["XOF", "West African Cfa Franc"], ["XPF", "Cfp Franc"], ["YER", "Yemeni Rial"], ["ZAR", "South African Rand"], ["ZMK", "Zambian Kwacha"], ["ZWD", "Zimbabwean Dollar"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country",
	                "billingAdd": "Billing Address"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card Details",
	            "toolbar": false,
	            "hidden": true,
	            "nopaymentwizard": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_sofort": {
	        "configKey": {
	            "text": "Configuration Key",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "notifyOn": {
	            "text": "Notify JotForm on",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "EUR",
	            "dropdown": [["EUR", "Euro"], ["CHF", "Swiss Franc"], ["GBP", "British Pound"], ["PLN", "Polish Złoty"], ["SEK", "Swedish Krona"], ["CZK", "Czech Koruna"], ["HUF", "Hungarian Forint"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        }
	    },
	    "control_payoneer": {
	        "myBagButtonText": {
	            "text": "myBagButton Text",
	            "value": "My Bag"
	        },
	        "customValueDonationText": {
	            "text": "customValueDonationText",
	            "value": "+ OR enter a custom value"
	        },
	        "subscribeButtonText": {
	            "text": "subscribeButton Text",
	            "value": "SUBSCRIBE"
	        },
	        "backToListButtonText": {
	            "text": "Payment Strings",
	            "value": "Back to list"
	        },
	        "orderSummary": {
	            "text": "Order summary",
	            "value": "ORDER SUMMARY"
	        },
	        "totalCost": {
	            "text": "totalCost",
	            "value": "Total cost"
	        },
	        "removeButtonText": {
	            "text": "Remove",
	            "value": "Remove"
	        },
	        "updateButtonText": {
	            "text": "Update button text",
	            "value": "Update"
	        },
	        "addToBagButtonText": {
	            "text": "add to bag button text",
	            "value": "Add to Bag"
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "EUR",
	            "dropdown": [["USD", "United States Dollar"], ["AED", "United Arab Emirates Dirham"], ["AFN", "Afghanistan Afghani"], ["ALL", "Albania Lek"], ["AMD", "Armenia Dram"], ["ANG", "Netherlands Antilles Guilder"], ["AOA", "Angola Kwanza"], ["ARS", "Argentina Peso"], ["AUD", "Australia Dollar"], ["AWG", "Aruba Guilder"], ["AZN", "Azerbaijan Manat"], ["BAM", "Bosnia and Herzegovina Convertible Marka"], ["BBD", "Barbados Dollar"], ["BDT", "Bangladesh Taka"], ["BGN", "Bulgaria Lev"], ["BHD", "Bahrain Dinar"], ["BIF", "Burundi Franc"], ["BMD", "Bermuda Dollar"], ["BND", "Brunei Darussalam Dollar"], ["BOB", "Bolivia Bolíviano"], ["BRL", "Brazil Real"], ["BSD", "Bahamas Dollar"], ["BTN", "Bhutan Ngultrum"], ["BWP", "Botswana Pula"], ["BYN", "Belarus Ruble"], ["BZD", "Belize Dollar"], ["CAD", "Canada Dollar"], ["CDF", "Congo/Kinshasa Franc"], ["CHF", "Switzerland Franc"], ["CLP", "Chile Peso"], ["CNY", "China Yuan Renminbi"], ["COP", "Colombia Peso"], ["CRC", "Costa Rica Colon"], ["CUC", "Cuba Convertible Peso"], ["CUP", "Cuba Peso"], ["CVE", "Cape Verde Escudo"], ["CZK", "Czech Republic Koruna"], ["DJF", "Djibouti Franc"], ["DKK", "Denmark Krone"], ["DOP", "Dominican Republic Peso"], ["DZD", "Algeria Dinar"], ["EGP", "Egypt Pound"], ["ERN", "Eritrea Nakfa"], ["ETB", "Ethiopia Birr"], ["EUR", "Euro Member Countries"], ["FJD", "Fiji Dollar"], ["FKP", "Falkland Islands (Malvinas) Pound"], ["GBP", "United Kingdom Pound"], ["GEL", "Georgia Lari"], ["GGP", "Guernsey Pound"], ["GHS", "Ghana Cedi"], ["GIP", "Gibraltar Pound"], ["GMD", "Gambia Dalasi"], ["GNF", "Guinea Franc"], ["GTQ", "Guatemala Quetzal"], ["GYD", "Guyana Dollar"], ["HKD", "Hong Kong Dollar"], ["HNL", "Honduras Lempira"], ["HRK", "Croatia Kuna"], ["HTG", "Haiti Gourde"], ["HUF", "Hungary Forint"], ["IDR", "Indonesia Rupiah"], ["ILS", "Israel Shekel"], ["IMP", "Isle of Man Pound"], ["INR", "India Rupee"], ["IQD", "Iraq Dinar"], ["IRR", "Iran Rial"], ["ISK", "Iceland Krona"], ["JEP", "Jersey Pound"], ["JMD", "Jamaica Dollar"], ["JOD", "Jordan Dinar"], ["JPY", "Japan Yen"], ["KES", "Kenya Shilling"], ["KGS", "Kyrgyzstan Som"], ["KHR", "Cambodia Riel"], ["KMF", "Comorian Franc"], ["KPW", "Korea (North) Won"], ["KRW", "Korea (South) Won"], ["KWD", "Kuwait Dinar"], ["KYD", "Cayman Islands Dollar"], ["KZT", "Kazakhstan Tenge"], ["LAK", "Laos Kip"], ["LBP", "Lebanon Pound"], ["LKR", "Sri Lanka Rupee"], ["LRD", "Liberia Dollar"], ["LSL", "Lesotho Loti"], ["LYD", "Libya Dinar"], ["MAD", "Morocco Dirham"], ["MDL", "Moldova Leu"], ["MGA", "Madagascar Ariary"], ["MKD", "Macedonia Denar"], ["MMK", "Myanmar (Burma) Kyat"], ["MNT", "Mongolia Tughrik"], ["MOP", "Macau Pataca"], ["MRU", "Mauritania Ouguiya"], ["MUR", "Mauritius Rupee"], ["MVR", "Maldives (Maldive Islands) Rufiyaa"], ["MWK", "Malawi Kwacha"], ["MXN", "Mexico Peso"], ["MYR", "Malaysia Ringgit"], ["MZN", "Mozambique Metical"], ["NAD", "Namibia Dollar"], ["NGN", "Nigeria Naira"], ["NIO", "Nicaragua Cordoba"], ["NOK", "Norway Krone"], ["NPR", "Nepal Rupee"], ["NZD", "New Zealand Dollar"], ["OMR", "Oman Rial"], ["PAB", "Panama Balboa"], ["PEN", "Peru Sol"], ["PGK", "Papua New Guinea Kina"], ["PHP", "Philippines Piso"], ["PKR", "Pakistan Rupee"], ["PLN", "Poland Zloty"], ["PYG", "Paraguay Guarani"], ["QAR", "Qatar Riyal"], ["RON", "Romania Leu"], ["RSD", "Serbia Dinar"], ["RUB", "Russia Ruble"], ["RWF", "Rwanda Franc"], ["SAR", "Saudi Arabia Riyal"], ["SBD", "Solomon Islands Dollar"], ["SCR", "Seychelles Rupee"], ["SDG", "Sudan Pound"], ["SEK", "Sweden Krona"], ["SGD", "Singapore Dollar"], ["SHP", "Saint Helena Pound"], ["SLL", "Sierra Leone Leone"], ["SOS", "Somalia Shilling"], ["SPL", "Seborga Luigino"], ["SRD", "Suriname Dollar"], ["STN", "São Tomé and Príncipe Dobra"], ["SVC", "El Salvador Colon"], ["SYP", "Syria Pound"], ["SZL", "eSwatini Lilangeni"], ["THB", "Thailand Baht"], ["TJS", "Tajikistan Somoni"], ["TMT", "Turkmenistan Manat"], ["TND", "Tunisia Dinar"], ["TOP", "Tonga Pa'anga"], ["TRY", "Turkish Lira"], ["TTD", "Trinidad and Tobago Dollar"], ["TVD", "Tuvalu Dollar"], ["TWD", "Taiwan New Dollar"], ["TZS", "Tanzania Shilling"], ["UAH", "Ukraine Hryvnia"], ["UGX", "Uganda Shilling"], ["UYU", "Uruguay Peso"], ["UZS", "Uzbekistan Som"], ["VEF", "Venezuela Bolívar"], ["VND", "Viet Nam Dong"], ["VUV", "Vanuatu Vatu"], ["WST", "Samoa Tala"], ["XAF", "Communauté Financière Africaine (BEAC) CFA Franc BEAC"], ["XCD", "East Caribbean Dollar"], ["XDR", "International Monetary Fund (IMF) Special Drawing Rights"], ["XOF", "Communauté Financière Africaine (BCEAO) Franc"], ["XPF", "Comptoirs Français du Pacifique (CFP) Franc"], ["YER", "Yemen Rial"], ["ZAR", "South Africa Rand"], ["ZMW", "Zambia Kwacha"], ["ZWD", "Zimbabwe Dollar"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Left", "Left"], ["Right", "Right"], ["Top", "Top"]],
	            "checkbox": {
	                name: 'labelAlign',
	                text: 'Set as form default',
	                value: 'Auto'
	            }
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "allowCustomAmount": {
	            "text": "Allow Custom amount",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationOptions": {
	            "text": "Predefined Donation Options",
	            "value": [10, 25, 50, 100],
	            "hidden": true,
	            "toolbar": false
	        },
	        "showPredefinedDonationValues": {
	            "text": "Show Predefined Options",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        }
	    },
	    "control_paysafe": {
	        "account": {
	            "text": "Account Number",
	            "value": "",
	            "toolbar": false
	        },
	        "myBagButtonText": {
	            "text": "myBagButton Text",
	            "value": "My Bag"
	        },
	        "customValueDonationText": {
	            "text": "customValueDonationText",
	            "value": "+ OR enter a custom value"
	        },
	        "subscribeButtonText": {
	            "text": "subscribeButton Text",
	            "value": "SUBSCRIBE"
	        },
	        "backToListButtonText": {
	            "text": "Payment Strings",
	            "value": "Back to list"
	        },
	        "orderSummary": {
	            "text": "Order summary",
	            "value": "ORDER SUMMARY"
	        },
	        "totalCost": {
	            "text": "totalCost",
	            "value": "Total cost"
	        },
	        "removeButtonText": {
	            "text": "Remove",
	            "value": "Remove"
	        },
	        "updateButtonText": {
	            "text": "Update button text",
	            "value": "Update"
	        },
	        "addToBagButtonText": {
	            "text": "add to bag button text",
	            "value": "Add to Bag"
	        },
	        "sandbox": {
	            "text": "Sandbox Mode",
	            "value": "Disabled",
	            "dropdown": [["disabled", "Disabled"], ["enabled", "Enabled"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "shipToAddress": {
	            "text": "Shipping Address Field",
	            "value": "none",
	            "dropdown": [],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["ARS", "Argentine Peso"], ["AUD", "Australian Dollar"], ["AZN", "Azerbaijanian Manat"], ["BHD", "Bahraini Dinar"], ["BYR", "Belarusian Ruble"], ["BOB", "Bolivian Boliviano"], ["BAM", "Bosnia and Herzegovina Convertible Mark"], ["BRL", "Brazilian Real"], ["BGN", "Bulgarian Lev"], ["CAD", "Canadian Dollar"], ["CLP", "Chilean Peso"], ["CNY", "China Yuan Renminbi"], ["COP", "Columbian Peso"], ["CRC", "Costa Rican Colon"], ["HRK", "Croatian Kuna"], ["CZK", "Czech Koruna"], ["DKK", "Danish Krone"], ["DOP", "Dominican Peso"], ["XCD", "East Caribbean Dollar"], ["EGP", "Egyptian Pound"], ["ETB", "Ethiopian Birr"], ["EUR", "Euro"], ["FJD", "Fiji Dollar"], ["GEL", "Georgian Lari"], ["GTQ", "Guatemala Quetzal"], ["HTG", "Haiti Goude"], ["HNL", "Honduran Lempira"], ["HKD", "Hong Kong Dollar"], ["HUF", "Hungarian Forint"], ["ISK", "Iceland Krona"], ["INR", "Indian Rupee"], ["IDR", "Indonesia Rupiah"], ["IRR", "Iranian Rial"], ["JMD", "Jamaican Dollar"], ["JPY", "Japanese Yen"], ["JOD", "Jordanian Dinar"], ["KZT", "Kazakhstan Tenge"], ["KES", "Kenyan Shilling"], ["KRW", "Korean Won"], ["KWD", "Kuwaiti Dinar"], ["LVL", "Latvian Lats"], ["LBP", "Lebanese Pound"], ["LYD", "Libyan Dinars"], ["LTL", "Lithuanian Litas"], ["MWK", "Malawi Kwacha"], ["MYR", "Malaysian Ringgit"], ["MUR", "Mauritius Rupee"], ["MXN", "Mexican Peso"], ["MDL", "Moldovan Leu"], ["MAD", "Moroccan Dirham"], ["ILS", "New Israeli Shekel"], ["NZD", "New Zealand Dollar"], ["NGN", "Nigerian Naira"], ["NOK", "Norwegian Krone"], ["OMR", "Omani Rial"], ["PKR", "Pakistan Rupee"], ["PAB", "Panamanian Balboa"], ["PYG", "Paraguayan Guarani"], ["PEN", "Peruvian Sol"], ["PHP", "Philippine Peso"], ["PLN", "Polish Zloty"], ["GBP", "Pound Sterling"], ["QAR", "Qatari Rial"], ["RON", "Romanian New Leu"], ["RUB", "Russian Ruble"], ["SAR", "Saudi Arabian Riyal"], ["RSD", "Serbian Dinar"], ["SGD", "Singapore Dollar"], ["ZAR", "South African Rand"], ["LKR", "Sri Lanka Rupee"], ["SEK", "Swedish Krona"], ["CHF", "Swiss Franc"], ["SYP", "Syrian Pound"], ["TWD", "Taiwan New Dollar"], ["THB", "Thai Baht"], ["TTD", "Trinidad and Tobago Dollar"], ["TND", "Tunisian Dinar"], ["TRY", "Turkish Lira"], ["UAH", "Ukranian Hryunia"], ["AED", "UAE Dirham"], ["UYU", "Uruguay Peso"], ["USD", "US Dollar"], ["VEF", "Venezuelan Bolivar"], ["VND", "Viet Nam Dong"]]
	        },
	        "sublabels": {
	            "text": "Sub Labels",
	            "value": {
	                "cc_firstName": "First Name",
	                "cc_lastName": "Last Name",
	                "cc_number": "Credit Card Number",
	                "cc_ccv": "Security Code",
	                "cc_exp_month": "Expiration Month",
	                "cc_exp_year": "Expiration Year",
	                "addr_line1": "Street Address",
	                "addr_line2": "Street Address Line 2",
	                "city": "City",
	                "state": "State / Province",
	                "postal": "Postal / Zip Code",
	                "country": "Country"
	            },
	            "hidden": true,
	            "toolbar": false
	        },
	        "ccTitle": {
	            "text": "Credit Card Label",
	            "value": "Credit Card",
	            "toolbar": false,
	            "hidden": true
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Left", "Left"], ["Right", "Right"], ["Top", "Top"]],
	            "checkbox": {
	                name: 'labelAlign',
	                text: 'Set as form default',
	                value: 'Auto'
	            }
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "allowCustomAmount": {
	            "text": "Allow Custom amount",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationOptions": {
	            "text": "Predefined Donation Options",
	            "value": [10, 25, 50, 100],
	            "hidden": true,
	            "toolbar": false
	        },
	        "showPredefinedDonationValues": {
	            "text": "Show Predefined Options",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        }
	    },
	    "control_gocardless": {
	        "organisationId": {
	            "text": "Organisation ID",
	            "value": "",
	            "toolbar": false,
	            "required": true
	        },
	        "accessToken": {
	            "text": "Access Token",
	            "value": "",
	            "toolbar": false,
	            "required": true,
	            "hideAtwizard": true,
	            "hidden": true
	        },
	        "allowTest": {
	            "text": "Test Mode",
	            "value": "Disabled",
	            "hidden": true,
	            "hideAtwizard": true,
	            "toolbar": false
	        },
	        "myBagButtonText": {
	            "text": "myBagButton Text",
	            "value": "My Bag"
	        },
	        "customValueDonationText": {
	            "text": "customValueDonationText",
	            "value": "+ OR enter a custom value"
	        },
	        "subscribeButtonText": {
	            "text": "subscribeButton Text",
	            "value": "SUBSCRIBE"
	        },
	        "backToListButtonText": {
	            "text": "Payment Strings",
	            "value": "Back to list"
	        },
	        "orderSummary": {
	            "text": "Order summary",
	            "value": "ORDER SUMMARY"
	        },
	        "totalCost": {
	            "text": "totalCost",
	            "value": "Total cost"
	        },
	        "removeButtonText": {
	            "text": "Remove",
	            "value": "Remove"
	        },
	        "updateButtonText": {
	            "text": "Update button text",
	            "value": "Update"
	        },
	        "addToBagButtonText": {
	            "text": "add to bag button text",
	            "value": "Add to Bag"
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "GBP",
	            "dropdown": [["GBP", "Pound Sterling"], ["EUR", "Euro"], ["SEK", "Swedish Krona"], ["AUD", "Australian Dollar"], ["DKK", "Danish Krone"], ["NZD", "New Zealand Dollar"], ["CAD", "Canadian Dollar"], ["USD", "US Dollar"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Left", "Left"], ["Right", "Right"], ["Top", "Top"]],
	            "checkbox": {
	                name: 'labelAlign',
	                text: 'Set as form default',
	                value: 'Auto'
	            }
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "allowCustomAmount": {
	            "text": "Allow Custom amount",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationOptions": {
	            "text": "Predefined Donation Options",
	            "value": [10, 25, 50, 100],
	            "hidden": true,
	            "toolbar": false
	        },
	        "showPredefinedDonationValues": {
	            "text": "Show Predefined Options",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        }
	    },
	    "control_paypalSPB": {
	        "merchantId": {
	            "text": "Paypal ID",
	            "value": "",
	            "toolbar": false,
	            "size": "40",
	            "required": true
	        },
	        "clientSecret": {
	            "text": "Client Secret",
	            "value": "",
	            "toolbar": false
	        },
	        "clientID": {
	            "text": "Client ID",
	            "value": "",
	            "toolbar": false
	        },
	        "paypalButton": {
	            "text": "Use Checkout Buttons",
	            "value": "",
	            "dropdown": [["Yes", "Yes"], ["No", "No"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "paypalButtonQid": {
	            "text": "Use Checkout Buttons Qid",
	            "value": "",
	            "toolbar": false,
	            "size": 5
	        },
	        "environment": {
	            "text": "Environment",
	            "value": "production",
	            "dropdown": [["production", "production"], ["sandbox", "sandbox"]],
	            "toolbar": false,
	            "nopaymentwizard": true
	        },
	        "styleColor": {
	            "text": "Button Color",
	            "value": "gold",
	            "dropdown": [["gold", "gold"], ["blue", "blue"], ["silver", "silver"], ["black", "black"]]
	        },
	        "styleShape": {
	            "text": "Button Shape",
	            "value": "rect",
	            "dropdown": [["pill", "pill"], ["rect", "rect"]]
	        },
	        "styleSize": {
	            "text": "Button Size",
	            "value": "medium",
	            "dropdown": [["small", "small"], ["medium", "medium"], ["large", "large"], ["responsive", "responsive"]]
	        },
	        "styleLabel": {
	            "text": "Button Label",
	            "value": "checkout",
	            "dropdown": [["checkout", "checkout"], ["pay", "pay"], ["buynow", "buynow"], ["paypal", "paypal"]]
	        },
	        "styleLayout": {
	            "text": "Button Layout",
	            "value": "vertical",
	            "dropdown": [["vertical", "vertical"], ["horizontal", "horizontal"]]
	        },
	        "fundingCredit": {
	            "text": "Enable PayPal Credit",
	            "value": "default",
	            "dropdown": [["default", "default"], ["enabled", "enabled"], ["disabled", "disabled"]]
	        },
	        "fundingCard": {
	            "text": "Enable card payments",
	            "value": "default",
	            "dropdown": [["default", "default"], ["enabled", "enabled"], ["disabled", "disabled"]]
	        },
	        "fundingElv": {
	            "text": "Enable Elektronisches Lastschriftverfahren",
	            "value": "default",
	            "dropdown": [["default", "default"], ["enabled", "enabled"], ["disabled", "disabled"]]
	        },
	        "myBagButtonText": {
	            "text": "myBagButton Text",
	            "value": "My Bag"
	        },
	        "customValueDonationText": {
	            "text": "customValueDonationText",
	            "value": "+ OR enter a custom value"
	        },
	        "subscribeButtonText": {
	            "text": "subscribeButton Text",
	            "value": "SUBSCRIBE"
	        },
	        "backToListButtonText": {
	            "text": "Payment Strings",
	            "value": "Back to list"
	        },
	        "orderSummary": {
	            "text": "Order summary",
	            "value": "ORDER SUMMARY"
	        },
	        "totalCost": {
	            "text": "totalCost",
	            "value": "Total cost"
	        },
	        "removeButtonText": {
	            "text": "Remove",
	            "value": "Remove"
	        },
	        "updateButtonText": {
	            "text": "Update button text",
	            "value": "Update"
	        },
	        "addToBagButtonText": {
	            "text": "add to bag button text",
	            "value": "Add to Bag"
	        },
	        "currency": {
	            "text": "Currency",
	            "value": "USD",
	            "dropdown": [["USD", "USD"], ["AUD", "AUD"], ["BRL", "BRL"], ["CAD", "CAD"], ["CLP", "CLP"], ["HRK", "HRK"], ["CZK", "CZK"], ["DKK", "DKK"], ["EGP", "EGP"], ["EUR", "EUR"], ["GHS", "GHS"], ["HKD", "HKD"], ["HUF", "HUF"], ["INR", "INR"], ["IDR", "IDR"], ["ILS", "ILS"], ["JPY", "JPY"], ["MYR", "MYR"], ["MXN", "MXN"], ["TWD", "TWD"], ["NZD", "NZD"], ["NOK", "NOK"], ["PKR", "PKR"], ["PHP", "PHP"], ["PLN", "PLN"], ["GBP", "GBP"], ["SGD", "SGD"], ["ZAR", "ZAR"], ["SEK", "SEK"], ["CHF", "CHF"], ["THB", "THB"], ["TRY", "TRY"], ["RON", "RON"]]
	        },
	        "text": {
	            "text": "Question",
	            "value": "My Products"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Left", "Left"], ["Right", "Right"], ["Top", "Top"]],
	            "checkbox": {
	                name: 'labelAlign',
	                text: 'Set as form default',
	                value: 'Auto'
	            }
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "products": {
	            "text": "Products",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "showTotal": {
	            "text": "Show total",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "noproperty": true
	        },
	        "useDecimal": {
	            "text": "Use Decimals",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "toolbar": false
	        },
	        "decimalMark": {
	            "text": "Decimal Separator",
	            "value": "point",
	            "dropdown": [["point", "Point"], ["comma", "Comma"]],
	            "condition": [["useDecimal", "Yes"]],
	            "toolbar": false
	        },
	        "paymentType": {
	            "text": "Payment Type",
	            "value": "product",
	            "dropdown": [["product", "Product"], ["subscription", "Subscription"], ["donation", "Donation"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "multiple": {
	            "text": "Multiple",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationText": {
	            "text": "Donation Text",
	            "value": "Description",
	            "hidden": true,
	            "toolbar": false
	        },
	        "suggestedDonation": {
	            "text": "Suggested Donation",
	            "value": "",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationAmountField": {
	            "text": "Amount Field",
	            "value": "0",
	            "dropdown": [["0", "None"]],
	            "hidden": true,
	            "toolbar": false
	        },
	        "nonprofit": {
	            "text": "Non-profit",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hidden": true
	        },
	        "allowCustomAmount": {
	            "text": "Allow Custom amount",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        },
	        "donationOptions": {
	            "text": "Predefined Donation Options",
	            "value": [10, 25, 50, 100],
	            "hidden": true,
	            "toolbar": false
	        },
	        "showPredefinedDonationValues": {
	            "text": "Show Predefined Options",
	            "value": "1",
	            "hidden": true,
	            "toolbar": false
	        },
	        "payLaterEnabled": {
	            "text": "Enable pay later feature",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "payLaterLayout": {
	            "text": "Pay later layout",
	            "value": "text",
	            "dropdown": [["text", "text"], ["flex", "flex"]]
	        },
	        "payLaterLogoType": {
	            "text": "Pay later logo type",
	            "value": "inline",
	            "dropdown": [["primary", "primary"], ["alternative", "alternative"], ["inline", "inline"], ["none", "none"]]
	        },
	        "payLaterLogoPosition": {
	            "text": "Pay later logo position",
	            "value": "left",
	            "dropdown": [["left", "left"], ["right", "right"], ["top", "top"]]
	        },
	        "payLaterTextColor": {
	            "text": "Pay later text color",
	            "value": "black",
	            "dropdown": [["black", "black"], ["white", "white"], ["monochrome", "monochrome"], ["grayscale", "grayscale"]]
	        },
	        "payLaterTextSize": {
	            "text": "Pay later text size",
	            "value": "12",
	            "dropdown": [["10", "10"], ["11", "11"], ["12", "12"], ["13", "13"], ["14", "14"], ["15", "15"], ["16", "16"]]
	        },
	        "payLaterBackgroundColor": {
	            "text": "Pay later background color",
	            "value": "blue",
	            "dropdown": [["blue", "blue"], ["black", "black"], ["white", "white"], ["white-no-border", "white-no-border"], ["gray", "gray"], ["monochrome", "monochrome"], ["grayscale", "grayscale"]]
	        },
	        "payLaterRatio": {
	            "text": "Pay later banner ratio",
	            "value": "20x1",
	            "dropdown": [["8x1", "8x1"], ["20x1", "20x1"]]
	        }
	    },
	    "control_signature": {
	        "text": {
	            "text": "Text",
	            "value": "Signature"
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "width": {
	            "text": "Size",
	            "value": 400
	        },
	        "height": {
	            "text": "Size",
	            "value": 200
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        }
	    },
	    "control_calculation": {
	        "text": {
	            "text": "Text",
	            "value": "Calculation"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "size": {
	            "text": "Size",
	            "value": 20
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "subLabel": {
	            "text": "Sub Label",
	            "value": ""
	        },
	        "defaultResult": {
	            "text": "Default Result",
	            "value": "0",
	            "hint": "Default will be used when Calculation results in 0."
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        }
	    },
	    "control_custom": {
	        "text": {
	            "text": "Text",
	            "value": "Custom Field Name",
	            "toolbar": false
	        },
	        "frameSrc": {
	            "text": "Frame URL",
	            "value": "",
	            "toolbar": false
	        },
	        "frameWidth": {
	            "text": "Width",
	            "value": 600,
	            "toolbar": false
	        },
	        "frameHeight": {
	            "text": "Height",
	            "value": 350,
	            "toolbar": false
	        },
	        "settingNames": {
	            "text": "Setting Names",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "finalSrc": {
	            "text": "Frame Final URL",
	            "value": "",
	            "toolbar": false
	        },
	        "cfname": {
	            "text": "Custom Field Name",
	            "value": "",
	            "toolbar": false
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        }
	    },
	    "control_widget": {
	        "cfname": {
	            "text": "Widget Name",
	            "value": "",
	            "toolbar": false
	        },
	        "maxWidth": {
	            "text": "Max Width",
	            "value": 587,
	            "toolbar": false,
	            "hidden": true
	        },
	        "widgetType": {
	            "text": "Widget Type",
	            "value": "Unset",
	            "toolbar": false,
	            "hidden": true
	        },
	        "builderDescription": {
	            "text": "Builder Description",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "static": {
	            "text": "Static Widget",
	            "value": "No",
	            "toolbar": false,
	            "hidden": true
	        },
	        "boxAlign": {
	            "text": "Align",
	            "value": "Left",
	            "dropdown": [["Left", "Left"], ["Center", "Center"], ["Right", "Right"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-button_align"
	        },
	        "text": {
	            "text": "Text",
	            "value": "Type a question",
	            "forceDisplay": true,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-font_new",
	            "toolbar": false
	        },
	        "label": {
	            "text": "Label",
	            "value": "Yes",
	            "dropdown": [["No", "Disable"], ["Yes", "Enable"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_selected"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Auto", "Auto"], ["Left", "Left"], ["Right", "Right"], ["Top", "Top"]]
	        },
	        "settingNames": {
	            "text": "General Settings",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "settingNamesCSS": {
	            "text": "Custom CSS",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "widgetTabs": {
	            "value": [["general", "settingNames"], ["customcss", "settingNamesCSS"]],
	            "toolbar": false,
	            "hidden": true
	        },
	        "paramChunks": {
	            "text": "Parameter value chunks",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "customCSS": {
	            "text": "Custom CSS",
	            "value": "",
	            "toolbar": false,
	            "hidden": true,
	            "widgettab": "customcss",
	            "tip": "Customize your widget layout. (Optional)",
	            "type": "textarea"
	        },
	        "frameWidth": {
	            "text": "Width",
	            "value": 600,
	            "toolbar": true,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_width",
	            "type": "spinner",
	            "size": 10
	        },
	        "frameHeight": {
	            "text": "Height",
	            "value": 350,
	            "toolbar": true,
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-dropdown_size",
	            "type": "spinner",
	            "size": 10
	        },
	        "frameSrc": {
	            "text": "Frame URL",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "finalSrc": {
	            "text": "Frame Final URL",
	            "value": "",
	            "toolbar": false,
	            "hidden": true
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        }
	    },
	    "control_appointment": {
	        "text": {
	            "text": "Question",
	            "value": "Appointment"
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Top",
	            "dropdown": [["Left", "Left"], ["Right", "Right"], ["Top", "Top"]],
	            "checkbox": {
	                name: 'labelAlign',
	                text: 'Set as form default',
	                value: 'Auto'
	            }
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        },
	        "slotDuration": {
	            "text": "Slot Duration",
	            "value": 60,
	            "dropdown": [[15, "15 min"], [30, "30 min"], [45, "45 min"], [60, "60 min"], ["custom", "Custom min"]],
	            "hint": "Select how long each slot will be."
	        },
	        "startDate": {
	            "text": "Start Date",
	            "value": ""
	        },
	        "endDate": {
	            "text": "End Date",
	            "value": ""
	        },
	        "intervals": {
	            "text": "Intervals",
	            "value": [{
	                "from": "09:00",
	                "to": "17:00",
	                "days": ["Mon", "Tue", "Wed", "Thu", "Fri"]
	            }],
	            "hint": "The hours will be applied to the selected days and repeated."
	        },
	        "useBlockout": {
	            "text": "Blockout Custom Dates",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hint": "Disable certain date(s) in the calendar."
	        },
	        "blockoutDates": {
	            "text": "Blockout dates",
	            "value": [{
	                "startDate": "",
	                "endDate": ""
	            }]
	        },
	        "useLunchBreak": {
	            "text": "Lunch Time",
	            "value": "Yes",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]],
	            "hint": "Enable lunchtime in the calendar."
	        },
	        "lunchBreak": {
	            "text": "Lunchtime hours",
	            "value": [{
	                "from": "12:00",
	                "to": "14:00"
	            }]
	        },
	        "timezone": {
	            "text": "Timezone",
	            "value": "0"
	        },
	        "timeFormat": {
	            "text": "Time Format",
	            "value": "",
	            "dropdown": [["24 Hour", "24 Hour"], ["AM/PM", "AM/PM"]],
	            "icon": "images/blank.gif",
	            "iconClassName": "toolbar-time_format_24"
	        },
	        "months": {
	            "value": "January|February|March|April|May|June|July|August|September|October|November|December",
	            "hidden": true
	        },
	        "days": {
	            "value": "Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday",
	            "hidden": true
	        },
	        "startWeekOn": {
	            "text": "Start Week On",
	            "value": "",
	            "dropdown": [["Monday", "Monday"], ["Sunday", "Sunday"]],
	            "toolbar": false
	        },
	        "rollingDays": {
	            "text": "Rolling Days",
	            "value": ""
	        }
	    },
	    "control_inline": {
	        "fields": {
	            "text": "",
	            "value": []
	        },
	        "required": {
	            "text": "Required",
	            "value": "No",
	            "dropdown": [["No", "No"], ["Yes", "Yes"]]
	        },
	        "text": {
	            "text": "HTML",
	            "value": ""
	        },
	        "labelAlign": {
	            "text": "Label Align",
	            "value": "Auto",
	            "dropdown": [["Left", "Left"], ["Right", "Right"], ["Top", "Top"]],
	            "checkbox": {
	                name: 'labelAlign',
	                text: 'Set as form default',
	                value: 'Auto'
	            }
	        },
	        "description": {
	            "text": "Hover Text",
	            "value": "",
	            "textarea": true
	        }
	    },
	    "form": {
	        "continueLaterButtonText": {
	            "value": "Save"
	        }
	    }
	};
	/* eslint-enable */
	/* eslint-disable */
	exports.default = QuestionProps;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var getAriaLabelledBy = function getAriaLabelledBy(_ref) {
	  var ariaLabelledBy = _ref.ariaLabelledBy;
	  return ariaLabelledBy ? { 'aria-labelledby': ariaLabelledBy } : {};
	};

	var BaseInput = function (_Component) {
	  _inherits(BaseInput, _Component);

	  function BaseInput() {
	    _classCallCheck(this, BaseInput);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  BaseInput.prototype.render = function render() {
	    var cx = '';
	    var tabIndex = null;
	    var size = this.props.size ? this.props.size.value : null;
	    var maxlength = !this.props.masked && this.props.maxsize && this.props.maxsize.value && this.props.maxsize.value > 0 ? this.props.maxsize.value : null;

	    var defaultValue = this.props.defaultValue && this.props.defaultValue.value && this.props.defaultValue.value.length > 0 ? (0, _Utils.htmlDecode)((0, _Utils.sanitize)(this.props.defaultValue.value)) : '';

	    var placeholder = this.props.hint && this.props.hint.value ? (0, _Utils.htmlDecode)((0, _Utils.sanitize)(this.props.hint.value)) : null;
	    var opts = {};

	    if (this.props.readonly && this.props.readonly.value === 'Yes') {
	      opts.readOnly = 'readOnly';
	      tabIndex = -1;
	      cx += 'form-readonly ';
	    }

	    if (this.props.additionalClass) {
	      cx += this.props.additionalClass;
	    }

	    if (this.props.required && this.props.required.value === 'Yes') {
	      opts.required = 'required';
	    }

	    if (this.props.step) {
	      opts.step = this.props.step;
	    }
	    return _react2.default.createElement('input', _extends({
	      type: this.props.type,
	      id: this.props.qid,
	      name: this.props.qname,
	      'data-type': this.props.componentDataType,
	      className: cx,
	      'data-fuzzysearch': this.props.fuzzySearch,
	      'data-maxmatches': this.props.maxMatches,
	      'data-spinnermin': this.props.minValue,
	      'data-spinnermax': this.props.maxValue,
	      autoComplete: this.props.autocomplete ? this.props.autocomplete.value : null,
	      style: this.props.style,
	      size: size,
	      'data-masked': this.props.masked ? this.props.masked : null,
	      value: defaultValue,
	      maxLength: maxlength,
	      tabIndex: this.props.inlineEditClass ? -1 : tabIndex,
	      placeholder: placeholder,
	      'data-numbermin': this.props.dataNumberMin,
	      'data-numbermax': this.props.dataNumberMax,
	      'data-component': this.props.dataComponent
	    }, getAriaLabelledBy(this.props), opts));
	  };

	  return BaseInput;
	}(_react.Component);

	exports.default = BaseInput;


	BaseInput.propTypes = {
	  qid: _propTypes2.default.string,
	  qname: _propTypes2.default.string,
	  additionalClass: _propTypes2.default.string,
	  type: _propTypes2.default.string,
	  componentDataType: _propTypes2.default.string,
	  size: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  defaultValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  readonly: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  maxsize: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  fuzzySearch: _propTypes2.default.string,
	  maxMatches: _propTypes2.default.string,
	  autocomplete: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  masked: _propTypes2.default.string,
	  hint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  style: _propTypes2.default.shape({}),
	  inlineEditClass: _propTypes2.default.func,
	  minValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
	  dataNumberMin: _propTypes2.default.string,
	  dataNumberMax: _propTypes2.default.string,
	  dataComponent: _propTypes2.default.string,
	  maxValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
	  required: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  ariaLabelledBy: _propTypes2.default.string, // eslint-disable-line
	  step: _propTypes2.default.string
	};

	BaseInput.defaultProps = {
	  ariaLabelledBy: ''
	};

/***/ },
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	exports.__esModule = true;
	exports.checkAppointmentAvailability = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /* global Intl, JotForm, window, $$, $, Ajax */
	/* eslint-disable no-use-before-define, no-param-reassign, new-cap */

	var _propTypes = __webpack_require__(4);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var checkAppointmentAvailability = exports.checkAppointmentAvailability = function checkAppointmentAvailability(day, slot, data) {
	  if (!(day && slot && data && data[day])) return false;
	  return data[day][slot];
	};

	var init = function init(props) {
	  var PREFIX = window.location.href.indexOf('jotform.pro') > -1 || window.location.pathname.indexOf('build') > -1 || window.location.pathname.indexOf('form-templates') > -1 || window.location.pathname.indexOf('pdf-templates') > -1 || window.location.pathname.indexOf('table-templates') > -1 ? '/server.php' : JotForm.server;

	  // boilerplate
	  var effectsOut = null;
	  var changed = {};
	  var constructed = false;
	  var _window = window,
	      document = _window.document;

	  var wrapper = document.querySelector('#' + props.qid.value);
	  var element = wrapper.querySelector('.appointmentField');
	  var input = wrapper.querySelector('#input_' + props.id.value + '_date');
	  var tzInput = wrapper.querySelector('#input_' + props.id.value + '_timezone');

	  function debounce(func, wait, immediate) {
	    var timeout = void 0;
	    return function wrappedFN() {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      var context = this;
	      var later = function later() {
	        timeout = null;
	        if (!immediate) func.apply.apply(func, [context].concat(args));
	      };
	      var callNow = immediate && !timeout;
	      clearTimeout(timeout);
	      timeout = setTimeout(later, wait);
	      if (callNow) func.apply.apply(func, [context].concat(args));
	    };
	  }

	  var classNames = function classNames(obj) {
	    return Object.keys(obj).reduce(function (acc, key) {
	      if (!obj[key]) return acc;
	      return [].concat(acc, [key]);
	    }, []).join(' ');
	  };

	  var assignObject = function assignObject() {
	    for (var _len2 = arguments.length, objects = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      objects[_key2] = arguments[_key2];
	    }

	    return objects.reduce(function (acc, obj) {
	      Object.keys(obj).forEach(function (key) {
	        acc[key] = obj[key];
	      });

	      return acc;
	    }, {});
	  };

	  var objectEntries = function objectEntries(obj) {
	    return Object.keys(obj).reduce(function (acc, key) {
	      var value = obj[key];
	      var pair = [key, value];
	      return [].concat(acc, [pair]);
	    }, []);
	  };

	  var fillArray = function fillArray(arr, value) {
	    var newArr = [];
	    for (var i = 0; i < arr.length; i++) {
	      newArr.push(value);
	    }
	    return newArr;
	  };

	  var getJSON = function getJSON(url, cb) {
	    return new Ajax.Request(url, {
	      evalJSON: 'force',
	      method: 'GET',
	      onComplete: function onComplete(response) {
	        return cb(response.responseJSON);
	      }
	    });
	  };

	  var beforeRender = function beforeRender() {
	    if (effectsOut) {
	      effectsOut();
	      effectsOut = null;
	    }
	  };

	  var afterRender = function afterRender() {
	    effectsOut = effects();
	  };

	  var setState = function setState(newState) {
	    var changedKeys = Object.keys(newState).filter(function (key) {
	      return state[key] !== newState[key];
	    });

	    if (!changedKeys.length) {
	      return;
	    }

	    changed = changedKeys.reduce(function (acc, key) {
	      var _assignObject;

	      return assignObject({}, acc, (_assignObject = {}, _assignObject[key] = state[key], _assignObject));
	    }, changed);

	    state = assignObject({}, state, newState);
	    if (constructed) {
	      render();
	    }
	  };

	  var isStartWeekOnMonday = function isStartWeekOnMonday() {
	    var _props = props,
	        startDay = _props.startWeekOn.value;

	    return !startDay || startDay === 'Monday';
	  };

	  var monthNames = function monthNames() {
	    return (JotForm.calendarMonthsTranslated || JotForm.calendarMonths || _Utils.specialOptions.Months.value).map(function (monthName) {
	      return String.prototype.locale ? monthName.locale() : monthName;
	    });
	  };
	  var daysOfWeek = function daysOfWeek() {
	    return (JotForm.calendarDaysTranslated || JotForm.calendarDays || _Utils.specialOptions.Days.value).map(function (dayName) {
	      return String.prototype.locale ? dayName.locale() : dayName;
	    });
	  };
	  // we need remove unnecessary "Sunday", if there is time field on the form
	  var dayNames = function dayNames() {
	    var days = daysOfWeek().length === 8 ? daysOfWeek().slice(1) : daysOfWeek();
	    return isStartWeekOnMonday() ? days : [days[days.length - 1]].concat(days.slice(0, 6));
	  };

	  var oneHour = 1000 * 60 * 60;
	  // const oneDay = oneHour * 24;

	  var intPrefix = function intPrefix(d) {
	    if (d < 10) {
	      return '0' + d;
	    }

	    return '' + d;
	  };

	  var toFormattedDateStr = function toFormattedDateStr(date) {
	    var _props2 = props,
	        _props2$dateFormat$va = _props2.dateFormat.value,
	        format = _props2$dateFormat$va === undefined ? 'yyyy-mm-dd' : _props2$dateFormat$va;

	    if (!date) return;
	    if (typeof date === 'string') {
	      var _date$split = date.split('-'),
	          _year = _date$split[0],
	          _month = _date$split[1],
	          _day = _date$split[2];

	      return format.replace(/yyyy/, _year).replace(/mm/, _month).replace(/dd/, _day);
	    }

	    var year = date.getFullYear();
	    var month = intPrefix(date.getMonth() + 1);
	    var day = intPrefix(date.getUTCDate());
	    return format.replace(/yyyy/, year).replace(/mm/, month).replace(/dd/, day);
	  };

	  var toDateStr = function toDateStr(date) {
	    if (!date) return;
	    var year = date.getFullYear();
	    var month = intPrefix(date.getMonth() + 1);
	    var day = intPrefix(date.getDate());

	    return year + '-' + month + '-' + day;
	  };

	  var toDateTimeStr = function toDateTimeStr(date) {
	    if (!date) return;
	    var ymd = toDateStr(date);
	    var hour = intPrefix(date.getHours());
	    var minute = intPrefix(date.getMinutes());
	    return ymd + ' ' + hour + ':' + minute;
	  };

	  var getTimezoneOffset = function getTimezoneOffset(timezone) {
	    if (!timezone) {
	      return 0;
	    }
	    var cityArgs = timezone.split(' ');
	    var splitted = cityArgs[cityArgs.length - 1].replace(/\(GMT|\)/g, '').split(':');

	    if (!splitted) {
	      return 0;
	    }

	    return parseInt(splitted[0] || 0, 10) + (parseInt(splitted[1] || 0, 10) / 60 || 0);
	  };

	  var getGMTSuffix = function getGMTSuffix(offset) {
	    if (offset === 0) {
	      return '';
	    }

	    var offsetMinutes = Math.abs(offset) % 60;
	    var offsetHours = Math.abs(offset - offsetMinutes) / 60;

	    var str = intPrefix(offsetHours) + ':' + intPrefix(offsetMinutes);

	    if (offset < 0) {
	      return '+' + str;
	    }

	    return '-' + str;
	  };

	  // const toJSDate = (dateStr, timezone) => {
	  //   if (!dateStr) return;

	  //   const gmtSuffix = getGMTSuffix(timezone || state.timezone);

	  //   return new Date(`${dateStr} GMT${gmtSuffix}`);
	  // };

	  var getYearMonth = function getYearMonth(date) {
	    if (!date) return;

	    var _date$split2 = date.split('-'),
	        y = _date$split2[0],
	        m = _date$split2[1];

	    return y + '-' + m;
	  };

	  var getMondayBasedDay = function getMondayBasedDay(date) {
	    var day = date.getUTCDay();
	    if (day === 0) {
	      return 6; // sunday index
	    }
	    return day - 1;
	  };

	  var getDay = function getDay(date) {
	    return isStartWeekOnMonday() ? getMondayBasedDay(date) : date.getUTCDay();
	  };

	  var getUserTimezone = function getUserTimezone() {
	    try {
	      var tzStr = Intl.DateTimeFormat().resolvedOptions().timeZone;
	      if (tzStr) {
	        var tz = tzStr + ' (GMT' + getGMTSuffix(new Date().getTimezoneOffset()) + ')';
	        return tz;
	      }
	    } catch (e) {
	      console.error(e.message);
	    }

	    return props.timezone.value;
	  };

	  var getStateFromProps = function getStateFromProps() {
	    var newProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	    var startDate = new Date(newProps.startDate ? newProps.startDate.value : '');
	    var today = new Date();
	    var date = toDateStr(new Date(Math.max(startDate, today) || today));

	    return {
	      date: date,
	      timezones: state ? state.timezones : { loading: true }
	    };
	  };

	  var getFirstAvailableDates = function getFirstAvailableDates(cb) {
	    var _props3 = props,
	        _props3$formID = _props3.formID,
	        formID = _props3$formID === undefined ? global.__formInfo.id : _props3$formID;
	    var _state = state,
	        _state$timezone = _state.timezone,
	        timezone = _state$timezone === undefined ? getUserTimezone() : _state$timezone;

	    // eslint-disable-next-line max-len

	    var url = PREFIX + '?action=getAppointments&formID=' + formID + '&timezone=' + encodeURIComponent(timezone) + '&ncTz=' + new Date().getTime() + '&firstAvailableDates';

	    return getJSON(url, function (_ref) {
	      var content = _ref.content;
	      return cb(content);
	    });
	  };

	  var state = getStateFromProps(props);

	  var loadTimezones = function loadTimezones(cb) {
	    setState({
	      timezones: { loading: true }
	    });

	    getJSON((props.cdnconfig.CDN || '/') + 'assets/form/timezones.json?ncTz=' + new Date().getTime(), function (data) {
	      var timezones = objectEntries(data).reduce(function (acc, _ref2) {
	        var group = _ref2[0],
	            cities = _ref2[1];

	        acc.push({
	          group: group,
	          cities: cities
	        });
	        return acc;
	      }, []);

	      cb(timezones);
	    });
	  };

	  var loadMonthData = function loadMonthData(startDate, endDate, cb) {
	    var _props4 = props,
	        _props4$formID = _props4.formID,
	        formID = _props4$formID === undefined ? global.__formInfo.id : _props4$formID,
	        id = _props4.id.value;
	    var _state2 = state,
	        timezone = _state2.timezone;

	    // eslint-disable-next-line max-len

	    var url = PREFIX + '?action=getAppointments&formID=' + formID + '&qid=' + id + '&timezone=' + encodeURIComponent(timezone) + '&startDate=' + toDateStr(startDate) + '&endDate=' + toDateStr(endDate) + '&ncTz=' + new Date().getTime();

	    return getJSON(url, function (_ref3) {
	      var data = _ref3.content;
	      return cb(data);
	    });
	  };

	  var generateMonthData = function generateMonthData(startDate, endDate, data) {
	    var d1 = startDate.getDate();
	    var d2 = endDate.getDate();
	    var dPrefix = startDate.getFullYear() + '-' + intPrefix(startDate.getMonth() + 1) + '-';

	    var daysLength = d2 - d1 + 1 || 0;
	    var days = fillArray(new Array(daysLength), '');

	    var slots = days.reduce(function (acc, x, day) {
	      var _assignObject2;

	      var dayStr = '' + dPrefix + intPrefix(day + 1);
	      return assignObject(acc, (_assignObject2 = {}, _assignObject2[dayStr] = data[dayStr] || false, _assignObject2));
	    }, {});

	    var availableDays = Object.keys(data).filter(function (d) {
	      return !Array.isArray(slots[d]) && !!slots[d];
	    });

	    return {
	      availableDays: availableDays,
	      slots: slots
	    };
	  };

	  var lastReq = void 0;

	  var updateMonthData = function updateMonthData(startDate, endDate, data) {
	    var _generateMonthData = generateMonthData(startDate, endDate, data),
	        availableDays = _generateMonthData.availableDays,
	        slots = _generateMonthData.slots;

	    if (JSON.stringify(slots) === JSON.stringify(state.slots)) {
	      return;
	    }

	    setState({
	      availableDays: availableDays,
	      slots: slots
	    });
	  };

	  var getDateRange = function getDateRange(dateStr) {
	    var _dateStr$split = dateStr.split('-'),
	        y = _dateStr$split[0],
	        m = _dateStr$split[1];

	    var startDate = new Date(y, m - 1, 1);
	    var endDate = new Date(y, m, 0);
	    return [startDate, endDate];
	  };

	  var load = function load() {
	    var _state3 = state,
	        dateStr = _state3.date;

	    var _getDateRange = getDateRange(dateStr),
	        startDate = _getDateRange[0],
	        endDate = _getDateRange[1];

	    setState(assignObject({ loading: true }, generateMonthData(startDate, endDate, {})));

	    var req = loadMonthData(startDate, endDate, function (data) {
	      if (lastReq !== req) {
	        return;
	      }

	      updateMonthData(startDate, endDate, data);
	      var _state4 = state,
	          availableDays = _state4.availableDays;

	      var newDate = availableDays.indexOf(dateStr) === -1 ? availableDays[0] : dateStr;

	      setState({
	        loading: false,
	        date: newDate || dateStr
	      });
	    });

	    lastReq = req;
	  };

	  var dateInTimeZone = function dateInTimeZone(date) {
	    var timezone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : state.timezone;

	    if (!date) return;
	    var diffTime = (getTimezoneOffset(timezone) + 5) * oneHour;
	    return new Date(date.getTime() - diffTime);
	  };

	  var dz = function dz(date, tz1, tz2) {
	    if (!date) return;
	    var diffTime = (tz1 - tz2) * oneHour;
	    return new Date(date.getTime() - diffTime);
	  };

	  var revertDate = function revertDate(d, t1, t2) {
	    if (!d) return '';

	    var pDate = new Date(d.replace(/-/, '/'));
	    var utz = getTimezoneOffset(getUserTimezone());
	    var tz1 = getTimezoneOffset(t1) - utz;
	    var tz2 = getTimezoneOffset(t2) - utz;

	    var val = dz(pDate, tz1, tz2);

	    return toDateTimeStr(val);
	  };

	  var amPmConverter = function amPmConverter(_time) {
	    var _props5 = props,
	        _props5$timeFormat = _props5.timeFormat;
	    _props5$timeFormat = _props5$timeFormat === undefined ? {} : _props5$timeFormat;
	    var _props5$timeFormat$va = _props5$timeFormat.value,
	        timeFormat = _props5$timeFormat$va === undefined ? '24 Hour' : _props5$timeFormat$va;

	    if (!_time || !(typeof _time === 'string') || _time.indexOf('M') > -1 || !timeFormat || timeFormat === '24 Hour') {
	      return _time;
	    }
	    var time = _time.substring(0, 2);
	    var hour = time % 12 || 12;
	    var ampm = time < 12 ? 'AM' : 'PM';
	    return '' + hour + _time.substring(2, 5) + ' ' + ampm;
	  };

	  var validate = function validate(dateStr, cb) {
	    var _state5 = state,
	        defaultValue = _state5.defaultValue;


	    if (JotForm.isEditMode() && defaultValue === dateStr) {
	      return cb(true);
	    }

	    var parts = dateStr.split(' ');
	    var slot = parts.slice(1).join(' ');

	    var _parts$0$split = parts[0].split('-'),
	        y = _parts$0$split[0],
	        m = _parts$0$split[1],
	        d = _parts$0$split[2];

	    var startDate = new Date(y, m - 1, 1);
	    var endDate = new Date(y, m, 0);

	    loadMonthData(startDate, endDate, function (data) {
	      var day = y + '-' + m + '-' + d;
	      var isValid = JotForm.checkAppointmentAvailability(day, amPmConverter(slot), data);
	      cb(isValid);
	      if (!isValid) {
	        var _assignObject3;

	        // add unavailable slot if it is not in response for deselection
	        data[day] = assignObject({}, data[day], (_assignObject3 = {}, _assignObject3[slot] = false, _assignObject3));
	      }

	      // still in same month
	      if (state.date.indexOf(y + '-' + m) === 0) {
	        updateMonthData(startDate, endDate, data);
	      }
	    });
	  };

	  // let validationInterval;

	  var validation = function validation(_value) {
	    var shouldValidate = _value || $(input).hasClassName('validate');

	    if (!shouldValidate) {
	      $(input).addClassName('valid');
	      JotForm.corrected(input);
	      return;
	    }

	    if (!_value) {
	      $(input).removeClassName('valid');
	      return JotForm.errored(input, JotForm.texts.required);
	    }

	    validate(_value, function (isValid) {
	      if (isValid) {
	        $(input).addClassName('valid');
	        return JotForm.corrected(input);
	      }

	      // clearInterval(validationInterval);

	      var parts = _value.split(' ');
	      var dateStr = parts[0];

	      var date = new Date(dateStr);
	      var day = getDay(date);
	      var datetime = dayNames()[day] + ', ' + monthNames()[date.getMonth()] + ' ' + intPrefix(date.getUTCDate()) + ', ' + date.getFullYear();

	      var time = parts.slice(1).join(' ');
	      var errorText = JotForm.texts.slotUnavailable.replace('{time}', time).replace('{date}', datetime);

	      $(input).removeClassName('valid');
	      JotForm.errored(input, errorText);
	    });
	  };

	  var setValue = function setValue(value) {
	    input.value = value ? toDateTimeStr(dateInTimeZone(new Date(value.replace(/-/g, '/')))) : '';

	    setState({
	      value: value
	    });

	    // trigger input event for supporting progress bar widget
	    input.triggerEvent('input');

	    // clearInterval(validationInterval);

	    validation(value);
	    // validationInterval = setInterval(() => { validation(state.value); }, 1000 * 5);
	  };

	  var handleClick = function handleClick(e) {
	    var target = e.target;

	    var $target = $(target);

	    if (!$target || !$target.hasClassName) {
	      return;
	    }

	    if ($target.hasClassName('disabled') && !$target.hasClassName('active')) {
	      return;
	    }

	    e.preventDefault();
	    var value = target.dataset.value;

	    setValue($target.hasClassName('active') ? undefined : value);
	  };

	  var setTimezone = function setTimezone(timezone) {
	    tzInput.value = timezone;
	    setState({ timezone: timezone });
	    if (input.value) {
	      var date = toDateTimeStr(dz(new Date(input.value.replace(/-/g, '/')), -5, getTimezoneOffset(state.timezone)));
	      setDate(date.split(' ')[0]);
	      setState({ value: date });
	    }
	  };

	  var handleTimezoneChange = function handleTimezoneChange(e) {
	    var target = e.target;
	    var timezone = target.value;

	    setTimezone(timezone);
	  };

	  var setDate = function setDate(date) {
	    return setState({ date: date });
	  };

	  var handleDateChange = function handleDateChange(e) {
	    var target = e.target;
	    var date = target.dataset.value;


	    if (!date) return;

	    setDate(date);
	  };

	  var handleMonthYearChange = function handleMonthYearChange(e) {
	    var _e$target = e.target,
	        dataset = _e$target.dataset,
	        inputVal = _e$target.value;
	    var name = dataset.name;

	    if (!name) {
	      return;
	    }

	    var _state6 = state,
	        date = _state6.date;

	    var oldDate = new Date(date);
	    var oldMonth = oldDate.getMonth();
	    var oldYear = oldDate.getFullYear();
	    var oldDay = oldDate.getUTCDate();

	    var value = inputVal || e.target.getAttribute('value');

	    if (name === 'month') {
	      var newDate = new Date(oldYear, value, oldDay);
	      var i = 1;
	      while ('' + newDate.getMonth() !== '' + value && i < 10) {
	        newDate = new Date(oldYear, value, oldDay - i);
	        i++;
	      }

	      return setDate(toDateStr(newDate));
	    }

	    return setDate(toDateStr(new Date(value, oldMonth, oldDay)));
	  };

	  var toggleMobileState = function toggleMobileState() {
	    var $wrapper = $(wrapper);
	    if ($wrapper.hasClassName('isOpenMobile')) {
	      $wrapper.removeClassName('isOpenMobile');
	    } else {
	      $wrapper.addClassName('isOpenMobile');
	    }
	  };

	  var keepSlotsScrollPosition = function keepSlotsScrollPosition() {
	    var visibleSlot = element.querySelector('.appointmentSlots.slots .slot.active, .appointmentSlots.slots .slot:not(.disabled)');

	    element.querySelector('.appointmentSlots.slots').scrollTop = visibleSlot ? visibleSlot.offsetTop : 0;
	  };

	  var handleUIUpdate = function handleUIUpdate() {
	    try {
	      var breakpoints = {
	        450: 'isLarge',
	        225: 'isNormal',
	        175: 'shouldBreakIntoNewLine'
	      };

	      var offsetWidth = function () {
	        try {
	          var appointmentCalendarRow = element.querySelector('.appointmentFieldRow.forCalendar');
	          var appointmendCalendar = element.querySelector('.appointmentCalendar');
	          return appointmentCalendarRow.getBoundingClientRect().width - appointmendCalendar.getBoundingClientRect().width;
	        } catch (e) {
	          return null;
	        }
	      }();

	      if (offsetWidth === null || parseInt(wrapper.readAttribute('data-breakpoint-offset'), 10) === offsetWidth) {
	        return;
	      }

	      var breakpoint = Object.keys(breakpoints).reduce(function (prev, curr) {
	        return Math.abs(curr - offsetWidth) < Math.abs(prev - offsetWidth) ? curr : prev;
	      });
	      var breakpointName = breakpoints[breakpoint];

	      wrapper.setAttribute('data-breakpoint', breakpointName);
	      wrapper.setAttribute('data-breakpoint-offset', offsetWidth);
	    } catch (e) {
	      // noop.
	    }
	  };

	  var uiUpdateInterval = void 0;

	  var effects = function effects() {
	    clearInterval(uiUpdateInterval);

	    var shouldLoad = changed.timezone && changed.timezone !== state.timezone || // time zone changed
	    changed.date && getYearMonth(changed.date) !== getYearMonth(state.date); // y-m changed

	    changed = {};

	    if (shouldLoad) {
	      load();
	    }

	    var cancelBtn = element.querySelector('.cancel');

	    if (cancelBtn) {
	      cancelBtn.addEventListener('click', function () {
	        setValue(undefined);
	      });
	    }

	    var forSelectedDate = element.querySelector('.forSelectedDate span');

	    if (forSelectedDate) {
	      forSelectedDate.addEventListener('click', function () {
	        setDate(state.value.split(' ')[0]);
	      });
	    }

	    element.querySelector('.calendar .days').addEventListener('click', handleDateChange);
	    element.querySelector('.monthYearPicker').addEventListener('change', handleMonthYearChange);
	    element.querySelector('.dayPicker').addEventListener('click', handleDateChange);
	    element.querySelector('.timezonePicker').addEventListener('change', handleTimezoneChange);
	    element.querySelector('.selectedDate').addEventListener('click', toggleMobileState);

	    Array.prototype.slice.call(element.querySelectorAll('.monthYearPicker .pickerArrow')).forEach(function (el) {
	      return el.addEventListener('click', handleMonthYearChange);
	    });
	    Array.prototype.slice.call(element.querySelectorAll('.slot')).forEach(function (el) {
	      return el.addEventListener('click', handleClick);
	    });

	    keepSlotsScrollPosition();
	    uiUpdateInterval = setInterval(handleUIUpdate, 250);

	    JotForm.runAllCalculations();
	  };

	  var renderMonthYearPicker = function renderMonthYearPicker() {
	    var _state7 = state,
	        date = _state7.date;

	    var _split = (date || '-').split('-'),
	        year = _split[0],
	        month = _split[1];

	    var yearOpts = fillArray(new Array(20), '').map(function (v, i) {
	      return '' + (2020 + i);
	    });

	    return '\n      <div class=\'monthYearPicker\'>\n        <div class=\'pickerItem\'>\n          <select class=\'pickerMonth\' data-name=\'month\'>\n            ' + monthNames().map(function (monthName, i) {
	      return '<option ' + (parseInt(month, 10) === i + 1 ? 'selected' : '') + ' value=\'' + i + '\'>' + monthName + '</option>';
	    }).join('') + '\n          </select>\n          <button type=\'button\' class=\'pickerArrow pickerMonthArrow prev\' value=\'' + (parseInt(month, 10) - 2) + '\' data-name=\'month\'></button>\n          <button type=\'button\' class=\'pickerArrow pickerMonthArrow next\' value=\'' + parseInt(month, 10) + '\' data-name=\'month\'></button>\n        </div>\n        <div class=\'pickerItem\'>\n          <select class=\'pickerYear\' data-name=\'year\'>\n            ' + yearOpts.map(function (yearName) {
	      return '<option ' + (year === yearName ? 'selected' : '') + '>' + yearName + '</option>';
	    }).join('') + '\n          </select>\n          <button type=\'button\' class=\'pickerArrow pickerYearArrow prev\' value=\'' + (parseInt(year, 10) - 1) + '\' data-name=\'year\' />\n          <button type=\'button\' class=\'pickerArrow pickerYearArrow next\' value=\'' + (parseInt(year, 10) + 1) + '\' data-name=\'year\' />\n        </div>\n      </div>\n    ';
	  };

	  var getNav = function getNav() {
	    var _state8 = state,
	        availableDays = _state8.availableDays,
	        dateStr = _state8.date;


	    var next = void 0;
	    var prev = void 0;

	    var _dateStr$split2 = dateStr.split('-'),
	        year = _dateStr$split2[0],
	        month = _dateStr$split2[1];

	    if (availableDays) {
	      var dayIndex = availableDays.indexOf(dateStr);
	      if (dayIndex > 0) {
	        prev = availableDays[dayIndex - 1];
	      } else {
	        var prevDate = new Date(year, month - 1, 0);
	        prev = toDateStr(prevDate);
	      }
	      if (dayIndex + 1 < availableDays.length) {
	        next = availableDays[dayIndex + 1];
	      } else {
	        var nextDate = new Date(year, month, 1);
	        next = toDateStr(nextDate);
	      }
	    }

	    return { prev: prev, next: next };
	  };

	  var renderDayPicker = function renderDayPicker() {
	    var _state9 = state,
	        loading = _state9.loading;

	    var _getNav = getNav(),
	        prev = _getNav.prev,
	        next = _getNav.next;

	    return '\n      <div class=\'appointmentDayPicker dayPicker\'>\n        <button type=\'button\' ' + (loading || !prev ? 'disabled' : '') + ' class="appointmentDayPickerButton prev" ' + (prev && 'data-value="' + prev + '"') + '>&lt;</button>\n        <button type=\'button\' ' + (loading || !next ? 'disabled' : '') + ' class="appointmentDayPickerButton next" ' + (next && 'data-value="' + next + '"') + '>&gt;</button>\n      </div>\n    ';
	  };

	  var renderTimezonePicker = function renderTimezonePicker() {
	    var _state10 = state,
	        timezone = _state10.timezone,
	        timezones = _state10.timezones;


	    return '\n      <div class=\'timezonePickerWrapper\'> \n        <select class=\'timezonePicker\'>\n          ' + (!timezones.loading && timezones.map(function (_ref4) {
	      var group = _ref4.group,
	          cities = _ref4.cities;
	      return '\n                <optgroup label="' + group + '">\n                  ' + cities.map(function (val) {
	        return '<option ' + (timezone.indexOf((group + '/' + val).split(' ')[0]) > -1 ? 'selected' : '') + ' value=\'' + group + '/' + val + '\'>' + val + '</option>';
	      }).join('') + '\n                </optgroup>\n              ';
	    }).join('')) + '\n        </select>\n        <div class=\'timezonePickerName\'>' + timezone + '</div>\n      </div>\n    ';
	  };

	  var renderCalendarDays = function renderCalendarDays() {
	    var _state11 = state,
	        slots = _state11.slots,
	        dateStr = _state11.date,
	        value = _state11.value,
	        availableDays = _state11.availableDays;

	    var days = slots ? Object.keys(slots) : [];
	    var todayStr = toDateStr(new Date());

	    if (!days.length) {
	      return '';
	    }

	    var firstDay = getDay(new Date(days[0]));
	    days.unshift.apply(days, fillArray(new Array(firstDay), 'precedingDay'));

	    var trailingDays = Math.ceil(days.length / 7) * 7 - days.length;
	    days.push.apply(days, fillArray(new Array(trailingDays), 'trailingDay'));

	    var weeks = days.map(function (item, i) {
	      return i % 7 === 0 ? days.slice(i, i + 7) : null;
	    }).filter(function (a) {
	      return a;
	    });

	    var dateValue = value && value.split(' ')[0];

	    return '\n      ' + weeks.map(function (week) {
	      return '<div class=\'calendarWeek\'>' + week.map(function (day) {
	        if (day === 'precedingDay' || day === 'trailingDay') {
	          return '<div class="calendarDay ' + day + ' empty"></div>';
	        }
	        var active = day === dateStr;
	        var isToday = todayStr === day;
	        var isUnavailable = availableDays.indexOf(day) === -1;
	        var isSelected = day === dateValue;
	        var classes = 'calendarDay ' + classNames({
	          isSelected: isSelected,
	          isToday: isToday,
	          isUnavailable: isUnavailable,
	          isActive: active
	        });
	        return '<div class=\'' + classes + '\' data-value=\'' + day + '\'><span class=\'calendarDayEach\'>' + day.split('-')[2].replace(/^0/, '') + '</span></div>';
	      }).join('') + '</div>';
	    }).join('') + '\n    ';
	  };

	  var renderEmptyState = function renderEmptyState() {
	    /* eslint-disable */
	    return '\n      <div class="appointmentSlots-empty">\n        <div class="appointmentSlots-empty-container">\n          <div class="appointmentSlots-empty-icon">\n            <svg width="124" height="102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n              <defs>\n                <path d="M55 32.001c0 21.54 17.46 39 39 39 3.457 0 6.81-.45 10-1.294v34.794H0v-104l71 .001c-9.7 7.095-16 18.561-16 31.5z" id="a"/>\n              </defs>\n              <g fill="none" fill-rule="evenodd">\n                <g transform="translate(-1 -1)">\n                  <mask id="b" fill="#fff">\n                    <use xlink:href="#a"/>\n                  </mask>\n                  <g mask="url(#b)">\n                    <path d="M18.85 52.001c9.858 0 17.85 7.992 17.85 17.85 0 9.859-7.992 17.85-17.85 17.85S1 79.71 1 69.851c0-9.858 7.992-17.85 17.85-17.85zm5.666 10.842L17.38 69.98l-2.44-2.44a2.192 2.192 0 00-3.1 3.1l3.99 3.987a2.192 2.192 0 003.098 0l8.687-8.686a2.191 2.191 0 00-3.1-3.099z" fill="#D5D6DA"/>\n                    <path d="M92.043 10.643H81.597V7.576A6.582 6.582 0 0075.023 1a6.582 6.582 0 00-6.574 6.575v3.067H41.833V7.576A6.582 6.582 0 0035.26 1a6.582 6.582 0 00-6.574 6.575v3.149a2.187 2.187 0 00-.585-.082H19.37c-6.042 0-10.957 4.916-10.957 10.958v27.126a2.192 2.192 0 004.383 0V33.215h86.211a2.192 2.192 0 000-4.383H12.795v-7.231a6.582 6.582 0 016.574-6.575H28.1c.203 0 .398-.03.585-.08v2.82a6.582 6.582 0 006.574 6.574c3.625 0 10.574-2.95 10.574-6.574v-2.74H68.45v2.74a6.582 6.582 0 006.574 6.574c3.625 0 7.574-2.95 7.574-6.574v-2.74h9.446a6.582 6.582 0 016.574 6.575v73.072a3.95 3.95 0 01-3.946 3.945h-77.95a3.95 3.95 0 01-3.944-3.944v-5.67c0-1.047-.981-2.192-2.192-2.192-1.21 0-2.191.981-2.191 2.192v5.67c0 4.592 3.736 8.327 8.327 8.327h77.95c4.592 0 8.328-3.736 8.328-8.328V21.601c0-6.042-4.915-10.958-10.957-10.958zM37.45 17.766a2.194 2.194 0 01-2.191 2.191 2.194 2.194 0 01-2.191-2.191V7.576c0-1.209.983-2.192 2.19-2.192 1.21 0 2.192.983 2.192 2.192v10.19zm39.764 0a2.194 2.194 0 01-2.191 2.191 2.194 2.194 0 01-2.191-2.191V7.576c0-1.209.983-2.192 2.191-2.192 1.208 0 2.191.983 2.191 2.192v10.19z" fill="#D5D6DA" fill-rule="nonzero"/>\n                    <path d="M55.68 63.556c-4.592 0-8.328 3.736-8.328 8.327 0 4.592 3.736 8.328 8.327 8.328 4.592 0 8.328-3.736 8.328-8.328 0-4.591-3.736-8.327-8.328-8.327zm0 12.272a3.95 3.95 0 01-3.945-3.945 3.95 3.95 0 013.944-3.944 3.95 3.95 0 013.945 3.944 3.95 3.95 0 01-3.945 3.945zm26.854-12.272c-4.591 0-8.327 3.736-8.327 8.327 0 4.592 3.736 8.328 8.327 8.328 4.592 0 8.328-3.736 8.328-8.328 0-4.591-3.736-8.327-8.328-8.327zm0 12.272a3.95 3.95 0 01-3.944-3.945 3.95 3.95 0 013.944-3.944 3.95 3.95 0 013.945 3.944 3.95 3.95 0 01-3.945 3.945zM30.126 36.701c-4.591 0-8.327 3.736-8.327 8.328 0 4.591 3.736 8.327 8.327 8.327 4.592 0 8.328-3.736 8.328-8.327 0-4.592-3.736-8.328-8.328-8.328zm0 12.272a3.95 3.95 0 01-3.944-3.944 3.95 3.95 0 013.944-3.945 3.95 3.95 0 013.945 3.945 3.95 3.95 0 01-3.945 3.944z" fill="#D5D6DA" fill-rule="nonzero"/>\n                    <path d="M83.836 36.701c-4.592 0-8.328 3.736-8.328 8.328 0 4.591 3.736 8.327 8.328 8.327 4.591 0 8.327-3.736 8.327-8.327 0-4.592-3.736-8.328-8.327-8.328zm0 12.272a3.95 3.95 0 01-3.945-3.944 3.95 3.95 0 013.945-3.945 3.95 3.95 0 013.944 3.945 3.95 3.95 0 01-3.944 3.944z" fill="#2B3245" fill-rule="nonzero"/>\n                    <path d="M56.981 36.701c-4.592 0-8.327 3.736-8.327 8.328 0 4.591 3.735 8.327 8.327 8.327 4.592 0 8.327-3.736 8.327-8.327 0-4.592-3.735-8.328-8.327-8.328zm0 12.272a3.95 3.95 0 01-3.944-3.944 3.95 3.95 0 013.944-3.945 3.95 3.95 0 013.945 3.945 3.95 3.95 0 01-3.945 3.944z" fill="#D5D6DA" fill-rule="nonzero"/>\n                    <path d="M68.829 11.201l.001 6.375a6.375 6.375 0 006.146 6.371l.229.004a6.375 6.375 0 006.371-6.146l.004-.229-.001-6.375h6.871c6.627 0 12 5.373 12 12v8.4H11.2v-8.4c0-6.627 5.373-12 12-12h5.849l.001 6.75a6 6 0 005.775 5.996l.225.004h.375a6.375 6.375 0 006.375-6.375l-.001-6.375h27.03z" fill="#D5D6DA"/>\n                  </g>\n                </g>\n                <path d="M92 0c17.673 0 32 14.327 32 32 0 17.673-14.327 32-32 32-17.673 0-32-14.327-32-32C60 14.327 74.327 0 92 0zm21.268 15.365L75.365 53.268A26.884 26.884 0 0092 59c14.912 0 27-12.088 27-27a26.88 26.88 0 00-5.732-16.635zM92 5C77.088 5 65 17.088 65 32c0 6.475 2.28 12.417 6.079 17.069l37.99-37.99A26.888 26.888 0 0092 5z" fill="#D5D6DA"/>\n              </g>\n            </svg>\n          </div>\n          <div class="appointmentSlots-empty-text">' + JotForm.texts.noSlotsAvailable + '</div>\n        </div>\n      </div>\n    ';
	    /* eslint-enable */
	  };

	  var dateWithAMPM = function dateWithAMPM() {
	    var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	    var _props6 = props,
	        _props6$timeFormat = _props6.timeFormat;
	    _props6$timeFormat = _props6$timeFormat === undefined ? {} : _props6$timeFormat;
	    var _props6$timeFormat$va = _props6$timeFormat.value,
	        timeFormat = _props6$timeFormat$va === undefined ? '24 Hour' : _props6$timeFormat$va;

	    var time = new Date(date.replace(/-/g, '/')).toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', hourCycle: timeFormat === 'AM/PM' ? 'h12' : 'h23' });
	    var day = date && date.split(' ')[0];
	    return day + ' ' + time;
	  };

	  var renderSlots = function renderSlots() {
	    var _state12 = state,
	        dateStr = _state12.date,
	        _state12$value = _state12.value,
	        dateValue = _state12$value === undefined ? '' : _state12$value,
	        _state12$defaultValue = _state12.defaultValue,
	        defaultValue = _state12$defaultValue === undefined ? '' : _state12$defaultValue,
	        timezone = _state12.timezone;

	    var dateSlots = state.slots && state.slots[dateStr] || {};

	    var stateValue = dateWithAMPM(dateValue);
	    var defaultValueTZ = revertDate(defaultValue, ' ', timezone);

	    var parsedDefaultVal = dateWithAMPM(defaultValueTZ);

	    var entries = objectEntries(dateSlots);

	    if (!entries || !entries.length) {
	      return renderEmptyState();
	    }

	    return entries.map(function (_ref5) {
	      var name = _ref5[0],
	          value = _ref5[1];

	      var rn = amPmConverter(name);
	      var slotValue = dateStr + ' ' + rn;
	      var active = stateValue === slotValue;
	      var disabled = !(value || parsedDefaultVal === slotValue);

	      return '<div class="appointmentSlot slot ' + classNames({ disabled: disabled, active: active }) + '" data-value="' + slotValue + '">' + name + '</div>';
	    }).join('');
	  };

	  var renderDay = function renderDay() {
	    var _state13 = state,
	        dateStr = _state13.date;

	    var date = new Date(dateStr);
	    var day = getDay(date);

	    return '\n      <div class=\'appointmentDate\'>\n        ' + (dateStr && dayNames()[day] + ', ' + monthNames()[date.getUTCMonth()] + ' ' + intPrefix(date.getUTCDate())) + '\n      </div>\n    ';
	  };

	  var renderCalendar = function renderCalendar() {
	    var _state14 = state,
	        dateStr = _state14.date;


	    return '\n      <div class=\'selectedDate\'>\n        <input class=\'currentDate\' type=\'text\' value=\'' + toFormattedDateStr(dateStr) + '\' style=\'pointer-events: none;\' />\n      </div>\n      ' + renderMonthYearPicker() + '\n      <div class=\'appointmentCalendarDays days\'>\n        <div class=\'daysOfWeek\'>\n          ' + dayNames().map(function (day) {
	      return '<div class="dayOfWeek ' + day.toLowerCase() + '">' + day.toUpperCase().slice(0, 3) + '</div>';
	    }).join('') + '\n        </div>\n        ' + renderCalendarDays() + '\n      </div>\n    ';
	  };

	  var renderSelectedDate = function renderSelectedDate() {
	    var _state15 = state,
	        _state15$value = _state15.value,
	        value = _state15$value === undefined ? '' : _state15$value;

	    var dateStr = value && value.split(' ')[0];
	    var _props7 = props,
	        _props7$timeFormat = _props7.timeFormat;
	    _props7$timeFormat = _props7$timeFormat === undefined ? {} : _props7$timeFormat;
	    var _props7$timeFormat$va = _props7$timeFormat.value,
	        timeFormat = _props7$timeFormat$va === undefined ? '24 Hour' : _props7$timeFormat$va;


	    var date = new Date(dateStr);
	    var time = new Date(value.replace(/-/g, '/')).toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric', hourCycle: timeFormat === 'AM/PM' ? 'h12' : 'h23' });
	    var day = getDay(date);
	    var datetime = dayNames()[day] + ', ' + monthNames()[date.getUTCMonth()] + ' ' + intPrefix(date.getUTCDate()) + ', ' + date.getFullYear();

	    var text = JotForm.texts.appointmentSelected.replace('{time}', time).replace('{date}', datetime);
	    var valEl = '<div style=\'display: none\' class=\'jsAppointmentValue\'>' + datetime + ' ' + time + '</div>';
	    return value ? valEl + '<div class=\'appointmentFieldRow forSelectedDate\'><span>' + text + '</span><button type=\'button\' class=\'cancel\'>x</button></div>' : '';
	  };

	  var render = debounce(function () {
	    var _state16 = state,
	        loading = _state16.loading;


	    beforeRender();
	    element.innerHTML = '\n      <div class=\'appointmentFieldContainer\'>\n        <div class=\'appointmentFieldRow forCalendar\'>\n          <div class=\'calendar appointmentCalendar\'>\n            <div class=\'appointmentCalendarContainer\'>\n              ' + renderCalendar() + '\n            </div>\n          </div>\n          <div class=\'appointmentDates\'>\n            <div class=\'appointmentDateSelect\'>\n              ' + renderDay() + '\n              ' + renderDayPicker() + '\n            </div>\n            <div class=\'appointmentSlots slots ' + classNames({ isLoading: loading }) + '\'>\n              <div class=\'appointmentSlotsContainer\'>\n                ' + renderSlots() + '\n              </div>\n            </div>\n            <div class=\'appointmentCalendarTimezone forTimezonePicker\'>\n              ' + renderTimezonePicker() + '\n            </div>\n          </div>\n        </div>\n        ' + renderSelectedDate() + '\n      </div>\n    ';
	    afterRender();
	  });

	  var update = function update(newProps) {
	    state = assignObject({}, state, getStateFromProps(newProps));
	    props = newProps;
	    load();
	  };

	  input.addEventListener('change', function (e) {
	    var date = toDateTimeStr(dz(new Date(e.target.value), -5, getTimezoneOffset(state.timezone)));
	    setDate(date.split(' ')[0]);
	    setState({ value: date, defaultValue: date });
	    validation(date);
	  });
	  tzInput.addEventListener('change', function (e) {
	    var defaultTimezone = e.target.value;
	    setTimezone(defaultTimezone);
	    setState({ defaultTimezone: defaultTimezone });
	  });
	  document.addEventListener('translationLoad', function () {
	    return render();
	  });

	  var getInitialData = function getInitialData(timezones) {
	    getFirstAvailableDates(function (data) {
	      JotForm.appointments.initialData = data;
	      JotForm.appointments.listeners.forEach(function (fn) {
	        return fn({ data: data, timezones: timezones });
	      });
	    });
	  };

	  if (!JotForm.appointments) {
	    JotForm.appointments = { listeners: [] };

	    loadTimezones(function (timezones) {
	      JotForm.timezones = timezones;
	      getInitialData(timezones);
	    });
	  }

	  var requestTry = 1;
	  var requestTimeout = 1000;

	  var construct = function construct(_ref6) {
	    var data = _ref6.data,
	        timezones = _ref6.timezones;

	    var qdata = data[props.id.value];

	    if (!qdata || qdata.error) {
	      constructed = true;

	      if (!qdata && requestTry < 4) {
	        requestTry += 1;
	        setTimeout(function () {
	          getInitialData(JotForm.timezones);
	        }, requestTry * requestTimeout);
	      }

	      return;
	    }

	    constructed = false;

	    var userTimezone = getUserTimezone();

	    var setUpdatedTimezone = function setUpdatedTimezone(currentTimezone) {
	      if (!currentTimezone) {
	        return currentTimezone;
	      }

	      var _currentTimezone$spli = currentTimezone.split('/'),
	          currentCont = _currentTimezone$spli[0],
	          currCity = _currentTimezone$spli[1];

	      var currentCity = currCity && currCity.split(' (')[0];
	      var group = timezones.find(function (timezone) {
	        return timezone.group === currentCont;
	      });
	      if (!group) {
	        return currentTimezone;
	      }
	      var matchedTimezone = group.cities.find(function (c) {
	        return c.indexOf(currentCity) > -1;
	      });

	      if (!matchedTimezone) return false;

	      return group.group + '/' + matchedTimezone;
	    };

	    var timezone = setUpdatedTimezone(userTimezone) || setUpdatedTimezone(props.timezone.value) || props.timezone.value;

	    setTimezone(timezone);
	    var dateStr = Object.keys(qdata)[0];

	    var _getDateRange2 = getDateRange(dateStr),
	        startDate = _getDateRange2[0],
	        endDate = _getDateRange2[1];

	    updateMonthData(startDate, endDate, qdata);
	    var _state17 = state,
	        availableDays = _state17.availableDays;

	    var newDate = availableDays.indexOf(dateStr) === -1 ? availableDays[0] : dateStr;

	    constructed = true;

	    setState({
	      timezones: timezones,
	      loading: false,
	      date: newDate || dateStr
	    });
	  };

	  JotForm.appointments.listeners.push(construct);

	  if (JotForm.appointments.initialData) {
	    setTimeout(function () {
	      construct({
	        data: JotForm.appointments.initialData,
	        timezones: JotForm.timezones
	      });
	    }, requestTimeout);
	  }

	  return update;
	};

	var generateChecker = function generateChecker(obj1, obj2) {
	  return function (prop) {
	    var _ref7 = obj1[prop] || {},
	        v1 = _ref7.value;

	    var _ref8 = obj2[prop] || {},
	        v2 = _ref8.value;

	    if ((typeof v1 === 'undefined' ? 'undefined' : _typeof(v1)) === 'object') {
	      return JSON.stringify(v1) !== JSON.stringify(v2);
	    }

	    return v1 !== v2;
	  };
	};

	var Appointment = function (_Component) {
	  _inherits(Appointment, _Component);

	  function Appointment() {
	    _classCallCheck(this, Appointment);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Appointment.prototype.componentDidMount = function componentDidMount() {
	    this.updater = init(this.props);
	  };

	  Appointment.prototype.componentWillReceiveProps = function componentWillReceiveProps(newProps) {
	    var isChanged = generateChecker(newProps, this.props);
	    this.shouldUpdate = this.shouldUpdate || isChanged('id') || isChanged('timezone') || isChanged('slotDuration') || isChanged('startDate') || isChanged('endDate') || isChanged('blockoutDates') || isChanged('intervals') || isChanged('useLunchBreak') || isChanged('lunchBreak') || isChanged('minScheduleNotice') || isChanged('maxEvents') || isChanged('appointmentType') || isChanged('dateFormat') || isChanged('timeFormat') || isChanged('startWeekOn') || isChanged('rollingDays');
	  };

	  Appointment.prototype.componentDidUpdate = function componentDidUpdate() {
	    var _this2 = this;

	    if (!this.shouldUpdate) {
	      return false;
	    }

	    if (this.updateThrottle) {
	      clearTimeout(this.updateThrottle);
	    }

	    this.updateThrottle = setTimeout(function () {
	      _this2.shouldUpdate = false;
	      _this2.updater(_this2.props);
	    }, 1000);
	  };

	  Appointment.prototype.render = function render() {
	    var _props8 = this.props,
	        id = _props8.id.value,
	        qid = _props8.qid.value,
	        qname = _props8.qname.value,
	        slotDuration = _props8.slotDuration.value,
	        timezone = _props8.timezone.value,
	        required = _props8.required.value;


	    return _react2.default.createElement(
	      'div',
	      { id: qid, className: 'appointmentFieldWrapper jfQuestion-fields' },
	      _react2.default.createElement('input', { className: 'appointmentFieldInput ' + (required === 'Yes' ? 'validate' : ''), name: qname + '[date]', id: 'input_' + id + '_date' }),
	      _react2.default.createElement('input', { className: 'appointmentFieldInput', name: qname + '[duration]', value: slotDuration, id: 'input_' + id + '_duration' }),
	      _react2.default.createElement('input', { className: 'appointmentFieldInput', name: qname + '[timezone]', value: timezone, id: 'input_' + id + '_timezone' }),
	      _react2.default.createElement('div', { className: 'appointmentField' })
	    );
	  };

	  return Appointment;
	}(_react.Component);

	exports.default = Appointment;


	Appointment.getState = function () {
	  return {};
	};

	Appointment.getScript = function (props) {
	  return '\n    JotForm.calendarMonths = ' + JSON.stringify(props.months.value) + ';\n    JotForm.calendarDays = ' + JSON.stringify(props.days.value) + ';\n    JotForm.calendarOther = ' + JSON.stringify('Today') + ';\n\n    JotForm.checkAppointmentAvailability = ' + checkAppointmentAvailability + ';\n\n    (' + init + ')(' + JSON.stringify(props) + ');\n  ';
	};

	var ValueType = (0, _propTypes.oneOfType)([_propTypes.bool, _propTypes.string, _propTypes.number]);

	/* eslint-disable react/no-unused-prop-types */
	Appointment.propTypes = {
	  id: (0, _propTypes.shape)({
	    id: ValueType
	  }),
	  qid: (0, _propTypes.shape)({
	    qid: ValueType
	  }),
	  qname: (0, _propTypes.shape)({
	    qname: ValueType
	  }),
	  slotDuration: (0, _propTypes.shape)({
	    slotDuration: ValueType
	  }),
	  timezone: (0, _propTypes.shape)({
	    timezone: ValueType
	  }),
	  required: (0, _propTypes.shape)({
	    required: ValueType
	  }),
	  dateFormat: (0, _propTypes.shape)({
	    dateFormat: ValueType
	  }),
	  cdnconfig: (0, _propTypes.shape)({
	    CDN: _propTypes.string
	  })
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Authnet = function (_Component) {
	  _inherits(Authnet, _Component);

	  function Authnet() {
	    _classCallCheck(this, Authnet);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Authnet.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_authnet' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_authnet'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Authnet;
	}(_react.Component);

	exports.default = Authnet;


	Authnet.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Authnet.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Authnet.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document window */


	var PaymentCreditCardAndAddress = function (_Component) {
	  _inherits(PaymentCreditCardAndAddress, _Component);

	  function PaymentCreditCardAndAddress() {
	    _classCallCheck(this, PaymentCreditCardAndAddress);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  PaymentCreditCardAndAddress.prototype.ccAllowTest = function ccAllowTest() {
	    return _react2.default.createElement('input', { type: 'hidden', name: 'allowTest', className: 'allowTest', value: this.props.allowTest.value });
	  };

	  PaymentCreditCardAndAddress.prototype.renderCCZipcode = function renderCCZipcode() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_zipcode',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_zipcode'),
	        'for': this.props.qid.value + '_cc_zipcode',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_zipcode,
	        reverseMargin: true
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'zipcode',
	        additionalClass: className + ' cc_zipcode',
	        qname: this.props.qname.value + '[cc_zipcode]',
	        qid: this.props.qid.value + '_cc_zipcode',
	        size: { value: '20' },
	        dataComponent: 'cc_zipcode',
	        inlineEditClass: this.props.inlineEditClass
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCCEmail = function renderCCEmail() {
	    var placeholder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_email',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_email'),
	        'for': this.props.qid.value + '_cc_email',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_email,
	        reverseMargin: true
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'email',
	        additionalClass: className + ' cc_email',
	        qname: this.props.qname.value + '[cc_email]',
	        qid: this.props.qid.value + '_cc_email',
	        size: { value: '20' },
	        dataComponent: 'cc_email',
	        hint: placeholder ? { value: placeholder } : false,
	        inlineEditClass: this.props.inlineEditClass
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCCFirstName = function renderCCFirstName() {
	    var additionalAttr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    var formID = this.props.formID;

	    var additional = void 0;
	    if (additionalAttr === 'div') {
	      additional = _react2.default.createElement(
	        _react2.default.Fragment,
	        null,
	        _react2.default.createElement('div', {
	          id: 'ccFirstName',
	          style: { border: '1px solid #ccc', minHeight: '16px' },
	          className: className + ' cc_firstName'
	        })
	      );
	    }

	    var ccFirstNameField = void 0;

	    if (formID && additional) {
	      ccFirstNameField = additional;
	    } else {
	      ccFirstNameField = _react2.default.createElement(_BaseInput2.default, {
	        type: 'text',
	        additionalClass: className + ' cc_firstName',
	        qname: this.props.qname.value + '[cc_firstName]',
	        qid: this.props.qid.value + '_cc_firstName',
	        size: { value: '20' },
	        dataComponent: 'cc_firstName',
	        inlineEditClass: this.props.inlineEditClass
	      });
	    }

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_firstName',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_firstName'),
	        'for': this.props.qid.value + '_cc_firstName',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_firstName,
	        reverseMargin: true
	      }),
	      ccFirstNameField
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCCLastName = function renderCCLastName() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_lastName',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_lastName'),
	        'for': this.props.qid.value + '_cc_lastName',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_lastName,
	        reverseMargin: true
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'text',
	        additionalClass: className + ' cc_lastName',
	        qname: this.props.qname.value + '[cc_lastName]',
	        qid: this.props.qid.value + '_cc_lastName',
	        size: { value: '20' },
	        dataComponent: 'cc_lastName',
	        inlineEditClass: this.props.inlineEditClass
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCCNumber = function renderCCNumber() {
	    var willMount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    var placeholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	    var additionalAttr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	    var formID = this.props.formID;

	    var additional = void 0;
	    if (additionalAttr === 'div') {
	      additional = _react2.default.createElement(
	        _react2.default.Fragment,
	        null,
	        _react2.default.createElement('div', {
	          id: 'ccNumber',
	          style: { border: '1px solid #ccc', minHeight: '13px' },
	          className: 'form-textbox cc_number'
	        })
	      );
	    }
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);

	    var ccNumberField = void 0;

	    if (formID && additional) {
	      ccNumberField = additional;
	    } else if (willMount) {
	      ccNumberField = _react2.default.createElement(
	        'div',
	        {
	          className: 'form-textbox cc_numberMount ' + (!formID ? 'cc_number' : '')
	        },
	        !formID && placeholder && _react2.default.createElement(
	          'span',
	          null,
	          '\u2022\u2022\u2022\u2022 \u2022\u2022\u2022\u2022 \u2022\u2022\u2022\u2022 \u2022\u2022\u2022\u2022'
	        )
	      );
	    } else {
	      ccNumberField = _react2.default.createElement(_BaseInput2.default, {
	        type: willMount ? 'hidden' : 'number',
	        additionalClass: className + ' cc_number',
	        qname: this.props.qname.value + '[cc_number]',
	        qid: this.props.qid.value + '_cc_number',
	        size: { value: '20' },
	        autocomplete: { value: 'off' },
	        dataComponent: 'cc_number',
	        inlineEditClass: this.props.inlineEditClass
	      });
	    }

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_number',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_number'),
	        'for': this.props.qid.value + '_cc_number',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_number,
	        link: '',
	        reverseMargin: true
	      }),
	      ccNumberField
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCCCCV = function renderCCCCV() {
	    var willMount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    var placeholder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	    var additionalAttr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	    var formID = this.props.formID;

	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    var additional = void 0;
	    if (additionalAttr === 'div') {
	      additional = _react2.default.createElement(
	        _react2.default.Fragment,
	        null,
	        _react2.default.createElement('div', {
	          id: 'ccCCV',
	          style: { border: '1px solid #ccc', minHeight: '13px' },
	          className: 'form-textbox cc_ccv'
	        })
	      );
	    }

	    var ccCvvField = void 0;

	    if (formID && additional) {
	      ccCvvField = additional;
	    } else if (willMount) {
	      ccCvvField = _react2.default.createElement(
	        'div',
	        {
	          className: 'form-textbox cc_ccvMount ' + (!formID ? 'cc_ccv' : '')
	        },
	        !formID && placeholder && _react2.default.createElement(
	          'span',
	          null,
	          'CVC'
	        )
	      );
	    } else {
	      ccCvvField = _react2.default.createElement(_BaseInput2.default, {
	        type: 'number',
	        additionalClass: className + ' cc_ccv',
	        qname: this.props.qname.value + '[cc_ccv]',
	        qid: this.props.qid.value + '_cc_ccv',
	        style: { width: '52px' },
	        autocomplete: { value: 'off' },
	        dataComponent: 'cc_ccv',
	        inlineEditClass: this.props.inlineEditClass
	      });
	    }

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_ccv',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_ccv'),
	        'for': this.props.qid.value + '_cc_ccv',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_ccv,
	        reverseMargin: true
	      }),
	      ccCvvField
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCardExpiry = function renderCardExpiry() {
	    var placeholder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	    var additionalAttr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	    var formID = this.props.formID;

	    var additional = void 0;
	    if (additionalAttr === 'div') {
	      additional = _react2.default.createElement(
	        _react2.default.Fragment,
	        null,
	        _react2.default.createElement('div', {
	          id: 'ccExpMonthWithYear',
	          className: 'form-textbox'
	        })
	      );
	    }

	    var ccCardExpiry = void 0;

	    if (formID && additional) {
	      ccCardExpiry = additional;
	    } else {
	      ccCardExpiry = _react2.default.createElement(
	        'div',
	        {
	          className: 'form-textbox cc_cardExpiryMount ' + (!formID ? 'cc_card_expiry' : '')
	        },
	        !formID && placeholder && _react2.default.createElement(
	          'span',
	          null,
	          'MM / YY'
	        )
	      );
	    }

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_card_expiry',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_card_expiry'),
	        'for': this.props.qid.value + '_cc_card_expiry',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_cardExpiry,
	        reverseMargin: true
	      }),
	      ccCardExpiry
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderEcBankAccountTypeOption = function renderEcBankAccountTypeOption() {
	    var controlPaymentType = this.props.controlPaymentType;


	    var bankAccountTypes = controlPaymentType === 'control_echeck' ? ['Checking', 'Savings'] : ['Individual', 'Company'];

	    var options = bankAccountTypes.map(function (option) {
	      return _react2.default.createElement(
	        'option',
	        {
	          value: option
	        },
	        option
	      );
	    });
	    return options;
	  };

	  PaymentCreditCardAndAddress.prototype.renderEcBankAccountType = function renderEcBankAccountType() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.ec_bankAccountType',
	        labelValue: (0, _Utils.subLabel)(this.props, 'ec_bankAccountType'),
	        'for': this.props.qid.value + '_ec_bankAccountType',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.ec_bankAccountType,
	        link: '',
	        reverseMargin: true
	      }),
	      _react2.default.createElement(
	        'select',
	        {
	          className: className + ' ec_bankAccountType',
	          name: this.props.qname.value + '[ec_bankAccountType]',
	          id: this.props.qid.value + '_ec_bankAccountType',
	          'data-component': 'ec_bankAccountType'
	        },
	        _react2.default.createElement('option', null),
	        this.renderEcBankAccountTypeOption()
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCcExpMonthOption = function renderCcExpMonthOption() {
	    var expMonths = _Utils.specialOptions.Months.value;
	    var type = this.props.controlPaymentType;

	    var options = expMonths.map(function (option, expIndex) {
	      var monthValue = _Utils.specialOptions.Months.nonLocale[expIndex];
	      if (type === 'control_stripe' || type === 'control_paymill' || type === 'control_braintree' || type === 'control_square' || type === 'control_eway' || type === 'control_bluepay') {
	        monthValue = expIndex + 1;
	      }
	      return _react2.default.createElement(
	        'option',
	        {
	          value: monthValue
	        },
	        option
	      );
	    });
	    return options;
	  };

	  PaymentCreditCardAndAddress.prototype.renderCcExpMonth = function renderCcExpMonth() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_exp_month',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_exp_month'),
	        'for': this.props.qid.value + '_cc_exp_month',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_exp_month,
	        link: '',
	        reverseMargin: true
	      }),
	      _react2.default.createElement(
	        'select',
	        {
	          className: className + ' cc_exp_month',
	          name: this.props.qname.value + '[cc_exp_month]',
	          id: this.props.qid.value + '_cc_exp_month',
	          'data-component': 'cc_exp_month'
	        },
	        _react2.default.createElement('option', null),
	        this.renderCcExpMonthOption()
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCcExpYearOption = function renderCcExpYearOption() {
	    var dyear = new Date().getYear() < 1000 ? new Date().getYear() + 1900 : new Date().getYear();
	    var options = [];
	    var counter = this.props.controlPaymentType === 'control_stripe' ? 20 : 10;
	    for (var year = dyear; year < dyear + counter; year += 1) {
	      var yearOption = _react2.default.createElement(
	        'option',
	        {
	          value: year
	        },
	        year
	      );
	      options.push(yearOption);
	    }
	    return options;
	  };

	  PaymentCreditCardAndAddress.prototype.renderCcExpYear = function renderCcExpYear() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_exp_year',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_exp_year'),
	        'for': this.props.qid.value + '_cc_exp_year',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_exp_year,
	        reverseMargin: true
	      }),
	      _react2.default.createElement(
	        'select',
	        {
	          className: className + ' cc_exp_year',
	          name: this.props.qname.value + '[cc_exp_year]',
	          id: this.props.qid.value + '_cc_exp_year',
	          'data-component': 'cc_exp_year'
	        },
	        _react2.default.createElement('option', null),
	        this.renderCcExpYearOption()
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderBillingAddressHeader = function renderBillingAddressHeader() {
	    var billingHeader = null;

	    var type = this.props.controlPaymentType;
	    var gateway = type.replace('control_', '');
	    if (['authnet', 'payjunction', 'pagseguro', 'paypalpro', 'paysafe', 'mollie'].indexOf(gateway) > -1 || ['braintree', 'eway', 'bluepay'].indexOf(gateway) > -1 && (!this.props.requireBillingAddr && gateway !== 'bluepay' || this.props.requireBillingAddr && this.props.requireBillingAddr.value === 'Yes')) {
	      var billingAddressStr = this.props.addressTitle ? this.props.addressTitle.value : 'Billing Address'.locale();
	      var billingAddressStrLabel = billingAddressStr;
	      if (this.props.inlineEditClass) {
	        var inlineEditLabel = _react2.default.createElement(this.props.inlineEditClass, {
	          id: this.props.id.value,
	          propPath: 'addressTitle',
	          text: billingAddressStr,
	          defaultValue: billingAddressStr,
	          placeholder: 'Type Billing Address Header'
	        });

	        billingAddressStrLabel = _react2.default.createElement(
	          'span',
	          null,
	          inlineEditLabel
	        );
	      }

	      billingHeader = _react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'th',
	          { colSpan: '2', style: { textAlign: 'left', marginTop: '20px', display: 'table' } },
	          billingAddressStrLabel
	        )
	      );
	    }

	    return billingHeader;
	  };

	  PaymentCreditCardAndAddress.prototype.renderAltDiv = function renderAltDiv(gateway, type, style, labelValue) {
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.' + type,
	        labelValue: (0, _Utils.subLabel)(this.props, labelValue),
	        'for': gateway + '_' + type,
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value[type],
	        reverseMargin: true
	      }),
	      _react2.default.createElement('div', {
	        id: gateway + '_' + type,
	        className: gateway + '-hosted-fields',
	        style: style
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderAddressFields = function renderAddressFields(placeholder, type, properties) {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.' + type,
	        labelValue: (0, _Utils.subLabel)(this.props, type, this.props.id.value),
	        'for': this.props.qid.value + '_' + type,
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value[type]
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({
	        type: 'text',
	        hint: { value: placeholder },
	        additionalClass: className + ' form-address-line',
	        qname: this.props.qname.value + '[' + type + ']',
	        qid: this.props.qid.value + '_' + type
	      }, properties, {
	        dataComponent: type,
	        inlineEditClass: this.props.inlineEditClass
	      }))
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderBrazilianState = function renderBrazilianState() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);
	    var states = ['AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO', 'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI', 'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO'];

	    var options = states.map(function (option) {
	      return _react2.default.createElement(
	        'option',
	        { value: option, key: option },
	        option
	      );
	    });
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.state',
	        labelValue: (0, _Utils.subLabel)(this.props, 'state', this.props.id.value),
	        'for': this.props.qid.value + '_state',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.state
	      }),
	      _react2.default.createElement(
	        'select',
	        {
	          className: className + ' form-address-state',
	          name: this.props.qname.value + '[state]',
	          id: this.props.qid.value + '_state',
	          'data-component': 'state',
	          defaultValue: '',
	          disabled: this.props.inlineEditClass
	        },
	        _react2.default.createElement(
	          'option',
	          {
	            value: ''
	          },
	          'Please Select'.locale()
	        ),
	        options
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderState = function renderState(placeholder) {
	    if (this.props.states && this.props.states.value === 'americanStates') {
	      var _className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);
	      return _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          propPath: 'sublabels.state',
	          labelValue: (0, _Utils.subLabel)(this.props, 'state', this.props.id.value),
	          'for': this.props.qid.value + '_state',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.state
	        }),
	        _react2.default.createElement(
	          'select',
	          {
	            className: _className + ' form-address-state',
	            name: this.props.qname.value + '[state]',
	            id: this.props.qid.value + '_state',
	            'data-component': 'state',
	            defaultValue: '',
	            disabled: this.props.inlineEditClass
	          },
	          _react2.default.createElement(
	            'option',
	            {
	              value: ''
	            },
	            'Please Select'.locale()
	          ),
	          this.renderStateOption()
	        )
	      );
	    }
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.state',
	        labelValue: (0, _Utils.subLabel)(this.props, 'state', this.props.id.value),
	        'for': this.props.qid.value + '_state',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.state
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'text',
	        hint: { value: placeholder },
	        additionalClass: className + ' form-address-state',
	        qname: this.props.qname.value + '[state]',
	        qid: this.props.qid.value + '_state',
	        size: { value: '22' },
	        dataComponent: 'state',
	        inlineEditClass: this.props.inlineEditClass
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCcHolderPhone = function renderCcHolderPhone() {
	    var additionalClass = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      'span',
	      null,
	      _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: (0, _Utils.subLabel)(this.props, 'area'),
	          'for': this.props.qid.value + '_area',
	          propPath: 'sublabels.area',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.area,
	          reverseMargin: true
	        }),
	        _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	          qid: this.props.qid.value + '_area',
	          qname: this.props.qname.value + '[area]',
	          type: 'tel',
	          additionalClass: additionalClass,
	          dataComponent: 'areaCode',
	          size: { value: 6 }
	        })),
	        _react2.default.createElement(
	          'span',
	          { className: 'phone-separate' },
	          '\xA0-'
	        )
	      ),
	      _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: (0, _Utils.subLabel)(this.props, 'phone'),
	          'for': this.props.qid.value + '_phone',
	          propPath: 'sublabels.phone',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.phone,
	          reverseMargin: true
	        }),
	        _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	          qid: this.props.qid.value + '_phone',
	          qname: this.props.qname.value + '[phone]',
	          type: 'tel',
	          additionalClass: additionalClass,
	          dataComponent: 'phone',
	          size: { value: 12 }
	        }))
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCountryOptions = function renderCountryOptions() {
	    var customCountries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    var controlPaymentType = this.props.controlPaymentType;

	    var _ref = _Utils.customPaymentSpecialOptions[controlPaymentType] !== undefined && _Utils.customPaymentSpecialOptions[controlPaymentType].Countries !== undefined ? _Utils.customPaymentSpecialOptions[controlPaymentType].Countries : _Utils.specialOptions.Countries,
	        countries = _ref.value;

	    var embargoCountries = ['Cuba', 'Belarus', 'Cote d\'Ivoire', 'Democratic Republic of the Congo', 'Iran', 'Lebanon', 'Liberia', 'Libya', 'Somalia', 'Syria', 'Zimbabwe'];
	    var filterEmbargoCountries = function filterEmbargoCountries(option) {
	      return embargoCountries.indexOf(option) === -1;
	    };

	    var locCountries = controlPaymentType !== 'control_paypalpro' ? countries : countries.filter(filterEmbargoCountries);
	    if (Array.isArray(customCountries) && customCountries.length > 0) {
	      locCountries = customCountries;
	    }

	    var options = locCountries.map(function (option) {
	      return _react2.default.createElement(
	        'option',
	        {
	          value: option
	        },
	        option
	      );
	    });
	    return options;
	  };

	  PaymentCreditCardAndAddress.prototype.renderCountry = function renderCountry() {
	    var customizedCountries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);
	    var defaultCountry = this.props.selectedCountry && this.props.selectedCountry.value ? this.props.selectedCountry.value : null;

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.country',
	        labelValue: (0, _Utils.subLabel)(this.props, 'country', this.props.id.value),
	        'for': this.props.qid.value + '_country',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.country
	      }),
	      _react2.default.createElement(
	        'select',
	        {
	          className: className + ' form-address-country',
	          defaultcountry: defaultCountry,
	          name: this.props.qname.value + '[country]',
	          id: this.props.qid.value + '_country',
	          'data-component': 'country',
	          defaultValue: defaultCountry,
	          tabIndex: this.props.inlineEditClass ? -1 : null,
	          disabled: this.props.inlineEditClass
	        },
	        _react2.default.createElement(
	          'option',
	          {
	            value: '',
	            selected: true
	          },
	          'Please Select'.locale()
	        ),
	        this.renderCountryOptions(customizedCountries),
	        !(Array.isArray(customizedCountries) && customizedCountries.length > 0) && _react2.default.createElement(
	          'option',
	          { value: 'other' },
	          'Other'.locale()
	        )
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderAddressPart = function renderAddressPart() {
	    var isCustomized = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    var field = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	    var countries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	    var type = this.props.controlPaymentType;
	    if (type !== 'control_stripe' && type !== 'control_paymill' && type !== 'control_square' && (['control_braintree', 'control_eway', 'control_bluepay'].indexOf(type) === -1 || !this.props.requireBillingAddr && type !== 'control_bluepay' || this.props.requireBillingAddr && this.props.requireBillingAddr.value === 'Yes')) {
	      var hintList = this.props.compoundHint && this.props.compoundHint.value && this.props.compoundHint.value.length > 0 ? this.props.compoundHint.value.split(',') : [];
	      var hintIndex = 0;

	      var addr1ClassName = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props) + ' form-address-line';
	      var addr1Placeholder = hintIndex < hintList.length ? hintList[hintIndex] : null;
	      var addrLine1 = this.renderAddressFields(addr1Placeholder, 'addr_line1', { additionalClass: addr1ClassName });
	      hintIndex += 1;

	      var addr2ClassName = _Utils.classNames.textbox + ' form-address-line';
	      var addr2Placeholder = hintIndex < hintList.length ? hintList[hintIndex] : null;
	      var addrLine2 = this.renderAddressFields(addr2Placeholder, 'addr_line2', { additionalClass: addr2ClassName, size: { value: '46' } });
	      hintIndex += 1;

	      var addrCityClassName = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props) + ' form-address-city';
	      var addrCityPlaceholder = hintIndex < hintList.length ? hintList[hintIndex] : null;
	      var addrCity = this.renderAddressFields(addrCityPlaceholder, 'city', { additionalClass: addrCityClassName, size: { value: '21' } });
	      hintIndex += 1;

	      var addrState = this.renderState(hintIndex < hintList.length ? hintList[hintIndex] : null);
	      var isUSState = this.props.states && this.props.states.value === 'americanStates';
	      if (!isUSState) hintIndex += 1;

	      var addrZipClassName = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props) + ' form-address-postal';
	      var addrZipPlaceholder = hintIndex < hintList.length ? hintList[hintIndex] : null;
	      var addrZip = this.renderAddressFields(addrZipPlaceholder, 'postal', { additionalClass: addrZipClassName, size: { value: '10' } });
	      hintIndex += 1;

	      var addrCountry = void 0;
	      if (isCustomized && field === 'countries' && Array.isArray(countries)) {
	        addrCountry = this.renderCountry(countries);
	      } else {
	        addrCountry = this.renderCountry();
	      }

	      var sfStyle = {};

	      if (this.props.subfields) {
	        var allSf = ['st1', 'st2', 'city', 'state', 'zip', 'country'];
	        // If subfield value is empty, fill it up
	        var subfieldsValue = this.props.subfields.value.length === 0 ? allSf.join('|') : this.props.subfields.value;
	        // Loop through all sub-fields
	        allSf.forEach(function (sf, index) {
	          // If a sub-field is unchecked
	          if (subfieldsValue.indexOf(allSf[index]) === -1) {
	            // Hide using css
	            sfStyle[allSf[index]] = { display: 'none' };
	          }
	        });
	      }

	      var returnAddressFields = [];

	      returnAddressFields.push(_react2.default.createElement(
	        'tr',
	        { style: sfStyle.st1 ? sfStyle.st1 : null },
	        _react2.default.createElement(
	          'td',
	          { colSpan: '2' },
	          addrLine1
	        )
	      ));
	      returnAddressFields.push(_react2.default.createElement(
	        'tr',
	        { style: sfStyle.st2 ? sfStyle.st2 : null },
	        _react2.default.createElement(
	          'td',
	          { colSpan: '2' },
	          addrLine2
	        )
	      ));
	      returnAddressFields.push(_react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'td',
	          { width: '50%', style: sfStyle.city ? sfStyle.city : null },
	          addrCity
	        ),
	        _react2.default.createElement(
	          'td',
	          { style: sfStyle.state ? sfStyle.state : null },
	          addrState
	        )
	      ));
	      returnAddressFields.push(_react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'td',
	          { width: '50%', style: sfStyle.zip ? sfStyle.zip : null },
	          addrZip
	        ),
	        _react2.default.createElement(
	          'td',
	          { style: sfStyle.country ? sfStyle.country : null },
	          addrCountry
	        )
	      ));
	      return returnAddressFields;
	    }
	    return null;
	  };

	  PaymentCreditCardAndAddress.prototype.renderPagseguroAddress = function renderPagseguroAddress() {
	    var type = this.props.controlPaymentType;
	    if (type !== 'control_stripe' && type !== 'control_paymill' && type !== 'control_square' && (['control_braintree', 'control_eway', 'control_bluepay'].indexOf(type) === -1 || !this.props.requireBillingAddr && type !== 'control_bluepay' || this.props.requireBillingAddr && this.props.requireBillingAddr.value === 'Yes')) {
	      var hintList = this.props.compoundHint && this.props.compoundHint.value && this.props.compoundHint.value.length > 0 ? this.props.compoundHint.value.split(',') : [];
	      var hintIndex = 0;
	      var addr1ClassName = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props) + ' form-address-line';
	      var addr1Placeholder = hintIndex < hintList.length ? hintList[hintIndex] : null;
	      var addrLine1 = this.renderAddressFields(addr1Placeholder, 'addr_line1', { additionalClass: addr1ClassName });
	      hintIndex += 1;
	      var addr2ClassName = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props) + ' form-address-number';
	      var addr2Placeholder = hintIndex < hintList.length ? hintList[hintIndex] : null;
	      var addrLine2 = this.renderAddressFields(addr2Placeholder, 'addr_line2', { additionalClass: addr2ClassName, size: { value: '21' } });
	      hintIndex += 1;

	      var addrDistrictClassName = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props) + ' form-address-district';
	      var addrDistrictPlaceholder = hintIndex < hintList.length ? hintList[hintIndex] : null;
	      var addrDistcrict = this.renderAddressFields(addrDistrictPlaceholder, 'district', { additionalClass: addrDistrictClassName, size: { value: '21' } });
	      hintIndex += 1;

	      var addrCityClassName = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props) + ' form-address-city';
	      var addrCityPlaceholder = hintIndex < hintList.length ? hintList[hintIndex] : null;
	      var addrCity = this.renderAddressFields(addrCityPlaceholder, 'city', { additionalClass: addrCityClassName, size: { value: '21' } });
	      hintIndex += 1;

	      var addrState = this.renderBrazilianState();

	      var addrZipClassName = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props) + ' form-address-postal';
	      var addrZipPlaceholder = hintIndex < hintList.length ? hintList[hintIndex] : null;
	      var addrZip = this.renderAddressFields(addrZipPlaceholder, 'postal', { additionalClass: addrZipClassName, size: { value: '10' } });
	      hintIndex += 1;

	      var addrCountry = 'BRA'; // PagSeguro accepts only BRA for shipping/billing Address Country
	      var sfStyle = {};
	      if (this.props.subfields) {
	        var allSf = ['st1', 'st2', 'district', 'city', 'state', 'zip', 'country'];
	        // If subfield value is empty, fill it up
	        var subfieldsValue = this.props.subfields.value.length === 0 ? allSf.join('|') : this.props.subfields.value;
	        // Loop through all sub-fields
	        allSf.forEach(function (sf, index) {
	          // If a sub-field is unchecked
	          if (subfieldsValue.indexOf(allSf[index]) === -1) {
	            // Hide using css
	            sfStyle[allSf[index]] = { display: 'none' };
	          }
	        });
	      }
	      var returnAddressFields = [];
	      returnAddressFields.push(_react2.default.createElement(
	        'tr',
	        { style: sfStyle.st1 ? sfStyle.st1 : null },
	        _react2.default.createElement(
	          'td',
	          { colSpan: '2' },
	          addrLine1
	        )
	      ));
	      returnAddressFields.push(_react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'td',
	          { width: '50%', style: sfStyle.city ? sfStyle.city : null },
	          addrLine2
	        ),
	        _react2.default.createElement(
	          'td',
	          { style: sfStyle.state ? sfStyle.state : null },
	          addrDistcrict
	        )
	      ));
	      returnAddressFields.push(_react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'td',
	          { width: '50%', style: sfStyle.city ? sfStyle.city : null },
	          addrCity
	        ),
	        _react2.default.createElement(
	          'td',
	          { style: sfStyle.state ? sfStyle.state : null },
	          addrState
	        )
	      ));
	      returnAddressFields.push(_react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'td',
	          { width: '50%', style: sfStyle.zip ? sfStyle.zip : null },
	          addrZip
	        ),
	        _react2.default.createElement(
	          'td',
	          { style: sfStyle.country ? sfStyle.country : null },
	          addrCountry
	        )
	      ));
	      return returnAddressFields;
	    }
	    return null;
	  };

	  PaymentCreditCardAndAddress.prototype.renderEcRoutingNumber = function renderEcRoutingNumber() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.ec_routingNumber',
	        labelValue: (0, _Utils.subLabel)(this.props, 'ec_routingNumber'),
	        'for': this.props.qid.value + '_ec_routingNumber',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.ec_routingNumber,
	        link: '',
	        reverseMargin: true
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'number',
	        additionalClass: className + ' ec_routingNumber',
	        qname: this.props.qname.value + '[ec_routingNumber]',
	        qid: this.props.qid.value + '_ec_routingNumber',
	        size: { value: '20' },
	        autocomplete: { value: 'off' },
	        dataComponent: 'ec_routingNumber',
	        inlineEditClass: this.props.inlineEditClass
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderEcAccountNumber = function renderEcAccountNumber() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.ec_accountNumber',
	        labelValue: (0, _Utils.subLabel)(this.props, 'ec_accountNumber'),
	        'for': this.props.qid.value + '_ec_accountNumber',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.ec_accountNumber,
	        link: '',
	        reverseMargin: true
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'number',
	        additionalClass: className + ' ec_accountNumber',
	        qname: this.props.qname.value + '[ec_accountNumber]',
	        qid: this.props.qid.value + '_ec_accountNumber',
	        size: { value: '20' },
	        autocomplete: { value: 'off' },
	        dataComponent: 'ec_accountNumber',
	        inlineEditClass: this.props.inlineEditClass
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderEcNameOnAccount = function renderEcNameOnAccount() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.ec_nameOnAccount',
	        labelValue: (0, _Utils.subLabel)(this.props, 'ec_nameOnAccount'),
	        'for': this.props.qid.value + '_ec_nameOnAccount',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.ec_nameOnAccount,
	        link: '',
	        reverseMargin: true
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'text',
	        additionalClass: className + ' ec_nameOnAccount',
	        qname: this.props.qname.value + '[ec_nameOnAccount]',
	        qid: this.props.qid.value + '_ec_nameOnAccount',
	        size: { value: '20' },
	        autocomplete: { value: 'off' },
	        dataComponent: 'ec_nameOnAccount',
	        inlineEditClass: this.props.inlineEditClass
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderDepositA = function renderDepositA() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(_BaseInput2.default, {
	      type: 'text',
	      additionalClass: className + ' depositA',
	      qname: this.props.qname.value + '[depositA]',
	      qid: this.props.qid.value + '_depositA',
	      size: { value: '20' },
	      autocomplete: { value: 'off' },
	      dataComponent: 'depositA',
	      inlineEditClass: this.props.inlineEditClass
	    });
	  };

	  PaymentCreditCardAndAddress.prototype.renderDepositB = function renderDepositB() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(_BaseInput2.default, {
	      type: 'text',
	      additionalClass: className + ' depositB',
	      qname: this.props.qname.value + '[depositB]',
	      qid: this.props.qid.value + '_depositB',
	      size: { value: '20' },
	      autocomplete: { value: 'off' },
	      dataComponent: 'depositB',
	      inlineEditClass: this.props.inlineEditClass
	    });
	  };

	  PaymentCreditCardAndAddress.prototype.renderEcBankName = function renderEcBankName() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.ec_bankName',
	        labelValue: (0, _Utils.subLabel)(this.props, 'ec_bankName'),
	        'for': this.props.qid.value + 'ec_bankName',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.ec_bankName,
	        link: '',
	        reverseMargin: true
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'text',
	        additionalClass: className + ' ec_bankName',
	        qname: this.props.qname.value + '[ec_bankName]',
	        qid: this.props.qid.value + '_ec_bankName',
	        size: { value: '20' },
	        autocomplete: { value: 'off' },
	        dataComponent: 'ec_bankName',
	        inlineEditClass: this.props.inlineEditClass
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCPFNumber = function renderCPFNumber() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_cpf',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_cpf'),
	        'for': this.props.qid.value + '_cc_cpf',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_cpf,
	        link: '',
	        reverseMargin: true
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'number',
	        additionalClass: className + ' cc_cpf',
	        qname: this.props.qname.value + '[cc_cpf]',
	        qid: this.props.qid.value + '_cc_cpf',
	        size: { value: '20' },
	        autocomplete: { value: 'off' },
	        dataComponent: 'cc_cpf',
	        inlineEditClass: this.props.inlineEditClass
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderCcHolderBirthdate = function renderCcHolderBirthdate() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.cc_holderBirthdate',
	        labelValue: (0, _Utils.subLabel)(this.props, 'cc_holderBirthdate'),
	        'for': this.props.qid.value + '_cc_holderBirthdate',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.cc_holderBirthdate,
	        link: '',
	        reverseMargin: true
	      }),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'date',
	        additionalClass: className + ' cc_holderBirthdate',
	        qname: this.props.qname.value + '[cc_holderBirthdate]',
	        qid: this.props.qid.value + '_cc_holderBirthdate',
	        size: { value: '20' },
	        autocomplete: { value: 'off' },
	        dataComponent: 'cc_holderBirthdate',
	        inlineEditClass: this.props.inlineEditClass
	      })
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderTemplate1 = function renderTemplate1() {
	    var _props = this.props,
	        controlPaymentType = _props.controlPaymentType,
	        paymentMethod = _props.paymentMethod,
	        passive = _props.passive;


	    var ccTitle = this.props.ccTitle && this.props.ccTitle.value ? this.props.ccTitle.value : 'Credit Card';

	    var ccFirstName = this.renderCCFirstName();
	    var ccLastName = this.renderCCLastName();
	    var ccNumber = this.renderCCNumber();
	    var ccCcv = this.renderCCCCV();
	    var ccExpMonth = this.renderCcExpMonth();
	    var ccExpYear = this.renderCcExpYear();
	    var billingAddressHeader = this.renderBillingAddressHeader();
	    var addressPart = this.renderAddressPart();

	    var tableID = controlPaymentType === 'control_paypalpro' ? 'creditCardTable' : null;
	    var tableStyle = {};
	    if (!passive && controlPaymentType === 'control_paypalpro') {
	      tableStyle = { display: 'none', border: 0 };
	      if (paymentMethod && paymentMethod.value !== 'none' && paymentMethod.value !== 'paypal') {
	        tableStyle = { border: 0 };
	      }
	    }
	    var inlineCCTitle = void 0;
	    if (this.props.inlineEditClass) {
	      inlineCCTitle = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'ccTitle',
	        text: ccTitle
	      });
	    }

	    return _react2.default.createElement(
	      'table',
	      {
	        style: tableStyle,
	        id: tableID,
	        className: 'form-address-table payment-form-table',
	        cellPadding: '0',
	        cellSpacing: '0'
	      },
	      _react2.default.createElement(
	        'tbody',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'th',
	            {
	              colSpan: '2',
	              style: { textAlign: 'left', marginTop: '20px', display: 'table' },
	              id: 'ccTitle' + this.props.id.value
	            },
	            inlineCCTitle || ccTitle
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccFirstName
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccLastName
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          { className: 'if_cc_field' },
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccNumber
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccCcv
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccExpMonth
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccExpYear
	          )
	        ),
	        billingAddressHeader,
	        addressPart
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderPagseguroTemplate = function renderPagseguroTemplate() {
	    var ccTitle = this.props.ccTitle && this.props.ccTitle.value ? this.props.ccTitle.value : 'Credit Card';
	    var ccEmail = this.renderCCEmail();
	    var ccCPF = this.renderCPFNumber();
	    var ccHolderPhone = this.renderCcHolderPhone();
	    var ccHolderBirthdate = this.renderCcHolderBirthdate();
	    var ccFirstName = this.renderCCFirstName();
	    var ccLastName = this.renderCCLastName();
	    var ccNumber = this.renderCCNumber();
	    var ccCcv = this.renderCCCCV();
	    var ccExpMonth = this.renderCcExpMonth();
	    var ccExpYear = this.renderCcExpYear();
	    var billingAddressHeader = this.renderBillingAddressHeader();
	    var addressPart = this.renderPagseguroAddress();
	    var tableID = this.props.controlPaymentType === 'control_paypalpro' ? 'creditCardTable' : null;
	    var tableStyle = {};
	    if (!this.props.passive && this.props.controlPaymentType === 'control_paypalpro') {
	      tableStyle = { display: 'none', border: 0 };
	      if (this.props.paymentMethod && this.props.paymentMethod.value !== 'none' && this.props.paymentMethod.value !== 'paypal') {
	        tableStyle = { border: 0 };
	      }
	    }
	    var inlineCCTitle = void 0;
	    if (this.props.inlineEditClass) {
	      inlineCCTitle = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'ccTitle',
	        text: ccTitle
	      });
	    }
	    return _react2.default.createElement(
	      'table',
	      {
	        style: tableStyle,
	        id: tableID,
	        className: 'form-address-table payment-form-table',
	        cellPadding: '0',
	        cellSpacing: '0'
	      },
	      _react2.default.createElement(
	        'tbody',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccEmail
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccCPF
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccHolderPhone
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccHolderBirthdate
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'tbody',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'th',
	            {
	              colSpan: '2',
	              style: { textAlign: 'left', marginTop: '20px', display: 'table' },
	              id: 'ccTitle' + this.props.id.value
	            },
	            inlineCCTitle || ccTitle
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccFirstName
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccLastName
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          { className: 'if_cc_field' },
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccNumber
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccCcv
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccExpMonth
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccExpYear
	          )
	        ),
	        billingAddressHeader,
	        addressPart
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderMollieCardFields = function renderMollieCardFields() {
	    var isBuilder = typeof window !== 'undefined';
	    var ccFirstName = this.renderCCFirstName('div');
	    var ccNumber = this.renderCCNumber(false, false, 'div');
	    var ccCcv = this.renderCCCCV(false, false, 'div');
	    var ccExpMonthWithYear = this.renderCardExpiry(isBuilder, 'div');

	    var billingAddressHeader = this.renderBillingAddressHeader();

	    var mollieDummy = _react2.default.createElement(
	      'tr',
	      null,
	      _react2.default.createElement(
	        'td',
	        null,
	        _react2.default.createElement('div', { id: 'mollie_dummy', style: { display: 'none' } })
	      )
	    );

	    var ccMail = this.renderCCEmail('example@example.com');
	    var renderccMail = _react2.default.createElement(
	      'tr',
	      null,
	      _react2.default.createElement(
	        'td',
	        null,
	        ccMail
	      )
	    );

	    return _react2.default.createElement(
	      _react2.default.Fragment,
	      null,
	      _react2.default.createElement(
	        'table',
	        {
	          style: isBuilder ? { display: 'none' } : {},
	          id: 'mollie-credit-card',
	          className: 'form-address-table payment-form-table',
	          cellPadding: '0',
	          cellSpacing: '0'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '100%', colSpan: 2 },
	              ccFirstName
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            { className: 'if_cc_field' },
	            _react2.default.createElement(
	              'td',
	              { width: '100%', colSpan: 2 },
	              ccNumber
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccExpMonthWithYear
	            ),
	            _react2.default.createElement(
	              'td',
	              null,
	              ccCcv
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              mollieDummy
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'span',
	        { id: 'mollie-credit-card-address-klarnapaylater' },
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Email'.locale()
	        ),
	        _react2.default.createElement(
	          'table',
	          {
	            style: isBuilder ? { display: 'none' } : {},
	            className: 'form-address-table payment-form-table mollie-address',
	            cellPadding: '0',
	            cellSpacing: '0'
	          },
	          renderccMail,
	          billingAddressHeader,
	          this.renderAddressPart(true, 'countries', ['Austria'.locale(), 'Belgium'.locale(), 'Finland'.locale(), 'Germany'.locale(), 'Netherlands'.locale()])
	        )
	      ),
	      _react2.default.createElement(
	        'span',
	        {
	          id: 'mollie-credit-card-address-klarnasliceit-description'
	        },
	        'Klarna: Slice it requires a minimum payment amount for these countries:'.locale(),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'b',
	            null,
	            'Germany: '.locale()
	          ),
	          _react2.default.createElement('span', { dangerouslySetInnerHTML: { __html: '&euro; 45,' } }),
	          _react2.default.createElement(
	            'b',
	            null,
	            ' Finland and Australia: '.locale()
	          ),
	          _react2.default.createElement('span', { dangerouslySetInnerHTML: { __html: '&euro; 100' } })
	        )
	      ),
	      _react2.default.createElement(
	        'span',
	        { id: 'mollie-credit-card-address-klarnasliceit' },
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Email'.locale()
	        ),
	        _react2.default.createElement(
	          'table',
	          {
	            style: isBuilder ? { display: 'none' } : {},
	            className: 'form-address-table payment-form-table mollie-address',
	            cellPadding: '0',
	            cellSpacing: '0'
	          },
	          renderccMail,
	          billingAddressHeader,
	          this.renderAddressPart(true, 'countries', ['Austria'.locale(), 'Finland'.locale(), 'Germany'.locale()])
	        )
	      ),
	      _react2.default.createElement(
	        'span',
	        { id: 'mollie-credit-card-address-voucher' },
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Email'.locale()
	        ),
	        _react2.default.createElement(
	          'table',
	          {
	            style: isBuilder ? { display: 'none' } : {},
	            className: 'form-address-table payment-form-table mollie-address',
	            cellPadding: '0',
	            cellSpacing: '0'
	          },
	          renderccMail,
	          billingAddressHeader,
	          this.renderAddressPart(true, 'countries', ['Belgium'.locale()])
	        )
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderTemplate2 = function renderTemplate2() {
	    var ccTitle = this.props.ccTitle && this.props.ccTitle.value ? this.props.ccTitle.value : 'Credit Card';

	    var ccFirstName = this.renderCCFirstName();
	    var ccLastName = this.renderCCLastName();
	    var gateway = this.props.controlPaymentType.replace('control_', '');
	    var reqBillingAddr = this.props.requireBillingAddr;
	    var dummyID = gateway === 'square' ? 'square_dummy' : 'braintree_dummy';
	    var sandbox = gateway === 'square' && this.props.allowTest ? this.props.allowTest.value : null;
	    var altCcNumber = this.renderAltDiv(gateway, 'cc_number', { width: '147px' }, 'cc_number');
	    var altCcCcv = this.renderAltDiv(gateway, 'cc_ccv', { width: '120px' }, 'cc_ccv');
	    var expType = gateway === 'square' ? 'cc_exp' : 'exp_month';
	    var expLabelValue = gateway === 'square' ? 'cc_exp' : 'exp_month';
	    var altCcExp = this.renderAltDiv(gateway, expType, { width: '147px' }, expLabelValue);
	    var lastFieldType = gateway === 'square' ? 'cc_postal' : 'exp_year';
	    var lastFieldLabelValue = gateway === 'square' ? 'cc_postal' : 'exp_year';
	    var altCcLastField = this.renderAltDiv(gateway, lastFieldType, { width: '120px' }, lastFieldLabelValue);
	    var billingAddressHeader = gateway === 'braintree' && reqBillingAddr && reqBillingAddr.value === 'Yes' ? this.renderBillingAddressHeader() : null;
	    var addressPart = gateway === 'braintree' && reqBillingAddr && reqBillingAddr.value === 'Yes' ? this.renderAddressPart() : null;

	    var inlineCCTitle = void 0;
	    if (this.props.inlineEditClass) {
	      inlineCCTitle = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'ccTitle',
	        text: ccTitle
	      });
	    }
	    return _react2.default.createElement(
	      'table',
	      {
	        className: 'form-address-table payment-form-table',
	        style: { border: 0 },
	        cellPadding: '0',
	        cellSpacing: '0'
	      },
	      _react2.default.createElement(
	        'tbody',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'th',
	            {
	              colSpan: '2',
	              style: { textAlign: 'left', marginTop: '20px', display: 'table' },
	              id: 'ccTitle' + this.props.id.value
	            },
	            inlineCCTitle || ccTitle
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccFirstName
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccLastName
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          { className: 'if_cc_field' },
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            _react2.default.createElement('input', { id: dummyID, style: { display: 'none' }, 'data-sandbox': sandbox }),
	            altCcNumber
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            altCcCcv
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            altCcExp
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            altCcLastField
	          )
	        ),
	        billingAddressHeader,
	        addressPart
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderRegularTemplate = function renderRegularTemplate() {
	    var ccTitle = this.props.ccTitle && this.props.ccTitle.value ? this.props.ccTitle.value : 'Credit Card'.locale();

	    var ccFirstName = this.renderCCFirstName();
	    var ccLastName = this.renderCCLastName();

	    var ccNumber = this.renderCCNumber();
	    var ccCcv = this.renderCCCCV();
	    var ccExpMonth = this.renderCcExpMonth();
	    var ccExpYear = this.renderCcExpYear();

	    var inlineCCTitle = void 0;
	    if (this.props.inlineEditClass) {
	      inlineCCTitle = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'ccTitle',
	        text: ccTitle
	      });
	    }
	    return _react2.default.createElement(
	      'table',
	      {
	        className: 'form-address-table payment-form-table',
	        style: { border: 0 },
	        cellPadding: '0',
	        cellSpacing: '0'
	      },
	      _react2.default.createElement(
	        'tbody',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'th',
	            {
	              colSpan: '2',
	              style: { textAlign: 'left' },
	              id: 'ccTitle' + this.props.id.value
	            },
	            inlineCCTitle || ccTitle
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccFirstName
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccLastName
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          { className: 'if_cc_field' },
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccNumber
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccCcv
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccExpMonth
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccExpYear
	          )
	        )
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderTemplatePayPalPro = function renderTemplatePayPalPro() {
	    var ccTitle = this.props.ccTitle && this.props.ccTitle.value ? this.props.ccTitle.value : 'Credit Card';

	    var ccFirstName = this.renderCCFirstName();
	    var ccLastName = this.renderCCLastName();
	    var ccNumber = this.renderCCNumber();
	    var ccCcv = this.renderCCCCV();
	    var ccExpMonth = this.renderCcExpMonth();
	    var ccExpYear = this.renderCcExpYear();
	    var billingAddressHeader = this.renderBillingAddressHeader();
	    var addressPart = this.renderAddressPart(true);

	    var tableID = this.props.controlPaymentType === 'control_paypalpro' ? 'creditCardTable' : null;
	    var tableStyle = {};
	    if (!this.props.passive && this.props.controlPaymentType === 'control_paypalpro') {
	      tableStyle = { display: 'none', border: 0 };
	      if (this.props.paymentMethod && this.props.paymentMethod.value !== 'none' && this.props.paymentMethod.value !== 'paypal') {
	        tableStyle = { border: 0 };
	      }
	    }
	    var inlineCCTitle = void 0;
	    if (this.props.inlineEditClass) {
	      inlineCCTitle = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'ccTitle',
	        text: ccTitle
	      });
	    }
	    return _react2.default.createElement(
	      'table',
	      {
	        style: tableStyle,
	        id: tableID,
	        className: 'form-address-table payment-form-table',
	        cellPadding: '0',
	        cellSpacing: '0'
	      },
	      _react2.default.createElement(
	        'tbody',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'th',
	            {
	              colSpan: '2',
	              style: { textAlign: 'left', marginTop: '20px', display: 'table' },
	              id: 'ccTitle' + this.props.id.value
	            },
	            inlineCCTitle || ccTitle
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccFirstName
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccLastName
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          { className: 'if_cc_field' },
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccNumber
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccCcv
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccExpMonth
	          ),
	          _react2.default.createElement(
	            'td',
	            { width: '50%' },
	            ccExpYear
	          )
	        ),
	        billingAddressHeader,
	        addressPart
	      )
	    );
	  };

	  // Only paypal commerce platform card fields rendering


	  PaymentCreditCardAndAddress.prototype.renderPPCPcardFields = function renderPPCPcardFields() {
	    var isBuilder = typeof window !== 'undefined';

	    var ccFirstName = this.renderCCFirstName();
	    var ccLastName = this.renderCCLastName();

	    var ccNumber = this.renderCCNumber(true, isBuilder);
	    var ccCcv = this.renderCCCCV(true, isBuilder);

	    var ccExp = this.renderCardExpiry(isBuilder);

	    var paypalDummy = _react2.default.createElement(
	      'tr',
	      { style: { display: 'none' } },
	      _react2.default.createElement(
	        'td',
	        null,
	        _react2.default.createElement('input', { id: 'paypal_complete_dummy', style: { display: 'none' } })
	      )
	    );

	    var hostedFields = _react2.default.createElement(
	      _react2.default.Fragment,
	      null,
	      _react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'td',
	          { width: '50%' },
	          ccFirstName
	        ),
	        _react2.default.createElement(
	          'td',
	          { width: '50%' },
	          ccLastName
	        )
	      ),
	      _react2.default.createElement(
	        'tr',
	        { className: 'if_cc_field' },
	        _react2.default.createElement(
	          'td',
	          { width: '50%' },
	          ccNumber
	        ),
	        _react2.default.createElement(
	          'td',
	          { width: '50%' },
	          ccCcv
	        )
	      ),
	      _react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'td',
	          { width: '50%' },
	          ccExp
	        ),
	        _react2.default.createElement(
	          'td',
	          { width: '50%' },
	          paypalDummy
	        )
	      )
	    );

	    var paypal3dAuthModal = _react2.default.createElement('div', { id: 'payments-sdk__contingency-lightbox' });

	    return _react2.default.createElement(
	      'div',
	      { className: 'paypal-commerce-platform' },
	      _react2.default.createElement(
	        'div',
	        { className: 'paypal-content' },
	        _react2.default.createElement(
	          'table',
	          {
	            className: 'form-address-table payment-form-table',
	            style: { border: 0 },
	            cellPadding: '0',
	            cellSpacing: '0'
	          },
	          _react2.default.createElement(
	            'tbody',
	            null,
	            hostedFields,
	            paypal3dAuthModal
	          )
	        )
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderWepayTemplate = function renderWepayTemplate() {
	    var ccAllowTest = this.ccAllowTest();
	    var ccEmail = this.renderCCEmail();
	    var ccZipcode = this.renderCCZipcode();
	    var ccTitle = this.props.ccTitle && this.props.ccTitle.value ? this.props.ccTitle.value : 'Credit Card';

	    var ccFirstName = this.renderCCFirstName();
	    var ccLastName = this.renderCCLastName();

	    var ccNumber = this.renderCCNumber();
	    var ccCcv = this.renderCCCCV();
	    var ccExpMonth = this.renderCcExpMonth();
	    var ccExpYear = this.renderCcExpYear();

	    var inlineCCTitle = void 0;
	    if (this.props.inlineEditClass) {
	      inlineCCTitle = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'ccTitle',
	        text: ccTitle
	      });
	    }
	    return _react2.default.createElement(
	      'div',
	      null,
	      ccAllowTest,
	      _react2.default.createElement(
	        'table',
	        {
	          className: 'form-address-table payment-form-table',
	          style: { border: 0 },
	          cellPadding: '0',
	          cellSpacing: '0'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccEmail
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccZipcode
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'table',
	        {
	          className: 'form-address-table payment-form-table',
	          style: { border: 0 },
	          cellPadding: '0',
	          cellSpacing: '0'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'th',
	              {
	                colSpan: '2',
	                style: { textAlign: 'left' },
	                id: 'ccTitle' + this.props.id.value
	              },
	              inlineCCTitle || ccTitle
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccFirstName
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccLastName
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            { className: 'if_cc_field' },
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccNumber
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccCcv
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccExpMonth
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccExpYear
	            )
	          )
	        )
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderEcheckTemplate = function renderEcheckTemplate() {
	    var ecTitle = this.props.ecTitle && this.props.ecTitle.value ? this.props.ecTitle.value : 'eCheck.Net';

	    var ecRoutingNumber = this.renderEcRoutingNumber();
	    var ecAccountNumber = this.renderEcAccountNumber();
	    var ecNameOnAccount = this.renderEcNameOnAccount();
	    var ecBankName = this.renderEcBankName();
	    var ecBankAccountType = this.renderEcBankAccountType();

	    var inlineECTitle = void 0;
	    if (this.props.inlineEditClass) {
	      inlineECTitle = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'ecTitle',
	        text: ecTitle
	      });
	    }
	    return _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        'table',
	        {
	          className: 'form-address-table payment-form-table',
	          style: { border: 0 },
	          cellPadding: '0',
	          cellSpacing: '0'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'th',
	              {
	                colSpan: '2',
	                style: { textAlign: 'left' },
	                id: 'ecTitle' + this.props.id.value
	              },
	              inlineECTitle || ecTitle
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ecBankAccountType
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ecRoutingNumber
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ecAccountNumber
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ecNameOnAccount
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ecBankName
	            )
	          )
	        )
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderStripeACHManualTemplate = function renderStripeACHManualTemplate() {
	    var ecTitle = this.props.ecTitle && this.props.ecTitle.value ? this.props.ecTitle.value : 'Bank Account';
	    var ecEmail = this.renderCCEmail();
	    var ecRoutingNumber = this.renderEcRoutingNumber();
	    var ecAccountNumber = this.renderEcAccountNumber();
	    var ecNameOnAccount = this.renderEcNameOnAccount();
	    var ecBankAccountType = this.renderEcBankAccountType();

	    var depositA = this.renderDepositA();
	    var depositB = this.renderDepositB();

	    var inlineECTitle = void 0;
	    if (this.props.inlineEditClass) {
	      inlineECTitle = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'ecTitle',
	        text: ecTitle
	      });
	    }
	    return _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        'table',
	        {
	          className: 'form-address-table payment-form-deposits-table',
	          style: { border: 0, display: 'none' },
	          cellPadding: '0',
	          cellSpacing: '0'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'th',
	              { colSpan: 2 },
	              'Verify Your Account'
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { colSpan: 2, style: { padding: '20px 0' } },
	              'Stripe verifies your account by depositing two small amounts into your bank account. Enter these two deposits into the text boxes below, and click on the ',
	              _react2.default.createElement(
	                'b',
	                null,
	                'Verify'
	              ),
	              ' button.'
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            { className: 'deposits' },
	            _react2.default.createElement(
	              'td',
	              null,
	              'First Deposit:'
	            ),
	            _react2.default.createElement(
	              'td',
	              null,
	              depositA
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            { className: 'deposits deposit-b' },
	            _react2.default.createElement(
	              'td',
	              null,
	              'Second Deposit:'
	            ),
	            _react2.default.createElement(
	              'td',
	              null,
	              depositB
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            { className: 'verifyButtonTr' },
	            _react2.default.createElement(
	              'td',
	              null,
	              _react2.default.createElement(
	                'button',
	                { type: 'button', className: 'verifyButton' },
	                'Verify'
	              )
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'table',
	        {
	          className: 'form-address-table payment-form-table',
	          style: { border: 0 },
	          cellPadding: '0',
	          cellSpacing: '0'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              null,
	              ecEmail
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'th',
	              {
	                colSpan: '2',
	                style: { textAlign: 'left' },
	                id: 'ecTitle' + this.props.id.value
	              },
	              inlineECTitle || ecTitle
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ecRoutingNumber
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ecAccountNumber
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ecNameOnAccount
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ecBankAccountType
	            )
	          )
	        )
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderTemplateWithEmail = function renderTemplateWithEmail() {
	    var ccEmail = this.renderCCEmail();
	    var ccTitle = this.props.ccTitle && this.props.ccTitle.value ? this.props.ccTitle.value : 'Credit Card';

	    var ccFirstName = this.renderCCFirstName();
	    var ccLastName = this.renderCCLastName();

	    var ccNumber = this.renderCCNumber();
	    var ccCcv = this.renderCCCCV();
	    var ccExpMonth = this.renderCcExpMonth();
	    var ccExpYear = this.renderCcExpYear();

	    var inlineCCTitle = void 0;
	    if (this.props.inlineEditClass) {
	      inlineCCTitle = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'ccTitle',
	        text: ccTitle
	      });
	    }
	    return _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        'table',
	        {
	          className: 'form-address-table payment-form-table',
	          style: { border: 0 },
	          cellPadding: '0',
	          cellSpacing: '0'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccEmail
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'table',
	        {
	          className: 'form-address-table payment-form-table',
	          style: { border: 0 },
	          cellPadding: '0',
	          cellSpacing: '0'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'th',
	              {
	                colSpan: '2',
	                style: { textAlign: 'left' },
	                id: 'ccTitle' + this.props.id.value
	              },
	              inlineCCTitle || ccTitle
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccFirstName
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccLastName
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            { className: 'if_cc_field' },
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccNumber
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccCcv
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccExpMonth
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccExpYear
	            )
	          )
	        )
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.renderStripeSCATemplate = function renderStripeSCATemplate() {
	    var _props2 = this.props,
	        paymentType = _props2.paymentType,
	        emailField = _props2.emailField;

	    var ccEmail = null;
	    if (emailField.value === '' || emailField.value === 'none') {
	      ccEmail = this.renderCCEmail();
	    }
	    var ccTitle = this.props.ccTitle && this.props.ccTitle.value ? this.props.ccTitle.value : 'Credit Card';

	    var ccFirstName = this.renderCCFirstName();
	    var ccLastName = this.renderCCLastName();

	    var ccNumber = this.renderCCNumber(true);
	    var ccCcv = this.renderCCCCV(true);

	    var ccExpMonthWithYear = this.renderCardExpiry();

	    var inlineCCTitle = void 0;
	    if (this.props.inlineEditClass) {
	      inlineCCTitle = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'ccTitle',
	        text: ccTitle
	      });
	    }

	    var stripeDummy = _react2.default.createElement(
	      'tr',
	      { style: { display: 'none' } },
	      _react2.default.createElement(
	        'td',
	        null,
	        _react2.default.createElement('input', { id: 'stripesca_dummy', style: { display: 'none' } })
	      )
	    );

	    return _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        'table',
	        {
	          className: 'payment-up-form-table',
	          style: { border: 0, marginBottom: 10 },
	          cellPadding: '0',
	          cellSpacing: '0'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              paymentType.value === 'subscription' && ccEmail
	            )
	          )
	        )
	      ),
	      _react2.default.createElement(
	        'table',
	        {
	          className: 'form-address-table payment-form-table',
	          style: { border: 0 },
	          cellPadding: '0',
	          cellSpacing: '0'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'th',
	              {
	                colSpan: '2',
	                style: { textAlign: 'left' },
	                id: 'ccTitle' + this.props.id.value
	              },
	              inlineCCTitle || ccTitle
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccFirstName
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccLastName
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            { className: 'if_cc_field' },
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccNumber
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccCcv
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              ccExpMonthWithYear
	            ),
	            _react2.default.createElement(
	              'td',
	              { width: '50%' },
	              stripeDummy
	            )
	          )
	        )
	      )
	    );
	  };

	  PaymentCreditCardAndAddress.prototype.render = function render() {
	    var renderFinal = void 0;
	    switch (this.props.controlPaymentType) {
	      case 'control_braintree':
	      case 'control_square':
	        renderFinal = this.renderTemplate2();
	        break;
	      case 'control_mollie':
	        renderFinal = this.renderMollieCardFields();
	        break;
	      case 'control_stripe':
	        renderFinal = _react2.default.createElement(
	          'div',
	          { id: 'stripe-templates' },
	          _react2.default.createElement(
	            'div',
	            { className: 'stripe-sca-template' },
	            this.renderStripeSCATemplate()
	          )
	        );
	        break;
	      case 'control_authnet':
	      case 'control_cardconnect':
	      case 'control_eway':
	      case 'control_bluepay':
	      case 'control_payjunction':
	      case 'control_paysafe':
	        renderFinal = this.renderTemplate1();
	        break;
	      case 'control_pagseguro':
	        renderFinal = this.renderPagseguroTemplate();
	        break;

	      case 'control_paypalpro':
	        renderFinal = this.renderTemplatePayPalPro();
	        break;
	      case 'control_paypalcomplete':
	        renderFinal = this.renderPPCPcardFields();
	        break;
	      case 'control_chargify':
	        renderFinal = this.renderTemplateWithEmail();
	        break;

	      case 'control_firstdata':
	      case 'control_bluesnap':
	      case 'control_worldpayus':
	      case 'control_moneris':
	      case 'control_cybersource':
	        renderFinal = this.renderRegularTemplate();
	        break;

	      case 'control_wepay':
	        renderFinal = this.renderWepayTemplate();
	        break;

	      case 'control_echeck':
	        renderFinal = this.renderEcheckTemplate();
	        break;
	      case 'control_stripeACHManual':
	        renderFinal = this.renderStripeACHManualTemplate();
	        break;
	      default:
	    }

	    return renderFinal;
	  };

	  return PaymentCreditCardAndAddress;
	}(_react.Component);

	exports.default = PaymentCreditCardAndAddress;


	PaymentCreditCardAndAddress.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  ccTitle: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  ecTitle: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  addressTitle: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  allowTest: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paypalLink: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paymentMethod: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subfields: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  states: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  selectedCountry: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  compoundHint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  requireBillingAddr: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paymentType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  mollieAPM: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  emailField: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  formID: _propTypes2.default.number,
	  controlPaymentType: _propTypes2.default.string,
	  passive: _propTypes2.default.func,
	  inlineEditClass: _propTypes2.default.func
	};

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _Utils = __webpack_require__(16);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Autocomp = function (_Component) {
	  _inherits(Autocomp, _Component);

	  function Autocomp() {
	    _classCallCheck(this, Autocomp);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Autocomp.prototype.render = function render() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props) + ' form-autocomplete';
	    var fuzzySearch = this.props.fuzzySearch && this.props.fuzzySearch.value ? this.props.fuzzySearch.value : null;
	    var maxMatches = this.props.maxMatches && this.props.maxMatches.value ? this.props.maxMatches.value : null;
	    // autocomplete not added -> off added by Base Input
	    var qidValue = this.props.qid.value;

	    var subLabelObj = (0, _Utils.subLabelSingle)(this.props, qidValue);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'subLabel',
	        labelValue: subLabelObj,
	        'for': qidValue,
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        qid: qidValue,
	        qname: this.props.qname.value,
	        fuzzySearch: fuzzySearch,
	        maxMatches: maxMatches,
	        additionalClass: className,
	        autocomplete: { value: 'off' },
	        type: 'text',
	        dataComponent: 'autocomplete',
	        readOnly: this.props.readonly,
	        size: this.props.size,
	        defaultValue: this.props.defaultValue,
	        maxsize: this.props.maxsize
	      }))
	    );
	  };

	  return Autocomp;
	}(_react.Component);

	exports.default = Autocomp;


	Autocomp.getScript = function (props) {
	  var script = '';
	  if (props.items && props.items.value) {
	    var value = props.items.value.replace(/'/gim, "\\'").replace(/&amp;/gim, '&').replace(/(?:\r\n|\r|\n)/g, '\\n');

	    script += '      JotForm.autoCompletes[\'' + props.qid.value + '\'] = \'' + value + ' \';\n';
	  }

	  return script;
	};

	Autocomp.getState = function () {
	  return {};
	};

	Autocomp.propTypes = {
	  size: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  items: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  maxsize: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  fuzzySearch: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  readonly: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  maxMatches: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GENERATORS = {
	  uppercase: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
	  lowercase: 'abcdefghijklmnopqrstuvwxyz',
	  numbers: '0123456789'
	};

	var Autoincrement = function (_Component) {
	  _inherits(Autoincrement, _Component);

	  function Autoincrement() {
	    _classCallCheck(this, Autoincrement);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Autoincrement.prototype.render = function render() {
	    var className = 'form-textbox ' + (!this.props.inlineEditClass ? 'form-hidden' : '');
	    var inputType = this.props.inlineEditClass ? 'text' : 'hidden';
	    var inputStyle = this.props.inlineEditClass ? { opacity: '0.8', border: '1px dashed #ccc' } : null;
	    var readOnly = this.props.inlineEditClass ? { value: 'Yes' } : null;
	    var id = this.props.inlineEditClass ? 'hidden_' + this.props.id.value : this.props.qid.value;
	    var name = !this.props.inlineEditClass ? this.props.qname.value : null;

	    var generationType = this.props.generationType ? this.props.generationType.value : 'sequential';

	    var value = void 0;

	    if (generationType === 'sequential') {
	      var v = this.props.currentIndex.value;
	      if (this.props.idPadding && this.props.idPadding.value) {
	        v = (0, _Utils.strPad)(v, this.props.idPadding.value, '0', 'STR_PAD_LEFT');
	      }
	      if (this.props.idPrefix && this.props.idPrefix.value) {
	        v = '' + this.props.idPrefix.value + v;
	      }

	      if (!this.props.inlineEditClass) {
	        v = this.props.defaultValue ? this.props.defaultValue : this.props.currentIndex.value;
	      }

	      value = v;
	    } else {
	      var idLength = Number(this.props.idLength ? this.props.idLength.value : '6');
	      var characters = this.props.characters ? this.props.characters.value : 'numbers|uppercase';

	      var generator = '';

	      characters.split('|').forEach(function (type) {
	        generator += GENERATORS[type];
	      });

	      var result = '';
	      for (var i = 0; i < idLength; i++) {
	        result += generator[Math.floor(Math.random() * Math.floor(generator.length - 1))];
	      }

	      value = result;

	      if (this.props.idPrefix && this.props.idPrefix.value) {
	        value = '' + this.props.idPrefix.value + value;
	      }
	    }

	    var defVal = { value: value };

	    return _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	      qid: id,
	      qname: name,
	      additionalClass: className,
	      type: inputType,
	      dataComponent: 'autoincrement',
	      readOnly: readOnly,
	      defaultValue: defVal,
	      style: inputStyle
	    }));
	  };

	  return Autoincrement;
	}(_react.Component);

	exports.default = Autoincrement;


	Autoincrement.propTypes = {
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultValue: _propTypes2.default.string,
	  currentIndex: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  idPrefix: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  idPadding: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  generationType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  idLength: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  characters: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func
	};

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Birthdate = function Birthdate(props) {
	  var prop = JSON.parse(JSON.stringify(props));
	  var qid = prop.qid.value;
	  var id = prop.id.value;
	  var qname = prop.qname.value;
	  var passive = prop.inlineEditClass;
	  var bmonth = void 0;
	  var bday = void 0;
	  var byear = void 0;
	  var bdate = new Date();

	  prop.months.value = passive ? _Utils.specialOptions.Months.value : prop.months.value || _Utils.specialOptions.Months.value;

	  var cyear = bdate.getYear() < 1000 ? bdate.getYear() + 1900 : bdate.getYear();

	  bmonth = _react2.default.createElement(
	    'select',
	    {
	      disabled: prop.inlineEditClass,
	      name: qname + '[month]',
	      id: qid + '_month',
	      className: (0, _Utils.addValidation)(_Utils.classNames.dropdown, prop),
	      'data-component': 'birthdate-month',
	      'aria-labelledby': 'label_' + id + ' sublabel_' + id + '_month'
	    },
	    _react2.default.createElement('option', null),
	    prop.months.value.map(function (month) {
	      return _react2.default.createElement(
	        'option',
	        { value: month },
	        month
	      );
	    })
	  );

	  var days = [];
	  for (var i = 1; i <= 31; i += 1) {
	    days.push(_react2.default.createElement(
	      'option',
	      { value: i },
	      i
	    ));
	  }

	  bday = _react2.default.createElement(
	    'select',
	    {
	      disabled: prop.inlineEditClass,
	      name: qname + '[day]',
	      id: qid + '_day',
	      className: (0, _Utils.addValidation)(_Utils.classNames.dropdown, prop),
	      'data-component': 'birthdate-day',
	      'aria-labelledby': 'label_' + id + ' sublabel_' + id + '_day'
	    },
	    _react2.default.createElement('option', null),
	    days
	  );

	  var byearo = [];
	  if (prop.yearFrom.value && prop.yearTo.value) {
	    if (parseInt(prop.yearFrom.value, 10) <= parseInt(prop.yearTo.value, 10)) {
	      for (var yearn = prop.yearTo.value; yearn >= parseInt(prop.yearFrom.value, 10); yearn -= 1) {
	        byearo.push(_react2.default.createElement(
	          'option',
	          { value: yearn },
	          yearn
	        ));
	      }
	    } else {
	      for (var _yearn = prop.yearTo.value; _yearn <= parseInt(prop.yearFrom.value, 10); _yearn += 1) {
	        byearo.push(_react2.default.createElement(
	          'option',
	          { value: _yearn },
	          _yearn
	        ));
	      }
	    }
	  } else {
	    for (var _yearn2 = cyear; _yearn2 >= 1920; _yearn2 -= 1) {
	      byearo.push(_react2.default.createElement(
	        'option',
	        { value: _yearn2 },
	        _yearn2
	      ));
	    }
	  }

	  byear = _react2.default.createElement(
	    'select',
	    {
	      disabled: prop.inlineEditClass,
	      name: qname + '[year]',
	      id: qid + '_year',
	      className: (0, _Utils.addValidation)(_Utils.classNames.dropdown, prop),
	      'data-component': 'birthdate-year',
	      'aria-labelledby': 'label_' + id + ' sublabel_' + id + '_year'
	    },
	    _react2.default.createElement('option', null),
	    byearo
	  );

	  bmonth = _react2.default.createElement(
	    _SubLabel2.default,
	    _extends({}, prop, {
	      labelValue: (0, _Utils.subLabel)(prop, 'month', prop.id.value),
	      defaultValue: _QuestionProps2.default.control_birthdate.sublabels.value.month,
	      'for': qid + '_month',
	      propPath: 'sublabels.month'
	    }),
	    bmonth
	  );

	  bday = _react2.default.createElement(
	    _SubLabel2.default,
	    _extends({}, prop, {
	      labelValue: (0, _Utils.subLabel)(prop, 'day', prop.id.value),
	      defaultValue: _QuestionProps2.default.control_birthdate.sublabels.value.day,
	      'for': qid + '_day',
	      propPath: 'sublabels.day'
	    }),
	    bday
	  );

	  byear = _react2.default.createElement(
	    _SubLabel2.default,
	    _extends({}, prop, {
	      labelValue: (0, _Utils.subLabel)(prop, 'year', prop.id.value),
	      defaultValue: _QuestionProps2.default.control_birthdate.sublabels.value.year,
	      'for': qid + '_year',
	      propPath: 'sublabels.year'
	    }),
	    byear
	  );

	  var markup = [];

	  if (prop.format.value === 'mmddyyyy') {
	    markup = [bmonth, bday, byear];
	  } else if (prop.format.value === 'yyyymmdd') {
	    markup = [byear, bmonth, bday];
	  } else {
	    markup = [bday, bmonth, byear];
	  }

	  return _react2.default.createElement(
	    'div',
	    { 'data-wrapper-react': 'true' },
	    markup
	  );
	};

	exports.default = Birthdate;

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Bluepay = function (_Component) {
	  _inherits(Bluepay, _Component);

	  function Bluepay() {
	    _classCallCheck(this, Bluepay);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Bluepay.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_bluepay' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_bluepay'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Bluepay;
	}(_react.Component);

	exports.default = Bluepay;


	Bluepay.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Bluepay.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Bluepay.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Bluesnap = function (_Component) {
	  _inherits(Bluesnap, _Component);

	  function Bluesnap() {
	    _classCallCheck(this, Bluesnap);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Bluesnap.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_bluesnap' }));
	    // const paymentCreditCardAndAddress = null;
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_bluesnap'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Bluesnap;
	}(_react.Component);

	exports.default = Bluesnap;


	Bluesnap.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Bluesnap.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Bluesnap.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Braintree = function (_Component) {
	  _inherits(Braintree, _Component);

	  function Braintree() {
	    _classCallCheck(this, Braintree);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Braintree.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_braintree' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_braintree'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Braintree;
	}(_react.Component);

	exports.default = Braintree;


	Braintree.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Braintree.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Braintree.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _BaseButton = __webpack_require__(100);

	var _BaseButton2 = _interopRequireDefault(_BaseButton);

	var _Pagebreak = __webpack_require__(101);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document */


	var Button = function (_Component) {
	  _inherits(Button, _Component);

	  function Button(props) {
	    _classCallCheck(this, Button);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	    _this.renderButton = _this.renderButton.bind(_this);
	    return _this;
	  }

	  Button.prototype.getButtonClassNames = function getButtonClassNames() {
	    var styleName = this.props.buttonStyle.value;

	    var className = styleName !== 'None' ? ' form-submit-button-' + styleName : '';
	    className = this.props.encryptIcon && this.props.encryptIcon.value === 'Yes' ? className + ' icon-encrypt' : className;

	    return className;
	  };

	  Button.prototype.renderClearButton = function renderClearButton() {
	    var inline = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var btn = _react2.default.createElement(_BaseButton2.default, {
	      id: 'input_reset_' + this.props.id.value,
	      qid: this.props.id.value,
	      type: 'reset',
	      additionalClass: 'form-submit-reset' + this.getButtonClassNames() + ' jf-form-buttons',
	      buttonText: this.props.clearText.value || (this.props.themeVersion === 'v2' ? 'Clear All Questions' : 'Clear Form'),
	      inlineEditClass: this.props.inlineEditClass,
	      inlineEditDefaultValue: _QuestionProps2.default[this.props.type.value].clearText.value,
	      propPath: 'clearText',
	      dataComponent: 'button'
	    });

	    if (inline) {
	      return _react2.default.createElement(
	        'div',
	        { key: 'btn_clear', className: 'form-submit-clear-wrapper' },
	        btn
	      );
	    }

	    return _react2.default.createElement(
	      _react2.default.Fragment,
	      { key: 'btn_clear' },
	      _react2.default.createElement(
	        'span',
	        null,
	        '\xA0'
	      ),
	      btn
	    );
	  };

	  Button.prototype.renderBackButton = function renderBackButton() {
	    if (!this.props.pageBreak) {
	      return null;
	    }

	    var pageBreak = this.props.pageBreak;

	    var _getPagebreakProps = (0, _Pagebreak.getPagebreakProps)(Object.assign({ inlineEditClass: this.props.inlineEditClass }, pageBreak)),
	        className = _getPagebreakProps.className,
	        hiddenBack = _getPagebreakProps.hiddenBack,
	        backStyle = _getPagebreakProps.backStyle,
	        firstPage = _getPagebreakProps.firstPage;

	    if (firstPage) {
	      return null;
	    }

	    return _react2.default.createElement(
	      'div',
	      { key: 'btn_back', className: 'form-pagebreak-back-container' },
	      _react2.default.createElement(_BaseButton2.default, {
	        additionalClass: 'form-pagebreak-back ' + className + hiddenBack + ' jf-form-buttons',
	        id: 'form-pagebreak-back_' + pageBreak.qid.value,
	        qid: pageBreak.qid.value,
	        propPath: 'backText',
	        buttonText: pageBreak.backText.value || 'Back',
	        type: 'button',
	        inlineEditClass: this.props.inlineEditClass,
	        inlineEditDefaultValue: _QuestionProps2.default[pageBreak.type.value].backText.value,
	        style: backStyle,
	        dataComponent: 'pagebreak-back'
	      })
	    );
	  };

	  Button.prototype.renderNextButton = function renderNextButton() {
	    if (!this.props.pageBreak) {
	      return null;
	    }

	    var pageBreak = this.props.pageBreak;

	    var _getPagebreakProps2 = (0, _Pagebreak.getPagebreakProps)(Object.assign({ inlineEditClass: this.props.inlineEditClass }, pageBreak)),
	        className = _getPagebreakProps2.className,
	        hiddenNext = _getPagebreakProps2.hiddenNext,
	        nextStyle = _getPagebreakProps2.nextStyle,
	        lastPage = _getPagebreakProps2.lastPage;

	    if (lastPage) {
	      return null;
	    }

	    return _react2.default.createElement(
	      'div',
	      { key: 'btn_next', className: 'form-pagebreak-next-container' },
	      _react2.default.createElement(_BaseButton2.default, {
	        additionalClass: 'form-pagebreak-next ' + className + hiddenNext + ' jf-form-buttons',
	        id: 'form-pagebreak-next_' + pageBreak.qid.value,
	        qid: pageBreak.qid.value,
	        propPath: 'nextText',
	        buttonText: pageBreak.nextText.value || 'Next',
	        type: 'button',
	        inlineEditClass: pageBreak.inlineEditClass,
	        inlineEditDefaultValue: _QuestionProps2.default[pageBreak.type.value].nextText.value,
	        style: nextStyle,
	        dataComponent: 'pagebreak-next'
	      })
	    );
	  };

	  Button.prototype.renderPreviewButton = function renderPreviewButton() {
	    var content = void 0;
	    if (this.props.inlineEditClass) {
	      content = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'previewText',
	        text: this.props.previewText && this.props.previewText.value || 'Preview',
	        defaultValue: _QuestionProps2.default[this.props.type.value].previewText.value,
	        placeholder: ''
	      });
	    } else {
	      content = this.props.previewText && this.props.previewText.value || 'Preview';
	    }
	    return _react2.default.createElement(
	      _react2.default.Fragment,
	      { key: 'btn_preview' },
	      _react2.default.createElement(
	        _BaseButton2.default,
	        {
	          id: 'input_preview_' + this.props.id.value,
	          qid: this.props.id.value,
	          type: 'button',
	          additionalClass: 'form-submit-preview jf-form-buttons' + this.getButtonClassNames(),
	          inlineEditClass: this.props.inlineEditClass,
	          inlineEditDefaultValue: _QuestionProps2.default[this.props.type.value].previewText.value,
	          addImage: true,
	          propPath: 'previewText'
	        },
	        _react2.default.createElement('img', { src: this.props.cdnconfig.CDN + 'assets/img/theme-assets/5ca4930530899c64ff77cfa1/previewPDF-icon.svg' }),
	        _react2.default.createElement(
	          'span',
	          { id: 'span_preview_' + this.props.id.value, className: 'span_preview' },
	          content
	        )
	      ),
	      _react2.default.createElement(
	        'span',
	        null,
	        '\xA0'
	      )
	    );
	  };

	  Button.prototype.renderPrintButton = function renderPrintButton() {
	    var content = void 0;
	    var printButtonText = this.props.themeVersion && this.props.themeVersion === 'v2' ? 'Print' : 'Print Form';
	    if (this.props.inlineEditClass) {
	      content = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'printText',
	        text: this.props.printText.value || printButtonText,
	        defaultValue: _QuestionProps2.default[this.props.type.value].printText.value,
	        placeholder: ''
	      });
	    } else {
	      content = this.props.printText.value || printButtonText;
	    }

	    return _react2.default.createElement(
	      _react2.default.Fragment,
	      { key: 'btn_print' },
	      _react2.default.createElement(
	        'span',
	        null,
	        '\xA0'
	      ),
	      _react2.default.createElement(
	        _BaseButton2.default,
	        {
	          id: 'input_print_' + this.props.id.value,
	          qid: this.props.id.value,
	          type: 'button',
	          additionalClass: 'form-submit-print' + this.getButtonClassNames() + ' jf-form-buttons',
	          inlineEditClass: this.props.inlineEditClass,
	          inlineEditDefaultValue: _QuestionProps2.default[this.props.type.value].printText.value,
	          addImage: true,
	          propPath: 'printText'
	        },
	        _react2.default.createElement('img', {
	          src: this.props.cdnconfig.CDN + 'images/printer.png',
	          style: { verticalAlign: 'middle' }
	        }),
	        _react2.default.createElement(
	          'span',
	          {
	            id: 'span_print_' + this.props.id.value,
	            className: 'span_print'
	          },
	          content
	        )
	      )
	    );
	  };

	  Button.prototype.renderSCLButton = function renderSCLButton() {
	    var defaultValue = _QuestionProps2.default.form.continueLaterButtonText.value.locale();
	    return _react2.default.createElement(_BaseButton2.default, {
	      key: 'btn_scl',
	      id: 'input_scl_' + this.props.id.value,
	      inlineEditorCustomID: 'Form',
	      qid: this.props.id.value,
	      type: 'button',
	      additionalClass: 'form-submit-button form-sacl-button js-new-sacl-button ' + this.getButtonClassNames() + ' jf-form-buttons ' + (this.props.themeVersion === 'v1' ? 'sacl-button' : ''),
	      buttonText: this.props.continueLaterButtonText && this.props.continueLaterButtonText.value ? this.props.continueLaterButtonText.value : defaultValue,
	      inlineEditClass: this.props.inlineEditClass,
	      propPath: 'continueLaterButtonText',
	      inlineEditDefaultValue: defaultValue
	    });
	  };

	  Button.prototype.renderPaypalPreviewButton = function renderPaypalPreviewButton() {
	    if (typeof document === 'undefined') return;
	    var paypalSPB = document.querySelector('.paypal-buttons');
	    var height = paypalSPB ? paypalSPB.clientHeight : 'auto';

	    return _react2.default.createElement(
	      'div',
	      { className: 'paypal-button-preview', style: { height: height } },
	      _react2.default.createElement(
	        'div',
	        null,
	        ' Paypal Smart Buttons '
	      )
	    );
	  };

	  Button.prototype.renderSubmit = function renderSubmit() {
	    var useImage = this.props.useImage && this.props.useImage.value ? true : null;
	    var imageClass = useImage ? ' form-submit-button-img' : '';

	    return _react2.default.createElement(
	      _BaseButton2.default,
	      {
	        key: 'btn_submit',
	        id: 'input_' + this.props.id.value,
	        qid: this.props.id.value,
	        type: 'submit',
	        additionalClass: 'form-submit-button' + imageClass + this.getButtonClassNames() + ' submit-button jf-form-buttons jsTest-submitField',
	        buttonText: useImage ? '' : this.props.text.value || '',
	        useImage: useImage,
	        inlineEditClass: this.props.inlineEditClass,
	        dataContent: this.props.encryptIcon && this.props.encryptIcon.value === 'Yes' ? 'This form is encrypted'.locale() : '',
	        inlineEditDefaultValue: _QuestionProps2.default[this.props.type.value].text.value
	      },
	      useImage ? _react2.default.createElement('img', { src: this.props.useImage.value, alt: this.props.text.value || 'Submit' }) : null
	    );
	  };

	  Button.prototype.renderButton = function renderButton(type) {
	    switch (type) {
	      case 'back':
	        return this.renderBackButton();
	      case 'preview':
	        return this.renderPreviewButton();
	      case 'print':
	        return this.renderPrintButton();
	      case 'clear':
	        return this.renderClearButton();
	      case 'paypalBt':
	        var showPaypalMessage = true;

	        if (typeof document !== 'undefined' && !this.props.payLaterEnabled) {
	          showPaypalMessage = false;
	        }

	        return _react2.default.createElement(
	          _react2.default.Fragment,
	          null,
	          _react2.default.createElement(
	            'div',
	            { key: 'btn_paypal', className: 'paypal-submit-button-wrapper', 'paypal-submit-button-wrapper': true },
	            this.renderPaypalPreviewButton()
	          ),
	          _react2.default.createElement(
	            'div',
	            {
	              className: 'paypal-paylater-messages',
	              style: { order: 2, width: '100%', display: showPaypalMessage ? 'block' : 'none' }
	            },
	            _react2.default.createElement('div', { className: 'message-area' })
	          )
	        );
	      case 'useNewContinueLater':
	        return this.renderSCLButton();
	      case 'submit':
	        return this.renderSubmit();
	      case 'next':
	        return this.renderNextButton();
	      default:
	        return null;
	    }
	  };

	  Button.prototype.render = function render() {
	    var _this2 = this;

	    var buttonAlign = this.props.buttonAlign.value.toLowerCase();
	    var align = { textAlign: buttonAlign };

	    if (buttonAlign === 'auto') {
	      align = { marginLeft: '156px' };
	    }

	    var paypalBt = this.props.paypalBt && this.props.paypalBt.value === 'Yes';
	    var hasPageBreak = !!this.props.pageBreak;
	    var clearBt = this.props.clear && this.props.clear.value === 'Yes';
	    var themeVersion = this.props.themeVersion || 'v1';

	    var buttonOrder = ['paypalBt', 'preview', 'useNewContinueLater', 'submit', 'clear', 'print'];
	    if (themeVersion === 'v2') {
	      buttonOrder = ['back', 'preview', 'print', 'paypalBt', 'useNewContinueLater', 'submit', 'next'];
	    }

	    var buttons = buttonOrder.filter(function (b) {
	      if (b === 'submit') {
	        return true;
	      }

	      if (b === 'back' || b === 'next') {
	        return hasPageBreak;
	      }

	      return _this2.props[b] && _this2.props[b].value === 'Yes';
	    });

	    return _react2.default.createElement(
	      _react2.default.Fragment,
	      null,
	      _react2.default.createElement(
	        'div',
	        {
	          style: themeVersion === 'v2' ? {} : align,
	          'data-align': buttonAlign ? buttonAlign : null,
	          className: 'form-buttons-wrapper form-buttons-' + buttonAlign + ' ' + (paypalBt ? 'paypal-submit-container' : '') + ' ' + (hasPageBreak ? 'form-pagebreak' : '') + ' jsTest-button-wrapperField'
	        },
	        buttons.map(this.renderButton)
	      ),
	      themeVersion === 'v2' && clearBt && this.renderClearButton(true)
	    );
	  };

	  return Button;
	}(_react.Component);

	exports.default = Button;


	Button.propTypes = {
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  buttonAlign: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  buttonStyle: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  encryptIcon: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  clear: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  clearText: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  print: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  printText: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  preview: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  previewText: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  useImage: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  cdnconfig: _propTypes2.default.shape({
	    CDN: _propTypes2.default.string
	  }),
	  paypalBt: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterEnabled: _propTypes2.default.bool,
	  continueLaterButtonText: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  useNewContinueLater: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  pageBreak: _propTypes2.default.shape({
	    // eslint-disable-next-line react/no-unused-prop-types
	    isLastPage: _propTypes2.default.bool.isRequired,
	    // eslint-disable-next-line react/no-unused-prop-types
	    isFirstPage: _propTypes2.default.bool.isRequired
	  }),
	  themeVersion: _propTypes2.default.string
	};

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var BaseButton = function (_Component) {
	  _inherits(BaseButton, _Component);

	  function BaseButton() {
	    _classCallCheck(this, BaseButton);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  BaseButton.prototype.render = function render() {
	    var content = void 0;
	    var element = void 0;

	    if (!(this.props.inlineEditClass && !this.props.addImage && !this.props.useImage)) {
	      content = this.props.children || (0, _Utils.htmlDecode)(this.props.buttonText);
	    }
	    element = _react2.default.createElement(
	      'button',
	      {
	        id: this.props.id,
	        style: this.props.style,
	        type: this.props.inlineEditClass ? 'button' : this.props.type,
	        className: this.props.additionalClass,
	        'data-component': this.props.dataComponent ? this.props.dataComponent : 'button',
	        'data-content': this.props.dataContent
	      },
	      content
	    );
	    if (this.props.inlineEditClass && !this.props.addImage && !this.props.useImage) {
	      var allProps = Object.assign({}, element.props, {
	        id: this.props.inlineEditorCustomID ? this.props.inlineEditorCustomID : this.props.qid,
	        propPath: this.props.propPath || 'text',
	        text: (0, _Utils.htmlDecode)(this.props.buttonText) || '',
	        placeholder: '',
	        defaultValue: this.props.inlineEditDefaultValue
	      });
	      element = _react2.default.createElement(this.props.inlineEditClass, allProps, element);
	    }
	    return element;
	  };

	  return BaseButton;
	}(_react.Component);

	exports.default = BaseButton;


	BaseButton.propTypes = {
	  qid: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
	  id: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
	  type: _propTypes2.default.string,
	  additionalClass: _propTypes2.default.string,
	  inlineEditorCustomID: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
	  buttonText: _propTypes2.default.string,
	  children: _propTypes2.default.node,
	  style: _propTypes2.default.shape({}),
	  inlineEditClass: _propTypes2.default.func,
	  propPath: _propTypes2.default.string,
	  dataComponent: _propTypes2.default.string,
	  useImage: _propTypes2.default.bool,
	  addImage: _propTypes2.default.bool,
	  inlineEditDefaultValue: _propTypes2.default.string,
	  dataContent: _propTypes2.default.string
	};

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.getPagebreakProps = getPagebreakProps;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _BaseButton = __webpack_require__(100);

	var _BaseButton2 = _interopRequireDefault(_BaseButton);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function getPagebreakProps(props) {
	  var styleName = props.buttonStyle && props.buttonStyle.value ? props.buttonStyle.value.toLowerCase() : null;
	  var className = styleName !== 'none' ? ' form-submit-button-' + styleName : '';
	  var hiddenBack = !props.inlineEditClass && props.backVisi && props.backVisi.value === 'Hidden' ? ' button-hidden' : '';
	  var hiddenNext = !props.inlineEditClass && props.nextVisi && props.nextVisi.value === 'Hidden' ? ' button-hidden' : '';
	  var backStyle = props.inlineEditClass && props.backVisi && props.backVisi.value === 'Hidden' ? { opacity: '0.3' } : null;
	  var nextStyle = props.inlineEditClass && props.nextVisi && props.nextVisi.value === 'Hidden' ? { opacity: '0.3' } : null;
	  var firstPage = props.inlineEditClass && props.isFirstPage;
	  var lastPage = props.inlineEditClass && props.isLastPage;
	  var useNewContinueLater = props.useNewContinueLater && props.useNewContinueLater.value === 'Yes';
	  var sclButtonDefaultValue = _QuestionProps2.default.form.continueLaterButtonText.value;

	  return {
	    className: className,
	    hiddenBack: hiddenBack,
	    hiddenNext: hiddenNext,
	    backStyle: backStyle,
	    nextStyle: nextStyle,
	    firstPage: firstPage,
	    lastPage: lastPage,
	    useNewContinueLater: useNewContinueLater,
	    sclButtonDefaultValue: sclButtonDefaultValue
	  };
	}

	var Pagebreak = function (_Component) {
	  _inherits(Pagebreak, _Component);

	  function Pagebreak() {
	    _classCallCheck(this, Pagebreak);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Pagebreak.prototype.render = function render() {
	    var _getPagebreakProps = getPagebreakProps(this.props),
	        className = _getPagebreakProps.className,
	        hiddenBack = _getPagebreakProps.hiddenBack,
	        hiddenNext = _getPagebreakProps.hiddenNext,
	        backStyle = _getPagebreakProps.backStyle,
	        nextStyle = _getPagebreakProps.nextStyle,
	        firstPage = _getPagebreakProps.firstPage,
	        lastPage = _getPagebreakProps.lastPage,
	        useNewContinueLater = _getPagebreakProps.useNewContinueLater,
	        sclButtonDefaultValue = _getPagebreakProps.sclButtonDefaultValue;

	    return _react2.default.createElement(
	      'div',
	      { className: 'form-pagebreak', 'data-component': 'pagebreak' },
	      _react2.default.createElement(
	        'div',
	        { className: 'form-pagebreak-back-container' },
	        firstPage ? null : _react2.default.createElement(_BaseButton2.default, {
	          additionalClass: 'form-pagebreak-back ' + className + hiddenBack + ' jf-form-buttons',
	          id: 'form-pagebreak-back_' + this.props.id.value,
	          qid: this.props.id.value,
	          propPath: 'backText',
	          buttonText: this.props.backText.value || 'Back',
	          type: 'button',
	          inlineEditClass: this.props.inlineEditClass,
	          inlineEditDefaultValue: _QuestionProps2.default[this.props.type.value].backText.value,
	          style: backStyle,
	          dataComponent: 'pagebreak-back'
	        })
	      ),
	      _react2.default.createElement(
	        'div',
	        { className: 'form-pagebreak-next-container' },
	        !lastPage ? _react2.default.createElement(_BaseButton2.default, {
	          additionalClass: 'form-pagebreak-next ' + className + hiddenNext + ' jf-form-buttons',
	          id: 'form-pagebreak-next_' + this.props.id.value,
	          qid: this.props.id.value,
	          propPath: 'nextText',
	          buttonText: this.props.nextText.value || 'Next',
	          type: 'button',
	          inlineEditClass: this.props.inlineEditClass,
	          inlineEditDefaultValue: _QuestionProps2.default[this.props.type.value].nextText.value,
	          style: nextStyle,
	          dataComponent: 'pagebreak-next'
	        }) : null
	      ),
	      !lastPage && useNewContinueLater ? _react2.default.createElement(
	        'div',
	        { className: 'form-pagebreak-next-container form-pagebreak-save-container' },
	        _react2.default.createElement(_BaseButton2.default, {
	          additionalClass: 'form-submit-button form-sacl-button js-new-sacl-button ' + className + ' jf-form-buttons ' + (this.props.themeVersion === 'v1' ? 'sacl-button' : ''),
	          id: 'input_scl_' + this.props.id.value,
	          inlineEditorCustomID: 'Form',
	          qid: this.props.id.value,
	          type: 'button',
	          buttonText: this.props.continueLaterButtonText && this.props.continueLaterButtonText.value ? this.props.continueLaterButtonText.value : sclButtonDefaultValue,
	          inlineEditClass: this.props.inlineEditClass,
	          propPath: 'continueLaterButtonText',
	          inlineEditDefaultValue: sclButtonDefaultValue
	        })
	      ) : null,
	      _react2.default.createElement('div', {
	        style: { clear: 'both' },
	        className: 'pageInfo form-sub-label',
	        id: 'pageInfo_' + this.props.id.value
	      })
	    );
	  };

	  return Pagebreak;
	}(_react.Component);

	exports.default = Pagebreak;


	Pagebreak.getState = function (prop) {
	  return {
	    pageInfo: prop.pageInfo,
	    backVisi: prop.backVisi,
	    nextVisi: prop.nextVisi
	  };
	};

	Pagebreak.getScript = function (prop) {
	  // const state = Pagebreak.getState(prop);
	  var script = '';

	  if (!prop.inlineEditClass && prop.autoNext && prop.autoNext.value === 'Yes') {
	    script += '      JotForm.autoNext(' + prop.id.value + ');\n';
	  }
	  return script;
	};

	Pagebreak.propTypes = {
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  buttonStyle: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  pageInfo: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  backText: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  nextText: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  backVisi: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  nextVisi: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  autoNext: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  // Both props below are used, but...
	  // eslint-disable-next-line react/no-unused-prop-types
	  isFirstPage: _propTypes2.default.bool,
	  // eslint-disable-next-line react/no-unused-prop-types
	  isLastPage: _propTypes2.default.bool,
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  continueLaterButtonText: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  useNewContinueLater: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  themeVersion: _propTypes2.default.string
	};

/***/ },
/* 102 */,
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Calculation = function Calculation(prop) {
	  var id = prop.id.value;
	  var calculationProps = _QuestionProps2.default.control_calculation;
	  var size = prop.size && prop.size.value ? prop.size.value : '20';
	  var calcName = prop.name && prop.name.value ? prop.name.value : 'calculation';
	  var defValue = prop.defaultResult && prop.defaultResult.value.length > 0 ? prop.defaultResult.value : '';

	  var required = prop.required.value === 'Yes' ? ' validate[required]' : '';
	  var input = _react2.default.createElement('input', {
	    disabled: prop.inlineEditClass,
	    'data-component': 'calculation',
	    type: 'text',
	    'data-defaultvalue': defValue,
	    className: 'form-textbox' + required,
	    'data-type': 'input-textbox',
	    id: 'input_' + id,
	    name: 'q' + id + '_' + calcName,
	    value: defValue,
	    size: size
	  });
	  if (prop.subLabel && prop.subLabel.value) {
	    input = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, prop, {
	        'for': 'input_' + id,
	        labelValue: prop.subLabel.value,
	        propPath: 'subLabel',
	        defaultValue: calculationProps.subLabel.value
	      }),
	      input
	    );
	  }
	  return input;
	};

	exports.default = Calculation;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _JotCaptcha = __webpack_require__(105);

	var _JotCaptcha2 = _interopRequireDefault(_JotCaptcha);

	var _ReCaptcha = __webpack_require__(106);

	var _ReCaptcha2 = _interopRequireDefault(_ReCaptcha);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Captcha = function (_Component) {
	  _inherits(Captcha, _Component);

	  function Captcha() {
	    _classCallCheck(this, Captcha);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Captcha.prototype.render = function render() {
	    if (this.props.captchaType && this.props.captchaType.value === 'jotCaptcha') {
	      return _react2.default.createElement(_JotCaptcha2.default, this.props);
	    }

	    // for backward compatibility
	    if (this.props.useReCaptcha && this.props.useReCaptcha.value === 'No') {
	      return _react2.default.createElement(_JotCaptcha2.default, this.props);
	    }

	    return _react2.default.createElement(_ReCaptcha2.default, this.props);
	  };

	  return Captcha;
	}(_react.Component);

	exports.default = Captcha;


	Captcha.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  useReCaptcha: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  captchaType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	Captcha.getScript = function (prop) {
	  // for backward comp
	  if (prop.useReCaptcha && prop.useReCaptcha.value === 'No') {
	    return _JotCaptcha2.default.getScript(prop);
	  }

	  if (prop.captchaType && prop.captchaType.value === 'jotCaptcha') {
	    return _JotCaptcha2.default.getScript(prop);
	  }
	};

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var JotCaptcha = function (_Component) {
	  _inherits(JotCaptcha, _Component);

	  function JotCaptcha() {
	    _classCallCheck(this, JotCaptcha);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  JotCaptcha.prototype.render = function render() {
	    var captchaImage = _react2.default.createElement('img', {
	      alt: 'Captcha - Reload if not displayed',
	      id: this.props.qid.value + '_captcha',
	      className: 'form-captcha-image',
	      style: { background: 'url(' + this.props.cdnconfig.CDN + 'images/loader-big.gif) no-repeat center' },
	      src: this.props.cdnconfig.CDN + 'images/blank.gif',
	      width: 150,
	      height: 41
	    });
	    var reloadButton = _react2.default.createElement('img', { src: this.props.cdnconfig.CDN + 'images/reload.png', alt: 'Reload', style: { cursor: 'pointer', verticalAlign: 'middle' }, id: this.props.qid.value + '_reload' });

	    if (this.props.passive) {
	      captchaImage = _react2.default.createElement('img', { alt: 'Captcha - Reload if not displayed', className: 'form-captcha-image', src: '../cimg/38.png', width: 150 });
	    }

	    var required = this.props.required && this.props.required.value === 'Yes' ? true : null;

	    return _react2.default.createElement(
	      'div',
	      { className: 'form-captcha', 'data-component': 'captcha' },
	      _react2.default.createElement(
	        'label',
	        { htmlFor: this.props.qid.value },
	        captchaImage
	      ),
	      _react2.default.createElement(
	        'div',
	        { style: { whiteSpace: 'nowrap' } },
	        _react2.default.createElement('input', { type: 'text', id: this.props.qid.value, className: 'form-textbox validate[required]', name: 'captcha', style: { width: '130px' }, required: required }),
	        reloadButton,
	        _react2.default.createElement('input', { type: 'hidden', name: 'captcha_id', id: this.props.qid.value + '_captcha_id', value: '0' })
	      )
	    );
	  };

	  return JotCaptcha;
	}(_react.Component);

	exports.default = JotCaptcha;


	JotCaptcha.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  cdnconfig: _propTypes2.default.shape({
	    CDN: _propTypes2.default.string
	  }),
	  passive: _propTypes2.default.bool,
	  required: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	JotCaptcha.getScript = function (prop) {
	  var script = 'JotForm.initCaptcha(\'' + prop.qid.value + '\');\n';
	  script += '$(\'' + prop.qid.value + '_reload\').observe(\'click\',function(){ JotForm.reloadCaptcha(\'' + prop.qid.value + '\') })\n';
	  return script;
	};

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ReCaptcha = function (_Component) {
	  _inherits(ReCaptcha, _Component);

	  function ReCaptcha() {
	    _classCallCheck(this, ReCaptcha);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  ReCaptcha.prototype.render = function render() {
	    var isInvisibleReCaptcha = this.props.captchaType && this.props.captchaType.value === 'reCaptcha' && this.props.isInvisibleReCaptcha && this.props.isInvisibleReCaptcha.value === 'Yes' ? true : false;
	    if (this.props.passive) {
	      return _react2.default.createElement('img', {
	        height: '76',
	        src: isInvisibleReCaptcha ? '/images/reCaptchaV2_static_invisible.png' : '/images/reCaptchaV2_static.png',
	        style: { maxWidth: '300px', width: '100%' }
	      });
	    }

	    function createReCaptchaMarkup(props) {
	      var siteKey = isInvisibleReCaptcha ? '6LcG3CgUAAAAAGOEEqiYhmrAm6mt3BDRhTrxWCKb' : '6LdU3CgUAAAAAB0nnFM3M3T0sy707slYYU51RroJ';
	      var recaptchaCode = '\n        var recaptchaLoaded' + props.qid.value + ' = function() {\n          window.grecaptcha.render($("recaptcha_' + props.qid.value + '"), {\n            sitekey: \'' + siteKey + '\',\n          });\n          var grecaptchaBadge = document.querySelector(\'.grecaptcha-badge\');\n          if (grecaptchaBadge) {\n            grecaptchaBadge.style.boxShadow = \'gray 0px 0px 2px\';\n          }\n        };\n\n        /**\n         * Called when the reCaptcha verifies the user is human\n         * For invisible reCaptcha;\n         *   Submit event is stopped after validations and recaptcha is executed.\n         *   If a challenge is not displayed, this will be called right after grecaptcha.execute()\n         *   If a challenge is displayed, this will be called when the challenge is solved successfully\n         *   Submit is triggered to actually submit the form since it is stopped before.\n         */\n        var recaptchaCallback' + props.qid.value + ' = function() {\n          var isInvisibleReCaptcha = ' + isInvisibleReCaptcha + ';\n          var hiddenInput = $("' + props.qid.value + '");\n          hiddenInput.setValue(1);\n          if (!isInvisibleReCaptcha) {\n            if (hiddenInput.validateInput) {\n              hiddenInput.validateInput();\n            }\n          } else {\n            triggerSubmit(hiddenInput.form)\n          }\n\n          function triggerSubmit(formElement) {\n            var button = formElement.ownerDocument.createElement(\'input\');\n            button.style.display = \'none\';\n            button.type = \'submit\';\n            formElement.appendChild(button).click();\n            formElement.removeChild(button);\n          }\n        }\n\n        // not really required for invisible recaptcha\n        var recaptchaExpiredCallback' + props.qid.value + ' = function() {\n          var hiddenInput = $("' + props.qid.value + '");\n          hiddenInput.writeAttribute("value", false);\n          if (hiddenInput.validateInput) {\n            hiddenInput.validateInput();\n          }\n        }\n      ';

	      return { __html: recaptchaCode };
	    }

	    return _react2.default.createElement(
	      'section',
	      { 'data-wrapper-react': 'true', 'data-invisible-captcha': isInvisibleReCaptcha ? 'true' : null },
	      _react2.default.createElement('div', {
	        id: 'recaptcha_' + this.props.qid.value,
	        'data-component': 'recaptcha',
	        'data-callback': 'recaptchaCallback' + this.props.qid.value,
	        'data-size': isInvisibleReCaptcha ? 'invisible' : null,
	        'data-badge': isInvisibleReCaptcha ? 'inline' : null,
	        'data-expired-callback': 'recaptchaExpiredCallback' + this.props.qid.value
	      }),
	      _react2.default.createElement('input', {
	        type: 'hidden',
	        id: this.props.qid.value,
	        className: 'hidden ' + (isInvisibleReCaptcha ? '' : 'validate[required]'),
	        name: '' + (isInvisibleReCaptcha ? 'recaptcha_invisible' : 'recaptcha_visible'),
	        required: 'true'
	      }),
	      _react2.default.createElement('script', { type: 'text/javascript', src: 'https://www.google.com/recaptcha/api.js?render=explicit&onload=recaptchaLoaded' + this.props.qid.value }),
	      _react2.default.createElement('script', { type: 'text/javascript', dangerouslySetInnerHTML: createReCaptchaMarkup(this.props) })
	    );
	  };

	  return ReCaptcha;
	}(_react.Component);

	exports.default = ReCaptcha;


	ReCaptcha.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  captchaType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  isInvisibleReCaptcha: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  passive: _propTypes2.default.bool
	};

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Cardconnect = function (_Component) {
	  _inherits(Cardconnect, _Component);

	  function Cardconnect() {
	    _classCallCheck(this, Cardconnect);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Cardconnect.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_cardconnect' }));
	    // const paymentCreditCardAndAddress = null;
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_cardconnect'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Cardconnect;
	}(_react.Component);

	exports.default = Cardconnect;


	Cardconnect.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Cardconnect.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Cardconnect.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Chargify = function (_Component) {
	  _inherits(Chargify, _Component);

	  function Chargify() {
	    _classCallCheck(this, Chargify);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Chargify.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_chargify' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_chargify'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Chargify;
	}(_react.Component);

	exports.default = Chargify;


	Chargify.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Chargify.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Chargify.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _OptionsBase = __webpack_require__(110);

	var _OptionsBase2 = _interopRequireDefault(_OptionsBase);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Checkbox = function Checkbox(props) {
	  return _react2.default.createElement(_OptionsBase2.default, _extends({}, props, { type: 'control_checkbox' }));
	};

	Checkbox.getScript = function (prop) {
	  if (prop.shuffle && prop.shuffle.value === 'Yes') {
	    return '      JotForm.shuffleOptions("' + prop.id.value + '");\n';
	  }

	  return '';
	};

	exports.default = Checkbox;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var OptionsBase = function (_Component) {
	  _inherits(OptionsBase, _Component);

	  function OptionsBase() {
	    _classCallCheck(this, OptionsBase);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  OptionsBase.prototype.render = function render() {
	    var prop = this.props;
	    var qname = prop.qname.value;
	    var qid = prop.qid.value;
	    var id = prop.id.value;
	    var type = prop.type;
	    var opts = [];
	    var isPredefinedOptionsInUse = false;

	    if (type === 'control_imagechoice' && prop.options && {}.hasOwnProperty.call(prop.options, 'value') && prop.options.value !== null) {
	      opts = prop.options.value;
	    } else if (prop.options && {}.hasOwnProperty.call(prop.options, 'value') && prop.options.value !== null) {
	      var values = typeof prop.options.value !== 'string' ? prop.options.value.toString() : prop.options.value;
	      opts = values.split('|');
	    } else {
	      opts = [];
	      prop.options.value = '';
	    }

	    if (prop.special && prop.special.value && prop.special.value !== 'None') {
	      opts = JSON.parse(JSON.stringify(_Utils.specialOptions[prop.special.value].value));
	      isPredefinedOptionsInUse = true;
	    }

	    var fieldType = type.replace('control_', '');
	    var getInputType = function getInputType(t) {
	      return t === 'No' ? 'radio' : 'checkbox';
	    };
	    var inputType = fieldType === 'imagechoice' ? getInputType(prop.multipleSelection.value) : fieldType;
	    // const inputType = type.replace('control_', '');
	    var allowOther = prop.allowOther && prop.allowOther.value === 'Yes';

	    var selectionValidation = '';

	    var maxMinSelectionProps = {};

	    var qnameOther = qname;
	    if (inputType === 'checkbox' || fieldType === 'imagechoice') {
	      qname += '[]';
	    }

	    if (inputType === 'checkbox') {
	      if (prop.maxSelection && parseInt(prop.maxSelection.value, 10) > 0) {
	        maxMinSelectionProps['data-maxselection'] = parseInt(prop.maxSelection.value, 10);
	        selectionValidation = 'maxselection';
	      }

	      if (prop.minSelection && parseInt(prop.minSelection.value, 10) > 0) {
	        maxMinSelectionProps['data-minselection'] = parseInt(prop.minSelection.value, 10);
	        selectionValidation += selectionValidation.length > 0 ? ',minselection' : 'minselection';
	      }
	    }

	    var col = prop.spreadCols.value > 1 ? prop.spreadCols.value : 0;
	    var colCount = 0;

	    var wrapperProps = {};

	    var calcValues = prop.calcValues && prop.calcValues.value && prop.calcValues.value.length > 0 && prop.calcValues.value !== 'Click to edit' ? prop.calcValues.value.split('|') : false;
	    if (prop.useCalculations && prop.useCalculations.value && prop.useCalculations.value === 'No') {
	      calcValues = false;
	    }

	    var disabled = prop.readonly && prop.readonly.value === 'Yes' ? 1 : 0;

	    if (col < 2) {
	      wrapperProps.className = 'form-single-column';
	    } else {
	      wrapperProps.className = 'form-multiple-column';
	      wrapperProps['data-columncount'] = col;
	    }

	    var focusedRowIndex = prop.focusedPosition ? prop.focusedPosition.options : null;
	    if (type === 'control_imagechoice' && typeof opts === 'string') {
	      // a workaround for fixing image choice in revisions
	      opts = (0, _Utils.parseJSON)(opts);
	    }
	    var options = opts.map(function (opt, index) {
	      var strippedVal = type === 'control_imagechoice' ? (0, _Utils.strip)(opt.text).replace(/&amp;/g, '&') : (0, _Utils.strip)(opt).replace(/&amp;/g, '&');
	      var selectedVals = (0, _Utils.strip)(prop.selected.value);
	      var selectedValues = typeof selectedVals !== 'string' ? selectedVals.toString() : selectedVals;
	      var selectedOptions = selectedValues.replace(/&#0*39;/g, "'").replace(/&amp;/g, '&').replace(/&quot;/g, '"').replace(/&amp;quot;/g, '"').split('|').filter(function (p) {
	        return p;
	      });
	      var checkedValue = type !== 'control_radio' ? strippedVal.replace(/<(?!img\s+).*?>/g, '') + ' ' + index : strippedVal.replace(/<(?!img\s+).*?>/g, '');
	      var checked = selectedOptions.indexOf(checkedValue) !== -1 ? true : false;
	      var defaultOptions = _QuestionProps2.default[prop.type].options.value.split('|');
	      var defValIndex = defaultOptions.indexOf(strippedVal);
	      var defaultValue = defValIndex > 0 ? defaultOptions[defValIndex] : defaultOptions[index];

	      var className = (0, _Utils.addValidation)(_Utils.classNames[inputType], prop, selectionValidation);
	      var inputProps = {
	        disabled: disabled,
	        type: inputType,
	        tabIndex: prop.inlineEditClass ? -1 : null,
	        className: className,
	        id: qid + '_' + index,
	        name: qname,
	        checked: checked,
	        value: strippedVal,
	        // value: strippedVal.replace(/&amp;/g, '&'),
	        'data-calcvalue': calcValues && calcValues[index] ? calcValues[index] : null,
	        required: prop.required && prop.required.value === 'Yes' ? true : null
	      };

	      var rdra = _react2.default.createElement('span', { className: 'dragger-item' });
	      var rinp = _react2.default.createElement('input', _extends({}, inputProps, maxMinSelectionProps));
	      var rlab = void 0;

	      if (prop.inlineEditClass && !isPredefinedOptionsInUse) {
	        var labelComponent = _react2.default.createElement('label', { id: 'label_' + qid + '_' + index, style: { display: 'inline-block' } });
	        var inlineEditComp = _react2.default.createElement(prop.inlineEditClass, {
	          id: id,
	          propPath: 'options|' + index,
	          text: strippedVal,
	          defaultValue: defaultValue,
	          placeholder: 'Type an option',
	          focusToElement: focusedRowIndex === index,
	          sanitizeText: true,
	          renderHtmlTags: prop.addOptionClass ? false : true,
	          isArrayModeEnabled: true
	        }, labelComponent);
	        var removeOptionPart = null;
	        if (prop.removeOptionClass) {
	          removeOptionPart = _react2.default.createElement(prop.removeOptionClass, {
	            qid: id,
	            optionIndex: index,
	            label: '×'
	          });
	        }

	        var dragHandle = null;
	        if (prop.sortableOptions) {
	          dragHandle = _react2.default.createElement('span', { className: 'option-drag-handle' });
	        }

	        rlab = _react2.default.createElement(
	          'span',
	          null,
	          inlineEditComp,
	          dragHandle,
	          removeOptionPart
	        );
	      } else {
	        var sanitizedContent = (0, _Utils.htmlDecode)((0, _Utils.sanitize)(strippedVal));
	        rlab = _react2.default.createElement('label', { id: 'label_' + qid + '_' + index, htmlFor: !prop.inlineEditClass ? qid + '_' + index : null, dangerouslySetInnerHTML: { __html: sanitizedContent.replace(/&quot;/g, '"') } });
	      }

	      var style = {};
	      colCount += 1;
	      if (colCount > col) {
	        style.clear = 'left';
	        colCount = 1;
	      }

	      var typeClass = function () {
	        switch (inputType) {
	          case 'radio':
	            return 'Radio';
	          case 'checkbox':
	            return 'Checkbox';
	          default:
	            return '';
	        }
	      }();

	      if (type === 'control_imagechoice') {
	        var dColCount = function () {
	          var cCount = opts.length + (prop.isSelectedQuestion ? 1 : 0);
	          if (cCount > 4) {
	            cCount = 4;
	          }
	          if (cCount < 2) {
	            cCount = 1;
	          }
	          return cCount;
	        }();

	        var hasIcon = opt.link.indexOf('placeholder') !== -1;
	        var altText = opt.text ? opt.text : 'Image ' + (index + 1);
	        var imageWrapper = _react2.default.createElement(
	          'div',
	          { className: 'jf' + typeClass + '-image', style: { backgroundImage: 'url("' + opt.link + '")', backgroundSize: !hasIcon ? null : '50px' } },
	          _react2.default.createElement('img', { alt: altText, src: opt.link, style: { display: 'none' } })
	        );

	        if (prop.editOptionImageClass) {
	          imageWrapper = _react2.default.createElement(prop.editOptionImageClass, {
	            qid: id,
	            imageIndex: index
	          }, imageWrapper);
	        }
	        var withoutText = strippedVal ? '' : 'withoutText';

	        wrapperProps['data-columncount'] = dColCount;

	        var totalOptionCount = opts.length + (allowOther ? 1 : 0);
	        var lastRowCount = totalOptionCount % dColCount;
	        if (lastRowCount === 0) {
	          lastRowCount = dColCount;
	        }

	        var leftOverClass = index >= totalOptionCount - lastRowCount ? ' jfField-lastRowItem' : '';

	        return _react2.default.createElement(
	          'div',
	          { className: 'jfField' + leftOverClass + ' form-' + inputType + '-item' + (prop.sortableOptions ? ' sortable-item' : ''), style: style, key: 'option' + index },
	          _react2.default.createElement(
	            'label',
	            { className: 'jf' + typeClass + ' withImage ' + withoutText },
	            _react2.default.createElement('input', _extends({
	              type: inputType,
	              className: 'jf' + typeClass + '-input ' + className,
	              name: inputProps.name,
	              value: strippedVal + '|' + opt.link,
	              checked: inputProps.checked ? true : false,
	              disabled: prop.inlineEditClass ? true : inputProps.disabled,
	              id: qid + '_' + index,
	              required: inputProps.required,
	              'data-calcvalue': calcValues && calcValues[index] ? calcValues[index] : null
	            }, maxMinSelectionProps)),
	            _react2.default.createElement(
	              'div',
	              { className: 'jf' + typeClass + '-label', id: 'label_' + qid + '_' + index },
	              imageWrapper,
	              _react2.default.createElement(
	                'span',
	                { className: 'jf' + typeClass + '-customInput' },
	                _react2.default.createElement('span', { className: 'jf' + typeClass + '-customInputIcon' })
	              ),
	              _react2.default.createElement('img', { className: 'jf' + typeClass + '-visual', alt: typeClass, style: { display: 'none' } }),
	              _react2.default.createElement(
	                'span',
	                { className: 'jf' + typeClass + '-labelText' },
	                prop.inlineEditClass ? rlab : strippedVal
	              )
	            )
	          ),
	          false && rinp /* temporary*/
	        );
	      }

	      return _react2.default.createElement(
	        'span',
	        { className: 'form-' + inputType + '-item' + (prop.sortableOptions ? ' sortable-item' : ''), style: style, key: index },
	        rdra,
	        rinp,
	        rlab
	      );
	    });

	    var otherPart = null;

	    if (prop.allowOther && prop.allowOther.value === 'Yes') {
	      var otherType = type === 'control_radio' ? 'radio' : 'checkbox';
	      var otherText = prop.otherText && prop.otherText.value ? prop.otherText.value : 'Other'.locale();
	      var selectedOptions = (0, _Utils.strip)(prop.selected.value).replace(/&amp;/g, '&').split('|').filter(function (p) {
	        return p;
	      });
	      var capitalizedOtherType = otherType.charAt(0).toUpperCase() + otherType.substring(1).toLowerCase() || '';

	      var firstInputProps = {
	        type: otherType,
	        'data-calcvalue': calcValues && calcValues.length > opts.length ? calcValues[calcValues.length - 1] : null,
	        className: 'form-' + otherType + '-other ' + (0, _Utils.addValidation)(_Utils.classNames[otherType], prop, selectionValidation),
	        'data-maxselection': maxMinSelectionProps['data-maxselection'],
	        name: type === 'control_radio' ? qname : qnameOther + '[other]',
	        id: 'other_' + id,
	        value: 'other',
	        // checked: selectedOptions && selectedOptions[0] === 'Other option' ? 'checked' : null
	        checked: (selectedOptions || []).indexOf('Other option') > -1 ? true : false,
	        disabled: disabled,
	        'aria-label': otherText.trim()
	      };

	      var secondInputProps = {
	        type: 'text',
	        className: 'form-' + otherType + '-other-input form-textbox',
	        name: type === 'control_radio' ? qname + '[other]' : qname.slice(0, -2) + '[other]',
	        'data-otherhint': otherText,
	        size: '15',
	        id: qid,
	        disabled: disabled
	      };

	      if (prop.themeVersion === 'v2') {
	        secondInputProps['data-placeholder'] = 'Please type another option here'.locale();
	        secondInputProps.placeholder = 'Please type another option here'.locale();
	      } else {
	        secondInputProps.placeholder = otherText;
	      }

	      var removeOtherOptionPart = null;
	      if (prop.removeOtherOptionClass && prop.inlineEditClass && !isPredefinedOptionsInUse) {
	        removeOtherOptionPart = _react2.default.createElement(prop.removeOtherOptionClass, {
	          qid: id,
	          label: '×'
	        });
	      }

	      var style = {};
	      if (colCount > col) {
	        style.clear = 'left';
	        colCount = 1;
	      }

	      if (prop.themeVersion === 'v2') {
	        var sanitizedContent = (0, _Utils.htmlDecode)((0, _Utils.sanitize)(otherText));
	        otherPart = _react2.default.createElement(
	          _react2.default.Fragment,
	          null,
	          _react2.default.createElement(
	            'span',
	            { className: 'form-' + otherType + '-item form' + capitalizedOtherType + 'Other', style: style },
	            _react2.default.createElement('input', firstInputProps),
	            _react2.default.createElement('label', {
	              id: 'label_' + firstInputProps.id,
	              style: { textIndent: '0' },
	              htmlFor: firstInputProps.id,
	              dangerouslySetInnerHTML: { __html: sanitizedContent.replace(/&quot;/g, '"') }
	            }),
	            removeOtherOptionPart,
	            _react2.default.createElement(
	              'span',
	              { id: firstInputProps.id + '_input', className: 'other-input-container', style: { display: global.isPDFImporter ? 'block' : 'none' } },
	              _react2.default.createElement('input', secondInputProps)
	            )
	          )
	        );
	      } else {
	        otherPart = _react2.default.createElement(
	          'span',
	          { className: 'form-' + otherType + '-item', style: style },
	          _react2.default.createElement('input', firstInputProps),
	          _react2.default.createElement(
	            'label',
	            { id: 'label_' + firstInputProps.id, style: { textIndent: '0' }, htmlFor: firstInputProps.id },
	            '\xA0'
	          ),
	          _react2.default.createElement('input', secondInputProps),
	          removeOtherOptionPart,
	          _react2.default.createElement('br', null)
	        );
	      }
	    }

	    var addOptionPart = null;
	    if (prop.addOptionClass && !isPredefinedOptionsInUse) {
	      addOptionPart = _react2.default.createElement(prop.addOptionClass, {
	        qid: id,
	        label: 'Add Option',
	        value: global.isPDFImporter ? 'Type option ' + (opts.length + 1) : ''
	      });
	    }

	    var addOtherPart = null;
	    if ((!prop.allowOther || prop.allowOther.value !== 'Yes') && prop.addOtherOptionClass) {
	      addOtherPart = _react2.default.createElement(prop.addOtherOptionClass, {
	        qid: id,
	        label: 'Add "Other" Option'
	      });
	    }

	    var addOptionGroup = null;
	    if (prop.addOtherOptionClass || prop.addOptionClass) {
	      addOptionGroup = _react2.default.createElement(
	        'div',
	        { style: { clear: 'both' } },
	        addOptionPart,
	        addOtherPart
	      );
	    }

	    var sortable = null;

	    if (prop.sortableOptions && !isPredefinedOptionsInUse) {
	      sortable = _react2.default.createElement(prop.sortableOptions, {
	        qid: id
	      }, options);
	    }

	    if (sortable) {
	      return _react2.default.createElement(
	        'div',
	        _extends({}, wrapperProps, { 'data-component': inputType }),
	        sortable,
	        otherPart,
	        addOptionGroup
	      );
	    }

	    return _react2.default.createElement(
	      'div',
	      _extends({}, wrapperProps, { role: 'group', 'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, (0, _Utils.subLabel)(this.props)), 'data-component': inputType }),
	      options,
	      otherPart,
	      addOptionGroup
	    );
	  };

	  return OptionsBase;
	}(_react.Component);

	exports.default = OptionsBase;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 111 */,
/* 112 */,
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Clear = function (_Component) {
	  _inherits(Clear, _Component);

	  function Clear() {
	    _classCallCheck(this, Clear);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Clear.prototype.render = function render() {
	    return _react2.default.createElement('div', {
	      style: { clear: 'both' },
	      'data-component': 'clear'
	    });
	  };

	  return Clear;
	}(_react.Component);

	exports.default = Clear;


	Clear.propTypes = {
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Clickbank = function (_Component) {
	  _inherits(Clickbank, _Component);

	  function Clickbank() {
	    _classCallCheck(this, Clickbank);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Clickbank.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_clickbank'
	    }));
	  };

	  return Clickbank;
	}(_react.Component);

	exports.default = Clickbank;


	Clickbank.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Clickbank.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Clickbank.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Collapse = function (_Component) {
	  _inherits(Collapse, _Component);

	  function Collapse() {
	    _classCallCheck(this, Collapse);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Collapse.prototype.render = function render() {
	    var hidden = !this.props.inlineEditClass && this.props.visibility && this.props.visibility.value === 'Hidden' ? ' form-collapse-hidden' : '';
	    var im = this.props.status && this.props.status.value === 'Closed' ? 'hide' : 'show';

	    var buttonText = void 0;
	    if (this.props.inlineEditClass) {
	      buttonText = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'text',
	        text: (0, _Utils.escapeHTML)(this.props.text.value),
	        defaultValue: _QuestionProps2.default[this.props.type.value].text.value,
	        placeholder: 'Type button text'
	      });
	    } else {
	      buttonText = (0, _Utils.htmlDecode)((0, _Utils.sanitize)(this.props.text.value));
	    }

	    return _react2.default.createElement(
	      'div',
	      {
	        className: 'form-collapse-table' + hidden,
	        id: 'collapse_' + this.props.id.value,
	        'data-component': 'collapse'
	      },
	      this.props.inlineEditClass ? _react2.default.createElement(
	        'span',
	        {
	          className: 'form-collapse-mid',
	          id: 'collapse-text_' + this.props.id.value
	        },
	        buttonText
	      ) : _react2.default.createElement('span', {
	        className: 'form-collapse-mid',
	        id: 'collapse-text_' + this.props.id.value,
	        dangerouslySetInnerHTML: { __html: buttonText }
	      }),
	      _react2.default.createElement(
	        'span',
	        {
	          className: 'form-collapse-right form-collapse-right-' + im
	        },
	        '\xA0'
	      )
	    );
	  };

	  return Collapse;
	}(_react.Component);

	exports.default = Collapse;


	Collapse.propTypes = {
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  status: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  visibility: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  inlineEditClass: _propTypes2.default.func
	};

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var CyberSource = function (_Component) {
	  _inherits(CyberSource, _Component);

	  function CyberSource() {
	    _classCallCheck(this, CyberSource);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  CyberSource.prototype.render = function render() {
	    return _react2.default.createElement(
	      'div',
	      {
	        'data-wrapper-react': 'true',
	        id: 'payment-wrapper-songbird',
	        'data-currency': this.props.currency && this.props.currency.value,
	        'data-paymentType': this.props.paymentType && this.props.paymentType.value,
	        'data-sandbox': this.props.sandbox && this.props.sandbox.value,
	        'data-sca': this.props.sca && this.props.sca.value,
	        'data-mappedAddress': this.props.billToAddress && this.props.billToAddress.value,
	        'data-mappedEmail': this.props.email && this.props.email.value,
	        'data-cardinalAPIkey': this.props.cardinalAPIkey && this.props.cardinalAPIkey.value,
	        'data-cardinalAPIindentifier': this.props.cardinalAPIindentifier && this.props.cardinalAPIindentifier.value,
	        'data-cardinalOrgUnitID': this.props.cardinalOrgUnitID && this.props.cardinalOrgUnitID.value
	      },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, { controlPaymentType: 'control_cybersource' })),
	      _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_cybersource' }))
	    );
	  };

	  return CyberSource;
	}(_react.Component);

	exports.default = CyberSource;


	CyberSource.propTypes = {
	  currency: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paymentType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  sandbox: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  sca: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  billToAddress: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  email: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  cardinalAPIkey: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  cardinalAPIindentifier: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  cardinalOrgUnitID: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	CyberSource.getState = function () {
	  var paymentLabels = [];
	  return paymentLabels;
	};

	CyberSource.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _Timev = __webpack_require__(118);

	var _Timev2 = _interopRequireDefault(_Timev);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Datetime = function Datetime(props) {
	  var dateTimeDefaultSublabels = _QuestionProps2.default.control_datetime.sublabels.value;
	  var prop = props;
	  var qid = prop.qid.value;
	  var qname = prop.qname.value;
	  var id = prop.id.value;
	  var CDN = prop.cdnconfig.CDN;
	  var readonly = prop.readonly && prop.readonly.value === 'Yes' ? '1' : null;
	  var required = prop.required && prop.required.value === 'Yes' ? '1' : null;
	  var autoCalendarClass = prop.autoCalendar.value === 'Yes' ? 'showAutoCalendar' : null;
	  var ampmFormat = prop.timeFormat && prop.timeFormat.value === 'AM/PM';
	  var iconLiteClass = prop.liteMode.value === 'Yes' ? 'icon-liteMode' : 'icon-seperatedMode';
	  var isNewTheme = prop.themeVersion && prop.themeVersion === 'v2';
	  var icon = _react2.default.createElement('img', {
	    className: (autoCalendarClass || '') + ' newDefaultTheme-dateIcon ' + iconLiteClass,
	    alt: 'Pick a Date'.locale(),
	    id: qid + '_pick',
	    src: (CDN || '') + 'images/calendar.png',
	    'data-component': 'datetime',
	    'aria-hidden': 'true',
	    'data-allow-time': prop.allowTime.value,
	    'data-version': prop.themeVersion === 'v2' ? 'v2' : 'v1'
	  });

	  if (prop.defaultTime.value === 'Yes') {
	    prop.defaultTime.value = 'current';
	    prop.defaultDate.value = 'current';
	  } else if (prop.defaultTime.value === 'No') {
	    prop.defaultTime.value = 'none';
	    prop.defaultDate.value = 'none';
	  }

	  var year = '';
	  var month = '';
	  var day = '';
	  if (prop.defaultDate.value === 'current') {
	    var date = new Date();
	    month = (0, _Utils.addZeros)(date.getMonth() + 1, 2);
	    day = (0, _Utils.addZeros)(date.getDate(), 2);
	    year = date.getYear() < 1000 ? date.getYear() + 1900 : date.getYear();
	  } else if (typeof prop.defaultDate.value === 'string' && prop.defaultDate.value.indexOf('custom') > -1) {
	    var _date = prop.defaultDate.value.split('_')[1];
	    if (_date) {
	      var dateComponents = _date.split('-');
	      if (dateComponents.length > 2) {
	        year = dateComponents[0] || '';
	        month = dateComponents[1] || '';
	        day = dateComponents[2] || '';
	      }
	    }
	  }

	  // Date Format
	  var dateSeparator = '/';
	  if (prop.dateSeparator.value) {
	    dateSeparator = prop.dateSeparator.value;
	  }
	  var liteModeInitialValue = '';
	  var liteModePlaceholder = '';
	  var validateString = '';
	  var liteModePlaceholderV2 = '';
	  if (prop.liteMode.value === 'Yes') {
	    validateString = 'validateLiteDate';
	    var yearAbbr = 'yyyy'.locale();
	    var monthAbbr = 'mm'.locale();
	    var dayAbbr = 'dd'.locale();

	    switch (prop.format.value) {
	      case 'yyyymmdd':
	        liteModePlaceholder = '' + yearAbbr + dateSeparator + monthAbbr + dateSeparator + dayAbbr;
	        break;
	      case 'mmddyyyy':
	        liteModePlaceholder = '' + monthAbbr + dateSeparator + dayAbbr + dateSeparator + yearAbbr;
	        break;
	      case 'ddmmyyyy':
	        liteModePlaceholder = '' + dayAbbr + dateSeparator + monthAbbr + dateSeparator + yearAbbr;
	        break;
	      default:
	        break;
	    }

	    liteModePlaceholderV2 = liteModePlaceholder.toUpperCase();

	    if (prop.defaultDate.value === 'current' || prop.defaultDate.value.indexOf('custom') > -1) {
	      liteModeInitialValue = month + dateSeparator + day + dateSeparator + year;
	      if (prop.format.value === 'ddmmyyyy') {
	        liteModeInitialValue = day + dateSeparator + month + dateSeparator + year;
	      } else if (prop.format.value === 'yyyymmdd') {
	        liteModeInitialValue = year + dateSeparator + month + dateSeparator + day;
	      }
	    }
	  }

	  var minAge = '';
	  if (prop.ageVerification && prop.ageVerification.value === 'Yes' && prop.minAge && prop.minAge.value) {
	    minAge = prop.minAge.value;
	  }

	  var limitDate = false;
	  if (prop.limitDate && prop.limitDate.value && prop.limitDate.value !== false) {
	    limitDate = JSON.stringify(prop.limitDate.value);
	  }
	  var limitDateText = limitDate ? 'limitDate' : '';

	  // Date
	  var disallowPast = prop.onlyFuture && prop.onlyFuture.value === 'Yes' ? 'disallowPast' : '';
	  var dd = _react2.default.createElement('input', _extends({
	    readOnly: prop.inlineEditClass || readonly,
	    className: (prop.defaultDate.value === 'current' ? 'currentDate ' : '') + (0, _Utils.addValidation)(_Utils.classNames.textbox, prop, disallowPast, limitDateText),
	    id: 'day_' + id,
	    name: qname + '[day]',
	    type: 'tel',
	    size: '2',
	    'data-maxlength': '2',
	    'data-age': minAge,
	    maxLength: '2',
	    key: 'day_' + id,
	    value: day
	  }, { required: required }, {
	    autoComplete: 'off',
	    'aria-labelledby': (0, _Utils.ariaLabelledBy)(prop, (0, _Utils.subLabel)(prop, 'day', id))
	  }));
	  var mm = _react2.default.createElement('input', _extends({
	    readOnly: prop.inlineEditClass || readonly,
	    className: (0, _Utils.addValidation)(_Utils.classNames.textbox, prop, disallowPast, limitDateText),
	    id: 'month_' + id,
	    name: qname + '[month]',
	    type: 'tel',
	    size: '2',
	    'data-maxlength': '2',
	    'data-age': minAge,
	    maxLength: '2',
	    key: 'month_' + id,
	    value: month
	  }, { required: required }, {
	    autoComplete: 'off',
	    'aria-labelledby': (0, _Utils.ariaLabelledBy)(prop, (0, _Utils.subLabel)(prop, 'month', id))
	  }));
	  var yy = _react2.default.createElement('input', _extends({
	    readOnly: prop.inlineEditClass || readonly,
	    className: (0, _Utils.addValidation)(_Utils.classNames.textbox, prop, disallowPast, limitDateText),
	    id: 'year_' + id,
	    name: qname + '[year]',
	    type: 'tel',
	    size: '4',
	    'data-maxlength': '4',
	    'data-age': minAge,
	    maxLength: '4',
	    key: 'year_' + id,
	    value: year
	  }, { required: required }, {
	    autoComplete: 'off',
	    'aria-labelledby': (0, _Utils.ariaLabelledBy)(prop, (0, _Utils.subLabel)(prop, 'year', id))
	  }));

	  var liteModePlaceHolderVal = isNewTheme ? liteModePlaceholderV2 : liteModePlaceholder;
	  var liteModeMarkup = _react2.default.createElement('input', {
	    className: (0, _Utils.addValidation)(_Utils.classNames.textbox, prop, [disallowPast, limitDateText, validateString]),
	    id: 'lite_mode_' + id,
	    type: 'text',
	    size: '12',
	    'data-maxlength': '12',
	    maxLength: '12',
	    'data-age': minAge,
	    value: liteModeInitialValue,
	    readOnly: readonly,
	    required: required,
	    'data-format': prop.format.value,
	    'data-seperator': dateSeparator,
	    placeholder: liteModePlaceHolderVal,
	    disabled: prop.inlineEditClass,
	    autoComplete: 'off',
	    'aria-labelledby': (0, _Utils.ariaLabelledBy)(prop, (0, _Utils.subLabel)(prop, 'litemode', id))
	  });

	  var disabled = prop.readonly && prop.readonly.value === 'Yes' ? '1' : null;

	  var cur = void 0;
	  if (prop.defaultTime.value.indexOf('custom_') > -1) {
	    var time = prop.defaultTime.value.split('custom_')[1];
	    cur = (0, _Utils.getCurrentTime)(prop, time.split(':')[0], time.split(':')[1]);
	  } else {
	    cur = (0, _Utils.getCurrentTime)(prop);
	  }

	  var displayTime = prop.defaultTime.value !== 'none';

	  var options = [];
	  for (var index = cur.start; index <= cur.limit; index += 1) {
	    var selectedHour = ampmFormat ? index.toString() : (0, _Utils.addZeros)(index, 2);
	    var hourVal = ampmFormat ? index : (0, _Utils.addZeros)(index, 2);
	    var selected = displayTime && selectedHour === cur.hour ? 1 : null;
	    options.push(_react2.default.createElement(
	      'option',
	      { selected: selected, key: hourVal, value: hourVal },
	      hourVal
	    ));
	  }

	  var hh = _react2.default.createElement(
	    'select',
	    {
	      className: (prop.defaultTime.value === 'current' ? 'currentTime ' : '') + 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, prop, disallowPast, limitDateText),
	      id: 'hour_' + id,
	      name: qname + '[hour]',
	      disabled: prop.inlineEditClass || disabled,
	      key: 'hour',
	      'aria-labelledby': (0, _Utils.ariaLabelledBy)(prop, (0, _Utils.subLabel)(prop, 'hour', id))
	    },
	    _react2.default.createElement('option', null),
	    options
	  );

	  options = [];
	  for (var _index = 0; _index < 60; _index += Number(cur.step)) {
	    var _selected = displayTime && _index === parseInt(cur.min, 10) ? 'selected="1"' : null;
	    options.push(_react2.default.createElement(
	      'option',
	      { selected: _selected, key: _index, value: (0, _Utils.addZeros)(_index, 2) },
	      (0, _Utils.addZeros)(_index, 2)
	    ));
	  }

	  var ii = _react2.default.createElement(
	    'select',
	    {
	      className: 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, prop, disallowPast, limitDateText),
	      id: 'min_' + id,
	      name: qname + '[min]',
	      disabled: prop.inlineEditClass || disabled,
	      key: 'minutes',
	      'aria-labelledby': (0, _Utils.ariaLabelledBy)(prop, (0, _Utils.subLabel)(prop, 'minutes', id))
	    },
	    _react2.default.createElement('option', null),
	    options
	  );

	  var dayPeriodOptions = ['am', 'pm'];
	  var filterDayPeriodOptions = function filterDayPeriodOptions(option) {
	    return prop.showDayPeriods && (prop.showDayPeriods.value === 'both' || option + 'Only' === prop.showDayPeriods.value);
	  };

	  var ampmOptions = dayPeriodOptions.filter(filterDayPeriodOptions).map(function (option) {
	    var ucOption = option.toUpperCase();
	    return _react2.default.createElement(
	      'option',
	      { selected: cur.currentAmpm === ucOption, value: ucOption, key: ucOption },
	      ucOption.locale()
	    );
	  });

	  var ampm = _react2.default.createElement(
	    'select',
	    {
	      disabled: disabled || prop.inlineEditClass,
	      className: 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, prop, disallowPast, limitDateText),
	      id: 'ampm_' + id,
	      name: qname + '[ampm]',
	      key: 'ampm',
	      'aria-labelledby': (0, _Utils.ariaLabelledBy)(prop, (0, _Utils.subLabelSingle)({ subLabel: { value: 'AM/PM Option' } }, 'ampm', id))
	    },
	    ampmOptions
	  );

	  mm = _react2.default.createElement(
	    _SubLabel2.default,
	    _extends({}, prop, {
	      labelValue: (0, _Utils.subLabel)(prop, 'month', id),
	      propPath: 'sublabels.month',
	      defaultValue: dateTimeDefaultSublabels.month,
	      'for': 'month_' + id,
	      link: _react2.default.createElement(
	        'span',
	        { className: 'date-separate', 'aria-hidden': 'true' },
	        '\xA0',
	        '' + dateSeparator
	      ),
	      key: 'month_' + id
	    }),
	    mm
	  );

	  var iconMarkup = _react2.default.createElement(
	    _SubLabel2.default,
	    _extends({}, prop, {
	      wrapAlways: true,
	      editable: false,
	      'for': qid + '_pick',
	      key: qid + '_readOnly',
	      labelValue: 'Date Picker Icon',
	      hidePartLabelA11Y: true,
	      ariaHidden: true
	    }),
	    icon
	  );

	  var markup = [];
	  if (prop.format.value === 'yyyymmdd') {
	    yy = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, prop, {
	        labelValue: (0, _Utils.subLabel)(prop, 'year', id),
	        propPath: 'sublabels.year',
	        defaultValue: dateTimeDefaultSublabels.year,
	        'for': 'year_' + id,
	        link: _react2.default.createElement(
	          'span',
	          { className: 'date-separate', 'aria-hidden': 'true' },
	          '\xA0',
	          '' + dateSeparator
	        ),
	        key: 'year_' + id
	      }),
	      yy
	    );

	    dd = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, prop, {
	        labelValue: (0, _Utils.subLabel)(prop, 'day', id),
	        propPath: 'sublabels.day',
	        'for': 'day_' + id,
	        defaultValue: dateTimeDefaultSublabels.day,
	        key: 'day_' + id
	      }),
	      dd
	    );

	    markup = [yy, mm, dd];
	  } else {
	    yy = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, prop, {
	        labelValue: (0, _Utils.subLabel)(prop, 'year', id),
	        propPath: 'sublabels.year',
	        'for': 'year_' + id,
	        defaultValue: dateTimeDefaultSublabels.year,
	        key: 'year_' + id
	      }),
	      yy
	    );

	    dd = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, prop, {
	        labelValue: (0, _Utils.subLabel)(prop, 'day', id),
	        propPath: 'sublabels.day',
	        'for': 'day_' + id,
	        link: _react2.default.createElement(
	          'span',
	          { className: 'date-separate', 'aria-hidden': 'true' },
	          '\xA0',
	          '' + dateSeparator
	        ),
	        defaultValue: dateTimeDefaultSublabels.day,
	        key: 'day_' + id
	      }),
	      dd
	    );

	    if (prop.format.value === 'mmddyyyy') {
	      markup.push(mm);
	      markup.push(dd);
	    } else {
	      markup.push(dd);
	      markup.push(mm);
	    }
	    // Year
	    markup.push(yy);
	  }

	  if (prop.liteMode.value === 'Yes') {
	    // if lite mode is Yes, then simply hide other fields and just render single date field
	    var tmp = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, prop, {
	        labelValue: (0, _Utils.subLabel)(prop, 'litemode', id),
	        propPath: 'sublabels.litemode',
	        'for': 'lite_mode_' + id,
	        defaultValue: dateTimeDefaultSublabels.litemode,
	        key: 'liteMode_' + id
	      }),
	      liteModeMarkup,
	      icon
	    );

	    markup = [_react2.default.createElement(
	      'div',
	      { style: { display: 'none' }, key: 'dateLiteMode' },
	      markup
	    ), tmp];
	  } else {
	    markup.push(iconMarkup);
	  }

	  if (prop.allowTime.value === 'Yes' && prop.themeVersion === 'v2') {
	    var classNameSpn = 'allowTime-container';
	    classNameSpn += ampmFormat ? ' timeAMPM' : '';
	    markup.push(_react2.default.createElement(
	      'span',
	      { className: classNameSpn, key: 'time' },
	      _react2.default.createElement(_Timev2.default, _extends({}, prop, { isDatetime: true }))
	    ));
	  } else if (prop.allowTime.value === 'Yes') {
	    hh = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, prop, {
	        labelValue: (0, _Utils.subLabel)(prop, 'hour', id),
	        propPath: 'sublabels.hour',
	        defaultValue: dateTimeDefaultSublabels.hour,
	        'for': 'hour_' + id,
	        link: _react2.default.createElement(
	          'span',
	          { className: 'date-separate', 'aria-hidden': 'true' },
	          '\xA0:'
	        ),
	        key: 'hour_' + id
	      }),
	      hh
	    );
	    ii = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, prop, {
	        labelValue: (0, _Utils.subLabel)(prop, 'minutes', id),
	        propPath: 'sublabels.minutes',
	        defaultValue: dateTimeDefaultSublabels.minutes,
	        'for': 'min_' + id,
	        key: 'min_' + id
	      }),
	      ii
	    );
	    ampm = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, prop, {
	        wrapAlways: true,
	        editable: false,
	        'for': 'ampm_' + id,
	        labelValue: (0, _Utils.subLabelSingle)({ subLabel: { value: 'AM/PM Option' } }, 'ampm', id),
	        hidePartLabelA11Y: true,
	        key: 'ampm_' + id
	      }),
	      ampm
	    );

	    var spn = _react2.default.createElement(
	      'span',
	      { className: 'allowTime-container', key: 'time' },
	      hh,
	      ii,
	      prop.timeFormat.value === 'AM/PM' ? ampm : null
	    );

	    markup.push(spn);
	  }

	  var isExtended = prop.allowTime && prop.allowTime.value && prop.allowTime.value === 'Yes' || prop.allowTime && prop.allowTime.value && prop.liteMode.value === 'No';
	  var classNameDateTime = null;

	  if (isExtended) {
	    classNameDateTime = 'extended';
	    if (prop.liteMode && prop.liteMode.value === 'No') {
	      classNameDateTime += ' notLiteMode';
	    }
	  }

	  return _react2.default.createElement(
	    'div',
	    { 'data-wrapper-react': 'true', className: classNameDateTime },
	    markup
	  );
	};

	Datetime.getScript = function (prop) {
	  var id = prop.id.value;
	  var limitDate = false;
	  var result = '\n';
	  if (prop.limitDate && prop.limitDate.value && prop.limitDate.value !== false) {
	    limitDate = JSON.stringify(prop.limitDate.value).split('"true"').join(true);
	    limitDate = limitDate.split('"false"').join(false);
	  }

	  if (!(prop.readonly && prop.readonly.value === 'Yes')) {
	    var startOnMonday = prop.startWeekOn && prop.startWeekOn.value === 'Monday';

	    if (prop.months && prop.months.value) {
	      var other = { today: prop.today ? prop.today.value : 'Today' };
	      result = result + ' JotForm.calendarMonths = ' + JSON.stringify(prop.months.value) + ';\n';
	      result = result + ' JotForm.calendarDays = ' + JSON.stringify(prop.days.value) + ';\n';
	      result = result + ' JotForm.calendarOther = ' + JSON.stringify(other) + ';\n';
	    }
	    result = result + ' var languageOptions = document.querySelectorAll(\'#langList li\'); \n';
	    result = result + ' for(var langIndex = 0; langIndex < languageOptions.length; langIndex++) { \n';
	    result = result + '   languageOptions[langIndex].on(\'click\', function(e) { setTimeout(function(){ JotForm.setCalendar("' + id + '", ' + startOnMonday + ', ' + limitDate + '); }, 0); });\n';
	    result = result + ' } \n';

	    result = result + ' JotForm.setCalendar("' + id + '", ' + startOnMonday + ', ' + limitDate + ');\n';
	  }

	  if (prop.defaultDate.value === 'current') {
	    result = result + ' JotForm.formatDate({date:(new Date()), dateField:$("id_"+' + id + ')});\n';
	  }

	  var fixAmPm = prop.allowTime && prop.allowTime.value === 'Yes' && prop.timeFormat && prop.timeFormat.value === 'AM/PM' && prop.defaultTime && prop.defaultTime.value === 'none';
	  if (prop.defaultTime.value === 'current' || fixAmPm) {
	    if (prop.themeVersion === 'v2') {
	      result = result + ' JotForm.displayLocalTime("input_' + id + '_hourSelect", "input_' + id + '_minuteSelect","input_' + id + '_ampm", "input_' + id + '_timeInput", ' + fixAmPm + ');\n';
	    } else {
	      result = result + ' JotForm.displayLocalTime("hour_' + id + '", "min_' + id + '", "ampm_' + id + '", null, ' + fixAmPm + ');\n';
	    }
	  }

	  if (prop.defaultDate.value.indexOf('custom') > -1 && prop.defaultDate.value.indexOf('today') > -1) {
	    var dynamicDate = prop.defaultDate.value.replace(/custom_/gi, '');
	    result = result + '  JotForm.displayDynamicDate(' + id + ',"' + dynamicDate + '");\n';
	  }

	  return result;
	};

	exports.default = Datetime;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Time = function (_Component) {
	  _inherits(Time, _Component);

	  function Time() {
	    _classCallCheck(this, Time);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Time.prototype.isAMPM = function isAMPM() {
	    return this.props.timeFormat && this.props.timeFormat.value !== '24 Hour';
	  };

	  Time.prototype.renderTimebox = function renderTimebox() {
	    var isRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var hourSubLabel = (0, _Utils.subLabel)(this.props, isRange ? 'hourRange' : 'hour', this.props.id.value);
	    var minSublabel = (0, _Utils.subLabel)(this.props, 'minutes', this.props.id.value);
	    var hourSubLabelRange = (0, _Utils.subLabel)(this.props, 'hourRange', this.props.id.value);
	    var minSublabelRange = (0, _Utils.subLabel)(this.props, 'minutesRange', this.props.id.value);
	    var defaultClassName = this.props.defaultTime.value === 'current' ? 'currentTime ' : '';
	    var disabled = this.props.readonly && this.props.readonly.value === 'Yes' ? ' disabled' : '';
	    var mask = this.props.timeFormat && this.props.timeFormat.value === '24 Hour' ? 'HH:MM' : 'hh:MM';
	    var hasDefault = this.props.defaultTime && this.props.defaultTime.value !== 'none';
	    var hourInputName = this.props.isDatetime ? 'hour' : 'hourSelect';
	    var minInputName = this.props.isDatetime ? 'min' : 'minuteSelect';

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: isRange ? hourSubLabelRange.text + ' ' + minSublabelRange.text : hourSubLabel.text + ' ' + minSublabel.text,
	        propPath: isRange ? 'sublabels.hourRange' : 'sublabels.hour',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.hour,
	        'for': this.props.qid.value + '_' + (isRange ? 'timeInputRange' : 'timeInput'),
	        key: isRange ? 'hour_range' : 'hour',
	        containerClasses: this.isAMPM() ? 'hasAMPM' : ''
	      }),
	      _react2.default.createElement('input', {
	        className: (!isRange ? defaultClassName : '') + 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props),
	        id: 'input_' + this.props.id.value + '_' + (isRange ? 'timeInputRange' : 'timeInput'),
	        name: '' + this.props.qname.value + (isRange ? '[timeInputRange]' : '[timeInput]'),
	        type: 'text',
	        required: this.props.required && this.props.required.value === 'Yes' ? true : null,
	        placeholder: 'HH : MM',
	        disabled: disabled,
	        'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, isRange ? hourSubLabelRange : hourSubLabel),
	        readOnly: isRange ? this.props.inlineEditClass : null,
	        'data-mask': mask,
	        value: hasDefault ? (0, _Utils.addZeros)(this.currentTime.hour, 2) + ':' + (0, _Utils.addZeros)(this.currentTime.min, 2) : '',
	        'data-version': 'v2'
	      }),
	      _react2.default.createElement('input', {
	        type: 'hidden',
	        id: 'input_' + this.props.id.value + '_' + (isRange ? 'hourSelectRange' : 'hourSelect'),
	        name: this.props.qname.value + '[' + (isRange ? 'hourSelectRange' : hourInputName) + ']',
	        value: hasDefault ? (0, _Utils.addZeros)(this.currentTime.hour, 2) : null
	      }),
	      _react2.default.createElement('input', {
	        type: 'hidden',
	        id: 'input_' + this.props.id.value + '_' + (isRange ? 'minuteSelectRange' : 'minuteSelect'),
	        name: this.props.qname.value + '[' + (isRange ? 'minuteSelectRange' : minInputName) + ']',
	        value: hasDefault ? (0, _Utils.addZeros)(this.currentTime.min, 2) : null
	      })
	    );
	  };

	  Time.prototype.renderAmPm = function renderAmPm() {
	    var isRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    if (!this.isAMPM()) {
	      return null;
	    }
	    var ampmSubLabel = (0, _Utils.subLabelSingle)({ subLabel: { value: 'AM/PM Option' } }, 'ampm', this.props.id.value);
	    var ampmRangeSubLabel = (0, _Utils.subLabelSingle)({ subLabel: { value: 'AM/PM Option' } }, 'ampmRange', this.props.id.value);
	    var disabled = this.props.readonly && this.props.readonly.value === 'Yes' ? ' disabled' : '';
	    var currentAmPm = isRange ? this.currentTime.currentAmpmRange : this.currentTime.currentAmpm;
	    var ampm = [];

	    if (!this.props.showDayPeriods || this.props.showDayPeriods.value !== 'pmOnly') {
	      var selected = currentAmPm === 'AM' ? 'selected' : null;
	      ampm.push(_react2.default.createElement(
	        'option',
	        {
	          selected: selected,
	          value: 'AM',
	          key: isRange ? 'range_am' : 'am'
	        },
	        'AM'.locale()
	      ));
	    }

	    if (!this.props.showDayPeriods || this.props.showDayPeriods.value !== 'amOnly') {
	      var _selected = currentAmPm === 'PM' ? 'selected' : null;
	      ampm.push(_react2.default.createElement(
	        'option',
	        {
	          selected: _selected,
	          value: 'PM',
	          key: isRange ? 'range_pm' : 'pm'
	        },
	        'PM'.locale()
	      ));
	    }

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        wrapAlways: true,
	        editable: false,
	        'for': this.props.qid.value + '_' + (isRange ? 'ampmRange' : 'ampm'),
	        labelValue: isRange ? ampmRangeSubLabel : ampmSubLabel,
	        hidePartLabelA11Y: true,
	        key: isRange ? 'ampm_range' : 'ampm'
	      }),
	      _react2.default.createElement(
	        'select',
	        {
	          disabled: disabled,
	          className: 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props),
	          id: 'input_' + this.props.id.value + '_' + (isRange ? 'ampmRange' : 'ampm'),
	          name: '' + this.props.qname.value + (isRange ? '[ampmRange]' : '[ampm]'),
	          'data-component': isRange ? 'time-ampm-range' : 'time-ampm',
	          required: this.props.required && this.props.required.value === 'Yes' ? true : null,
	          'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, isRange ? ampmRangeSubLabel : ampmSubLabel)
	        },
	        ampm
	      )
	    );
	  };

	  Time.prototype.renderRangeSeparator = function renderRangeSeparator() {
	    var untilSpan = this.props.inlineEditClass ? _react2.default.createElement(this.props.inlineEditClass, {
	      id: this.props.id.value,
	      propPath: 'until',
	      text: this.props.until ? this.props.until.value : 'until',
	      defaultValue: this.props.until ? this.props.until.value : 'until',
	      placeholder: 'Type a range indicator.'
	    }) : this.props.until && this.props.until.value || '';

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'sublabels.until',
	        wrapAlways: true,
	        editable: false,
	        'for': 'until_' + this.props.id.value,
	        labelValue: 'until',
	        containerClasses: 'until-wrapper',
	        hidePartLabelA11Y: true,
	        key: 'until_range'
	      }),
	      _react2.default.createElement(
	        'div',
	        {
	          className: 'until-text',
	          id: 'until_' + this.props.id.value
	        },
	        untilSpan
	      )
	    );
	  };

	  Time.prototype.renderDifference = function renderDifference() {
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      {
	        labelValue: 'Total 0.0',
	        wrapAlways: true,
	        editable: false,
	        'for': 'input_' + this.props.id.value + '_dummy'
	      },
	      _react2.default.createElement('input', {
	        type: 'hidden',
	        id: 'duration_' + this.props.id.value + '_ampmRange',
	        name: this.props.qname.value + '[timeRangeDuration]'
	      }),
	      _react2.default.createElement('span', {
	        id: 'input_' + this.props.id.value + '_dummy'
	      })
	    );
	  };

	  Time.prototype.render = function render() {
	    var isRange = this.props.range && this.props.range.value === 'Yes';
	    var showTimeDiff = this.props.timeDiff && this.props.timeDiff.value === 'Yes';

	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      this.renderTimebox(),
	      this.renderAmPm(),
	      isRange && this.renderRangeSeparator(),
	      isRange && this.renderTimebox(isRange),
	      isRange && this.renderAmPm(isRange),
	      isRange && showTimeDiff && this.renderDifference()
	    );
	  };

	  _createClass(Time, [{
	    key: 'currentTime',
	    get: function get() {
	      if (this.props.defaultTime.value.indexOf('custom_') > -1) {
	        var toCustomHour = false;
	        var toCustomMinute = false;
	        var fromD = this.props.defaultTime.value.split('custom_')[1];
	        // time range
	        if (fromD.indexOf('-') > -1) {
	          var range = fromD.split('-');
	          var to = range[1];
	          fromD = range[0];
	          var toSplit = to.split(':');
	          toCustomHour = toSplit[0];
	          toCustomMinute = toSplit[1];
	        }

	        return (0, _Utils.getCurrentTime)(this.props, fromD.split(':')[0], fromD.split(':')[1], toCustomHour, toCustomMinute);
	      }

	      return (0, _Utils.getCurrentTime)(this.props);
	    }
	  }]);

	  return Time;
	}(_react.Component);

	Time.getScript = function (props) {
	  var script = '';
	  var id = props.id.value;
	  if (props.range && props.range.value === 'Yes' && props.timeDiff && props.timeDiff.value === 'Yes') {
	    script += '      JotForm.displayTimeRangeDuration(' + id + ');\n';
	  }
	  var fixAmPm = props.timeFormat && props.timeFormat.value === 'AM/PM' && props.showDayPeriods && props.showDayPeriods.value === 'both' && props.defaultTime && props.defaultTime.value === 'none';
	  if (!props.inlineEditClass && props.defaultTime && (props.defaultTime.value === 'current' || fixAmPm)) {
	    script += '      JotForm.displayLocalTime("input_' + id + '_hourSelect", "input_' + id + '_minuteSelect","input_' + id + '_ampm", "input_' + id + '_timeInput", ' + fixAmPm + ');\n';
	  }
	  return script;
	};

	Time.getState = function () {};

	Time.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  required: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  range: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  timeFormat: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  showDayPeriods: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultTime: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  step: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  description: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  timeDiff: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  until: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabels: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  readonly: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  isDatetime: _propTypes2.default.bool,
	  inlineEditClass: _propTypes2.default.func
	};

	exports.default = Time;

/***/ },
/* 119 */,
/* 120 */,
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Divider = function Divider(prop) {
	  var color = prop.color.value || '#e6e6e6';
	  var height = (prop.height.value || '1') + 'px';
	  var spaceBelow = (prop.spaceBelow.value || '0') + 'px';
	  var spaceAbove = (prop.spaceAbove.value || '0') + 'px';
	  var marginLeftRight = (prop.margin.value || '0') + 'px';
	  var linestyle = prop.lineStyle.value || 'solid';

	  var style = {
	    borderBottom: height + ' ' + linestyle + ' ' + color,
	    height: height,
	    marginLeft: marginLeftRight,
	    marginRight: marginLeftRight,
	    marginTop: spaceAbove,
	    marginBottom: spaceBelow
	  };

	  return _react2.default.createElement('div', { 'data-component': 'divider', style: style });
	};

	exports.default = Divider;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Dropdown = function (_Component) {
	  _inherits(Dropdown, _Component);

	  function Dropdown() {
	    _classCallCheck(this, Dropdown);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Dropdown.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	    var props = ['visibleOptions', 'width', 'options', 'subLabel', 'special'];
	    for (var i = 0; i < props.length; i++) {
	      var prop = props[i];
	      if (this.props[prop] && nextProps[prop] && JSON.stringify(this.props[prop].value) !== JSON.stringify(nextProps[prop].value)) {
	        return true;
	      }
	    }
	    if (nextProps.selected.value !== this.props.selected.value || nextProps.manageDropdownOptions !== this.props.manageDropdownOptions) {
	      return true;
	    }

	    return false;
	  };

	  Dropdown.prototype.render = function render() {
	    var _this2 = this;

	    var prop = this.props;
	    var qid = prop.qid.value;
	    var qname = prop.qname.value;
	    var subLabelObj = (0, _Utils.subLabelSingle)(prop, qid);

	    var emptyText = '';
	    var opts = [];

	    var cl = _Utils.classNames.dropdown;
	    if (prop.size.value > 1) {
	      cl = _Utils.classNames.list;
	    }

	    // configure select props //////////////////////////
	    var selectProps = {
	      className: (0, _Utils.addValidation)(cl, prop),
	      id: qid,
	      name: qname
	    };

	    if (prop.width && (prop.width.value !== 'auto' || !prop.width.value)) {
	      selectProps.style = {
	        width: parseInt(prop.width.value, 10) + 'px'
	      };
	    }

	    if (prop.size.value > 1) {
	      selectProps.name = selectProps.name + '[]';
	      selectProps.size = prop.size.value;
	      selectProps.multiple = 'multiple';
	    } else {
	      // new height/multiple values
	      if (prop.multipleSelections.value === 'Yes') {
	        selectProps.name = selectProps.name + '[]';
	        selectProps.multiple = 'multiple';
	      }
	      if (prop.visibleOptions.value > 1) {
	        if (this.props.themeVersion === 'v2') {
	          selectProps.size = (Number(prop.visibleOptions.value) + 1).toString();
	        } else {
	          selectProps.size = prop.visibleOptions.value;
	        }
	      }
	    }

	    // //////////////////////////////////////////////////////

	    if (prop.options && {}.hasOwnProperty.call(prop.options, 'value') && prop.options.value !== null && typeof prop.options.value === 'string') {
	      opts = prop.options.value.split('|');
	    } else {
	      opts = '';
	      prop.options.value = '';
	    }

	    // Allow "empty option" text, i.e., "Please select"
	    if (prop.emptyText) {
	      emptyText = prop.emptyText.value;
	    }

	    var calcValues = prop.calcValues && prop.calcValues.value && prop.calcValues.value.length > 0 && prop.calcValues.value !== 'Click to edit' ? prop.calcValues.value.split('|') : false;
	    if (prop.useCalculations && prop.useCalculations.value && prop.useCalculations.value === 'No') {
	      calcValues = false;
	    }

	    var calcOptionProps = {
	      'data-calcvalue': calcValues && calcValues[0] ? calcValues[0] : null
	    };

	    if (this.props.themeVersion === 'v2' && prop.emptyText.value === '' && prop.visibleOptions.value < 2) {
	      emptyText = 'Please Select'.locale();
	    }

	    var calcOption = _react2.default.createElement(
	      'option',
	      _extends({}, calcOptionProps, { value: '' }),
	      emptyText
	    );

	    if (typeof prop.special !== 'undefined' && prop.special.value !== 'None') {
	      prop.options.disabled = true;
	      opts = JSON.parse(JSON.stringify(_Utils.specialOptions[prop.special.value].value));
	    } else {
	      prop.options.disabled = false;
	    }

	    if (calcValues && calcValues.length > 0) {
	      calcValues.splice(0, 1);
	    }

	    var strippedSelectedValue = (0, _Utils.strip)(prop.selected.value).replace(/&amp;/g, '&');
	    var options = [];
	    var currentGroup = null;
	    if (this.props.themeVersion === 'v2' || !this.props.passive) {
	      for (var i = 0; i < opts.length; i += 1) {
	        var strippedOpt = (0, _Utils.strip)(opts[i]).replace(/&#0*39;/g, "'").replace(/&amp;/g, '&').replace(/(&amp;quot;)|(&quot;)/g, '"');
	        var selectedVals = typeof prop.selected.value === 'string' ? (0, _Utils.strip)(prop.selected.value) : prop.selected.value;
	        var selectedValues = typeof selectedVals !== 'string' ? selectedVals.toString() : selectedVals;
	        var selectedOptions = selectedValues.replace(/&#0*39;/g, "'").replace(/&amp;/g, '&').replace(/(&amp;quot;)|(&quot;)/g, '"').split('|').filter(function (p) {
	          return p;
	        });
	        var selected = selectedOptions.indexOf(strippedOpt) !== -1 ? 'selected' : null;
	        var calcValue = calcValues && calcValues[i] ? calcValues[i] : null;
	        var optionValue = opts[i];
	        var optionGroup = optionValue.match(/^\[\[(.*?)]]$/);

	        if (optionGroup) {
	          var groupOption = {
	            type: 'group',
	            groupProps: {
	              label: (0, _Utils.escapeValue)(optionGroup[1])
	            },
	            children: []
	          };
	          options.push(groupOption);
	          currentGroup = groupOption;
	        } else {
	          var optProps = {
	            selected: selected,
	            'data-calcvalue': calcValue,
	            value: (0, _Utils.htmlDecode)((0, _Utils.sanitize)(optionValue)),
	            key: i
	          };

	          var option = _react2.default.createElement(
	            'option',
	            optProps,
	            (0, _Utils.htmlDecode)((0, _Utils.sanitize)(optionValue))
	          );

	          if (currentGroup) {
	            currentGroup.children.push(option);
	          } else {
	            options.push({
	              type: 'option',
	              option: option
	            });
	          }
	        }
	      }
	    } else if (this.props.passive && strippedSelectedValue && this.props.themeVersion !== 'v2') {
	      strippedSelectedValue.split('|').forEach(function (optionText) {
	        var option = _react2.default.createElement(
	          'option',
	          { selected: 'selected' },
	          optionText
	        );
	        options.push({
	          type: 'option',
	          option: option
	        });
	      });
	    }

	    var optionElements = options.map(function (optionDef) {
	      if (optionDef.type === 'group') {
	        return _react2.default.createElement(
	          'optgroup',
	          optionDef.groupProps,
	          optionDef.children
	        );
	      }
	      return optionDef.option;
	    });

	    var optionsButton = null;

	    if (this.props.manageDropdownOptions) {
	      optionsButton = _react2.default.createElement(this.props.manageDropdownOptions, {
	        options: this.props.options.value,
	        qid: this.props.id.value,
	        update: this.props.updateMethod,
	        ref: function ref(_ref) {
	          _this2.optionsEditComponent = _ref;
	        }
	      });

	      optionsButton = _react2.default.createElement(
	        'div',
	        null,
	        optionsButton
	      );
	    }

	    var select = _react2.default.createElement(
	      'select',
	      _extends({
	        readOnly: prop.inlineEditClass
	      }, selectProps, {
	        'data-component': 'dropdown',
	        required: this.props.required && this.props.required.value === 'Yes' ? true : null,
	        'aria-labelledby': (0, _Utils.ariaLabelledBy)(prop, subLabelObj)
	      }),
	      calcOption,
	      optionElements
	    );

	    if (this.props.passive) {
	      select = _react2.default.createElement(
	        'div',
	        {
	          onMouseDown: function onMouseDown(e) {
	            e.preventDefault();
	            if (_this2.optionsEditComponent) {
	              _this2.optionsEditComponent.toggleEditableState();
	            }
	          }
	        },
	        select
	      );
	    }

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        'for': qid,
	        propPath: 'subLabel',
	        labelValue: subLabelObj,
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      select,
	      optionsButton
	    );
	  };

	  return Dropdown;
	}(_react.Component);

	Dropdown.getScript = function (prop) {
	  if (prop.shuffle && prop.shuffle.value === 'Yes') {
	    return '      JotForm.shuffleOptions("' + prop.id.value + '");\n';
	  }
	  return '';
	};

	exports.default = Dropdown;


	Dropdown.propTypes = {
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  selected: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  options: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  manageDropdownOptions: _propTypes2.default.function,
	  updateMethod: _propTypes2.default.function,
	  passive: _propTypes2.default.bool,
	  required: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  themeVersion: _propTypes2.default.string
	};

/***/ },
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Dwolla = function (_Component) {
	  _inherits(Dwolla, _Component);

	  function Dwolla() {
	    _classCallCheck(this, Dwolla);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Dwolla.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_dwolla'
	    }));
	  };

	  return Dwolla;
	}(_react.Component);

	exports.default = Dwolla;


	Dwolla.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Dwolla.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Dwolla.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Echeck = function (_Component) {
	  _inherits(Echeck, _Component);

	  function Echeck() {
	    _classCallCheck(this, Echeck);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Echeck.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_echeck' }));
	    // const paymentCreditCardAndAddress = null;
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_echeck'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Echeck;
	}(_react.Component);

	exports.default = Echeck;


	Echeck.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Echeck.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Echeck.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Email = function (_Component) {
	  _inherits(Email, _Component);

	  function Email() {
	    _classCallCheck(this, Email);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Email.prototype.renderConfirmation = function renderConfirmation() {
	    var additionalValidateClasses = this.props.disallowFree && this.props.disallowFree.value === 'Yes' ? 'Email_Confirm, disallowFree' : 'Email_Confirm';
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props, additionalValidateClasses);
	    var placeholder = this.props.confirmationHint && this.props.confirmationHint.value ? this.props.confirmationHint.value.replace(/'/g, '') : null;
	    var size = this.props.size && this.props.size.value ? this.props.size : null;
	    var maxsize = this.props.maxsize && this.props.maxsize.value && this.props.maxsize.value > 0 ? this.props.maxsize : null;
	    var style = this.props.themeVersion === 'v2' ? { width: this.props.size.value + 'px' } : {};

	    return _react2.default.createElement(_BaseInput2.default, {
	      type: 'email',
	      additionalClass: className,
	      qid: this.props.qid.value + '_confirm',
	      qname: this.props.qname.value,
	      style: Object.assign({ marginTop: '8px' }, style),
	      size: size,
	      maxsize: maxsize,
	      hint: { value: placeholder },
	      dataComponent: 'emailConfirmation'
	    });
	  };

	  Email.prototype.render = function render() {
	    var props = this.props;

	    var additionalClass = this.props.disallowFree && this.props.disallowFree.value === 'Yes' ? 'disallowFree' : '';
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props, additionalClass);
	    var qidValue = props.qid.value;

	    var subLabelObj = (0, _Utils.subLabelSingle)(this.props, qidValue);
	    var style = this.props.themeVersion === 'v2' ? { width: this.props.size.value + 'px' } : {};

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: subLabelObj,
	        'for': this.props.qid.value,
	        propPath: 'subLabel',
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        qid: this.props.qid.value,
	        qname: this.props.qname.value,
	        additionalClass: className,
	        type: 'email',
	        style: style,
	        dataComponent: 'email',
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, subLabelObj)
	      })),
	      this.props.confirmation && this.props.confirmation.value && this.props.confirmation.value === 'Yes' ? _react2.default.createElement('br', null) : null,
	      this.props.confirmation && this.props.confirmation.value && this.props.confirmation.value === 'Yes' ? _react2.default.createElement('label', {
	        className: 'form-sub-label',
	        style: (0, _Utils.accessibleHiddenStyle)(),
	        htmlFor: this.props.qid.value + '_confirm',
	        dangerouslySetInnerHTML: { __html: 'Confirmation Email' }
	      }) : null,
	      this.props.confirmation && this.props.confirmation.value && this.props.confirmation.value === 'Yes' ? this.renderConfirmation() : null
	    );
	  };

	  return Email;
	}(_react.Component);

	exports.default = Email;


	Email.getScript = function (props) {
	  var script = '';
	  if (props.confirmation && props.confirmation.value === 'Yes' && props.confirmationHint && props.confirmationHint.value) {
	    script += '     $(\'' + props.qid.value + '_confirm\').hint(\'' + props.confirmationHint.value.replace(/'/g, '') + '\');\n';
	    script += '     $$(\'#' + props.qid.value + '_confirm\')[0].setAttribute(\'onPaste\', \'return false;\');\n';
	  }
	  return script;
	};

	Email.getState = function () {
	  return {};
	};

	Email.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  disallowFree: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  size: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  confirmation: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  maxsize: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  confirmationHint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  themeVersion: _propTypes2.default.string
	};

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Eway = function (_Component) {
	  _inherits(Eway, _Component);

	  function Eway() {
	    _classCallCheck(this, Eway);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Eway.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }

	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_eway' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_eway'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Eway;
	}(_react.Component);

	exports.default = Eway;


	Eway.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Eway.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Eway.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var FilepickerIO = function (_Component) {
	  _inherits(FilepickerIO, _Component);

	  function FilepickerIO() {
	    _classCallCheck(this, FilepickerIO);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  FilepickerIO.prototype.render = function render() {
	    // const isMultiple = this.props.allowMultiple && this.props.allowMultiple.value === 'Yes';
	    var styleName = this.props.buttonStyle.value.toLowerCase();
	    var className = styleName !== 'none' ? 'form-submit-button-' + styleName : '';
	    // const hasSubLabel = this.props.subLabel && this.props.subLabel.value;

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: this.props.subLabel && this.props.subLabel.value !== '' ? this.props.subLabel.value : null,
	        'for': this.props.qid.value,
	        propPath: 'subLabel',
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      _react2.default.createElement(
	        'div',
	        {
	          id: 'button_container_' + this.props.qid.value
	        },
	        _react2.default.createElement(
	          'button',
	          {
	            id: 'filePicker_' + this.props.qid.value,
	            type: 'button',
	            className: className,
	            'data-component': 'filepickerIO'
	          },
	          this.props.buttonText.value
	        )
	      ),
	      !this.props.inlineEditClass ? _react2.default.createElement(
	        'div',
	        { 'data-react-wrapper': 'true' },
	        _react2.default.createElement('ul', {
	          id: 'filePickerList_' + this.props.qid.value,
	          className: 'qq-upload-list'
	        }),
	        _react2.default.createElement('input', {
	          type: 'hidden',
	          name: this.props.qname.value,
	          id: this.props.qid.value,
	          className: (0, _Utils.addValidation)('form-hidden', this.props)
	        })
	      ) : null
	    );
	  };

	  return FilepickerIO;
	}(_react.Component);

	exports.default = FilepickerIO;


	FilepickerIO.getState = function () {
	  return undefined.props;
	};

	FilepickerIO.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func
	};

	FilepickerIO.getScript = function (prop) {
	  // const state = FilepickerIO.getState(prop);

	  if (!prop.inlineEditClass) {
	    var filepickerIOOptions = {
	      // title: this.getProperty('title'),
	      qid: prop.qid.value,
	      apiKey: prop.apiKey.value,
	      multiple: prop.allowMultiple && prop.allowMultiple.value === 'Yes',
	      maxsize: Number(prop.maxFileSize.value) * 1024,
	      mimetypes: prop.mimetypes.value,
	      modal: prop.fpModal.value,
	      services: prop.services.value,
	      openTo: prop.openToService.value,
	      crop: 'cropImage' in prop && prop.cropImage.value === 'enabled' ? {
	        ratio: prop.cropImageRatio.value
	      } : false,
	      compress: 'compressImage' in prop && prop.compressImage.value === 'enabled' ? {
	        quality: prop.compressImageLvl.value
	      } : false,
	      resize: 'imageDim' in prop && 'imageMax' in prop && 'imageMin' in prop && (prop.imageDim.value || prop.imageMax.value || prop.imageMin.value) ? {
	        imageDim: prop.imageDim.value,
	        imageMax: prop.imageMax.value,
	        imageMin: prop.imageMin.value
	      } : false
	    };

	    if (prop.allowUploadToS3 && prop.allowUploadToS3.value === 'enabled') {
	      filepickerIOOptions.allowUploadToS3 = prop.allowUploadToS3.value;
	      filepickerIOOptions.s3UploadPath = prop.s3UploadingPath.value;
	      filepickerIOOptions.s3UploadAccess = prop.s3UploadAccess.value;
	    }

	    return '\'      JotForm.setFilePickerIOUpload(\' ' + JSON.stringify(filepickerIOOptions) + ' \');\n\'';
	  }
	};

	FilepickerIO.propTypes = {
	  allowMultiple: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  buttonStyle: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  buttonText: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Fileuploadv = __webpack_require__(132);

	var _Fileuploadv2 = _interopRequireDefault(_Fileuploadv);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Fileupload = function (_Component) {
	  _inherits(Fileupload, _Component);

	  function Fileupload() {
	    _classCallCheck(this, Fileupload);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Fileupload.prototype.render = function render() {
	    var prop = this.props;
	    if (prop.themeVersion && prop.themeVersion === 'v2') {
	      return _react2.default.createElement(_Fileuploadv2.default, prop);
	    }

	    var buttonTextDiv = null;
	    var isMultiple = prop.allowMultiple && prop.allowMultiple.value === 'Yes';
	    if (!prop.inlineEditClass && isMultiple && prop.buttonText.value) {
	      buttonTextDiv = _react2.default.createElement(
	        'div',
	        { className: 'qq-uploader-buttonText-value' },
	        prop.buttonText.value
	      );
	    }

	    var className = '';
	    if (isMultiple && typeof prop.buttonStyle !== 'undefined' && typeof prop.buttonStyle.value !== 'undefined') {
	      var styleName = prop.buttonStyle.value.toLowerCase();
	      className = styleName !== 'none' ? 'form-submit-button-' + styleName + ' ' : '';
	    }

	    className += (0, _Utils.addValidation)(isMultiple ? _Utils.classNames.mupload : _Utils.classNames.upload, prop);

	    var inputProps = {
	      disabled: prop.inlineEditClass ? 1 : null,
	      type: 'file',
	      id: prop.qid.value,
	      name: '' + prop.qname.value + (isMultiple ? '[]' : ''),
	      multiple: isMultiple ? 1 : null,
	      className: className,
	      'data-imagevalidate': prop.validateImg && prop.validateImg.value === 'enable' ? 'yes' : null,
	      'data-file-accept': prop.extensions.value,
	      'data-file-maxsize': prop.maxFileSize.value,
	      'data-file-minsize': prop.minFileSize.value,
	      'data-file-limit': prop.fileLimit ? prop.fileLimit.value : '0',
	      'data-component': 'true',
	      required: prop.required && prop.required.value === 'Yes' ? true : null
	    };

	    var input = prop.inlineEditClass && isMultiple ? _react2.default.createElement(
	      'div',
	      { className: 'qq-uploader', 'data-component': 'fileupload' },
	      _react2.default.createElement(
	        'div',
	        { className: className + ' qq-upload-button' },
	        prop.buttonText.value || 'Upload a File'
	      )
	    ) : _react2.default.createElement('input', _extends({}, inputProps, { 'data-component': 'fileupload' }));

	    var withSublabel = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: prop.subLabel ? prop.subLabel.value : null,
	        'for': inputProps.id,
	        propPath: 'subLabel',
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      buttonTextDiv,
	      input
	    );

	    if (!isMultiple) {
	      return withSublabel;
	    }

	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      withSublabel,
	      _react2.default.createElement(
	        'span',
	        { style: { display: 'none' }, className: 'cancelText' },
	        prop.mulipleLabels.value.cancel
	      ),
	      _react2.default.createElement(
	        'span',
	        { style: { display: 'none' }, className: 'ofText' },
	        prop.mulipleLabels.value.of
	      )
	    );
	  };

	  return Fileupload;
	}(_react.Component);

	exports.default = Fileupload;


	Fileupload.propTypes = {
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _Utils = __webpack_require__(16);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _IconSVG = __webpack_require__(133);

	var _IconSVG2 = _interopRequireDefault(_IconSVG);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-undef */


	var Fileupload = function (_Component) {
	  _inherits(Fileupload, _Component);

	  function Fileupload() {
	    _classCallCheck(this, Fileupload);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Fileupload.prototype.formatSize = function formatSize(kbytes) {
	    var byte = kbytes * 1024;
	    var i = -1;

	    do {
	      byte = byte / 1024;
	      i++;
	    } while (byte > 99);

	    return Math.max(byte, 0.1).toFixed(1) + ['KB', 'MB', 'GB', 'TB', 'PB', 'EB'][i];
	  };

	  Fileupload.prototype.render = function render() {
	    var prop = this.props;
	    var isMultiple = true;

	    var className = '';
	    if (isMultiple && typeof prop.buttonStyle !== 'undefined' && typeof prop.buttonStyle.value !== 'undefined') {
	      var styleName = prop.buttonStyle.value.toLowerCase();
	      className = styleName !== 'none' ? 'form-submit-button-' + styleName + ' ' : '';
	    }

	    className += (0, _Utils.addValidation)(isMultiple ? _Utils.classNames.mupload : _Utils.classNames.upload, prop);
	    var buttonText = prop.buttonText.value || 'Browse Files';

	    var maxFileSizeProp = prop.maxFileSize && prop.maxFileSize.value ? prop.maxFileSize.value : 1;
	    var minFileSizeProp = prop.minFileSize && prop.minFileSize.value ? prop.minFileSize.value : 0;

	    var inputProps = {
	      disabled: prop.inlineEditClass ? 1 : null,
	      type: 'file',
	      id: prop.qid.value,
	      name: '' + prop.qname.value + (isMultiple ? '[]' : ''),
	      multiple: isMultiple ? 1 : null,
	      className: className,
	      'data-imagevalidate': prop.validateImg && prop.validateImg.value === 'enable' ? 'yes' : null,
	      'data-file-accept': prop.extensions.value,
	      'data-file-maxsize': maxFileSizeProp,
	      'data-file-minsize': minFileSizeProp,
	      'data-file-limit': prop.fileLimit ? prop.fileLimit.value : '1',
	      'data-component': 'true',
	      required: prop.required && prop.required.value === 'Yes' ? true : null,
	      'aria-label': buttonText
	    };

	    var mainContainer = typeof document !== 'undefined' && document.getElementById('app');
	    var body = typeof document !== 'undefined' && document.querySelector('body');
	    var input = void 0;

	    if (prop.inlineEditClass && isMultiple || mainContainer && mainContainer.classList && mainContainer.classList.contains('isBuilder') && body && body.classList && !body.classList.contains('JotFormCardBuilder')) {
	      input = _react2.default.createElement(
	        'div',
	        { className: 'qq-uploader', 'data-component': 'fileupload' },
	        _react2.default.createElement(
	          'div',
	          { className: className + ' qq-upload-button' },
	          buttonText,
	          _react2.default.createElement(
	            'div',
	            { className: 'jfUpload-heading forDesktop' },
	            'Drag and drop files here'.locale()
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'jfUpload-heading forMobile' },
	            'Choose a file'.locale()
	          )
	        )
	      );
	    } else {
	      input = _react2.default.createElement('input', _extends({}, inputProps, { 'data-component': 'fileupload' }));
	    }

	    var subLabelObj = (0, _Utils.subLabelSingle)(prop, prop.qid.value);
	    var subLabel = _react2.default.createElement(_SubLabel2.default, _extends({}, this.props, {
	      id: this.props.id,
	      text: subLabelObj ? subLabelObj.text : '',
	      'for': inputProps.id,
	      propPath: 'subLabel',
	      defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value,
	      labelValue: subLabelObj
	    }));

	    var uploadButton = prop.buttonText.value || 'Browse Files';
	    if (prop.inlineEditClass && isMultiple) {
	      uploadButton = _react2.default.createElement(prop.inlineEditClass, {
	        id: prop.id.value,
	        propPath: 'buttonText',
	        text: prop.buttonText.value || 'Browse Files',
	        defaultValue: _QuestionProps2.default[prop.type.value].buttonText.value,
	        placeholder: '',
	        renderHtmlTags: false,
	        sanitizeText: true
	      });
	    }

	    var withSublabel = _react2.default.createElement(
	      'div',
	      { className: 'jfField isFilled' },
	      _react2.default.createElement(
	        'div',
	        { className: 'jfUpload-wrapper' },
	        _react2.default.createElement(
	          'div',
	          { className: 'jfUpload-container' },
	          _react2.default.createElement(
	            'div',
	            { className: 'jfUpload-text-container' },
	            _react2.default.createElement(
	              'div',
	              { className: 'jfUpload-icon forDesktop' },
	              _react2.default.createElement(_IconSVG2.default, { name: 'dhtupload' })
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'jfUpload-button-container' },
	            _react2.default.createElement(
	              'div',
	              { className: 'jfUpload-button', 'aria-hidden': 'true', tabIndex: '0', style: { display: 'none' }, 'data-version': 'v2' },
	              uploadButton,
	              _react2.default.createElement(
	                'div',
	                { className: 'jfUpload-heading forDesktop' },
	                'Drag and drop files here'.locale()
	              ),
	              _react2.default.createElement(
	                'div',
	                { className: 'jfUpload-heading forMobile' },
	                'Choose a file'.locale()
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'jfUpload-files-container' },
	          input
	        )
	      ),
	      subLabel
	    );

	    if (!isMultiple) {
	      return withSublabel;
	    }

	    return _react2.default.createElement(
	      'div',
	      { className: 'jfQuestion-fields', 'data-wrapper-react': 'true' },
	      withSublabel,
	      _react2.default.createElement(
	        'span',
	        { style: { display: 'none' }, className: 'cancelText' },
	        prop.mulipleLabels && prop.mulipleLabels.value.cancel
	      ),
	      _react2.default.createElement(
	        'span',
	        { style: { display: 'none' }, className: 'ofText' },
	        prop.mulipleLabels && prop.mulipleLabels.value.of
	      )
	    );
	  };

	  return Fileupload;
	}(_react.Component);

	Fileupload.propTypes = {
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	exports.default = Fileupload;

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable */


	var IconSVG = function (_Component) {
	  _inherits(IconSVG, _Component);

	  function IconSVG(props) {
	    _classCallCheck(this, IconSVG);

	    // ICON-SETS-V2 CHECK
	    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	    _this.iconRegex = /(jfc_icon_(.*?)-.*)/;
	    _this.isJfIconV2 = _this.iconRegex.test(props.name);

	    if (_this.isJfIconV2) {
	      _this.svgName = props.name.match(_this.iconRegex)[1];
	      _this.svgType = props.name.match(_this.iconRegex)[2];
	    } else {
	      // OLD SET NEEDS TO BE NORMALIZED
	      _this.sanitizeSVG = _this.sanitizeSVG.bind(_this);
	    }
	    _this.setSVG = _this.setSVG.bind(_this);

	    _this.setSVG(props);
	    return _this;
	  }

	  IconSVG.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    this.setSVG(nextProps);
	  };

	  IconSVG.prototype.setSVG = function setSVG(givenProps) {
	    try {
	      /* eslint-disable import/no-dynamic-require, global-require */
	      // if (givenProps.isJotFormIconSVG === true) {
	      //   // DYNAMIC SVGS => WELCOME & THANKYOU
	      //   if (this.isJfIconV2) {
	      //     // ICON-SET-V2
	      //     const path = givenProps.name.match(/assets\/icons\/icon-sets-v2\/(.*)/)[1];
	      //     this.SVG = require(`../assets/icons/icon-sets-v2/${path}`);
	      //   } else {
	      //     // LEGACY ICONS
	      //     const typeRegex = /assets\/icons\/icon-sets\/(.*)/;
	      //
	      //     this.svgType = givenProps.name.match(typeRegex)[1].split('/')[0];
	      //     const path = givenProps.name.match(typeRegex)[1];
	      //
	      //     const requiredSVG = require(`../assets/icons/icon-sets/${path}`);
	      //     this.SVG = this.sanitizeSVG(requiredSVG, this.svgType);
	      //   }
	      // } else {
	      // STATIC SVGS => FIELDS & PROGRESS
	      this.SVG = __webpack_require__(134)("./" + givenProps.name + '.svg');
	      // }
	      /* eslint-enable import/no-require, global-require */
	    } catch (e) {
	      console.log('Error in SVG', e);
	    }
	  };

	  IconSVG.prototype.getAdditionalClass = function getAdditionalClass(type) {
	    return type !== undefined && type !== 'color' ? 'iconSvgFill' : '';
	  };

	  IconSVG.prototype.sanitizeSVG = function sanitizeSVG(svg, type) {
	    if (type !== 'default') {
	      var viewBoxFinder = new RegExp('(viewBox|enable-background)');
	      var isThereAnyViewBox = viewBoxFinder.test(svg);
	      if (isThereAnyViewBox === false) {
	        var viewBoxString = 'viewBox="0 0 32 32" preserveAspectRatio="xMinYMin meet"';
	        var fixerString = '<svg ' + viewBoxString;
	        return svg.replace(/<svg/, fixerString);
	      }
	      return svg;
	    }
	    // Pattern below is for finding out which method is used in the Line Icon SVG file
	    var fillOrStrokePattern = new RegExp('stroke="(?!none)', 'gi');
	    var coloredStroke = fillOrStrokePattern.test(svg);
	    var applyFillOrStroke = coloredStroke ? '<svg class="iconSvgStroke" fill="none" ' : '<svg class="iconSvgFill" stroke="none" ';
	    return svg.replace(/'/g, '"').replace(/(fill="|stroke=")(.+?)"/gi, '').replace(/<!--[\s\S]*?-->/g, ' ').replace(/<\?xml.*?>/, '').replace(/id="([a-z0-9\-_]+)"/gi, '').replace(/\s+/g, ' ').replace(/<svg/, applyFillOrStroke).trim();
	  };

	  IconSVG.prototype.render = function render() {
	    if (this.SVG) {
	      return _react2.default.createElement('span', {
	        className: 'iconSvg ' + this.getAdditionalClass(this.svgType) + ' ' + (this.props.name ? this.props.name : '') + ' ' + (this.props.additionalClass || ''),
	        dangerouslySetInnerHTML: { __html: this.SVG }
	      });
	    }
	    return null;
	  };

	  return IconSVG;
	}(_react.Component);

	IconSVG.propTypes = {
	  name: _propTypes2.default.string,
	  additionalClass: _propTypes2.default.string
	};

	IconSVG.defaultProps = {
	  className: ''
	};

	exports.default = IconSVG;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./dhtalarm.svg": 135,
		"./dhtbriefcase.svg": 136,
		"./dhtbuilding.svg": 137,
		"./dhtcar.svg": 138,
		"./dhtcoctail.svg": 139,
		"./dhtcoffee.svg": 140,
		"./dhtcook.svg": 141,
		"./dhtdrink.svg": 142,
		"./dhtemptyinbox.svg": 143,
		"./dhtexplore.svg": 144,
		"./dhtfastfood.svg": 145,
		"./dhtfish.svg": 146,
		"./dhtfitness.svg": 147,
		"./dhtfruit.svg": 148,
		"./dhtgrill.svg": 149,
		"./dhthomecleaning.svg": 150,
		"./dhthouse.svg": 151,
		"./dhtlaugh.svg": 152,
		"./dhtlish.svg": 153,
		"./dhtlocation.svg": 154,
		"./dhtlove.svg": 155,
		"./dhtmedicine.svg": 156,
		"./dhtmeeting.svg": 157,
		"./dhtplane.svg": 158,
		"./dhtreading.svg": 159,
		"./dhtride.svg": 160,
		"./dhtroad.svg": 161,
		"./dhtroadtravel.svg": 162,
		"./dhtrun.svg": 163,
		"./dhtsavemoney.svg": 164,
		"./dhtsent.svg": 165,
		"./dhtshoppingbag.svg": 166,
		"./dhtsmile.svg": 167,
		"./dhtspeechless.svg": 168,
		"./dhtsunglasses.svg": 169,
		"./dhtsyringe.svg": 170,
		"./dhttalk.svg": 171,
		"./dhttemperature.svg": 172,
		"./dhttime.svg": 173,
		"./dhttodo.svg": 174,
		"./dhttool.svg": 175,
		"./dhtupload.svg": 176,
		"./dhtwalk.svg": 177,
		"./dhtwallet.svg": 178,
		"./dhtwash.svg": 179,
		"./dhtwatch.svg": 180,
		"./dhtweight.svg": 181,
		"./dhtworld.svg": 182,
		"./dhtyoga.svg": 183
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 134;


/***/ },
/* 135 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M29.2015476,33.9899666 C28.8029048,35.7365518 27.3341993,37 25.5,37 C23.6658007,37 22.1970952,35.7365518 21.7984524,33.9899666 L16.9654524,33.9899666 C16.2069311,33.9899666 15.7456168,33.1549698 16.149767,32.5135444 C16.1947373,32.4421722 16.2847036,32.2857883 16.4049066,32.0526204 C16.6108776,31.6530812 16.8181074,31.19263 17.0120322,30.6796676 C17.5661063,29.2140525 17.8981167,27.633255 17.8981167,26.0033445 L17.8981167,20.9866221 C17.8981167,16.5535327 21.256639,13 25.5,13 C29.743361,13 33.1018833,16.5535327 33.1018833,20.9866221 C33.1018833,21.8227425 33.1018833,23.4949833 33.1018833,26.0033445 C33.1018833,27.633255 33.4338937,29.2140525 33.9879678,30.6796676 C34.1818926,31.19263 34.3891224,31.6530812 34.5950934,32.0526204 C34.7152964,32.2857883 34.8052627,32.4421722 34.850233,32.5135444 C35.2543832,33.1549698 34.7930689,33.9899666 34.0345476,33.9899666 L29.2015476,33.9899666 Z M23.8228485,33.9899666 C24.1290722,34.6508441 24.7524154,35.0735785 25.5,35.0735785 C26.2475846,35.0735785 26.8709278,34.6508441 27.1771515,33.9899666 L23.8228485,33.9899666 Z M32.1845612,31.3604661 C31.5532815,29.6906297 31.1740796,27.8851396 31.1740796,26.0033445 L31.6560305,26.0033445 L31.1740796,26.0033445 L31.1740796,20.9866221 C31.1740796,17.5936245 28.6532469,14.9264215 25.5,14.9264215 C22.3467531,14.9264215 19.8259204,17.5936245 19.8259204,20.9866221 L19.8259204,26.0033445 C19.8259204,27.8851396 19.4467185,29.6906297 18.8154388,31.3604661 C18.7206205,31.6112758 18.6255274,31.8459399 18.5320148,32.0635451 L32.4679852,32.0635451 C32.3744726,31.8459399 32.2793795,31.6112758 32.1845612,31.3604661 Z\"></path></svg>"

/***/ },
/* 136 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M29,29 L29,30 C29,30.5522847 28.5522847,31 28,31 L22,31 C21.4477153,31 21,30.5522847 21,30 L21,29 L14,29 C13.4477153,29 13,28.5522847 13,28 L13,18 C13,17.4477153 13.4477153,17 14,17 L20,17 L20,14 C20,13.4477153 20.4477153,13 21,13 L29,13 C29.5522847,13 30,13.4477153 30,14 L30,17 L36,17 C36.5522847,17 37,17.4477153 37,18 L37,28 C37,28.5522847 36.5522847,29 36,29 L29,29 Z M29,27 L35,27 L35,19 L15,19 L15,27 L21,27 L21,26 C21,25.4477153 21.4477153,25 22,25 L28,25 C28.5522847,25 29,25.4477153 29,26 L29,27 Z M22,17 L28,17 L28,15 L22,15 L22,17 Z M34,35 L34,31 C34,30.4477153 34.4477153,30 35,30 C35.5522847,30 36,30.4477153 36,31 L36,36 C36,36.5522847 35.5522847,37 35,37 L15,37 C14.4477153,37 14,36.5522847 14,36 L14,31 C14,30.4477153 14.4477153,30 15,30 C15.5522847,30 16,30.4477153 16,31 L16,35 L34,35 Z M23,27 L23,29 L27,29 L27,27 L23,27 Z\"></path></svg>"

/***/ },
/* 137 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M26,35 L26,22 C26,21.4477153 26.4477153,21 27,21 L36,21 C36.5522847,21 37,21.4477153 37,22 L37,36 C37,36.5522847 36.5522847,37 36,37 L27,37 L23,37 L14,37 C13.4477153,37 13,36.5522847 13,36 L13,25 C13,24.4477153 13.4477153,24 14,24 L23,24 C23.5522847,24 24,24.4477153 24,25 L24,35 L26,35 Z M20,15 L20,22 C20,22.5522847 19.5522847,23 19,23 C18.4477153,23 18,22.5522847 18,22 L18,14 C18,13.4477153 18.4477153,13 19,13 L31,13 C31.5522847,13 32,13.4477153 32,14 L32,19 C32,19.5522847 31.5522847,20 31,20 C30.4477153,20 30,19.5522847 30,19 L30,15 L20,15 Z M15,26 L15,35 L22,35 L22,26 L15,26 Z M28,23 L28,35 L35,35 L35,23 L28,23 Z M31,27 C30.4477153,27 30,26.5522847 30,26 C30,25.4477153 30.4477153,25 31,25 L32,25 C32.5522847,25 33,25.4477153 33,26 C33,26.5522847 32.5522847,27 32,27 L31,27 Z M31,30 C30.4477153,30 30,29.5522847 30,29 C30,28.4477153 30.4477153,28 31,28 L32,28 C32.5522847,28 33,28.4477153 33,29 C33,29.5522847 32.5522847,30 32,30 L31,30 Z M31,33 C30.4477153,33 30,32.5522847 30,32 C30,31.4477153 30.4477153,31 31,31 L32,31 C32.5522847,31 33,31.4477153 33,32 C33,32.5522847 32.5522847,33 32,33 L31,33 Z M18,33 C17.4477153,33 17,32.5522847 17,32 C17,31.4477153 17.4477153,31 18,31 L19,31 C19.5522847,31 20,31.4477153 20,32 C20,32.5522847 19.5522847,33 19,33 L18,33 Z M18,30 C17.4477153,30 17,29.5522847 17,29 C17,28.4477153 17.4477153,28 18,28 L19,28 C19.5522847,28 20,28.4477153 20,29 C20,29.5522847 19.5522847,30 19,30 L18,30 Z\"></path></svg>"

/***/ },
/* 138 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M17.2807764,22 L32.7192236,22 L31.2192236,16 L18.7807764,16 L17.2807764,22 Z M15.097036,22.4887505 L17.0298575,14.7574644 C17.1411493,14.3122974 17.5411324,14 18,14 L32,14 C32.4588676,14 32.8588507,14.3122974 32.9701425,14.7574644 L34.902964,22.4887505 L36.7071068,24.2928932 C36.8946432,24.4804296 37,24.7347835 37,25 L37,31 C37,31.5522847 36.5522847,32 36,32 L35,32 L35,35 C35,35.5522847 34.5522847,36 34,36 L30,36 C29.4477153,36 29,35.5522847 29,35 L29,32 L21,32 L21,35 C21,35.5522847 20.5522847,36 20,36 L16,36 C15.4477153,36 15,35.5522847 15,35 L15,32 L14,32 C13.4477153,32 13,31.5522847 13,31 L13,25 C13,24.7347835 13.1053568,24.4804296 13.2928932,24.2928932 L15.097036,22.4887505 Z M19,32 L17,32 L17,34 L19,34 L19,32 Z M33,32 L31,32 L31,34 L33,34 L33,32 Z M35,30 L35,25.4142136 L33.5857864,24 L16.4142136,24 L15,25.4142136 L15,30 L35,30 Z M18,28 C17.4477153,28 17,27.5522847 17,27 C17,26.4477153 17.4477153,26 18,26 L20,26 C20.5522847,26 21,26.4477153 21,27 C21,27.5522847 20.5522847,28 20,28 L18,28 Z M30,28 C29.4477153,28 29,27.5522847 29,27 C29,26.4477153 29.4477153,26 30,26 L32,26 C32.5522847,26 33,26.4477153 33,27 C33,27.5522847 32.5522847,28 32,28 L30,28 Z\"></path></svg>"

/***/ },
/* 139 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M24.0010666,34 L28.000711,34 C28.5529467,34 29.0006222,34.4477153 29.0006222,35 C29.0006222,35.5522847 28.5529467,36 28.000711,36 L18.0015999,36 C17.4493642,36 17.0016887,35.5522847 17.0016887,35 C17.0016887,34.4477153 17.4493642,34 18.0015999,34 L22.0012443,34 L22.0012443,28.3801993 L14.2545236,19.6643638 C13.681329,19.0194626 14.1390944,18 15.0018665,18 L26.1018006,18 C26.5676582,15.7234555 28.5906269,14 31.0004444,14 C33.7524845,14 36,16.2477153 36,19 C36,21.7522847 33.7524845,24 31.0004444,24 C30.1262082,24 29.2932043,23.762293 28.4983435,23.320313 L24.0010666,28.3801993 L24.0010666,34 Z M28.1736554,18 L31.0004444,18 C31.8632165,18 32.3209819,19.0194626 31.7477873,19.6643638 L29.8773298,21.7688156 C30.251895,21.9225262 30.6251231,22 31.0004444,22 C32.6480132,22 34.0001778,20.6477153 34.0001778,19 C34.0001778,17.3522847 32.6480132,16 31.0004444,16 C29.7028888,16 28.5885568,16.8387509 28.1736554,18 Z M28.7737985,20 L17.2285124,20 L23.0011554,26.4948007 L28.7737985,20 Z\"></path></svg>"

/***/ },
/* 140 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M31.2217973,19.0200669 L35.0363289,19.0200669 C35.5685497,19.0200669 36,19.451311 36,19.9832776 L36,23.9966555 C36,25.6215652 34.7216487,26.9665552 33.1290631,26.9665552 L32.1854684,26.9665552 L32.1854684,32.0234114 C32.1854684,34.752 30.0488476,37 27.4072658,37 L19.7782027,37 C17.1366209,37 15,34.752 15,32.0234114 L15,19.9832776 C15,19.451311 15.4314503,19.0200669 15.9636711,19.0200669 L31.2217973,19.0200669 Z M32.1854684,20.9464883 L32.1854684,25.0401338 L33.1290631,25.0401338 C33.6344699,25.0401338 34.0726578,24.5791037 34.0726578,23.9966555 L34.0726578,20.9464883 L32.1854684,20.9464883 Z M16.9273422,20.9464883 L16.9273422,32.0234114 C16.9273422,33.7095385 18.2237997,35.0735786 19.7782027,35.0735786 L27.4072658,35.0735786 C28.9616687,35.0735786 30.2581262,33.7095385 30.2581262,32.0234114 L30.2581262,20.9464883 L16.9273422,20.9464883 Z M22.6290631,13.9632107 C22.6290631,13.4312441 23.0605134,13 23.5927342,13 C24.1249551,13 24.5564053,13.4312441 24.5564053,13.9632107 L24.5564053,15.9698997 C24.5564053,16.5018662 24.1249551,16.9331103 23.5927342,16.9331103 C23.0605134,16.9331103 22.6290631,16.5018662 22.6290631,15.9698997 L22.6290631,13.9632107 Z M17.8608987,13.9632107 C17.8608987,13.4312441 18.2923489,13 18.8245698,13 C19.3567906,13 19.7882409,13.4312441 19.7882409,13.9632107 L19.7882409,15.9698997 C19.7882409,16.5018662 19.3567906,16.9331103 18.8245698,16.9331103 C18.2923489,16.9331103 17.8608987,16.5018662 17.8608987,15.9698997 L17.8608987,13.9632107 Z M27.3972276,13.9632107 C27.3972276,13.4312441 27.8286778,13 28.3608987,13 C28.8931195,13 29.3245698,13.4312441 29.3245698,13.9632107 L29.3245698,15.9698997 C29.3245698,16.5018662 28.8931195,16.9331103 28.3608987,16.9331103 C27.8286778,16.9331103 27.3972276,16.5018662 27.3972276,15.9698997 L27.3972276,13.9632107 Z\"></path></svg>"

/***/ },
/* 141 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M31,25 L31,22 L15,22 L15,25 L31,25 Z M31,27 L15,27 L15,33 C15,34.1047153 15.8952847,35 17,35 L29,35 C30.1047153,35 31,34.1047153 31,33 L31,27 Z M32,20 L36,20 C36.5522847,20 37,20.4477153 37,21 C37,21.5522847 36.5522847,22 36,22 L33,22 L33,33 C33,35.2092847 31.2092847,37 29,37 L17,37 C14.7907153,37 13,35.2092847 13,33 L13,21 C13,20.4477153 13.4477153,20 14,20 L32,20 Z M24,17 C24,17.5522847 23.5522847,18 23,18 C22.4477153,18 22,17.5522847 22,17 L22,14 C22,13.4477153 22.4477153,13 23,13 C23.5522847,13 24,13.4477153 24,14 L24,17 Z M19,17 C19,17.5522847 18.5522847,18 18,18 C17.4477153,18 17,17.5522847 17,17 L17,14 C17,13.4477153 17.4477153,13 18,13 C18.5522847,13 19,13.4477153 19,14 L19,17 Z M29,17 C29,17.5522847 28.5522847,18 28,18 C27.4477153,18 27,17.5522847 27,17 L27,14 C27,13.4477153 27.4477153,13 28,13 C28.5522847,13 29,13.4477153 29,14 L29,17 Z\"></path></svg>"

/***/ },
/* 142 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M16.9543371,25.1069924 C16.952427,25.0900604 16.950964,25.0730578 16.9499545,25.0560023 L16.0036057,14.0456237 C15.9552659,13.48321 16.3991458,13 16.9641225,13 L34.0358775,13 C34.6008542,13 35.0447341,13.48321 34.9963943,14.0456237 L34.0502676,25.0534181 C34.0491958,25.072841 34.0475287,25.0922813 34.045257,25.1117142 L33.2560279,34.2940699 C33.1253849,35.8149555 31.8999243,36.9993741 30.4075858,37 L20.5924142,37 C19.1000757,36.9993741 17.8746151,35.8149555 17.7439763,34.2941188 L16.9543371,25.1069924 Z M19.017562,26.596503 L19.6650141,34.1293416 C19.7118959,34.6751176 20.1239608,35.073382 20.5928189,35.0735787 L30.4069402,35.0735787 C30.8761351,35.0732893 31.2881096,34.6750541 31.3349901,34.1292928 L32.0698216,25.5798306 L30.7049005,24.9239625 C29.191064,24.196538 27.3827635,24.5007817 26.1908576,25.6834431 C24.4194877,27.441074 21.733076,27.8954854 19.4813649,26.8183659 L19.017562,26.596503 Z M18.8261147,24.3690921 L20.3139819,25.0808223 C21.8303005,25.8061624 23.6393496,25.5001584 24.8322029,24.316557 C26.603508,22.5589904 29.2908442,22.1068504 31.540574,23.1878843 L32.2462653,23.5269811 L32.9854887,14.9264214 L18.0145113,14.9264214 L18.8261147,24.3690921 Z\"></path></svg>"

/***/ },
/* 143 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M36.999801,23.6667741 L36.999801,35.0240313 C37.001312,35.0977952 36.9942317,35.172233 36.9780901,35.2458677 C36.9763007,35.2539059 36.9744565,35.2618804 36.9725128,35.2698163 C36.9545608,35.3426008 36.9276592,35.4144393 36.8913505,35.4838942 C36.8735921,35.5178643 36.8540703,35.5503326 36.8329545,35.581246 C36.7555047,35.694109 36.6543918,35.7896569 36.5367108,35.8608393 C36.5267241,35.8668541 36.516636,35.8726833 36.5064523,35.878325 C36.4047414,35.9362921 36.2816357,35.9778349 36.1504632,35.9931853 C36.1061001,35.9984729 36.0612559,36.000713 36.0162591,35.9998023 L13.9633938,35.9998023 C13.431436,35.9998023 13.000199,35.5712762 13.000199,35.0426626 L13.000199,23.6667741 C12.9970265,23.5119008 13.0317267,23.3540568 13.1086495,23.2069112 C13.1868248,23.0573698 13.2991717,22.9369303 13.431252,22.8501299 L17.4294268,20.1068404 C17.8671733,19.806487 18.4670617,19.9156353 18.7693151,20.3506298 C19.0715686,20.7856244 18.9617298,21.3817417 18.5239834,21.682095 L15.8278392,23.5320151 L25,28.2668205 L34.1721608,23.5320151 L31.4760166,21.682095 C31.0382702,21.3817417 30.9284314,20.7856244 31.2306849,20.3506298 C31.5329383,19.9156353 32.1328267,19.806487 32.5705732,20.1068404 L36.568748,22.8501299 C36.7008283,22.9369303 36.8131752,23.0573698 36.8913505,23.2069112 C36.9682733,23.3540568 37.0029735,23.5119008 36.999801,23.6667741 Z M35.0734115,25.2239405 L27.0894057,29.3454027 L35.0734115,33.4668649 L35.0734115,25.2239405 Z M24.5663462,30.2001264 C24.5588932,30.1964001 24.5514858,30.1925765 24.5441261,30.1886561 L14.9265885,25.2239405 L14.9265885,34.0855229 L32.0930506,34.0855229 L24.5663462,30.2001264 Z M24.9679302,21.9108818 L31.6215268,15.2572852 C31.9976777,14.8811342 32.605622,14.8792173 32.9794083,15.2530036 C33.3531946,15.6267899 33.3512777,16.2347342 32.9751267,16.6108851 L25.6404486,23.9455632 C25.2642976,24.3217142 24.6563534,24.3236311 24.2825671,23.9498448 L20.6994604,20.3667382 C20.3256741,19.9929519 20.3275911,19.3850076 20.703742,19.0088567 C21.079893,18.6327057 21.6878372,18.6307888 22.0616235,19.0045751 L24.9679302,21.9108818 Z\"></path></svg>"

/***/ },
/* 144 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path fill-rule=\"evenodd\" d=\"M29.4416996,33.3844614 L29.4416996,37.8898679 C29.4416996,38.5029769 28.9462045,39 28.3349802,39 L21.6650198,39 C21.0537955,39 20.5583004,38.5029769 20.5583004,37.8898679 L20.5583004,33.3844614 L20.5583004,31.1850002 C17.1971448,29.4984217 15,26.0168223 15,22.1209451 C15,16.5340983 19.4749578,12 25,12 C30.5250422,12 35,16.5340983 35,22.1209451 C35,26.0168223 32.8028552,29.4984217 29.4416996,31.1850002 L29.4416996,33.3844614 Z M27.2282609,34.4945935 L22.7717391,34.4945935 L22.7717391,36.7797357 L27.2282609,36.7797357 L27.2282609,34.4945935 Z M27.2282609,30.4705897 C27.2282609,30.0198059 27.5000149,29.6137782 27.9159566,29.4431035 C30.8351975,28.2452414 32.7865613,25.3694337 32.7865613,22.1209451 C32.7865613,17.7553491 29.2975863,14.2202643 25,14.2202643 C20.7024137,14.2202643 17.2134387,17.7553491 17.2134387,22.1209451 C17.2134387,25.3694337 19.1648025,28.2452414 22.0840434,29.4431035 C22.4999851,29.6137782 22.7717391,30.0198059 22.7717391,30.4705897 L22.7717391,32.2743292 L27.2282609,32.2743292 L27.2282609,30.4705897 Z M21.660079,22.1209451 C21.660079,22.7340542 21.1645839,23.2310773 20.5533597,23.2310773 C19.9421355,23.2310773 19.4466403,22.7340542 19.4466403,22.1209451 C19.4466403,19.022209 21.930615,16.5054065 25,16.5054065 C25.6112242,16.5054065 26.1067194,17.0024296 26.1067194,17.6155386 C26.1067194,18.2286477 25.6112242,18.7256708 25,18.7256708 C23.1580708,18.7256708 21.660079,20.2434598 21.660079,22.1209451 Z\"></path></svg>"

/***/ },
/* 145 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M14.6535633,26.7568841 C14.2355483,27.1178293 13.6040767,27.0715646 13.243132,26.6535491 C12.8821873,26.2355335 12.9284519,25.604061 13.3464669,25.2431159 L15.0073225,23.8091073 C16.2264001,22.7303504 18.0586215,22.7303504 19.2682671,23.8008657 L20.2611018,24.6575804 C20.7239847,25.0665275 21.419026,25.0665275 21.8907451,24.6498657 L22.8653117,23.8091073 C24.0843893,22.7303504 25.9166107,22.7303504 27.126637,23.8011943 L28.118091,24.6575804 C28.580974,25.0665275 29.2760153,25.0665275 29.7477343,24.6498657 L30.7223009,23.8091073 C31.9413785,22.7303504 33.7735999,22.7303504 34.9835354,23.8011159 L36.6535331,25.2431159 C37.0715481,25.604061 37.1178127,26.2355335 36.756868,26.6535491 C36.3959233,27.0715646 35.7644517,27.1178293 35.3464367,26.7568841 L33.6672968,25.3068927 C33.2049403,24.8977552 32.5100382,24.8977552 32.0382495,25.3151343 L31.063087,26.1564196 C29.8438595,27.2335811 28.0131297,27.2335811 26.8023576,26.1638057 L25.8103076,25.3068927 C25.3479511,24.8977552 24.6530489,24.8977552 24.1812603,25.3151343 L23.2060978,26.1564196 C21.9868703,27.2335811 20.1561405,27.2335811 18.9457491,26.1641343 L17.9523184,25.3068927 C17.4899618,24.8977552 16.7950597,24.8977552 16.323561,25.3148841 L14.6535633,26.7568841 Z M14.0000151,29 L35.9999849,29 C36.5522689,29 36.9999835,29.4477153 36.9999835,30 L36.9999835,32 C36.9999835,33.6568542 35.6568396,35 33.9999876,35 L16.0000124,35 C14.3431604,35 13.0000165,33.6568542 13.0000165,32 L13.0000165,30 C13.0000165,29.4477153 13.4477311,29 14.0000151,29 Z M16.0000124,15 L33.9999876,15 C35.6568396,15 36.9999835,16.3431458 36.9999835,18 L36.9999835,20 C36.9999835,20.5522847 36.5522689,21 35.9999849,21 L14.0000151,21 C13.4477311,21 13.0000165,20.5522847 13.0000165,20 L13.0000165,18 C13.0000165,16.3431458 14.3431604,15 16.0000124,15 Z M15.0000137,31 L15.0000137,32 C15.0000137,32.5522847 15.4477284,33 16.0000124,33 L33.9999876,33 C34.5522716,33 34.9999863,32.5522847 34.9999863,32 L34.9999863,31 L15.0000137,31 Z M34.9999863,19 L34.9999863,18 C34.9999863,17.4477153 34.5522716,17 33.9999876,17 L16.0000124,17 C15.4477284,17 15.0000137,17.4477153 15.0000137,18 L15.0000137,19 L34.9999863,19 Z\"></path></svg>"

/***/ },
/* 146 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M33.3294411,24.1485502 C33.5392333,23.6338775 33.6958127,23.0792764 33.8021751,22.4876288 C34.0956524,20.8551423 33.9905359,19.0747581 33.6332873,17.3550035 C33.5737924,17.0686021 33.5110256,16.8037638 33.4478959,16.5641206 C33.207921,16.4992867 32.9425911,16.4348153 32.6555498,16.3737062 C30.9207499,16.0043794 29.1238874,15.897897 27.4767876,16.2070931 C26.9026481,16.3148715 26.3629279,16.4711209 25.8601896,16.6787335 C26.7809707,20.3509143 29.6549605,23.2249906 33.3294411,24.1485502 Z M32.2361574,25.9455368 C28.3270857,24.7508748 25.2591955,21.685405 24.0637912,17.7801587 C23.9571917,17.873009 23.853455,17.9697729 23.7526296,18.070505 C22.7405372,19.0822989 22.0331528,20.2595611 21.5925139,21.5776147 C20.9024437,23.6417754 20.9020011,25.8788963 21.3220458,27.9765124 C21.3662388,28.1972031 21.4100327,28.3914393 21.4505862,28.5562405 C21.6156562,28.5967741 21.8102208,28.6405485 22.0312905,28.6847215 C24.129387,29.1039523 26.3668132,29.1039523 28.4311918,28.4164632 C29.7525678,27.9764124 30.9324105,27.2691622 31.9458848,26.2566262 C32.0466231,26.1559812 32.1433625,26.0522673 32.2361574,25.9455368 Z M21.4727583,30.6371921 L20.8308597,35.1295652 C20.7128468,35.9554869 19.701668,36.2922911 19.1111858,35.7023556 L14.2979203,30.8935466 C13.707438,30.3036111 14.0445544,29.2933685 14.8712415,29.1754649 L19.3677006,28.5341716 C19.3567303,28.4819568 19.34575,28.4284646 19.3347878,28.3737214 C18.8513941,25.9597533 18.8519036,23.3840741 19.6702614,20.9361753 C20.2076712,19.3286575 21.0783304,17.8796657 22.3193539,16.6390083 C23.6092986,15.3502579 25.2363209,14.5674836 27.1025404,14.2171539 C29.051217,13.8513453 31.1028451,13.9729252 33.0779237,14.3934057 C33.7680634,14.5403316 34.2909887,14.6891593 34.5959016,14.7935155 C34.8948434,14.8958281 35.1288991,15.1316129 35.2288258,15.4311155 C35.3301569,15.7348271 35.4748064,16.2559673 35.61764,16.9435523 C36.0231299,18.8955351 36.1427568,20.9216843 35.7968951,22.8455623 C35.4555746,24.744179 34.6756286,26.3928553 33.3789344,27.6883489 C32.1361906,28.9299421 30.6837787,29.8005823 29.072071,30.3373208 C26.6240132,31.1525846 24.0481739,31.1525846 21.6338341,30.6701637 C21.578874,30.6591818 21.5251732,30.6481819 21.4727583,30.6371921 Z M20.547959,30.4111296 C20.4561906,30.3846037 20.3762706,30.3597881 20.3088063,30.3373208 C20.0062669,30.2365677 19.7688522,29.9994029 19.6679675,29.6971563 C19.6454652,29.6297403 19.6206102,29.5498718 19.5940422,29.4581573 L19.4351988,30.5698335 L20.547959,30.4111296 Z M17.1642004,30.8937275 L19.1110047,32.8387293 L19.4351988,30.5698335 L17.1642004,30.8937275 Z\"></path></svg>"

/***/ },
/* 147 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M29.0535117,24.5348525 L29.0535117,20.8954425 C29.0535117,19.2963337 30.3472441,18 31.9431439,18 L32.1036788,18 C33.6995786,18 34.993311,19.2963337 34.993311,20.8954425 L34.993311,24.5348525 L36.0367893,24.5348525 C36.5687559,24.5348525 37,24.9669638 37,25.5 C37,26.0330362 36.5687559,26.4651475 36.0367893,26.4651475 L34.993311,26.4651475 L34.993311,30.1045575 C34.993311,31.7036663 33.6995786,33 32.1036788,33 L31.9431439,33 C30.3472441,33 29.0535117,31.7036663 29.0535117,30.1045575 L29.0535117,26.4651475 L20.9464883,26.4651475 L20.9464883,30.1045575 C20.9464883,31.7036663 19.6527559,33 18.0568561,33 L17.8963212,33 C16.3004214,33 15.006689,31.7036663 15.006689,30.1045575 L15.006689,26.4651475 L13.9632107,26.4651475 C13.4312441,26.4651475 13,26.0330362 13,25.5 C13,24.9669638 13.4312441,24.5348525 13.9632107,24.5348525 L15.006689,24.5348525 L15.006689,20.8954425 C15.006689,19.2963337 16.3004214,18 17.8963212,18 L18.0568561,18 C19.6527559,18 20.9464883,19.2963337 20.9464883,20.8954425 L20.9464883,24.5348525 L29.0535117,24.5348525 Z M17.8963212,19.930295 C17.3643546,19.930295 16.9331104,20.3624062 16.9331104,20.8954425 L16.9331104,30.1045575 C16.9331104,30.6375938 17.3643546,31.069705 17.8963212,31.069705 L18.0568561,31.069705 C18.5888227,31.069705 19.0200669,30.6375938 19.0200669,30.1045575 L19.0200669,20.8954425 C19.0200669,20.3624062 18.5888227,19.930295 18.0568561,19.930295 L17.8963212,19.930295 Z M33.0668896,30.1045575 L33.0668896,20.8954425 C33.0668896,20.3624062 32.6356454,19.930295 32.1036788,19.930295 L31.9431439,19.930295 C31.4111773,19.930295 30.9799331,20.3624062 30.9799331,20.8954425 L30.9799331,30.1045575 C30.9799331,30.6375938 31.4111773,31.069705 31.9431439,31.069705 L32.1036788,31.069705 C32.6356454,31.069705 33.0668896,30.6375938 33.0668896,30.1045575 Z\"></path></svg>"

/***/ },
/* 148 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M32.7625242,20.9247944 C35.5930641,23.1505198 35.8313527,28.9563934 32.9414315,33.4707867 C32.8864473,33.5566726 32.8311797,33.6408633 32.7756254,33.7233736 C30.7709193,36.7008029 28.8439384,37.3025015 25.953711,36.878572 C25.3063423,36.783618 25.1898453,36.7693381 25.0000442,36.7693381 C24.8102695,36.7693381 24.6938054,36.7835511 24.0473642,36.8779599 C21.1568127,37.3001076 19.2299554,36.6984921 17.2247325,33.7235172 C17.1691757,33.6410924 17.1139055,33.55699 17.0586409,33.4707616 C14.1687357,28.9563934 14.4070243,23.1505198 17.2367938,20.9254003 C18.3146303,20.0767261 19.5034474,19.7305088 20.8848806,19.7464854 C21.5319647,19.7539691 22.0596006,19.8188835 23.1032084,19.9889392 C24.1381985,20.1575906 24.5284495,20.2067776 25.0000442,20.2067776 C25.4716868,20.2067776 25.8618799,20.1577562 26.8966615,19.9896811 C27.9405402,19.8201283 28.4682712,19.7554383 29.1154368,19.7481071 C30.496423,19.732463 31.6848406,20.0780148 32.7625242,20.9247944 Z M29.1373207,21.6719979 C28.6171869,21.6778901 28.1570406,21.7342955 27.2063809,21.888707 C26.0627145,22.0744679 25.6143913,22.1307923 25.0000442,22.1307923 C24.385288,22.1307923 23.9367322,22.0742566 22.7925156,21.8878068 C21.8422908,21.7329678 21.3823574,21.6763828 20.8625388,21.670371 C19.8962579,21.6591957 19.1363368,21.8805063 18.430514,22.4362616 C16.4730347,23.9754774 16.2799281,28.680496 18.683087,32.4345101 C18.7301137,32.5078848 18.7772416,32.5795974 18.8244686,32.6496639 C20.3604514,34.9284682 21.5462902,35.2987182 23.7681912,34.9742229 C24.5404316,34.8614419 24.6725103,34.8453234 25.0000442,34.8453234 C25.3282087,34.8453234 25.460312,34.8615162 26.2340682,34.9750084 C28.4549492,35.3007602 29.6399356,34.9307489 31.1753503,32.6503205 C31.2225798,32.5801743 31.2697103,32.508379 31.3167237,32.4349437 C33.7201042,28.6805836 33.5270627,23.9756968 31.5697114,22.4363693 C30.864246,21.8821053 30.1039233,21.661048 29.1373207,21.6719979 Z M27.3782939,14 L27.3782939,15.9170437 C27.3782939,17.5051747 26.1005595,18.7926093 24.5243943,18.7926093 L24.5243943,16.8755656 C24.5243943,15.2874346 25.8021287,14 27.3782939,14 Z\"></path></svg>"

/***/ },
/* 149 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M17.7468865,32.2699831 C15.4499605,30.2539349 14,27.2962439 14,23.9998996 C13.4477153,23.9998996 13,23.5521884 13,22.9999087 C13,22.447629 13.4477153,21.9999179 14,21.9999179 L15.035825,21.9999179 C15.0437987,21.9998226 15.0517911,21.9998223 15.0598011,21.9999179 L34.9401989,21.9999179 C34.9482089,21.9998223 34.9562013,21.9998226 34.964175,21.9999179 L36,21.9999179 C36.5522847,21.9999179 37,22.447629 37,22.9999087 C37,23.5521884 36.5522847,23.9998996 36,23.9998996 C36,27.2962439 34.5500395,30.2539349 32.2531135,32.2699831 L33.8944272,35.5525806 C34.1414164,36.0465545 33.9411921,36.6472221 33.4472136,36.8942091 C32.9532351,37.1411961 32.3525621,36.9409736 32.1055728,36.4469996 L30.6130227,33.4619267 C28.9697906,34.4388023 27.0504098,34.9997992 25,34.9997992 C22.9495902,34.9997992 21.0302094,34.4388023 19.3869773,33.4619267 L17.8944272,36.4469996 C17.6474379,36.9409736 17.0467649,37.1411961 16.5527864,36.8942091 C16.0588079,36.6472221 15.8585836,36.0465545 16.1055728,35.5525806 L17.7468865,32.2699831 Z M34,23.9998996 L16,23.9998996 C16,28.970417 20.0294373,32.9998175 25,32.9998175 C29.9705627,32.9998175 34,28.970417 34,23.9998996 Z M23,27.9998631 C22.4477153,27.9998631 22,27.5521519 22,26.9998722 C22,26.4475925 22.4477153,25.9998813 23,25.9998813 L27,25.9998813 C27.5522847,25.9998813 28,26.4475925 28,26.9998722 C28,27.5521519 27.5522847,27.9998631 27,27.9998631 L23,27.9998631 Z M24,13.9999909 C24,13.4477112 24.4477153,13 25,13 C25.5522847,13 26,13.4477112 26,13.9999909 L26,16.9999635 C26,17.5522432 25.5522847,17.9999544 25,17.9999544 C24.4477153,17.9999544 24,17.5522432 24,16.9999635 L24,13.9999909 Z M19,15.9999726 C19,15.4476929 19.4477153,14.9999817 20,14.9999817 C20.5522847,14.9999817 21,15.4476929 21,15.9999726 L21,18.9999452 C21,19.5522249 20.5522847,19.9999361 20,19.9999361 C19.4477153,19.9999361 19,19.5522249 19,18.9999452 L19,15.9999726 Z M29,15.9999726 C29,15.4476929 29.4477153,14.9999817 30,14.9999817 C30.5522847,14.9999817 31,15.4476929 31,15.9999726 L31,18.9999452 C31,19.5522249 30.5522847,19.9999361 30,19.9999361 C29.4477153,19.9999361 29,19.5522249 29,18.9999452 L29,15.9999726 Z\"></path></svg>"

/***/ },
/* 150 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M22.9590622,30.3629361 L21.4423498,31.8915126 C21.0674398,32.2693552 20.4570366,32.2719077 20.0789761,31.8972138 C19.7009156,31.5225198 19.6983616,30.9124684 20.0732716,30.5346257 L21.589611,29.0064251 C21.3830524,27.9623942 21.3835568,26.8486379 21.7393396,25.7729403 C21.9774793,25.0529328 22.3656983,24.4008399 22.9185852,23.8436282 C23.6015213,23.1553499 24.6074067,22.6542993 25.8596897,22.2787382 C26.598962,22.0570296 27.3822852,21.8926867 28.1643523,21.7755831 C28.6337098,21.7053034 29.0022459,21.665932 29.2219396,21.6495311 C29.7957117,21.606697 30.2790395,22.0724592 30.2571102,22.6470803 C30.2482595,22.8790001 30.2185421,23.2656204 30.1553778,23.7573 C30.0501537,24.5763777 29.8854528,25.3969725 29.6458202,26.1722985 C29.2820797,27.3491732 28.7772488,28.3226652 28.0814148,29.0239422 C27.5112993,29.5985173 26.8342567,29.9946712 26.0820058,30.2298209 C25.0431931,30.5545484 23.9685019,30.5538946 22.9590622,30.3629361 Z M24.856524,14.2460394 C25.2227186,13.9179869 25.7772814,13.9179869 26.143476,14.2460394 L34.6794168,21.8928937 C34.8834297,22.075657 35,22.3365411 35,22.610358 L35,35.0364963 C35,35.5686247 34.568376,36 34.0359408,36 L16.9640592,36 C16.431624,36 16,35.5686247 16,35.0364963 L16,22.610358 C16,22.3365411 16.1165703,22.075657 16.3205832,21.8928937 L24.856524,14.2460394 Z M25.5,16.2574208 L17.9281185,23.0406304 L17.9281185,34.0729926 L33.0718815,34.0729926 L33.0718815,23.0406304 L25.5,16.2574208 Z M26.4138559,24.1244388 C25.4421255,24.4158619 24.6988704,24.7860914 24.2876634,25.200515 C23.9513898,25.539419 23.7171964,25.9327945 23.5700332,26.3777375 C23.3484889,27.0475695 23.3344915,27.7887662 23.4554739,28.4938519 C24.1396669,28.6057998 24.8578074,28.5934328 25.5064351,28.3906751 C25.9686066,28.2462026 26.3717319,28.0103244 26.7123366,27.6670553 C27.1542523,27.2216829 27.5236141,26.509423 27.8035891,25.6035701 C27.9876334,25.0080986 28.1227139,24.3659054 28.215027,23.7181118 C27.5964868,23.8192151 26.9836581,23.9535545 26.4138559,24.1244388 Z\"></path></svg>"

/***/ },
/* 151 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M16,25.6803772 C14.7683211,25.1026601 14,23.7776147 14,22 C14,21.8447549 14.0361451,21.6916418 14.1055728,21.5527864 L18.1055728,13.5527864 C18.2749648,13.2140024 18.6212279,13 19,13 L31,13 C31.3787721,13 31.7250352,13.2140024 31.8944272,13.5527864 L35.8944272,21.5527864 C35.9638549,21.6916418 36,21.8447549 36,22 C36,23.7776147 35.2316789,25.1026601 34,25.6803772 L34,36 C34,36.5522847 33.5522847,37 33,37 L27,37 C26.4477153,37 26,36.5522847 26,36 L26,32 L24,32 L24,36 C24,36.5522847 23.5522847,37 23,37 L17,37 C16.4477153,37 16,36.5522847 16,36 L16,25.6803772 Z M18,25.9655541 L18,35 L22,35 L22,31 C22,30.4477153 22.4477153,30 23,30 L27,30 C27.5522847,30 28,30.4477153 28,31 L28,35 L32,35 L32,25.9655541 C31.2176271,25.8566028 30.5231958,25.495014 30,24.9640818 C29.3677368,25.6056942 28.4854037,26 27.5,26 C26.5145963,26 25.6322632,25.6056942 25,24.9640818 C24.3677368,25.6056942 23.4854037,26 22.5,26 C21.5145963,26 20.6322632,25.6056942 20,24.9640818 C19.4768042,25.495014 18.7823729,25.8566028 18,25.9655541 Z M30.381966,15 L19.618034,15 L16.0055614,22.2249452 C16.0667882,23.4296127 16.6296518,24 17.5,24 C18.3477153,24 19,23.3477153 19,22.5 L21,22.5 C21,23.3477153 21.6522847,24 22.5,24 C23.3477153,24 24,23.3477153 24,22.5 L26,22.5 C26,23.3477153 26.6522847,24 27.5,24 C28.3477153,24 29,23.3477153 29,22.5 L31,22.5 C31,23.3477153 31.6522847,24 32.5,24 C33.3703482,24 33.9332118,23.4296127 33.9944386,22.2249452 L30.381966,15 Z\"></path></svg>"

/***/ },
/* 152 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M25,37 C18.372583,37 13,31.627417 13,25 C13,18.372583 18.372583,13 25,13 C31.627417,13 37,18.372583 37,25 C37,31.627417 31.627417,37 25,37 Z M25,35 C30.5228475,35 35,30.5228475 35,25 C35,19.4771525 30.5228475,15 25,15 C19.4771525,15 15,19.4771525 15,25 C15,30.5228475 19.4771525,35 25,35 Z M32,26 C32,29.8659932 28.8659932,33 25,33 C21.1340068,33 18,29.8659932 18,26 C18,25.4477153 18.4477153,25 19,25 L31,25 C31.5522847,25 32,25.4477153 32,26 Z M20.1000181,27 C20.5632884,29.2822403 22.5810421,31 25,31 C27.4189579,31 29.4367116,29.2822403 29.8999819,27 L20.1000181,27 Z M32,22 C32,22.5522847 31.5522847,23 31,23 C30.4477153,23 30,22.5522847 30,22 C30,21.4477153 29.5522847,21 29,21 C28.4477153,21 28,21.4477153 28,22 C28,22.5522847 27.5522847,23 27,23 C26.4477153,23 26,22.5522847 26,22 C26,20.3431458 27.3431458,19 29,19 C30.6568542,19 32,20.3431458 32,22 Z M24,22 C24,22.5522847 23.5522847,23 23,23 C22.4477153,23 22,22.5522847 22,22 C22,21.4477153 21.5522847,21 21,21 C20.4477153,21 20,21.4477153 20,22 C20,22.5522847 19.5522847,23 19,23 C18.4477153,23 18,22.5522847 18,22 C18,20.3431458 19.3431458,19 21,19 C22.6568542,19 24,20.3431458 24,22 Z\"></path></svg>"

/***/ },
/* 153 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M33.3357664,18.5909091 L32.4343065,18.5909091 C31.9747411,18.5909091 31.6021897,18.2066114 31.6021897,17.7325561 C31.6021897,17.2585009 31.9747411,16.8742031 32.4343065,16.8742031 L34.1678832,16.8742031 C34.6274486,16.8742031 35,17.2585009 35,17.7325561 L35,34.141647 C35,34.6157023 34.6274486,35 34.1678832,35 L16.8321168,35 C16.3725514,35 16,34.6157023 16,34.141647 L16,17.7325561 C16,17.2585009 16.3725514,16.8742031 16.8321168,16.8742031 L18.5656935,16.8742031 C19.0252589,16.8742031 19.3978103,17.2585009 19.3978103,17.7325561 C19.3978103,18.2066114 19.0252589,18.5909091 18.5656935,18.5909091 L17.6642336,18.5909091 L17.6642336,33.283294 L33.3357664,33.283294 L33.3357664,18.5909091 Z M29.0018248,17.7272727 L29.0018248,19.4651122 L21.9981752,19.4651122 L21.9981752,17.7272727 L23.7664234,17.7272727 C24.2259888,17.7272727 24.5985402,17.342975 24.5985402,16.8689198 C24.5985402,16.3954465 24.99543,16 25.5,16 C26.00457,16 26.4014598,16.3954465 26.4014598,16.8689198 C26.4014598,17.342975 26.7740112,17.7272727 27.2335766,17.7272727 L29.0018248,17.7272727 Z M21.1660584,24.6363636 C20.706493,24.6363636 20.3339416,24.2520659 20.3339416,23.7780107 C20.3339416,23.3039554 20.706493,22.9196577 21.1660584,22.9196577 L29.8339416,22.9196577 C30.293507,22.9196577 30.6660584,23.3039554 30.6660584,23.7780107 C30.6660584,24.2520659 30.293507,24.6363636 29.8339416,24.6363636 L21.1660584,24.6363636 Z M21.1660584,28.0909091 C20.706493,28.0909091 20.3339416,27.7066114 20.3339416,27.2325561 C20.3339416,26.7585009 20.706493,26.3742031 21.1660584,26.3742031 L29.8339416,26.3742031 C30.293507,26.3742031 30.6660584,26.7585009 30.6660584,27.2325561 C30.6660584,27.7066114 30.293507,28.0909091 29.8339416,28.0909091 L21.1660584,28.0909091 Z M21.1660584,31.5454545 C20.706493,31.5454545 20.3339416,31.1611568 20.3339416,30.6871016 C20.3339416,30.2130463 20.706493,29.8287486 21.1660584,29.8287486 L24.6332117,29.8287486 C25.0927771,29.8287486 25.4653285,30.2130463 25.4653285,30.6871016 C25.4653285,31.1611568 25.0927771,31.5454545 24.6332117,31.5454545 L21.1660584,31.5454545 Z\"></path></svg>"

/***/ },
/* 154 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M34,23 C34,24.4945632 33.3979722,26.2218655 32.3114334,28.1642659 C31.6356162,29.3724212 30.7841105,30.6397274 29.7968167,31.9417212 C28.903777,33.1194173 27.9490488,34.2615108 26.9943309,35.3256234 C26.6600461,35.6982117 26.3493255,36.034776 26.0699285,36.3298891 C25.9008796,36.5084469 25.7788063,36.6345385 25.711485,36.7027013 C25.3199805,37.0990996 24.6800195,37.0990996 24.288515,36.7027013 C24.2211937,36.6345385 24.0991204,36.5084469 23.9300715,36.3298891 C23.6506745,36.034776 23.3399539,35.6982117 23.0056691,35.3256234 C22.0509512,34.2615108 21.096223,33.1194173 20.2031833,31.9417212 C19.2158895,30.6397274 18.3643838,29.3724212 17.6885666,28.1642659 C16.6020278,26.2218655 16,24.4945632 16,23 C16,17.7197712 20.1292873,14 25,14 C29.8707127,14 34,17.7197712 34,23 Z M25.5056691,33.9900016 C26.4259512,32.9642704 27.346223,31.8633952 28.2031833,30.7332788 C29.1384363,29.499914 29.9399072,28.3070751 30.5659598,27.1878838 C31.5005992,25.5170334 32,24.0841822 32,23 C32,18.8736172 28.8100212,16 25,16 C21.1899788,16 18,18.8736172 18,23 C18,24.0841822 18.4994008,25.5170334 19.4340402,27.1878838 C20.0600928,28.3070751 20.8615637,29.499914 21.7968167,30.7332788 C22.653777,31.8633952 23.5740488,32.9642704 24.4943309,33.9900016 C24.6702766,34.1861076 24.8392608,34.3716532 25,34.5457231 C25.1607392,34.3716532 25.3297234,34.1861076 25.5056691,33.9900016 Z M25,27 C22.790861,27 21,25.209139 21,23 C21,20.790861 22.790861,19 25,19 C27.209139,19 29,20.790861 29,23 C29,25.209139 27.209139,27 25,27 Z M25,25 C26.1045695,25 27,24.1045695 27,23 C27,21.8954305 26.1045695,21 25,21 C23.8954305,21 23,21.8954305 23,23 C23,24.1045695 23.8954305,25 25,25 Z\"></path></svg>"

/***/ },
/* 155 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M30,14 C33.8522847,14 37,17.1477153 37,21 C37,22.62277 36.3389956,24.4255093 35.1345318,26.39645 C34.1513214,28.0053399 32.8242085,29.6943926 31.2371541,31.4257246 C30.0117019,32.7625816 28.7015119,34.04895 27.3914228,35.2399401 C26.9328068,35.6568637 26.506591,36.0324105 26.1234476,36.3608191 C25.8918923,36.5592951 25.7249239,36.6989414 25.6332378,36.7739573 C25.2648719,37.0753476 24.7351281,37.0753476 24.3667622,36.7739573 C24.2750761,36.6989414 24.1081077,36.5592951 23.8765524,36.3608191 C23.493409,36.0324105 23.0671932,35.6568637 22.6085772,35.2399401 C21.2984881,34.04895 19.9882981,32.7625816 18.7628459,31.4257246 C17.1757915,29.6943926 15.8486786,28.0053399 14.8654682,26.39645 C13.6610044,24.4255093 13,22.62277 13,21 C13,17.1477153 16.1477153,14 20,14 C21.9168428,14 23.6879548,14.79044 25,16.1308966 C26.3120452,14.79044 28.0831572,14 30,14 Z M26.0460772,33.7600599 C27.3141131,32.6073 28.5820481,31.3624184 29.7628459,30.0742754 C31.2695415,28.4306074 32.5205536,26.8384101 33.4279682,25.35355 C34.4578794,23.6682407 35,22.18973 35,21 C35,18.2522847 32.7477153,16 30,16 C28.3234272,16 26.7951173,16.8540555 25.8240419,18.2665288 C25.4266933,18.8444904 24.5733067,18.8444904 24.1759581,18.2665288 C23.2048827,16.8540555 21.6765728,16 20,16 C17.2522847,16 15,18.2522847 15,21 C15,22.18973 15.5421206,23.6682407 16.5720318,25.35355 C17.4794464,26.8384101 18.7304585,28.4306074 20.2371541,30.0742754 C21.4179519,31.3624184 22.6858869,32.6073 23.9539228,33.7600599 C24.3274828,34.09966 24.6783256,34.4104466 25,34.6888651 C25.3216744,34.4104466 25.6725172,34.09966 26.0460772,33.7600599 Z\"></path></svg>"

/***/ },
/* 156 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M20.9639409,22.321263 L18.2862631,24.9983357 C16.4630213,26.9005057 16.4606077,29.9059734 18.2648013,31.7177988 C20.1702271,33.536049 23.1762389,33.5337087 24.9852763,31.7249976 L27.6773854,29.0334968 L20.9639409,22.321263 Z M22.3207954,20.9647151 L29.03424,27.6769489 L31.7119178,24.9998762 C33.5375764,23.0951847 33.5375764,20.0842687 31.7407798,18.2874892 C29.8357447,16.4621599 26.8242856,16.4621599 25.0129045,18.2732143 L22.3207954,20.9647151 Z M16.9297465,33.0958514 C14.3591871,30.5260625 14.3591871,26.3226482 16.915162,23.6563387 L23.656081,16.9166354 C26.2120559,14.3611215 30.4162284,14.3611215 33.0830188,16.9166354 C35.6389937,19.4721493 35.6389937,23.6755636 33.0830188,26.3418732 L26.3420998,33.0815764 C23.786125,35.6370904 19.5819525,35.6370904 16.9297465,33.0958514 Z\"></path></svg>"

/***/ },
/* 157 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M19.2807663,25.3298224 C17.9045132,23.9755725 17,21.9740622 17,20 L17,19 C17,15.6867153 19.6867153,13 23,13 C26.3132847,13 29,15.6867153 29,19 L29,20 C29,23.4578902 26.2246636,27 23,27 C20.694685,27 18.4299036,27.4374277 16.3454347,28.1402706 C15.5412388,28.4123072 15,29.1729053 15,30.032 L15,33 L22,33 C22.5522847,33 23,33.4477153 23,34 C23,34.5522847 22.5522847,35 22,35 L14,35 C13.4477153,35 13,34.5522847 13,34 L13,30.032 C13,28.3183805 14.0850538,26.7935642 15.7054927,26.2454162 C16.8527859,25.8585707 18.0498621,25.5453751 19.2807663,25.3298224 Z M23,25 C24.9984945,25 27,22.4455161 27,20 L27,19 C27,16.7912847 25.2087153,15 23,15 C20.7912847,15 19,16.7912847 19,19 L19,20 C19,22.4455161 21.0015055,25 23,25 Z M31,37 C27.6862915,37 25,34.3137085 25,31 C25,27.6862915 27.6862915,25 31,25 C34.3137085,25 37,27.6862915 37,31 C37,34.3137085 34.3137085,37 31,37 Z M31,35 C33.209139,35 35,33.209139 35,31 C35,28.790861 33.209139,27 31,27 C28.790861,27 27,28.790861 27,31 C27,33.209139 28.790861,35 31,35 Z M32,30 L33,30 C33.5522847,30 34,30.4477153 34,31 C34,31.5522847 33.5522847,32 33,32 L31,32 C30.4477153,32 30,31.5522847 30,31 L30,29 C30,28.4477153 30.4477153,28 31,28 C31.5522847,28 32,28.4477153 32,29 L32,30 Z\"></path></svg>"

/***/ },
/* 158 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M22.9087298,21 L20.1491265,16.5248887 C19.7382839,15.8586456 20.217559,15 21.0002824,15 L26.0001941,15 C26.347118,15 26.6692536,15.1798146 26.85135,15.4751113 L30.2583046,21 L33.0000706,21 C35.2523156,21 37,22.7477153 37,25 C37,27.2522847 35.2523156,29 33.0000706,29 L30.5352979,29 L26.8322298,34.5547002 C26.6467673,34.8328989 26.3345414,35 26.0001941,35 L21.0002824,35 C20.2016011,35 19.7252181,34.1098545 20.1682468,33.4452998 L23.1317277,29 L17.000353,29 C16.5316626,29 16.1258564,28.674468 16.0241832,28.2169305 L14.0242185,19.2169305 C13.8854401,18.5924168 14.3606516,18 15.0003883,18 L18.0003353,18 C18.3346826,18 18.6469084,18.1671011 18.832371,18.4452998 L20.5354744,21 L22.9087298,21 Z M25.2583928,21 L27.9086416,21 L25.4420184,17 L22.7917697,17 L25.2583928,21 Z M24.6844543,23 L20.0003,23 C19.6659528,23 19.3537269,22.8328989 19.1682644,22.5547002 L17.465161,20 L16.2469823,20 L17.8025104,27 L25.0002118,27 C25.7988931,27 26.2752761,27.8901455 25.8322474,28.5547002 L22.8687665,33 L25.4650198,33 L29.1680879,27.4452998 C29.3535504,27.1671011 29.6657763,27 30.0001235,27 L33.0000706,27 C34.1477656,27 35.0000353,26.1477153 35.0000353,25 C35.0000353,23.8522847 34.1477656,23 33.0000706,23 L29.7177859,23 C29.7066392,23.0001863 29.6954987,23.0001859 29.6843691,23 L24.7178742,23 C24.7067274,23.0001863 24.6955869,23.0001859 24.6844574,23 Z\"></path></svg>"

/***/ },
/* 159 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M26,32 C26,33.3333333 24,33.3333333 24,32 C24,31.4472847 23.5527153,31 23,31 L17,31 C16.4477153,31 16,30.5522847 16,30 L16,19 L15,19 L15,33 L35,33 L35,19 L34,19 L34,30 C34,30.5522847 33.5522847,31 33,31 L27,31 C26.4472847,31 26,31.4472847 26,32 Z M24,18 C24,17.4472847 23.5527153,17 23,17 L18,17 L18,29 L23,29 C23.7684709,29 24.469306,29.2886985 25,29.7635904 C25.530694,29.2886985 26.2315291,29 27,29 L32,29 L32,17 L27,17 C26.4472847,17 26,17.4472847 26,18 L26,24 C26,24.5522847 25.5522847,25 25,25 C24.4477153,25 24,24.5522847 24,24 L24,18 Z M34,17 L36,17 C36.5522847,17 37,17.4477153 37,18 L37,34 C37,34.5522847 36.5522847,35 36,35 L14,35 C13.4477153,35 13,34.5522847 13,34 L13,18 C13,17.4477153 13.4477153,17 14,17 L16,17 L16,16 C16,15.4477153 16.4477153,15 17,15 L23,15 C23.7684709,15 24.469306,15.2886985 25,15.7635904 C25.530694,15.2886985 26.2315291,15 27,15 L33,15 C33.5522847,15 34,15.4477153 34,16 L34,17 Z\"></path></svg>"

/***/ },
/* 160 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M18,37 C15.2385763,37 13,34.7614237 13,32 C13,29.2385763 15.2385763,27 18,27 C20.7614237,27 23,29.2385763 23,32 C23,34.7614237 20.7614237,37 18,37 Z M18,35 C19.6568542,35 21,33.6568542 21,32 C21,30.3431458 19.6568542,29 18,29 C16.3431458,29 15,30.3431458 15,32 C15,33.6568542 16.3431458,35 18,35 Z M32,37 C29.2385763,37 27,34.7614237 27,32 C27,29.2385763 29.2385763,27 32,27 C34.7614237,27 37,29.2385763 37,32 C37,34.7614237 34.7614237,37 32,37 Z M32,35 C33.6568542,35 35,33.6568542 35,32 C35,30.3431458 33.6568542,29 32,29 C30.3431458,29 29,30.3431458 29,32 C29,33.6568542 30.3431458,35 32,35 Z M30,19 C28.3431458,19 27,17.6568542 27,16 C27,14.3431458 28.3431458,13 30,13 C31.6568542,13 33,14.3431458 33,16 C33,17.6568542 31.6568542,19 30,19 Z M30,17 C30.5522847,17 31,16.5522847 31,16 C31,15.4477153 30.5522847,15 30,15 C29.4477153,15 29,15.4477153 29,16 C29,16.5522847 29.4477153,17 30,17 Z M22.522122,24.8920915 L25.5999168,27.1999376 C25.8517716,27.3887878 26,27.6852061 26,28 L26,33 C26,33.5522847 25.5522847,34 25,34 C24.4477153,34 24,33.5522847 24,33 L24,28.500065 L21.321878,26.4919085 C20.8581535,26.1440046 20.5682024,25.6120051 20.5271443,25.0337389 C20.4860863,24.4554727 20.6979615,23.8878426 21.1078932,23.4778932 L24.586,19.9997865 C25.3669997,19.2190226 26.6330003,19.2190226 27.4141068,19.9998932 L30.4142136,23 L33,23 C33.5522847,23 34,23.4477153 34,24 C34,24.5522847 33.5522847,25 33,25 L30,25 C29.7347835,25 29.4804296,24.8946432 29.2928932,24.7071068 L26,21.4142135 L22.522122,24.8920915 Z\"></path></svg>"

/***/ },
/* 161 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M15.9580427,35.2871017 C15.7993486,35.8160819 15.2418785,36.1162581 14.7128983,35.957564 C14.1839181,35.79887 13.8837419,35.2413998 14.042436,34.7124196 L20.0422924,14.7128983 C20.2009864,14.1839181 20.7584566,13.8837419 21.2874367,14.042436 C21.8164169,14.20113 22.1165932,14.7586002 21.9578991,15.2875804 L15.9580427,35.2871017 Z M28.0421009,15.2875804 C27.8834068,14.7586002 28.1835831,14.20113 28.7125633,14.042436 C29.2415434,13.8837419 29.7990136,14.1839181 29.9577076,14.7128983 L35.957564,34.7124196 C36.1162581,35.2413998 35.8160819,35.79887 35.2871017,35.957564 C34.7581215,36.1162581 34.2006514,35.8160819 34.0419573,35.2871017 L28.0421009,15.2875804 Z M24.0000239,18.0001675 C24.0000239,17.447896 24.4477285,17.0001915 25,17.0001915 C25.5522715,17.0001915 25.9999761,17.447896 25.9999761,18.0001675 L25.9999761,20.0001197 C25.9999761,20.5523912 25.5522715,21.0000957 25,21.0000957 C24.4477285,21.0000957 24.0000239,20.5523912 24.0000239,20.0001197 L24.0000239,18.0001675 Z M24.0000239,24.0000239 C24.0000239,23.4477524 24.4477285,23.0000479 25,23.0000479 C25.5522715,23.0000479 25.9999761,23.4477524 25.9999761,24.0000239 L25.9999761,25.9999761 C25.9999761,26.5522476 25.5522715,26.9999521 25,26.9999521 C24.4477285,26.9999521 24.0000239,26.5522476 24.0000239,25.9999761 L24.0000239,24.0000239 Z M24.0000239,29.9998803 C24.0000239,29.4476088 24.4477285,28.9999043 25,28.9999043 C25.5522715,28.9999043 25.9999761,29.4476088 25.9999761,29.9998803 L25.9999761,31.9998325 C25.9999761,32.552104 25.5522715,32.9998085 25,32.9998085 C24.4477285,32.9998085 24.0000239,32.552104 24.0000239,31.9998325 L24.0000239,29.9998803 Z\"></path></svg>"

/***/ },
/* 162 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M26,26 L22,26 L22,35 L26,35 L26,26 Z M28,26 L28,36 C28,36.5522847 27.5522847,37 27,37 L21,37 C20.4477153,37 20,36.5522847 20,36 L20,26 L15,26 C14.4477153,26 14,25.5522847 14,25 L14,17 C14,16.4477153 14.4477153,16 15,16 L20,16 L20,14 C20,13.4477153 20.4477153,13 21,13 L27,13 C27.5522847,13 28,13.4477153 28,14 L28,16 L32,16 C32.3147573,16 32.6111456,16.1481942 32.8,16.4 L35.8,20.4 C36.0666667,20.7555556 36.0666667,21.2444444 35.8,21.6 L32.8,25.6 C32.6111456,25.8518058 32.3147573,26 32,26 L28,26 Z M22,16 L26,16 L26,15 L22,15 L22,16 Z M16,24 L31.5,24 L33.75,21 L31.5,18 L16,18 L16,24 Z\"></path></svg>"

/***/ },
/* 163 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M28.3921242,23.2662039 L26.1285798,21.5685387 L22.9247372,25.3615081 C22.7450537,25.5726688 22.6673352,25.8521709 22.7122242,26.1257769 C22.7571132,26.3993828 22.9200662,26.639399 23.1579361,26.7821561 L25.2401967,28.0322827 C26.0943554,28.5471543 26.4111391,29.6308924 25.967243,30.5278084 L23.5011832,35.4666234 C23.2634276,35.94278 22.684689,36.1360415 22.2085342,35.898285 C21.7323795,35.6605284 21.5391188,35.0817874 21.7768744,34.6056307 L24.2372811,29.6781506 L22.1660296,28.4346352 C21.4427063,28.0005342 20.9469133,27.2702723 20.8103361,26.4378116 C20.6737589,25.6053508 20.9102215,24.7549509 21.4546503,24.1151582 L24.2484168,20.8076629 L21.2393073,19.9864179 L19.7261267,22.256198 C19.4327066,22.69633 18.8380467,22.8152625 18.3979165,22.5218412 C17.9577864,22.2284199 17.8388544,21.6337575 18.1322745,21.1936255 L19.6480869,18.919899 C20.1043485,18.2335949 20.9500882,17.9183634 21.740458,18.137561 L25.9679826,19.2913276 C26.1906354,19.289214 26.4150859,19.3638321 26.5985316,19.5187858 C26.6157962,19.533369 26.6324201,19.5484292 26.6484001,19.5639308 L30.2655932,22.2768366 C30.3190757,22.3071557 30.3704224,22.3430604 30.41883,22.3846121 C30.448891,22.4104155 30.4769711,22.4376692 30.5030559,22.4661809 C30.5670736,22.5295973 30.6219798,22.6018877 30.6659984,22.6810167 L32.6525559,26.252105 L34.7385823,25.5555015 C35.240317,25.3879532 35.7828775,25.6588665 35.9504251,26.1606032 C36.1179727,26.66234 35.8470605,27.2049027 35.3453258,27.372451 L33.2498816,28.0721991 C32.3801751,28.3617908 31.4275198,27.9911343 30.9824094,27.1902392 L29.6381108,24.7736927 L27.4650914,27.3052773 C27.1184467,27.7091212 26.5100569,27.755489 26.1062147,27.4088429 C25.7023725,27.0621968 25.6560048,26.4538045 26.0026495,26.0499607 L28.3921242,23.2662039 Z M19.0256805,29.6660161 C19.3581515,29.2504256 19.9645739,29.1830451 20.3801627,29.5155175 C20.7957515,29.8479899 20.8631318,30.4544147 20.5306607,30.8700052 L16.7161831,35.6381216 C16.3837121,36.0537121 15.7772897,36.1210926 15.3617009,35.7886202 C14.9461121,35.4561478 14.8787319,34.849723 15.2112029,34.4341325 L19.0256805,29.6660161 Z M31.2216034,20.741816 C29.6360511,20.741816 28.350707,19.4564667 28.350707,17.870908 C28.350707,16.2853493 29.6360511,15 31.2216034,15 C32.8071556,15 34.0924997,16.2853493 34.0924997,17.870908 C34.0924997,19.4564667 32.8071556,20.741816 31.2216034,20.741816 Z M31.2216034,18.8144931 C31.7427289,18.8144931 32.1651846,18.3920357 32.1651846,17.870908 C32.1651846,17.3497804 31.7427289,16.9273229 31.2216034,16.9273229 C30.7004778,16.9273229 30.2780221,17.3497804 30.2780221,17.870908 C30.2780221,18.3920357 30.7004778,18.8144931 31.2216034,18.8144931 Z\"></path></svg>"

/***/ },
/* 164 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M37,25 L37,29.0133779 L37,33.0267558 C37,35.4027594 33.8055187,37 30.0167224,37 C26.2279261,37 23.0334448,35.4027594 23.0334448,33.0267558 L23.0334448,29.0133779 L23.0334448,25 C23.0334448,22.6241427 26.2282185,21.0267558 30.0167224,21.0267558 C33.8052263,21.0267558 37,22.6241427 37,25 Z M37,25 C37,24.4680334 36.5687559,24.0367893 36.0367893,24.0367893 C35.5048227,24.0367893 35.0735785,24.4680334 35.0735785,25 L35.0735785,27.7959983 Z M23.0334448,25 C23.0334448,24.4680334 23.4646889,24.0367893 23.9966555,24.0367893 C24.5286221,24.0367893 24.9598663,24.4680334 24.9598663,25 L24.9598663,27.7959983 Z M35.0735785,31.8094943 C33.7907739,32.5560623 31.9838514,32.9866221 30.0167224,32.9866221 C28.0495934,32.9866221 26.2426709,32.5560623 24.9598663,31.8094943 L24.9598663,33.0267558 C24.9598663,33.9758359 27.1553515,35.0735785 30.0167224,35.0735785 C32.8780933,35.0735785 35.0735785,33.9758359 35.0735785,33.0267558 L35.0735785,31.8094943 Z M30.0167224,27.0468227 C32.8778008,27.0468227 35.0735785,25.9489338 35.0735785,25 C35.0735785,24.0510662 32.8778008,22.9531773 30.0167224,22.9531773 C27.155644,22.9531773 24.9598663,24.0510662 24.9598663,25 C24.9598663,25.9489338 27.155644,27.0468227 30.0167224,27.0468227 Z M20.0234113,20.0234113 L20.0234113,17.9765887 C20.0234113,17.444622 20.4546555,17.0133779 20.9866221,17.0133779 C21.5185887,17.0133779 21.9498328,17.444622 21.9498328,17.9765887 L21.9498328,20.9866221 C21.9498328,21.5185887 21.5185887,21.9498328 20.9866221,21.9498328 L17.9765887,21.9498328 C17.444622,21.9498328 17.0133779,21.5185887 17.0133779,20.9866221 C17.0133779,20.4546555 17.444622,20.0234113 17.9765887,20.0234113 L20.0234113,20.0234113 Z M20.9866221,27.0468227 C21.5185887,27.0468227 21.9498328,27.4780668 21.9498328,28.0100334 C21.9498328,28.542 21.5185887,28.9732442 20.9866221,28.9732442 C16.5757257,28.9732442 13,25.3975184 13,20.9866221 C13,16.5757257 16.5757257,13 20.9866221,13 C24.5441417,13 27.6432985,15.3468958 28.6423172,18.7063866 C28.7939469,19.2162855 28.5035123,19.7525604 27.9936134,19.9041901 C27.4837145,20.0558198 26.9474396,19.7653852 26.7958099,19.2554863 C26.0381631,16.7076788 23.6859514,14.9264215 20.9866221,14.9264215 C17.6396589,14.9264215 14.9264215,17.6396589 14.9264215,20.9866221 C14.9264215,24.3335852 17.6396589,27.0468227 20.9866221,27.0468227 Z\"></path></svg>"

/***/ },
/* 165 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M34.6311308,15.0716029 C34.6603342,15.0601072 34.6899696,15.0500388 34.7199295,15.0413977 C35.4732373,14.8194828 36.1805172,15.5267627 35.9586023,16.2800705 C35.9499612,16.3100304 35.9398928,16.3396658 35.9283971,16.3688692 L28.936924,35.3457248 C28.6341455,36.167552 27.496029,36.2305867 27.1043468,35.4472223 L23.2538237,27.7461763 L15.5527777,23.8956532 C14.7694133,23.503971 14.832448,22.3658545 15.6542752,22.063076 L34.6311308,15.0716029 Z M31.071813,18.5141225 L18.5142915,23.1405778 L23.8016689,25.7842665 L31.071813,18.5141225 Z M32.4858775,19.928187 L25.2157335,27.1983311 L27.8594222,32.4857085 L32.4858775,19.928187 Z\"></path></svg>"

/***/ },
/* 166 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M20.000067,19 L20.000067,18 C20.000067,15.2477153 22.2477521,13 25,13 C27.7522479,13 29.999933,15.2477153 29.999933,18 L29.999933,19 L32.9998929,19 C33.5042094,19 33.9296047,19.3755364 33.9921574,19.8759653 L35.9921307,35.8759653 C36.0667363,36.4728184 35.601356,37 34.9998661,37 L15.0001339,37 C14.398644,37 13.9332637,36.4728184 14.0078693,35.8759653 L16.0078426,19.8759653 C16.0703953,19.3755364 16.4957906,19 17.0001071,19 L20.000067,19 Z M22.0000402,19 L27.9999598,19 L27.9999598,18 C27.9999598,16.3522847 26.6476932,15 25,15 C23.3523068,15 22.0000402,16.3522847 22.0000402,18 L22.0000402,19 Z M20.000067,21 L17.8828775,21 L16.132901,35 L33.867099,35 L32.1171225,21 L29.999933,21 L29.999933,23 C29.999933,23.5522847 29.5522238,24 28.9999464,24 C28.4476691,24 27.9999598,23.5522847 27.9999598,23 L27.9999598,21 L22.0000402,21 L22.0000402,23 C22.0000402,23.5522847 21.5523309,24 21.0000536,24 C20.4477762,24 20.000067,23.5522847 20.000067,23 L20.000067,21 Z\"></path></svg>"

/***/ },
/* 167 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M25,37 C18.372583,37 13,31.627417 13,25 C13,18.372583 18.372583,13 25,13 C31.627417,13 37,18.372583 37,25 C37,31.627417 31.627417,37 25,37 Z M25,35 C30.5228475,35 35,30.5228475 35,25 C35,19.4771525 30.5228475,15 25,15 C19.4771525,15 15,19.4771525 15,25 C15,30.5228475 19.4771525,35 25,35 Z M20.5,25 C19.6715729,25 19,24.3284271 19,23.5 C19,22.6715729 19.6715729,22 20.5,22 C21.3284271,22 22,22.6715729 22,23.5 C22,24.3284271 21.3284271,25 20.5,25 Z M29.5,25 C28.6715729,25 28,24.3284271 28,23.5 C28,22.6715729 28.6715729,22 29.5,22 C30.3284271,22 31,22.6715729 31,23.5 C31,24.3284271 30.3284271,25 29.5,25 Z M21,28 C21,27.4477153 21.4477153,27 22,27 C22.5522847,27 23,27.4477153 23,28 C23,29.1045695 23.8954305,30 25,30 C26.1045695,30 27,29.1045695 27,28 C27,27.4477153 27.4477153,27 28,27 C28.5522847,27 29,27.4477153 29,28 C29,30.209139 27.209139,32 25,32 C22.790861,32 21,30.209139 21,28 Z\"></path></svg>"

/***/ },
/* 168 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M24,37 C17.372583,37 13,31.627417 13,25 C13,18.372583 18.372583,13 25,13 C31.627417,13 37,18.372583 37,25 C37,31.627417 30.627417,37 24,37 Z M25,35 C30.5228475,35 35,30.5228475 35,25 C35,19.4771525 30.5228475,15 25,15 C19.4771525,15 15,19.4771525 15,25 C15,30.5228475 19.4771525,35 25,35 Z M21,30 C20.4477153,30 20,29.5522847 20,29 C20,28.4477153 20.4477153,28 21,28 L29,28 C29.5522847,28 30,28.4477153 30,29 C30,29.5522847 29.5522847,30 29,30 L21,30 Z M20.5,25 C19.6715729,25 19,24.3284271 19,23.5 C19,22.6715729 19.6715729,22 20.5,22 C21.3284271,22 22,22.6715729 22,23.5 C22,24.3284271 21.3284271,25 20.5,25 Z M29.5,25 C28.6715729,25 28,24.3284271 28,23.5 C28,22.6715729 28.6715729,22 29.5,22 C30.3284271,22 31,22.6715729 31,23.5 C31,24.3284271 30.3284271,25 29.5,25 Z\"></path></svg>"

/***/ },
/* 169 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M25,37 C18.372583,37 13,31.627417 13,25 C13,18.372583 18.372583,13 25,13 C31.627417,13 37,18.372583 37,25 C37,31.627417 31.627417,37 25,37 Z M25,35 C30.5228475,35 35,30.5228475 35,25 C35,19.4771525 30.5228475,15 25,15 C19.4771525,15 15,19.4771525 15,25 C15,30.5228475 19.4771525,35 25,35 Z M25.0720436,32.9974015 C24.521194,33.0371901 24.0423871,32.6228932 24.0025985,32.0720436 C23.9628099,31.521194 24.3771068,31.0423871 24.9279564,31.0025985 C26.6596416,30.8775166 28.2285657,29.9361622 29.1538427,28.4670667 C29.4481737,27.999747 30.0656136,27.8595118 30.5329333,28.1538427 C31.000253,28.4481737 31.1404882,29.0656136 30.8461573,29.5329333 C29.5818888,31.5402576 27.438162,32.8264937 25.0720436,32.9974015 Z M20.376,20 L25,20.022 L29.626,20 C31.2345728,19.9584517 32.6377419,21.0851512 32.9446019,22.6647302 C33.2514619,24.2443092 32.3721921,25.8144111 30.8650619,26.3781408 C29.3579316,26.9418706 27.6640912,26.3342197 26.859,24.941 L25.712,22.954 C25.6098917,22.6509601 25.3257801,22.4468844 25.006,22.4468844 C24.6862199,22.4468844 24.4021083,22.6509601 24.3,22.954 L23.148,24.94 C22.3436449,26.3331968 20.6506203,26.9415964 19.143459,26.3790583 C17.6362977,25.8165202 16.7559356,24.2476209 17.061123,22.6681131 C17.3663103,21.0886053 18.7677615,19.9605906 20.376,20 Z\"></path></svg>"

/***/ },
/* 170 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M33.045403,22.2433984 C33.1359553,22.3357517 33.2053657,22.4410814 33.253634,22.5533281 L35.8877635,25.1874577 C36.2851998,25.5848939 36.2851998,26.2292654 35.8877635,26.6267016 C35.4903273,27.0241378 34.8459559,27.0241378 34.4485196,26.6267016 L32.2676991,24.4458811 L22.9629848,33.7505954 C22.5655486,34.1480316 21.9211771,34.1480316 21.5237409,33.7505954 L20.1061947,32.3330492 L15.7373211,36.7019228 C15.3398848,37.0993591 14.6955134,37.0993591 14.2980772,36.7019228 C13.9006409,36.3044866 13.9006409,35.6601152 14.2980772,35.2626789 L18.6669508,30.8938053 L17.2494046,29.4762591 C16.8519684,29.0788229 16.8519684,28.4344514 17.2494046,28.0370152 L22.0207023,23.2657175 C22.0702416,23.1505152 22.1420509,23.042599 22.2361303,22.9485196 C22.3302096,22.8544403 22.4381259,22.782631 22.5533281,22.7330917 L24.1578588,21.128561 C24.2029615,21.0237465 24.2665945,20.9247912 24.3489261,20.8365788 C24.4481783,20.7302371 24.5648777,20.6499297 24.6904683,20.5959516 L26.5541189,18.7323009 L24.3732984,16.5514804 C23.9758622,16.1540441 23.9758622,15.5096727 24.3732984,15.1122365 C24.7707346,14.7148002 25.4151061,14.7148002 25.8125423,15.1122365 L28.4466719,17.746366 C28.5589186,17.7946343 28.6642483,17.8640447 28.7566016,17.954597 L30.9302251,15.7809735 L30.8865727,15.7373211 C30.4891365,15.3398848 30.4891365,14.6955134 30.8865727,14.2980772 C31.284009,13.9006409 31.9283804,13.9006409 32.3258166,14.2980772 L36.7019228,18.6741834 C37.0993591,19.0716196 37.0993591,19.715991 36.7019228,20.1134273 C36.3044866,20.5108635 35.6601152,20.5108635 35.2626789,20.1134273 L35.2190265,20.0697749 L33.045403,22.2433984 Z M30.8284552,23.0066372 L27.9933628,20.1715448 L26.6100461,21.5548615 L27.3138637,22.2117579 C27.7247604,22.5952615 27.7469669,23.2392502 27.3634633,23.6501469 C26.9799597,24.0610436 26.3359711,24.0832501 25.9250743,23.6997465 L25.1699468,22.9949608 L24.4458811,23.7190265 L25.1001529,24.3732984 C25.4975891,24.7707346 25.4975891,25.4151061 25.1001529,25.8125423 C24.7027167,26.2099785 24.0583453,26.2099785 23.660909,25.8125423 L23.0066372,25.1582704 L22.257828,25.9070796 L22.9629848,26.6122365 C23.360421,27.0096727 23.360421,27.6540441 22.9629848,28.0514804 C22.5655486,28.4489166 21.9211771,28.4489166 21.5237409,28.0514804 L20.8185841,27.3463235 L19.4082704,28.7566372 L22.2433628,31.5917296 L30.8284552,23.0066372 Z M33.7797827,18.630531 L32.369469,17.2202173 L30.1449961,19.4446903 L31.5553097,20.8550039 L33.7797827,18.630531 Z\"></path></svg>"

/***/ },
/* 171 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M24.5983685,24.7487967 C23.9676934,25.2533368 23.0334448,24.8043137 23.0334448,23.9966555 L23.0334448,13.9632107 C23.0334448,13.4312441 23.4646889,13 23.9966555,13 L36.0367893,13 C36.5687559,13 37,13.4312441 37,13.9632107 L37,19.9832776 C37,20.5152442 36.5687559,20.9464883 36.0367893,20.9464883 L29.351254,20.9464883 L24.5983685,24.7487967 Z M35.0735785,14.9264215 L24.9598663,14.9264215 L24.9598663,21.9925753 L28.4116649,19.2311364 C28.5824548,19.0945045 28.7946602,19.0200669 29.0133779,19.0200669 L35.0735785,19.0200669 L35.0735785,14.9264215 Z M23.9565218,34.8688963 L23.9565218,36.0367893 C23.9565218,36.5687559 23.5252776,37 22.993311,37 L13.9632107,37 C13.4312441,37 13,36.5687559 13,36.0367893 L13,34.8688963 C13,33.9659669 13.4021365,33.1123789 14.1047695,32.5553235 C15.256727,31.640768 16.7201069,31.0602006 18.4782609,31.0602006 C20.2364149,31.0602006 21.6997948,31.640768 22.8512418,32.5549184 C23.5543852,33.1123789 23.9565218,33.9659669 23.9565218,34.8688963 Z M22.0301003,34.8688963 C22.0301003,34.5472413 21.8910312,34.2520487 21.6539334,34.0640745 C20.8233009,33.4046235 19.7696852,32.9866221 18.4782609,32.9866221 C17.1868366,32.9866221 16.1332209,33.4046235 15.3020779,34.0644795 C15.0654906,34.2520487 14.9264215,34.5472413 14.9264215,34.8688963 L14.9264215,35.0735785 L22.0301003,35.0735785 L22.0301003,34.8688963 Z M18.4782609,29.9765887 C16.5609647,29.9765887 15.006689,28.422313 15.006689,26.5050167 C15.006689,24.5877205 16.5609647,23.0334448 18.4782609,23.0334448 C20.3955571,23.0334448 21.9498328,24.5877205 21.9498328,26.5050167 C21.9498328,28.422313 20.3955571,29.9765887 18.4782609,29.9765887 Z M18.4782609,28.0501672 C19.3316239,28.0501672 20.0234113,27.3583798 20.0234113,26.5050167 C20.0234113,25.6516537 19.3316239,24.9598663 18.4782609,24.9598663 C17.6248979,24.9598663 16.9331104,25.6516537 16.9331104,26.5050167 C16.9331104,27.3583798 17.6248979,28.0501672 18.4782609,28.0501672 Z M37,34.8688963 L37,36.0367893 C37,36.5687559 36.5687559,37 36.0367893,37 L27.006689,37 C26.4747224,37 26.0434782,36.5687559 26.0434782,36.0367893 L26.0434782,34.8688963 C26.0434782,33.9659669 26.4456148,33.1123789 27.1482477,32.5553235 C28.3002052,31.640768 29.7635851,31.0602006 31.5217391,31.0602006 C33.2798931,31.0602006 34.743273,31.640768 35.89472,32.5549184 C36.5978635,33.1123789 37,33.9659669 37,34.8688963 Z M35.0735785,34.8688963 C35.0735785,34.5472413 34.9345094,34.2520487 34.6974116,34.0640745 C33.8667791,33.4046235 32.8131634,32.9866221 31.5217391,32.9866221 C30.2303148,32.9866221 29.1766991,33.4046235 28.3455561,34.0644795 C28.1089688,34.2520487 27.9698997,34.5472413 27.9698997,34.8688963 L27.9698997,35.0735785 L35.0735785,35.0735785 L35.0735785,34.8688963 Z M31.5217391,29.9765887 C29.6044429,29.9765887 28.0501672,28.422313 28.0501672,26.5050167 C28.0501672,24.5877205 29.6044429,23.0334448 31.5217391,23.0334448 C33.4390353,23.0334448 34.993311,24.5877205 34.993311,26.5050167 C34.993311,28.422313 33.4390353,29.9765887 31.5217391,29.9765887 Z M31.5217391,28.0501672 C32.3751021,28.0501672 33.0668896,27.3583798 33.0668896,26.5050167 C33.0668896,25.6516537 32.3751021,24.9598663 31.5217391,24.9598663 C30.6683761,24.9598663 29.9765887,25.6516537 29.9765887,26.5050167 C29.9765887,27.3583798 30.6683761,28.0501672 31.5217391,28.0501672 Z\"></path></svg>"

/***/ },
/* 172 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M27,26.1260175 C28.7252272,26.5700603 30,28.1361606 30,30 C30,32.209139 28.209139,34 26,34 C23.790861,34 22,32.209139 22,30 C22,28.1361606 23.2747728,26.5700603 25,26.1260175 L25,19 C25,18.4477153 25.4477153,18 26,18 C26.5522847,18 27,18.4477153 27,19 L27,26.1260175 Z M18,16 C17.4477153,16 17,15.5522847 17,15 C17,14.4477153 17.4477153,14 18,14 L19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 L18,16 Z M18,20 C17.4477153,20 17,19.5522847 17,19 C17,18.4477153 17.4477153,18 18,18 L19,18 C19.5522847,18 20,18.4477153 20,19 C20,19.5522847 19.5522847,20 19,20 L18,20 Z M18,24 C17.4477153,24 17,23.5522847 17,23 C17,22.4477153 17.4477153,22 18,22 L19,22 C19.5522847,22 20,22.4477153 20,23 C20,23.5522847 19.5522847,24 19,24 L18,24 Z M30,24.2436686 C31.8459044,25.5056296 33,27.675815 33,30 C33,33.8522847 29.8522847,37 26,37 C22.1477153,37 19,33.8522847 19,30 C19,27.675815 20.1540956,25.5056296 22,24.2436686 L22,17 C22,14.7477153 23.7477153,13 26,13 C28.2522847,13 30,14.7477153 30,17 L30,24.2436686 Z M28,24.8 L28,17 C28,15.8522847 27.1477153,15 26,15 C24.8522847,15 24,15.8522847 24,17 L24,24.8 C24,25.1631671 23.8031081,25.4977877 23.4856429,25.6741573 C21.9797218,26.5107801 21,28.1903032 21,30 C21,32.7477153 23.2522847,35 26,35 C28.7477153,35 31,32.7477153 31,30 C31,28.1903032 30.0202782,26.5107801 28.5143571,25.6741573 C28.1968919,25.4977877 28,25.1631671 28,24.8 Z M26,32 C27.1045695,32 28,31.1045695 28,30 C28,28.8954305 27.1045695,28 26,28 C24.8954305,28 24,28.8954305 24,30 C24,31.1045695 24.8954305,32 26,32 Z\"></path></svg>"

/***/ },
/* 173 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M26.4640592,14.9264214 L26.4640592,14.9665552 C26.4640592,15.4985217 26.0324352,15.9297659 25.5,15.9297659 C24.9675648,15.9297659 24.5359408,15.4985217 24.5359408,14.9665552 L24.5359408,14.9264214 L22.6546864,14.9264214 C22.1222512,14.9264214 21.6906272,14.4951773 21.6906272,13.9632107 C21.6906272,13.4312441 22.1222512,13 22.6546864,13 L28.3453136,13 C28.8777488,13 29.3093728,13.4312441 29.3093728,13.9632107 C29.3093728,14.4951773 28.8777488,14.9264214 28.3453136,14.9264214 L26.4640592,14.9264214 Z M25.5,37 C20.2405841,37 16,32.5139216 16,27.006689 C16,21.4994564 20.2405841,17.0133779 25.5,17.0133779 C30.7594159,17.0133779 35,21.4994564 35,27.006689 C35,32.5139216 30.7594159,37 25.5,37 Z M25.5,35.0735786 C29.669124,35.0735786 33.0718816,31.4738298 33.0718816,27.006689 C33.0718816,22.5395481 29.669124,18.9397993 25.5,18.9397993 C21.330876,18.9397993 17.9281184,22.5395481 17.9281184,27.006689 C17.9281184,31.4738298 21.330876,35.0735786 25.5,35.0735786 Z M29.2937515,26.0434783 C29.8261867,26.0434783 30.2578107,26.4747224 30.2578107,27.006689 C30.2578107,27.5386555 29.8261867,27.9698997 29.2937515,27.9698997 L25.5,27.9698997 C24.9675648,27.9698997 24.5359408,27.5386555 24.5359408,27.006689 L24.5359408,22.993311 C24.5359408,22.4613445 24.9675648,22.0301003 25.5,22.0301003 C26.0324352,22.0301003 26.4640592,22.4613445 26.4640592,22.993311 L26.4640592,26.0434783 L29.2937515,26.0434783 Z\"></path></svg>"

/***/ },
/* 174 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M22,25 L22,24 C22,23.4477153 22.4477153,23 23,23 L34,23 C34.5522847,23 35,23.4477153 35,24 L35,28 C35,28.5522847 34.5522847,29 34,29 L23,29 C22.4477153,29 22,28.5522847 22,28 L22,27 L17,27 L17,33 L22,33 L22,32 C22,31.4477153 22.4477153,31 23,31 L34,31 C34.5522847,31 35,31.4477153 35,32 L35,36 C35,36.5522847 34.5522847,37 34,37 L23,37 C22.4477153,37 22,36.5522847 22,36 L22,35 L16,35 C15.4477153,35 15,34.5522847 15,34 L15,14 C15,13.4477153 15.4477153,13 16,13 C16.5522847,13 17,13.4477153 17,14 L17,17 L22,17 L22,16 C22,15.4477153 22.4477153,15 23,15 L34,15 C34.5522847,15 35,15.4477153 35,16 L35,20 C35,20.5522847 34.5522847,21 34,21 L23,21 C22.4477153,21 22,20.5522847 22,20 L22,19 L17,19 L17,25 L22,25 Z M24,17 L24,19 L33,19 L33,17 L24,17 Z M24,33 L24,35 L33,35 L33,33 L24,33 Z M24,25 L24,27 L33,27 L33,25 L24,25 Z\"></path></svg>"

/***/ },
/* 175 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M32.7916209,20.2524881 L35.0458614,18.0074573 C35.5718919,17.4835758 36.4689639,17.7088195 36.6827276,18.418454 C37.0560723,19.6578521 37.1140587,20.8994649 36.7810419,22.1143559 C36.0858025,24.4223525 34.2230016,26.1495988 31.8079906,26.6258633 C30.8273977,26.723522 30.0390594,26.7148336 29.2901071,26.5584263 L21.3683606,35.4670341 C19.8165875,37.3988258 16.970429,37.5203057 15.1863853,35.7435507 C13.5090928,34.0731107 13.6292911,31.2799424 15.4264652,29.6183302 L24.3846053,21.7190483 C24.2860139,21.3228317 24.2384942,20.9198009 24.2388662,20.495973 C24.1231604,17.1542155 26.7625308,14.2375639 30.1371364,14 C31.0020322,14 31.781962,14.107137 32.5701397,14.3314106 C33.2909275,14.5365086 33.5253052,15.4373067 32.9952363,15.96521 L30.7409958,18.2102408 L32.7916209,20.2524881 Z M33.4868075,22.3295275 C33.1028665,22.7118999 32.4803752,22.7118999 32.0964342,22.3295275 L28.6554359,18.9025873 C28.2714949,18.5202149 28.2714949,17.9002668 28.6554359,17.5178944 L30.2238874,15.9558508 C27.9568487,16.1158447 26.1247599,18.1404051 26.2045669,20.4622301 C26.2045669,20.9135707 26.2748008,21.2807919 26.4291921,21.6651932 C26.5833444,22.0489995 26.4788633,22.487873 26.1681025,22.7619016 L16.7471808,31.0688975 C15.7684604,31.9739963 15.7032681,33.4889358 16.5767586,34.3588578 C17.5401266,35.3182899 19.0205276,35.2551033 19.8645779,34.2063064 L28.2212881,24.806699 C28.4824607,24.5129327 28.8945015,24.4028133 29.2682625,24.5268913 C29.9139875,24.7412536 30.5997818,24.7781721 31.5173542,24.6914849 C33.115984,24.3730652 34.4089175,23.1742175 34.890862,21.5753812 C34.9601568,21.3223384 35.0039359,21.0634377 35.0231308,20.7994809 L33.4868075,22.3295275 Z\"></path></svg>"

/***/ },
/* 176 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 54 47\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><g stroke=\"none\" strokeWidth=\"1\" fill=\"none\"><g transform=\"translate(-1506.000000, -2713.000000)\"><g transform=\"translate(1421.000000, 2713.000000)\"><path d=\"M125.212886,10.1718048 C127.110227,10.3826204 128.89335,10.9096517 130.562307,11.7529143 C132.231264,12.596177 133.689384,13.676591 134.93671,14.9941889 C136.184036,16.3117868 137.167828,17.8226097 137.888114,19.5267029 C138.608401,21.2307962 138.968539,23.049054 138.968539,24.9815309 C138.968539,26.8086 138.687456,28.6356416 138.125281,30.4627107 C137.563106,32.2897797 136.746207,33.9323605 135.674561,35.3905021 C134.602915,36.8486438 133.267769,38.0520318 131.669084,39.0007022 C130.070398,39.9493727 128.217005,40.4588363 126.108848,40.5291081 L122.261482,40.5291081 C121.804714,40.5291081 121.409441,40.3622149 121.07565,40.0284235 C120.741858,39.694632 120.574965,39.2993586 120.574965,38.8425913 C120.574965,38.385824 120.741858,37.9905506 121.07565,37.6567591 C121.409441,37.3229677 121.804714,37.1560744 122.261482,37.1560744 L126.108848,37.1560744 C127.549422,37.1560744 128.858216,36.7871526 130.03527,36.0492978 C131.212324,35.3114429 132.222468,34.3627867 133.06573,33.2033006 C133.908993,32.0438144 134.558998,30.743804 135.015765,29.3032303 C135.472533,27.8626567 135.700913,26.4221046 135.700913,24.9815309 C135.700913,23.4004134 135.384694,21.9159421 134.752247,20.5280723 C134.1198,19.1402026 133.258983,17.9280307 132.169768,16.8915204 C131.080554,15.85501 129.833247,15.0293277 128.427809,14.4144487 C127.022371,13.7995697 125.529116,13.4921348 123.947999,13.4921348 L122.735815,13.4394312 L122.366889,12.2799508 C121.48849,9.46907537 120.07429,7.28189569 118.124245,5.71834621 C116.1742,4.15479672 113.53026,3.37303371 110.192346,3.37303371 C108.084189,3.37303371 106.186876,3.73317173 104.500351,4.45345857 C102.813826,5.17374541 101.36449,6.17510478 100.1523,7.45756671 C98.9401098,8.74002865 98.0090213,10.2684193 97.3590063,12.0427844 C96.7089914,13.8171496 96.3839888,15.7232459 96.3839888,17.7611306 L96.4366924,17.7611306 L96.5420997,19.3422402 L95.0136938,19.6057584 C93.1514888,19.9219819 91.5703951,20.9233413 90.2703652,22.6098666 C88.9703353,24.2963919 88.3203301,26.1937043 88.3203301,28.301861 C88.3203301,30.6911051 89.1196608,32.7640947 90.7183462,34.5208919 C92.3170316,36.277689 94.2055603,37.1560744 96.3839888,37.1560744 L101.232725,37.1560744 C101.724628,37.1560744 102.128685,37.3229677 102.444909,37.6567591 C102.761132,37.9905506 102.919242,38.385824 102.919242,38.8425913 C102.919242,39.2993586 102.761132,39.694632 102.444909,40.0284235 C102.128685,40.3622149 101.724628,40.5291081 101.232725,40.5291081 L96.3839888,40.5291081 C94.8380073,40.5291081 93.3798875,40.2041055 92.0095857,39.5540906 C90.6392839,38.9040756 89.4358959,38.0169064 88.3993855,36.8925562 C87.3628752,35.768206 86.5371929,34.4681956 85.9223139,32.992486 C85.3074349,31.5167763 85,29.9532503 85,28.301861 C85,25.5963933 85.7554115,23.1544819 87.266257,20.9760534 C88.7771026,18.7976249 90.7095505,17.3395051 93.0636587,16.6016503 C93.2042025,14.2475421 93.7224499,12.0603624 94.6184164,10.0400456 C95.514383,8.0197289 96.7089871,6.26295807 98.2022647,4.76968048 C99.6955423,3.27640288 101.452313,2.10815028 103.47263,1.26488764 C105.492947,0.421624997 107.732829,0 110.192346,0 C112.089686,0 113.82889,0.237164061 115.410007,0.711499298 C116.991124,1.18583453 118.414109,1.8621913 119.679003,2.74058989 C120.943897,3.61898847 122.033095,4.69061868 122.946629,5.95551264 C123.860164,7.22040661 124.615575,8.62582326 125.212886,10.1718048 Z M113.249157,23.611236 L119.468188,30.4627107 C119.71414,30.7086623 119.837114,30.9985295 119.837114,31.3323209 C119.837114,31.6661124 119.71414,31.9735473 119.468188,32.2546348 L119.046559,32.5181531 C118.835743,32.7641047 118.563444,32.8607271 118.229652,32.8080232 C117.895861,32.7553193 117.605994,32.6059937 117.360042,32.3600421 L113.670787,28.2491573 L113.670787,45.2197331 C113.670787,45.7116364 113.503893,46.1156936 113.170102,46.4319171 C112.83631,46.7481406 112.441037,46.90625 111.98427,46.90625 C111.492366,46.90625 111.088309,46.7481406 110.772086,46.4319171 C110.455862,46.1156936 110.297753,45.7116364 110.297753,45.2197331 L110.297753,28.2491573 L106.713904,32.2546348 C106.467953,32.5005864 106.178086,32.649912 105.844294,32.7026159 C105.510503,32.7553198 105.220636,32.6586974 104.974684,32.4127458 L104.553055,32.1492275 C104.307103,31.86814 104.184129,31.5607051 104.184129,31.2269136 C104.184129,30.8931222 104.307103,30.603255 104.553055,30.3573034 L110.666678,23.611236 L110.666678,23.5585323 L111.088308,23.1369031 C111.193715,22.9963593 111.325473,22.8997369 111.483585,22.847033 C111.641697,22.7943291 111.791022,22.7679775 111.931566,22.7679775 C112.107246,22.7679775 112.265355,22.7943291 112.405899,22.847033 C112.546443,22.8997369 112.686984,22.9963593 112.827528,23.1369031 L113.249157,23.5585323 L113.249157,23.611236 Z\"></path></g></g></g></svg>"

/***/ },
/* 177 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M26.2801112,19.9277366 L26.0097767,21.1626769 L29.4185146,23.9104354 L31.708545,23.0900013 C32.2102185,22.9102701 32.7628953,23.1704504 32.9429832,23.6711303 C33.1230712,24.1718102 32.8623745,24.7233924 32.3607011,24.9031236 L29.5601471,25.9064596 C29.2431181,26.0200395 28.8896913,25.9604413 28.6276521,25.7492134 L25.5490111,23.2675435 L22.7087998,36.2421775 C22.595034,36.7618815 22.0806693,37.0911421 21.559934,36.9776017 C21.0391986,36.8640612 20.7092846,36.3507152 20.8230504,35.8310112 L24.3926697,19.5243003 C23.3606528,18.9339255 22.6678471,17.7815893 22.6678471,16.4715426 C22.6678471,14.5695556 24.1281837,13 25.9667561,13 C27.8053284,13 29.2656651,14.5695556 29.2656651,16.4715426 C29.2656651,18.2641091 27.9685202,19.7613933 26.2801112,19.9277366 Z M20.7040995,23.6544731 L19.8873309,26.2880378 C19.7297262,26.7962137 19.1891869,27.0806608 18.6800026,26.9233683 C18.1708182,26.7660758 17.8858066,26.226607 18.0434113,25.7184311 L18.9769293,22.7084232 C19.0517524,22.4671658 19.2185246,22.2648883 19.4413287,22.1451545 L21.3083647,21.1418185 C21.7776714,20.8896153 22.3629765,21.0648591 22.6156801,21.5332363 C22.8683837,22.0016136 22.6927922,22.5857594 22.2234855,22.8379625 L20.7040995,23.6544731 Z M25.7262858,28.6653187 C25.3635933,28.2755003 25.3862102,27.6660521 25.7768022,27.3040779 C26.1673941,26.9421037 26.7780518,26.9646758 27.1407444,27.3544942 L29.0077803,29.3611662 C29.1735422,29.5393254 29.2656651,29.7734551 29.2656651,30.0165784 L29.2656651,35.0332584 C29.2656651,35.5652205 28.8335688,35.996461 28.3005511,35.996461 C27.7675333,35.996461 27.335437,35.5652205 27.335437,35.0332584 L27.335437,30.3948187 L25.7262858,28.6653187 Z M25.9667561,18.0166799 C26.7060225,18.0166799 27.335437,17.3401914 27.335437,16.4715426 C27.335437,15.6028937 26.7060225,14.9264052 25.9667561,14.9264052 C25.2274896,14.9264052 24.5980751,15.6028937 24.5980751,16.4715426 C24.5980751,17.3401914 25.2274896,18.0166799 25.9667561,18.0166799 Z\"></path></svg>"

/***/ },
/* 178 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M15,16 C15,16.5527153 15.4472847,17 16,17 L34,17 C34.5522847,17 35,17.4477153 35,18 L35,24 L36,24 C36.5522847,24 37,24.4477153 37,25 L37,29 C37,29.5522847 36.5522847,30 36,30 L35,30 L35,36 C35,36.5522847 34.5522847,37 34,37 L17,37 C14.7907153,37 13,35.2092847 13,33 L13,16 C13,14.3427153 14.3427153,13 16,13 L30,13 C30.5522847,13 31,13.4477153 31,14 L31,15 C31,15.5522847 30.5522847,16 30,16 C29.4477153,16 29,15.5522847 29,15 L16,15 C15.4472847,15 15,15.4472847 15,16 Z M16,19 C15.649337,19 15.3127572,18.9398868 15,18.8293999 L15,33 C15,34.1047153 15.8952847,35 17,35 L33,35 L33,30 L31,30 C29.3427153,30 28,28.6572847 28,27 C28,25.3427153 29.3427153,24 31,24 L33,24 L33,19 L16,19 Z M35,28 L35,26 L31,26 C30.4472847,26 30,26.4472847 30,27 C30,27.5527153 30.4472847,28 31,28 L35,28 Z\"></path></svg>"

/***/ },
/* 179 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M14.926487,24.215329 L14.926487,33.0718815 L35.073513,33.0718815 L35.073513,24.215329 C34.4178442,24.442553 33.7170567,24.5671835 33.0267036,24.5671835 C31.5418599,24.5671835 30.0989953,24.0177918 29.0133518,23.087405 C27.9277083,24.0177918 26.4848437,24.5671835 25,24.5671835 C23.5151563,24.5671835 22.0722917,24.0177918 20.9866482,23.087405 C19.9010047,24.0177918 18.4581401,24.5671835 16.9732964,24.5671835 C16.2829433,24.5671835 15.5821558,24.442553 14.926487,24.215329 Z M13.0000781,22.6661511 C12.999974,22.657961 12.9999739,22.6497664 13.0000781,22.6415695 L13.0000781,16.9640592 C13.0000781,16.431624 13.4313194,16 13.9632825,16 C14.4952457,16 14.926487,16.431624 14.926487,16.9640592 L14.926487,22.1185762 C15.5366621,22.4451423 16.270798,22.639065 16.9732964,22.639065 C18.2495657,22.639065 19.4903028,22.0419792 20.2323523,21.1067173 C20.6179809,20.62068 21.3553154,20.62068 21.7409441,21.1067173 C22.4829935,22.0419792 23.7237306,22.639065 25,22.639065 C26.2762694,22.639065 27.5170065,22.0419792 28.2590559,21.1067173 C28.6446846,20.62068 29.3820191,20.62068 29.7676477,21.1067173 C30.5096972,22.0419792 31.7504343,22.639065 33.0267036,22.639065 C33.729202,22.639065 34.4633379,22.4451423 35.073513,22.1185762 L35.073513,16.9640592 C35.073513,16.431624 35.5047543,16 36.0367175,16 C36.5686806,16 36.9999219,16.431624 36.9999219,16.9640592 L36.9999219,22.6415693 C37.0000261,22.6497664 37.000026,22.657961 36.9999219,22.6661511 L36.9999219,34.0359408 C36.9999219,34.568376 36.5686806,35 36.0367175,35 L13.9632825,35 C13.4313194,35 13.0000781,34.568376 13.0000781,34.0359408 L13.0000781,22.666156 Z\"></path></svg>"

/***/ },
/* 180 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M35,26.2571621 L35,18 C35,16.8522847 34.1477153,16 33,16 L32,16 C31.4477153,16 31,15.5522847 31,15 C31,14.4477153 31.4477153,14 32,14 L33,14 C35.2522847,14 37,15.7477153 37,18 L37,30.5 C37,33.5375661 34.5375661,36 31.5,36 C28.4624339,36 26,33.5375661 26,30.5 C26,27.4624339 28.4624339,25 31.5,25 C32.8296292,25 34.0490595,25.4718176 35,26.2571621 Z M13,30.5 L13,18 C13,15.7477153 14.7477153,14 17,14 L18,14 C18.5522847,14 19,14.4477153 19,15 C19,15.5522847 18.5522847,16 18,16 L17,16 C15.8522847,16 15,16.8522847 15,18 L15,26.2571621 C15.9509405,25.4718176 17.1703708,25 18.5,25 C21.5375661,25 24,27.4624339 24,30.5 C24,33.5375661 21.5375661,36 18.5,36 C15.4624339,36 13,33.5375661 13,30.5 Z M18.5,34 C20.4329966,34 22,32.4329966 22,30.5 C22,28.5670034 20.4329966,27 18.5,27 C16.5670034,27 15,28.5670034 15,30.5 C15,32.4329966 16.5670034,34 18.5,34 Z M31.5,34 C33.4329966,34 35,32.4329966 35,30.5 C35,28.5670034 33.4329966,27 31.5,27 C29.5670034,27 28,28.5670034 28,30.5 C28,32.4329966 29.5670034,34 31.5,34 Z\"></path></svg>"

/***/ },
/* 181 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M25.0216001,25.9632107 C25.0077257,25.9635137 24.9938068,25.9635154 24.9798515,25.9632107 L17.9765887,25.9632107 C17.444622,25.9632107 17.0133779,25.5319666 17.0133779,25 C17.0133779,20.5549899 20.5549899,17.0133779 25,17.0133779 C29.4450101,17.0133779 32.9866221,20.5549899 32.9866221,25 C32.9866221,25.5319666 32.555378,25.9632107 32.0234113,25.9632107 L25.0216019,25.9632107 Z M26.2336576,24.0367893 L30.986236,24.0367893 C30.5333146,21.1239132 28.0527855,18.9397994 25,18.9397994 C21.9472145,18.9397994 19.4666854,21.1239132 19.013764,24.0367893 L24.2479478,24.0367893 L25.0688928,20.7530092 C25.1979137,20.2369258 25.720874,19.9231496 26.2369574,20.0521704 C26.7530408,20.1811913 27.066817,20.7041516 26.9377962,21.220235 L26.2336576,24.0367893 Z M13.9632107,13 L36.0367893,13 C36.5687559,13 37,13.4312441 37,13.9632107 L37,36.0367893 C37,36.5687559 36.5687559,37 36.0367893,37 L13.9632107,37 C13.4312441,37 13,36.5687559 13,36.0367893 L13,13.9632107 C13,13.4312441 13.4312441,13 13.9632107,13 Z M14.9264215,14.9264215 L14.9264215,35.0735785 L35.0735785,35.0735785 L35.0735785,14.9264215 L14.9264215,14.9264215 Z\"></path></svg>"

/***/ },
/* 182 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M34.4930431,17.65862 C36.0646391,19.6878641 37,22.2346995 37,25 C37,31.627417 31.627417,37 25,37 C18.372583,37 13,31.627417 13,25 C13,20.9312084 15.0250019,17.3353813 18.1221584,15.1653661 C18.1279399,15.1612299 18.1337554,15.1571632 18.1396072,15.1531636 C20.0839365,13.7959977 22.4490106,13 25,13 C28.815973,13 32.2159317,14.781169 34.4138394,17.5574703 C34.4421383,17.5891515 34.4686201,17.6228965 34.4930431,17.65862 Z M33.330679,19.4663514 C31.4633078,20.2387067 28.9699936,20.9280966 28.0757194,20.9924447 C27.1145412,21.0614288 26.4771323,20.6564544 25.9476342,19.8415447 C25.8521279,19.6945584 25.349764,18.8185848 25.1705375,18.5461605 C25.0304642,18.3332492 24.9278461,18.2101737 24.3863392,17.5886163 C24.1742068,17.3451245 24.032803,17.1779666 23.8943747,17.0033792 C23.3745859,16.3478156 23.0708864,15.7968707 23.016255,15.1967507 C22.0748889,15.3862044 21.1813693,15.7078557 20.3558939,16.1415067 C20.707026,16.5352206 21.0280725,16.9802602 21.3296065,17.4863648 C22.3816942,19.2484937 22.8727738,21.2131351 21.7910491,22.6117526 C21.320415,23.2203234 20.7016782,23.6231978 19.616216,24.1613835 C19.5608996,24.1888101 19.0432341,24.4420732 18.9025909,24.5129959 C18.4878333,24.7221473 18.2307519,24.8753226 18.0726696,25.0092184 C18.0143719,25.0585966 18.0026253,25.0660349 18.0004097,25.0389527 C18.0249322,25.1999429 18.2767512,25.5630762 18.9690767,26.3626887 C19.1827261,26.6094466 19.3007252,26.748257 19.4284176,26.9058813 C19.5816764,27.095065 19.7124942,27.2686684 19.8279909,27.4392584 C20.9683821,29.1231599 20.8133191,30.9142022 19.8587126,32.5124575 C19.7079332,32.7651149 19.5239008,33.004126 19.3128139,33.2264231 C20.9274264,34.3447684 22.8871944,35 25,35 C30.5228475,35 35,30.5228475 35,25 C35,22.9537199 34.385381,21.0509917 33.330679,19.4663514 Z M31.9920548,17.850787 C30.1903367,16.0884309 27.7251199,15.0016157 25.0060651,15.0000018 C25.0072379,15.0978547 25.1469834,15.3660986 25.4605521,15.7615751 C25.5752984,15.9062944 25.6999626,16.053664 25.8933769,16.2756705 C26.5159872,16.9903209 26.6273178,17.1238456 26.8403248,17.4476162 C27.0633949,17.7866828 27.5695428,18.6692545 27.6236522,18.7525302 C27.7908219,19.0098082 27.7896845,19.0090855 27.9324528,18.998839 C28.1556691,18.9827773 29.0417643,18.7837189 29.9553587,18.5221781 C30.6648629,18.3190635 31.3567964,18.0921251 31.9920548,17.850787 Z M17.7864802,31.925705 C17.9320356,31.7845733 18.052446,31.6364119 18.1414787,31.4872221 C18.7336964,30.4956983 18.8185638,29.5154441 18.1719366,28.5606344 C18.0917554,28.4422059 17.9941889,28.312729 17.8743702,28.164824 C17.7644226,28.0291039 17.6570569,27.9028024 17.4570697,27.6718239 C16.3297563,26.3698149 16,25.8794503 16,25 C16,23.9545359 16.6353252,23.4164149 18.0020633,22.7272048 C18.1556121,22.6497741 18.6821127,22.3921884 18.7277966,22.3695378 C19.5482881,21.9627279 19.9841604,21.6789209 20.2089818,21.3882074 C20.5872022,20.8991867 20.2626404,19.6007259 19.6119172,18.5108367 C19.3147667,18.0120898 19.0058447,17.6042039 18.6648391,17.2623202 C16.4275544,19.096241 15,21.8814089 15,25 C15,27.6882213 16.0607323,30.1286952 17.7864802,31.925705 Z M25.6223745,32.9259584 C24.0719865,32.2936773 23.9020397,31.5873458 24.065026,29.2103264 C24.1485505,27.9921905 24.1504122,27.1373681 24.0206653,26.0182655 C23.7567849,23.7441969 25.9802607,21.903 28.514,21.903 C30.958273,21.903 32.9840208,23.6472191 33.0139095,25.8895494 C33.0635341,29.5437909 28.477666,34.0907272 25.6223745,32.9259584 Z M31.0140927,25.9166174 C30.9996949,24.8328592 29.9197824,23.903 28.514,23.903 C27.0588638,23.903 25.899987,24.8626329 26.0073462,25.7878331 C26.1536422,27.0496767 26.1515352,28.0171483 26.060341,29.3471402 C25.9535014,30.9053065 25.9523725,30.9006144 26.3777145,31.0740779 C27.702025,31.6143084 31.0465261,28.2981562 31.0140927,25.9166174 Z\"></path></svg>"

/***/ },
/* 183 */
/***/ function(module, exports) {

	module.exports = "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M28.9732442,24.0824 L28.9732442,29.0122164 C28.9732442,29.5442604 28.542,29.9755672 28.0100334,29.9755672 C27.4780668,29.9755672 27.0468227,29.5442604 27.0468227,29.0122164 L27.0468227,22.9511344 L22.9531773,22.9511344 L22.9531773,29.0122164 C22.9531773,29.5442604 22.5219332,29.9755672 21.9899666,29.9755672 C21.458,29.9755672 21.0267558,29.5442604 21.0267558,29.0122164 L21.0267558,24.0823998 L19.7366779,25.1884059 C19.0193473,25.8041404 17.9654805,25.8223132 17.2272356,25.2315821 L15.3680383,23.7434058 C14.9527077,23.4109586 14.8854784,22.8047159 15.2178773,22.389325 C15.5502762,21.9739341 16.1564306,21.906695 16.5717611,22.2391422 L18.4308406,23.7272242 C18.4408831,23.73526 19.4183017,22.9116423 21.3630963,21.2563711 C21.5376746,21.1067022 21.7600278,21.0244328 21.9899666,21.0244328 L28.0100334,21.0244328 C28.2399722,21.0244328 28.4623254,21.1067022 28.6369037,21.2563711 L31.5179487,23.7263411 C31.5277083,23.7347184 32.1644717,23.2389855 33.4282389,22.2391422 C33.8435694,21.906695 34.4497238,21.9739341 34.7821227,22.389325 C35.1145216,22.8047159 35.0472923,23.4109586 34.6319617,23.7434058 L32.7726466,25.2316764 C32.0345195,25.8223132 30.9806527,25.8041404 30.2637652,25.188786 L28.9732442,24.0824 Z M25,19.9406632 C23.3597697,19.9406632 22.0301003,18.6108005 22.0301003,16.9703316 C22.0301003,15.3298628 23.3597697,14 25,14 C26.6402303,14 27.9698997,15.3298628 27.9698997,16.9703316 C27.9698997,18.6108005 26.6402303,19.9406632 25,19.9406632 Z M17.9765887,32.9860384 C17.444622,32.9860384 17.0133779,32.5547316 17.0133779,32.0226876 C17.0133779,31.4906436 17.444622,31.0593368 17.9765887,31.0593368 L32.0234113,31.0593368 C32.555378,31.0593368 32.9866221,31.4906436 32.9866221,32.0226876 C32.9866221,32.5547316 32.555378,32.9860384 32.0234113,32.9860384 L17.9765887,32.9860384 Z M13.9632107,37 C13.4312441,37 13,36.5686931 13,36.0366492 C13,35.5046052 13.4312441,35.0732984 13.9632107,35.0732984 L36.0367893,35.0732984 C36.5687559,35.0732984 37,35.5046052 37,36.0366492 C37,36.5686931 36.5687559,37 36.0367893,37 L13.9632107,37 Z\"></path></svg>"

/***/ },
/* 184 */,
/* 185 */,
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Firstdata = function (_Component) {
	  _inherits(Firstdata, _Component);

	  function Firstdata() {
	    _classCallCheck(this, Firstdata);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Firstdata.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_firstdata' }));
	    // const paymentCreditCardAndAddress = null;
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_firstdata'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Firstdata;
	}(_react.Component);

	exports.default = Firstdata;


	Firstdata.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Firstdata.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Firstdata.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Footer = function Footer(prop) {
	  var id = prop.id.value;
	  return _react2.default.createElement(
	    'div',
	    { id: 'footer_' + id, style: { 'text-align': prop.textAlign.value.toLowerCase() } },
	    (0, _Utils.escapeHTML)(prop.text.value)
	  );
	};

	exports.default = Footer;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Fullname = function (_Component) {
	  _inherits(Fullname, _Component);

	  function Fullname() {
	    _classCallCheck(this, Fullname);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Fullname.prototype.renderPrefix = function renderPrefix(hint) {
	    var props = this.props;

	    if (this.props.prefix && this.props.prefix.value && this.props.prefix.value === 'Yes') {
	      var idValue = props.id.value;

	      var subLabelObj = (0, _Utils.subLabel)(props, 'prefix', idValue);
	      if (this.props.prefixChoices && this.props.prefixChoices.value.replace(/[\s|]/g, '').length > 0 && this.props.prefixChoices.value !== 'Click to edit') {
	        var prefixDropdown = this.props.prefixChoices.value.split('|');
	        var ctx = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);
	        var p = { disabled: 0 };
	        var qnameValue = props.qname.value;


	        return _react2.default.createElement(
	          _SubLabel2.default,
	          _extends({}, this.props, {
	            labelValue: subLabelObj,
	            wrapAlways: true,
	            hidePartLabel: subLabelObj.text === '',
	            'for': 'prefix_' + idValue,
	            propPath: 'sublabels.prefix',
	            defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.prefix,
	            dataComponent: 'prefix'
	          }),
	          _react2.default.createElement(
	            'select',
	            _extends({}, p, {
	              'data-component': 'prefix',
	              name: qnameValue + '[prefix]',
	              id: 'prefix_' + idValue,
	              className: 'dropdown-match-height ' + ctx,
	              'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, subLabelObj)
	            }),
	            prefixDropdown.map(function (key, i) {
	              return _react2.default.createElement(
	                'option',
	                { value: prefixDropdown[i], key: prefixDropdown[i] },
	                prefixDropdown[i]
	              );
	            })
	          )
	        );
	      }

	      return _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          propPath: 'sublabels.prefix',
	          wrapAlways: true,
	          hidePartLabel: subLabelObj.text === '',
	          labelValue: subLabelObj,
	          'for': 'prefix_' + idValue,
	          dataComponent: 'prefix'
	        }),
	        _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	          qid: 'prefix_' + idValue,
	          type: 'text',
	          qname: this.props.qname.value + '[prefix]',
	          size: { value: '4' },
	          additionalClass: _Utils.classNames.textbox,
	          hint: { value: hint },
	          dataComponent: 'prefix',
	          ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, subLabelObj)
	        }))
	      );
	    }

	    return null;
	  };

	  Fullname.prototype.renderFirst = function renderFirst(hint) {
	    var cx = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    var idValue = this.props.id.value;

	    var subLabelObj = (0, _Utils.subLabel)(this.props, 'first', idValue);

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: subLabelObj,
	        hidePartLabel: subLabelObj.text === '',
	        wrapAlways: true,
	        'for': 'first_' + idValue,
	        propPath: 'sublabels.first',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.first,
	        dataComponent: 'first'
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        additionalClass: cx,
	        type: 'text',
	        qname: this.props.qname.value + '[first]',
	        qid: 'first_' + idValue,
	        size: { value: '10' },
	        hint: { value: hint },
	        dataComponent: 'first',
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, subLabelObj)
	      }))
	    );
	  };

	  Fullname.prototype.renderMiddle = function renderMiddle(hint) {
	    if (this.props.middle.value === 'Yes') {
	      var idValue = this.props.id.value;

	      var subLabelObj = (0, _Utils.subLabel)(this.props, 'middle', idValue);
	      return _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: subLabelObj,
	          hidePartLabel: subLabelObj.text === '',
	          wrapAlways: true,
	          'for': 'middle_' + idValue,
	          propPath: 'sublabels.middle',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.middle,
	          dataComponent: 'middle'
	        }),
	        _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	          additionalClass: _Utils.classNames.textbox,
	          type: 'text',
	          qname: this.props.qname.value + '[middle]',
	          qid: 'middle_' + idValue,
	          size: { value: '10' },
	          hint: { value: hint },
	          dataComponent: 'middle',
	          ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, subLabelObj)
	        }))
	      );
	    }

	    return null;
	  };

	  Fullname.prototype.renderLast = function renderLast(hint) {
	    var cx = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    var idValue = this.props.id.value;

	    var subLabelObj = (0, _Utils.subLabel)(this.props, 'last', idValue);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: subLabelObj,
	        hidePartLabel: subLabelObj.text === '',
	        wrapAlways: true,
	        'for': 'last_' + idValue,
	        propPath: 'sublabels.last',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.last,
	        dataComponent: 'last'
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        additionalClass: cx,
	        type: 'text',
	        qname: this.props.qname.value + '[last]',
	        qid: 'last_' + idValue,
	        size: { value: '15' },
	        hint: { value: hint },
	        dataComponent: 'last',
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, subLabelObj)
	      }))
	    );
	  };

	  Fullname.prototype.renderSuffix = function renderSuffix(hint) {
	    if (this.props.suffix.value === 'Yes') {
	      var idValue = this.props.id.value;

	      var subLabelObj = (0, _Utils.subLabel)(this.props, 'suffix', idValue);
	      return _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: subLabelObj,
	          hidePartLabel: subLabelObj.text === '',
	          wrapAlways: true,
	          'for': 'suffix_' + idValue,
	          propPath: 'sublabels.suffix',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.suffix,
	          dataComponent: 'suffix'
	        }),
	        _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	          additionalClass: _Utils.classNames.textbox,
	          type: 'text',
	          qname: this.props.qname.value + '[suffix]',
	          qid: 'suffix_' + idValue,
	          size: { value: '4' },
	          hint: { value: hint },
	          dataComponent: 'suffix',
	          ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, subLabelObj)
	        }))
	      );
	    }
	    return null;
	  };

	  Fullname.prototype.render = function render() {
	    var _this2 = this;

	    var hintList = this.props.compoundHint && this.props.compoundHint.value && this.props.compoundHint.value.length > 0 ? this.props.compoundHint.value.split(',') : [];
	    var hintIndex = 0;

	    var partPrefix = this.renderPrefix(hintIndex < hintList.length ? hintList[hintIndex] : null);
	    var isDropdown = this.props.prefixChoices && this.props.prefixChoices.value.replace(/[\s|]/g, '').length > 0 && this.props.prefixChoices.value !== 'Click to edit';
	    if (partPrefix && !isDropdown) hintIndex += 1;
	    var partFirst = this.renderFirst(hintIndex < hintList.length ? hintList[hintIndex] : null);
	    if (partFirst) hintIndex += 1;
	    var partMiddle = this.renderMiddle(hintIndex < hintList.length ? hintList[hintIndex] : null);
	    if (partMiddle) hintIndex += 1;
	    var partLast = this.renderLast(hintIndex < hintList.length ? hintList[hintIndex] : null);
	    if (partLast) hintIndex += 1;
	    var partSuffix = this.renderSuffix(hintIndex < hintList.length ? hintList[hintIndex] : null);

	    var isExtended = ['middle', 'suffix', 'prefix'].reduce(function (acc, curr) {
	      if (_this2.props[curr] && _this2.props[curr].value && _this2.props[curr].value === 'Yes') {
	        return true;
	      }
	      return acc;
	    }, false);

	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true', className: isExtended ? 'extended' : null },
	      partPrefix,
	      partFirst,
	      partMiddle,
	      partLast,
	      partSuffix
	    );
	  };

	  return Fullname;
	}(_react.Component);

	Fullname.propTypes = {
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  compoundHint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  prefix: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  suffix: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  prefixChoices: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  name: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  middle: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	Fullname.getScript = function (props) {
	  if (props.prefix.value === 'Yes' && props.prefixChoices.value.length > 0) {
	    return 'JotForm.setFullNameAutoFocus(' + props.id.value + ')\n';
	  }
	};

	exports.default = Fullname;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Geolocation = function Geolocation(prop) {
	  var passive = prop.inlineEditClass;
	  var markup = [];

	  if (passive) {
	    var style = '<style> #mapCanvas { width: 250px; height: 250px; } #infoPanel { margin-left: 20px; } #infoPanel div { margin-bottom: 5px; } </style>';
	    markup.push(_react2.default.createElement('div', { 'data-react-wrapper': 'true', dangerouslySetInnerHTML: { __html: style } }));

	    markup.push(_react2.default.createElement('img', { 'data-component': 'geolocation', id: 'mapCanvas', style: { float: 'left' }, src: 'images/sampleGeoSelector.png', width: '300', height: '300' }));
	    markup.push(_react2.default.createElement('br', null));
	    markup.push(_react2.default.createElement(
	      'div',
	      { id: 'infoPanel' },
	      _react2.default.createElement(
	        'b',
	        null,
	        'position:'
	      ),
	      _react2.default.createElement('div', { id: 'info' }),
	      _react2.default.createElement(
	        'b',
	        null,
	        'address:'
	      ),
	      _react2.default.createElement('div', { id: 'address' })
	    ));
	  } else {
	    var script = '<script type="text/javascript" src="//maps.googleapis.com/maps/api/js?key=AIzaSyC--UwK99Dkiz2b7ROfLC9sMTE995G3n8Y&sensor=false"></script>';
	    script += '<script type="text/javascript" src="/js/maps/geoSelector.js"></script>';
	    script += '<style> #mapCanvas { width: 250px; height: 250px; } #infoPanel { margin-left: 20px; } #infoPanel div { margin-bottom: 5px; } </style>';

	    markup.push(_react2.default.createElement('div', { 'data-react-wrapper': 'true', dangerouslySetInnerHTML: { __html: script } }));

	    markup.push(_react2.default.createElement('div', { id: 'mapCanvas', 'data-component': 'geolocation' }));
	    markup.push(_react2.default.createElement('br', null));
	    markup.push(_react2.default.createElement(
	      'div',
	      { id: 'infoPanel' },
	      _react2.default.createElement(
	        'b',
	        null,
	        'position:'
	      ),
	      _react2.default.createElement('div', { id: 'info' }),
	      _react2.default.createElement(
	        'b',
	        null,
	        'address:'
	      ),
	      _react2.default.createElement('div', { id: 'address' })
	    ));
	  }

	  return _react2.default.createElement(
	    'div',
	    { 'data-react-wrapper': 'true' },
	    markup
	  );
	};

	exports.default = Geolocation;

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Gocardless = function (_Component) {
	  _inherits(Gocardless, _Component);

	  function Gocardless() {
	    _classCallCheck(this, Gocardless);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Gocardless.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_gocardless'
	    }));
	  };

	  return Gocardless;
	}(_react.Component);

	exports.default = Gocardless;


	Gocardless.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Gocardless.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Gocardless.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Googleco = function (_Component) {
	  _inherits(Googleco, _Component);

	  function Googleco() {
	    _classCallCheck(this, Googleco);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Googleco.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_googleco'
	    }));
	  };

	  return Googleco;
	}(_react.Component);

	exports.default = Googleco;


	Googleco.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Googleco.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Googleco.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Grading = function Grading(prop) {
	  var qid = prop.qid.value;
	  var id = prop.id.value;
	  var qname = prop.qname.value;

	  var gradingOptions = prop.options.value.split('|');
	  var markup = [];
	  for (var i = 0; i < gradingOptions.length; i += 1) {
	    var option = gradingOptions[i];
	    var gbox = _react2.default.createElement('input', {
	      readOnly: prop.inlineEditClass,
	      'data-type': 'input-grading',
	      className: 'form-grading-input ' + (0, _Utils.addValidation)(_Utils.classNames.textbox, prop),
	      type: 'text',
	      size: '3',
	      id: qid + '_' + i,
	      name: qname + '[]'
	    });
	    var glabel = _react2.default.createElement(
	      'label',
	      { className: 'form-grading-label', htmlFor: qid },
	      option
	    );

	    var children = prop.boxAlign.value === 'Left' ? [gbox, glabel] : [glabel, gbox];

	    markup.push(_react2.default.createElement(
	      'div',
	      { className: 'form-grading-item', 'data-component': 'grading' },
	      children
	    ));
	  }

	  // Zero is unlimited
	  if (prop.total.value !== '0') {
	    markup.push(_react2.default.createElement(
	      'div',
	      null,
	      'Total'.locale(),
	      ': \xA0',
	      _react2.default.createElement(
	        'span',
	        { id: 'grade_point_' + id },
	        '0'
	      ),
	      '/\xA0',
	      _react2.default.createElement(
	        'span',
	        { id: 'grade_total_' + id },
	        ' ',
	        prop.total.value
	      ),
	      '\xA0',
	      _react2.default.createElement('span', { className: 'form-grading-error', id: 'grade_error_' + id })
	    ));
	  }

	  return _react2.default.createElement(
	    'div',
	    { 'data-wrapper-react': 'true' },
	    markup
	  );
	};

	exports.default = Grading;

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _IconSVG = __webpack_require__(133);

	var _IconSVG2 = _interopRequireDefault(_IconSVG);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Habit = function (_React$Component) {
	  _inherits(Habit, _React$Component);

	  function Habit() {
	    _classCallCheck(this, Habit);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Habit.prototype.render = function render() {
	    var _props = this.props,
	        InlineEditClass = _props.inlineEditClass,
	        color = _props.color.value,
	        _props$icon$value = _props.icon.value,
	        icon = _props$icon$value === undefined ? 'explore' : _props$icon$value,
	        reminderTime = _props.reminderTime;
	    var _reminderTime$value = reminderTime.value,
	        hour = _reminderTime$value.hour,
	        minute = _reminderTime$value.minute,
	        ampm = _reminderTime$value.ampm;

	    return _react2.default.createElement(
	      'div',
	      { className: 'jHabit' },
	      _react2.default.createElement(
	        'div',
	        { className: 'jHabit-wrapper ' + color },
	        _react2.default.createElement(
	          'div',
	          { className: 'jHabit-icon' },
	          _react2.default.createElement(_IconSVG2.default, { name: 'dht' + icon })
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'jHabit-name' },
	          InlineEditClass ? _react2.default.createElement(InlineEditClass, {
	            id: this.props.id.value,
	            propPath: 'text',
	            text: this.props.text.value,
	            className: '',
	            defaultValue: 'ddefaultValuee',
	            placeholder: 'Type a habit'
	          }) : this.props.text.value,
	          _react2.default.createElement(
	            'span',
	            null,
	            hour + ':' + minute + ' ' + ampm.toUpperCase()
	          ),
	          _react2.default.createElement(_IconSVG2.default, { name: 'dht' + icon })
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'jHabit-status' },
	          _react2.default.createElement(
	            'span',
	            null,
	            'Status'
	          ),
	          _react2.default.createElement(_BaseInput2.default, {
	            qid: this.props.qid.value,
	            qname: this.props.qname.value + '[]',
	            componentDataType: 'checkbox-habit',
	            defaultValue: { value: 'Done' },
	            defaultChecked: false,
	            type: 'checkbox'
	          }),
	          _react2.default.createElement('div', { className: 'statusIcon' })
	        )
	      )
	    );
	  };

	  return Habit;
	}(_react2.default.Component);

	Habit.propTypes = {
	  color: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  icon: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  reminderTime: _propTypes2.default.shape({}),
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	exports.default = Habit;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Head = function (_Component) {
	  _inherits(Head, _Component);

	  function Head() {
	    _classCallCheck(this, Head);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Head.prototype.createHeaderTag = function createHeaderTag() {
	    var headerProps = {
	      id: 'header_' + this.props.id.value,
	      className: 'form-header',
	      'data-component': 'header'
	    };

	    var inline = void 0;
	    if (this.props.inlineEditClass) {
	      inline = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'text',
	        text: this.htmlDecodedAndSanitizedText,
	        defaultValue: _QuestionProps2.default[this.props.type.value].text.value,
	        placeholder: 'Type a header',
	        focusToElement: this.props.inlineEditFocusToElement ? this.props.inlineEditFocusToElement : null,
	        isFirstHeader: this.props.inlineEditIsFirstHeader || false,
	        pageTitle: this.props.inlineEditPageTitle || '',
	        isMobile: this.props.isMobile || false
	      });
	    }

	    if (this.headerSize === 'Large') {
	      return _react2.default.createElement(
	        'h1',
	        headerProps,
	        inline || this.htmlDecodedAndSanitizedText
	      );
	    } else if (this.headerSize === 'Small') {
	      return _react2.default.createElement(
	        'h3',
	        headerProps,
	        inline || this.htmlDecodedAndSanitizedText
	      );
	    }
	    return _react2.default.createElement(
	      'h2',
	      headerProps,
	      inline || this.htmlDecodedAndSanitizedText
	    );
	  };

	  Head.prototype.createSubHeader = function createSubHeader() {
	    var inline = void 0;
	    if (this.props.inlineEditClass) {
	      inline = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'subHeader',
	        text: this.htmlDecodedAndSanitizedSubHeader,
	        defaultValue: _QuestionProps2.default[this.props.type.value].subHeader.value,
	        placeholder: 'Type a subheader',
	        isMobile: this.props.isMobile || false
	      });
	    }

	    if (this.props.inlineEditClass || this.props.subHeader && this.props.subHeader.value && this.props.subHeader.value !== 'Click to edit sub heading...') {
	      return _react2.default.createElement(
	        'div',
	        {
	          id: 'subHeader_' + this.props.id.value,
	          className: 'form-subHeader'
	        },
	        inline || this.htmlDecodedAndSanitizedSubHeader
	      );
	    }
	    return null;
	  };

	  Head.prototype.createHeaderImage = function createHeaderImage(headerImage, imgAlign) {
	    // TODO: fix it when isSecure prop is ready.
	    var isSecure = true;
	    var imgAlt = this.props.alt && this.props.alt.value;
	    var className = 'header-logo-' + imgAlign.toLowerCase();
	    var headerLogoDisplay = isSecure ? 'table-cell' : 'none';

	    if (headerImage.value === 'images/security_certificate_seal_positivessl.gif' || headerImage.value === 'images/security_certificate_seal_globalsign.gif') {
	      return _react2.default.createElement(
	        'div',
	        {
	          className: 'header-logo',
	          style: { display: headerLogoDisplay }
	        },
	        _react2.default.createElement('img', {
	          id: 'positivessl',
	          style: { display: 'none' },
	          alt: imgAlt,
	          className: 'form-image ' + className,
	          border: '0',
	          src: 'https://www.jotform.com/' + headerImage.value,
	          height: this.props.height.value,
	          width: this.props.width.value
	        }),
	        _react2.default.createElement(
	          'table',
	          {
	            id: 'globalsign',
	            style: { display: 'none' },
	            width: '130',
	            border: '0',
	            cellSpacing: '0',
	            cellPadding: '0',
	            title: 'CLICK TO VERIFY: This site uses a GlobalSign SSL Certificate to secure your personal information.'
	          },
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              null,
	              _react2.default.createElement(
	                'span',
	                { id: 'ss_img_wrapper_100-50_image_en' },
	                _react2.default.createElement(
	                  'a',
	                  { href: 'http://www.globalsign.com/', target: '_blank', title: 'SSL' },
	                  _react2.default.createElement('img', { alt: 'SSL', border: '0', id: 'ss_img', src: '//seal.globalsign.com/SiteSeal/images/gs_noscript_100-50_en.gif' })
	                )
	              ),
	              _react2.default.createElement('script', { type: 'text/javascript', src: 'https://www.jotform.com/js/globalsign.js?v=1.0' }),
	              _react2.default.createElement('br', null),
	              _react2.default.createElement(
	                'a',
	                {
	                  href: 'http://www.globalsign.com/',
	                  target: '_blank',
	                  style: { color: '#000000', textDecoration: 'none', font: 'bold 8px arial', margin: '0px', padding: '0px' }
	                },
	                'GlobalSign SSL Certificates'
	              )
	            )
	          )
	        )
	      );
	    }
	    return _react2.default.createElement(
	      'div',
	      { className: 'header-logo' },
	      _react2.default.createElement('img', {
	        src: headerImage.value,
	        alt: imgAlt,
	        width: this.props.width.value,
	        className: className,
	        style: this.props.inlineEditClass ? { pointerEvents: 'none' } : null
	      })
	    );
	  };

	  Head.prototype.createBaseHeader = function createBaseHeader(headerImage) {
	    var textAlignClasses = {
	      Left: 'httal',
	      Center: 'httac',
	      Right: 'httar',
	      Top: 'htvat',
	      Middle: 'htvam',
	      Bottom: 'htvab'
	    };
	    var textAlignVal = this.props.textAlign && this.props.textAlign.value && textAlignClasses[this.props.textAlign.value] !== undefined ? textAlignClasses[this.props.textAlign.value] : '';
	    var vta = this.props.verticalTextAlign;
	    var verticalTextAlignVal = vta && vta.value && textAlignClasses[vta.value] !== undefined ? textAlignClasses[vta.value] : '';
	    var hasImageClass = headerImage ? 'hasImage' : '';
	    var imgAlign = this.props.imageAlign ? this.props.imageAlign.value : 'Left';
	    return _react2.default.createElement(
	      'div',
	      _extends({
	        className: 'form-header-group ' + hasImageClass + ' header-' + this.headerSize.toLowerCase()
	      }, headerImage ? { 'data-imagealign': imgAlign } : {}),
	      headerImage && imgAlign !== 'Right' ? this.createHeaderImage(headerImage, imgAlign) : null,
	      _react2.default.createElement(
	        'div',
	        { className: 'header-text ' + textAlignVal + ' ' + verticalTextAlignVal },
	        this.createHeaderTag(),
	        this.createSubHeader()
	      ),
	      headerImage && imgAlign === 'Right' ? this.createHeaderImage(headerImage, imgAlign) : null
	    );
	  };

	  Head.prototype.render = function render() {
	    var headerImage = false;
	    if (this.props.headerImage && this.props.headerImage.value) {
	      headerImage = this.props.headerImage;
	    } else if (this.props.src && this.props.src.value) {
	      headerImage = this.props.src;
	    }

	    if (headerImage) {
	      return _react2.default.createElement(
	        'div',
	        { style: { display: 'table', width: '100%' } },
	        this.createBaseHeader(headerImage)
	      );
	    }
	    return this.createBaseHeader();
	  };

	  _createClass(Head, [{
	    key: 'headerSize',
	    get: function get() {
	      return this.props.headerType && this.props.headerType.value ? this.props.headerType.value : 'Default';
	    }
	  }, {
	    key: 'htmlDecodedAndSanitizedText',
	    get: function get() {
	      return (0, _Utils.htmlDecode)((0, _Utils.sanitize)(this.props.text.value)) || '';
	    }
	  }, {
	    key: 'htmlDecodedAndSanitizedSubHeader',
	    get: function get() {
	      return (0, _Utils.htmlDecode)((0, _Utils.sanitize)(this.props.subHeader.value)) || '';
	    }
	  }]);

	  return Head;
	}(_react.Component);

	exports.default = Head;


	Head.getState = function (props) {
	  var headerImage = false;
	  if (props.headerImage && props.headerImage.value) {
	    headerImage = props.headerImage;
	  } else if (props.src && props.src.value) {
	    headerImage = props.src;
	  }
	  return headerImage;
	};

	Head.getScript = function (props) {
	  var headerImage = Head.getState(props);
	  if (headerImage && (headerImage.value === 'images/security_certificate_seal_positivessl.gif' || headerImage.value === 'images/security_certificate_seal_globalsign.gif')) {
	    return 'if((window.location.href.indexOf("https://") !== -1 ) || (window.location.href.indexOf("jotform") === -1)) {\n        $("positivessl").setStyle({"display":"inline-block"});\n      } else {\n        $("globalsign").setStyle({"display":"inline-block"});\n      };';
	  }
	  return '';
	};

	Head.propTypes = {
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  headerType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  textAlign: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  verticalTextAlign: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subHeader: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  width: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  height: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  imageAlign: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  headerImage: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  src: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  alt: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  // inlineEditIsFirstQuestion: PropTypes.func,
	  inlineEditFocusToElement: _propTypes2.default.bool,
	  inlineEditPageTitle: _propTypes2.default.string,
	  inlineEditIsFirstHeader: _propTypes2.default.bool,
	  isMobile: _propTypes2.default.bool
	};

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (prop) {
	  return _react2.default.createElement('input', { type: 'hidden', className: _Utils.classNames.helper, id: prop.qid.value, 'data-info': prop.data.value.replace('_public', ''), name: prop.qname.value });
	};

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Hidden = function (_Component) {
	  _inherits(Hidden, _Component);

	  function Hidden() {
	    _classCallCheck(this, Hidden);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Hidden.prototype.render = function render() {
	    var className = !this.props.inlineEditClass ? 'form-hidden' : null;
	    var inputStyle = this.props.inlineEditClass ? { opacity: '0.8', border: '1px dashed #ccc' } : null;
	    var inputType = this.props.inlineEditClass ? 'text' : 'hidden';
	    var id = this.props.inlineEditClass ? 'hidden_' + this.props.id.value : this.props.qid.value;
	    var name = !this.props.inlineEditClass ? this.props.qname.value : null;
	    var readOnly = this.props.inlineEditClass ? 'readonly' : null;
	    return _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	      qid: id,
	      qname: name,
	      additionalClass: className,
	      type: inputType,
	      dataComponent: 'hidden',
	      readOnly: readOnly,
	      defaultValue: this.props.defaultValue,
	      style: inputStyle
	    }));
	  };

	  return Hidden;
	}(_react.Component);

	exports.default = Hidden;


	Hidden.propTypes = {
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  browserInfo: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	Hidden.getState = function () {
	  return {};
	};

	Hidden.getScript = function (props) {
	  var script = '';
	  if (props.browserInfo && props.browserInfo.value === 'Yes') {
	    script += '      JotForm.populateBrowserInfo(\'' + props.qid.value + '\');\n';
	  }
	  return script;
	};

	Hidden.propTypes = {
	  inlineEditClass: _propTypes2.default.func,
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Link = __webpack_require__(198);

	var _Link2 = _interopRequireDefault(_Link);

	var _DivWrapper = __webpack_require__(199);

	var _DivWrapper2 = _interopRequireDefault(_DivWrapper);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Image = function (_Component) {
	  _inherits(Image, _Component);

	  function Image() {
	    _classCallCheck(this, Image);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Image.prototype.render = function render() {
	    var state = Image.getState(this.props);
	    var defaultState = state.src === '';
	    var imageSource = defaultState ? 'https://www.jotform.com/images/image_placeholder.png' : state.src;
	    var height = defaultState ? '100px' : this.props.height.value + 'px';
	    var width = defaultState ? '120px' : this.props.width.value + 'px';
	    var className = 'form-image';
	    var wrapperStyle = {
	      textAlign: this.props.align.value.toLowerCase()
	    };
	    className += this.props.themeVersion === 'v2' && !defaultState ? ' added' : '';

	    if (this.props.inlineEditClass) {
	      var imageStyle = {
	        height: height,
	        width: width,
	        float: this.props.align.value === 'Right' ? 'right' : null,
	        pointerEvents: 'none',
	        border: '0'
	      };
	      return _react2.default.createElement(
	        'div',
	        { id: 'resize-' + this.props.id.value, 'data-component': 'image', style: { textAlign: this.props.align.value === 'Center' ? 'center' : null } },
	        _react2.default.createElement('img', { alt: state.imgAlt, className: className, style: imageStyle, src: imageSource })
	      );
	    } else if (imageSource === 'images/security_certificate_seal_positivessl.gif' || imageSource === 'images/security_certificate_seal_globalsign.gif') {
	      imageSource = 'https://www.jotform.com/' + imageSource;
	    }

	    return _react2.default.createElement(
	      _DivWrapper2.default,
	      { style: wrapperStyle },
	      _react2.default.createElement(
	        _Link2.default,
	        { link: (0, _Utils.htmlDecode)((0, _Utils.sanitize)(state.link)), target: state.target },
	        _react2.default.createElement('img', { alt: state.imgAlt, className: 'form-image', style: { border: '0' }, src: (0, _Utils.htmlDecode)((0, _Utils.sanitize)(imageSource)), height: height, width: width, 'data-component': 'image' })
	      )
	    );
	  };

	  return Image;
	}(_react.Component);

	exports.default = Image;


	Image.getState = function (prop) {
	  var link = prop.link.value;
	  if (prop.link.value && !prop.link.value.match(/^http/)) {
	    link = 'http://' + prop.link.value;
	  }

	  return {
	    imgAlt: prop.alt && prop.alt.value,
	    src: prop.src.value.replace('http://www.jotform.com', '//www.jotform.com'),
	    height: prop.height.value,
	    width: prop.width.value,
	    link: link || null,
	    target: prop.target.value || null
	  };
	};

	Image.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  link: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  align: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  height: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  width: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  themeVersion: _propTypes2.default.string
	};

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Link = function (_Component) {
	  _inherits(Link, _Component);

	  function Link() {
	    _classCallCheck(this, Link);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Link.prototype.render = function render() {
	    if (!this.props.link || this.props.link === 'null' || this.props.link === '') {
	      return this.props.children;
	    }

	    return _react2.default.createElement(
	      'a',
	      { href: this.props.link, target: this.props.target, rel: 'nofollow', 'data-component': 'link' },
	      this.props.children
	    );
	  };

	  return Link;
	}(_react.Component);

	exports.default = Link;


	Link.propTypes = {
	  children: _propTypes2.default.node,
	  link: _propTypes2.default.string,
	  target: _propTypes2.default.string
	};

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DivWrapper = function (_Component) {
	  _inherits(DivWrapper, _Component);

	  function DivWrapper() {
	    _classCallCheck(this, DivWrapper);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  DivWrapper.prototype.render = function render() {
	    if (!this.props.style || this.props.style.textAlign === 'left') {
	      return this.props.children;
	    }

	    return _react2.default.createElement(
	      'div',
	      { style: this.props.style },
	      this.props.children
	    );
	  };

	  return DivWrapper;
	}(_react.Component);

	exports.default = DivWrapper;


	DivWrapper.propTypes = {
	  style: _propTypes2.default.shape({
	    textAlign: _propTypes2.default.string
	  }),
	  children: _propTypes2.default.node
	};

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _OptionsBase = __webpack_require__(110);

	var _OptionsBase2 = _interopRequireDefault(_OptionsBase);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ImageChoice = function (_Component) {
	  _inherits(ImageChoice, _Component);

	  function ImageChoice() {
	    _classCallCheck(this, ImageChoice);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  ImageChoice.prototype.render = function render() {
	    return _react2.default.createElement(_OptionsBase2.default, _extends({}, this.props, { type: 'control_imagechoice' }));
	  };

	  return ImageChoice;
	}(_react.Component);

	ImageChoice.getScript = function (prop) {
	  if (prop.shuffle && prop.shuffle.value === 'Yes') {
	    return '      JotForm.shuffleOptions("' + prop.id.value + '");\n';
	  }

	  return '';
	};

	exports.default = ImageChoice;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _server = __webpack_require__(202);

	var _server2 = _interopRequireDefault(_server);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Dropdown = __webpack_require__(211);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// TODO: use from commonLib
	// ########
	var BLOT_REGEX = /\{([a-z0-9]*?-[a-z0-9]*?)\}/gi;
	var TIMESTAMP_OF_2019 = 1546300000000;

	var isOldBlotId = function isOldBlotId(id) {
	  return Number(id) > TIMESTAMP_OF_2019;
	};
	var setParsedId = function setParsedId(_ref) {
	  var x = _ref[0],
	      y = _ref[1];
	  return isOldBlotId(x) ? { id: x, label: y } : { id: y, label: x };
	};
	var parseBlotId = function parseBlotId() {
	  var blotId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
	  return setParsedId(blotId.split('-'));
	};
	var setBlotId = function setBlotId(id) {
	  return function (label) {
	    return isOldBlotId(id) ? id + '-' + label : label + '-' + id;
	  };
	};
	// ########

	var identity = function identity(x) {
	  return x;
	};

	var BLOT_COMPS = {
	  textbox: function textbox(_ref2) {
	    var questionId = _ref2.questionId,
	        questionName = _ref2.questionName,
	        required = _ref2.required,
	        field = _ref2.field,
	        blot = _ref2.blot;
	    return (// eslint-disable-line
	      _react2.default.createElement(
	        'span',
	        {
	          'data-type': blot.type,
	          'data-grouptype': blot.groupType,
	          className: 'FITB-inptCont'
	        },
	        _react2.default.createElement('input', _extends({
	          className: (0, _Utils.addValidation)('form-textbox ' + (blot.inputType === 'number' ? 'form-number-input' : ''), {
	            required: { value: required.value === 'Yes' ? field.required : null },
	            validation: { value: field.validation }
	          }),
	          name: 'q' + questionId + '_' + questionName + '[' + blot.id + ']',
	          id: questionId + '_' + blot.id,
	          type: blot.inputType || 'text',
	          value: field.defaultValue,
	          maxLength: field.maxsize || null,
	          required: true
	        }, blot.inputType === 'number' && field.minValue && field.maxValue && {
	          'data-numbermin': field.minValue,
	          'data-numbermax': field.maxValue,
	          'data-type': 'input-number'
	        })),
	        _react2.default.createElement(
	          'label',
	          { htmlFor: blot.id },
	          blot.label
	        ),
	        required.value === 'Yes' && field.required === 'Yes' && _react2.default.createElement(
	          'span',
	          { className: 'form-required' },
	          '*'
	        )
	      )
	    );
	  },
	  datebox: function datebox(_ref3) {
	    var questionId = _ref3.questionId,
	        questionName = _ref3.questionName,
	        required = _ref3.required,
	        field = _ref3.field,
	        blot = _ref3.blot,
	        themeVersion = _ref3.themeVersion;
	    // eslint-disable-line
	    var _field$format = field.format,
	        format = _field$format === undefined ? 'mmddyyyy' : _field$format,
	        _field$dateSeparator = field.dateSeparator,
	        dateSeparator = _field$dateSeparator === undefined ? '-' : _field$dateSeparator,
	        defaultDate = field.defaultDate,
	        fieldRequired = field.required;
	    var blotId = blot.id,
	        type = blot.type,
	        label = blot.label;

	    var defaultDateObj = (0, _Utils.getDefaultDate)(defaultDate, format, dateSeparator);

	    return _react2.default.createElement(
	      'span',
	      {
	        id: 'id_' + questionId + '-' + blotId,
	        'data-type': type,
	        className: 'FITB-inptCont'
	      },
	      _react2.default.createElement('input', {
	        className: '' + (0, _Utils.addValidation)('form-textbox', { required: { value: required.value === 'Yes' ? fieldRequired : null } }, ['validateLiteDate']),
	        id: 'lite_mode_' + questionId + '-' + blotId,
	        type: 'text',
	        'data-format': format,
	        size: '12',
	        'data-seperator': dateSeparator,
	        placeholder: format.match(/(.)\1+/g).join(dateSeparator),
	        value: defaultDateObj.litemode,
	        required: true
	      }),
	      _react2.default.createElement('img', {
	        className: 'newDefaultTheme-dateIcon icon-liteMode',
	        alt: 'Pick a Date',
	        'data-qtype': 'control_inline',
	        id: 'input_' + questionId + '-' + blotId + '_pick',
	        src: 'https://cdn.jotfor.ms/images/calendar.png',
	        'data-component': 'datetime',
	        'aria-hidden': 'true',
	        'data-allow-time': 'No',
	        'data-version': themeVersion
	      }),
	      _react2.default.createElement(
	        'label',
	        { htmlFor: 'lite_mode_' + blotId },
	        label
	      ),
	      required.value === 'Yes' && fieldRequired === 'Yes' && _react2.default.createElement(
	        'span',
	        { className: 'form-required' },
	        '*'
	      ),
	      _react2.default.createElement(
	        'span',
	        { style: { display: 'none' } },
	        ['month', 'day', 'year'].map(function (el) {
	          return _react2.default.createElement('input', {
	            type: 'tel',
	            className: 'form-textbox',
	            id: el + '_' + questionId + '-' + blotId,
	            name: 'q' + questionId + '_' + questionName + '[' + blotId + '][' + el + ']',
	            size: el === 'year' ? '4' : '2',
	            'data-maxlength': el === 'year' ? '4' : '2',
	            maxLength: el === 'year' ? '4' : '2',
	            value: defaultDateObj[el],
	            autoComplete: 'off'
	          });
	        })
	      )
	    );
	  },
	  checkbox: function checkbox(_ref4) {
	    var questionId = _ref4.questionId,
	        questionName = _ref4.questionName,
	        required = _ref4.required,
	        field = _ref4.field,
	        blot = _ref4.blot;
	    return (// eslint-disable-line
	      _react2.default.createElement(
	        'span',
	        {
	          id: 'id_' + questionId + '_' + blot.id,
	          'data-type': blot.type,
	          className: 'FITB-inptCont'
	        },
	        _react2.default.createElement('input', {
	          name: 'q' + questionId + '_' + questionName + '[' + blot.id + ']',
	          id: 'q' + questionId + '_' + blot.id,
	          type: blot.type,
	          value: blot.label,
	          className: (0, _Utils.addValidation)('form-checkbox', { required: { value: required.value === 'Yes' ? field.required : null } })
	        }),
	        _react2.default.createElement(
	          'label',
	          { htmlFor: 'q' + questionId + '_' + blot.id },
	          blot.label
	        ),
	        required.value === 'Yes' && blot.last && field.required === 'Yes' && _react2.default.createElement(
	          'span',
	          { className: 'form-required' },
	          '*'
	        )
	      )
	    );
	  },
	  radiobox: function radiobox(_ref5) {
	    var questionId = _ref5.questionId,
	        questionName = _ref5.questionName,
	        required = _ref5.required,
	        field = _ref5.field,
	        blot = _ref5.blot;
	    return (// eslint-disable-line
	      _react2.default.createElement(
	        'span',
	        {
	          id: 'id_' + questionId + '_' + blot.id,
	          'data-type': blot.type,
	          className: 'FITB-inptCont'
	        },
	        _react2.default.createElement('input', {
	          name: 'q' + questionId + '_' + questionName + '[' + field.id + ']',
	          id: 'q' + questionId + '_' + blot.id,
	          type: 'radio',
	          value: blot.label,
	          className: (0, _Utils.addValidation)('form-radio', { required: { value: required.value === 'Yes' ? field.required : null } })
	        }),
	        _react2.default.createElement(
	          'label',
	          { htmlFor: 'q' + questionId + '_' + blot.id },
	          blot.label
	        ),
	        required.value === 'Yes' && blot.last && field.required === 'Yes' && _react2.default.createElement(
	          'span',
	          { className: 'form-required' },
	          '*'
	        )
	      )
	    );
	  },
	  signaturebox: function signaturebox(_ref6) {
	    var questionId = _ref6.questionId,
	        questionName = _ref6.questionName,
	        required = _ref6.required,
	        fieldRequired = _ref6.field.required,
	        blot = _ref6.blot;
	    return (// eslint-disable-line
	      _react2.default.createElement(
	        'span',
	        {
	          id: 'id_' + questionId + '_' + blot.id,
	          'data-type': blot.type,
	          className: 'FITB-inptCont'
	        },
	        _react2.default.createElement('input', {
	          name: 'q' + questionId + '_' + questionName + '[' + blot.id + ']',
	          id: questionId + '_input_' + blot.id,
	          type: 'hidden',
	          className: (0, _Utils.addValidation)('', { required: { value: required.value === 'Yes' ? fieldRequired : null } })
	        }),
	        _react2.default.createElement(
	          'span',
	          {
	            className: 'FITB-sign-button',
	            tabIndex: '0',
	            role: 'button'
	          },
	          _react2.default.createElement('img', { className: 'FITB-sign-image' })
	        ),
	        _react2.default.createElement(
	          'label',
	          { htmlFor: 'input_' + blot.id },
	          blot.label
	        ),
	        required.value === 'Yes' && fieldRequired === 'Yes' && _react2.default.createElement(
	          'span',
	          { className: 'form-required' },
	          '*'
	        )
	      )
	    );
	  },
	  selectbox: function selectbox(_ref7) {
	    var questionId = _ref7.questionId,
	        questionName = _ref7.questionName,
	        required = _ref7.required,
	        field = _ref7.field,
	        blot = _ref7.blot;
	    // eslint-disable-line
	    var special = field.special || blot.special || 'None';
	    var options = _Utils.specialOptions[special].value || blot.options;
	    return _react2.default.createElement(
	      'span',
	      {
	        'data-type': blot.type,
	        className: 'FITB-inptCont'
	      },
	      _react2.default.createElement(
	        'select',
	        {
	          name: 'q' + questionId + '_' + questionName + '[' + blot.id + ']',
	          id: 'input_' + questionId + '_' + blot.id,
	          className: (0, _Utils.addValidation)('form-dropdown', { required: { value: required.value === 'Yes' ? field.required : null } }),
	          required: true
	        },
	        _react2.default.createElement(
	          'option',
	          { selected: true, value: '', label: blot.default || blot.label },
	          blot.default || blot.label
	        ),
	        options.map(function (opt) {
	          return _react2.default.createElement(
	            'option',
	            { value: opt, label: opt },
	            opt
	          );
	        })
	      ),
	      required.value === 'Yes' && field.required === 'Yes' && _react2.default.createElement(
	        'span',
	        { className: 'form-required' },
	        '*'
	      )
	    );
	  },
	  timebox: function timebox(_ref8) {
	    var questionId = _ref8.questionId,
	        questionName = _ref8.questionName,
	        required = _ref8.required,
	        field = _ref8.field,
	        blot = _ref8.blot;
	    // eslint-disable-line
	    var defaultTime = field.defaultTime,
	        step = field.step,
	        timeFormat = field.timeFormat;

	    var defaultTimeObj = (0, _Utils.getDefaultTime)({
	      defaultTime: { value: defaultTime },
	      step: { value: step },
	      timeFormat: { value: timeFormat }
	    });
	    return _react2.default.createElement(
	      'span',
	      {
	        'data-type': blot.type,
	        className: 'FITB-inptCont'
	      },
	      _react2.default.createElement(
	        'span',
	        { className: 'FITB-inptCont-inner' },
	        _react2.default.createElement('input', {
	          className: (0, _Utils.addValidation)('form-textbox', { required: { value: required.value === 'Yes' ? field.required : null } }),
	          name: 'q' + questionId + '_' + questionName + '[' + blot.id + '][timeInput]',
	          id: 'timeInput_' + questionId + '_' + blot.id,
	          type: blot.inputType || 'text',
	          'data-mask': field.timeFormat === 'AM/PM' ? 'hh:MM' : 'HH:MM',
	          placeholder: field.timeFormat === 'AM/PM' ? 'hh:MM' : 'HH:MM',
	          value: defaultTimeObj.hour + ':' + defaultTimeObj.min,
	          required: true
	        }),
	        _react2.default.createElement('input', {
	          className: (0, _Utils.addValidation)('form-textbox', { required: { value: required.value === 'Yes' ? field.required : null } }),
	          name: 'q' + questionId + '_' + questionName + '[' + blot.id + '][hourSelect]',
	          id: 'hourSelect_' + questionId + '_' + blot.id,
	          value: defaultTimeObj.hour,
	          type: 'hidden'
	        }),
	        _react2.default.createElement('input', {
	          className: (0, _Utils.addValidation)('form-textbox', { required: { value: required.value === 'Yes' ? field.required : null } }),
	          name: 'q' + questionId + '_' + questionName + '[' + blot.id + '][minuteSelect]',
	          id: 'minuteSelect_' + questionId + '_' + blot.id,
	          value: defaultTimeObj.min,
	          type: 'hidden'
	        }),
	        _react2.default.createElement(
	          'label',
	          { htmlFor: 'timeInput_' + questionId + '_' + blot.id },
	          blot.label
	        )
	      ),
	      field.timeFormat === 'AM/PM' && _react2.default.createElement(
	        'select',
	        {
	          className: (0, _Utils.addValidation)('', { required: { value: required.value === 'Yes' ? field.required : null } }),
	          name: 'q' + questionId + '_' + questionName + '[' + blot.id + '][ampm]',
	          id: 'ampm_' + questionId + '_' + blot.id
	        },
	        field.showDayPeriods !== 'pmOnly' && _react2.default.createElement(
	          'option',
	          { selected: true, value: 'AM' },
	          'AM'.locale()
	        ),
	        field.showDayPeriods !== 'amOnly' && _react2.default.createElement(
	          'option',
	          { value: 'PM' },
	          'PM'.locale()
	        )
	      ),
	      required.value === 'Yes' && field.required === 'Yes' && _react2.default.createElement(
	        'span',
	        { className: 'form-required' },
	        '*'
	      )
	    );
	  }
	};

	var DROPDOWN_LIST = [{
	  text: 'Full Name',
	  type: 'control_fullname',
	  value: [{ type: 'textbox', label: 'First Name', name: 'First Name' }, { type: 'textbox', label: 'Last Name', name: 'Last Name' }],
	  icon: 'v4_fullname'
	}, {
	  text: 'Email',
	  type: 'control_email',
	  value: [{ type: 'textbox', label: 'Email', name: 'Email', inputType: 'email' }],
	  icon: 'v4_email',
	  fieldProps: {
	    validation: 'Email'
	  }
	}, {
	  text: 'Date',
	  type: 'control_datetime',
	  value: [{ type: 'datebox', label: 'Date', name: 'Date' }],
	  icon: 'v4_datetime',
	  fieldProps: {
	    format: 'mmddyyyy',
	    dateSeparator: '-'
	  }
	}, {
	  text: 'Address',
	  type: 'control_address',
	  value: [{ type: 'textbox', label: 'Street Address', name: 'Street Address', subfield: 'st1' }, { type: 'textbox', label: 'Address Line 2', name: 'Address Line 2', subfield: 'st2' }, { type: 'textbox', label: 'City', name: 'City', subfield: 'city' }, { type: 'textbox', label: 'State', name: 'State', subfield: 'state' }, { type: 'textbox', label: 'Zip', name: 'Zip', subfield: 'zip' }],
	  fieldProps: {
	    subfields: 'st1|st2|city|state|zip'
	  },
	  icon: 'v4_address'
	}, {
	  text: 'Phone',
	  type: 'control_phone',
	  value: [{ type: 'textbox', label: 'Area Code', name: 'Area Code', inputType: 'tel' }, { type: 'textbox', label: 'Phone Number', name: 'Phone', inputType: 'tel' }],
	  icon: 'v4_phone',
	  fieldProps: {
	    validation: 'Numeric'
	  }
	}, {
	  text: 'Signature',
	  type: 'control_signature',
	  value: [{ type: 'signaturebox', label: 'Signature', name: 'Signature' }],
	  icon: 'v4_signature'
	}, {
	  text: 'Short Text',
	  type: 'control_textbox',
	  value: [{ type: 'textbox', label: '', name: 'Short Text' }],
	  icon: 'v4_inputtext'
	}, {
	  text: 'Dropdown',
	  type: 'control_dropdown',
	  value: [{
	    type: 'selectbox',
	    label: 'Please Select',
	    name: 'selectbox',
	    options: [{ type: 'selectbox', label: 'Type Option 1', name: 'option1' }, { type: 'selectbox', label: 'Type Option 2', name: 'option2' }, { type: 'selectbox', label: 'Type Option 3', name: 'option3' }]
	  }],
	  icon: 'v4_dropdown'
	}, {
	  text: 'Single Choice',
	  type: 'control_radio',
	  value: [{ type: 'radiobox', label: 'Type option 1', name: 'option1' }, { type: 'radiobox', label: 'Type option 2', name: 'option2' }],
	  icon: 'v4_radiobutton'
	}, {
	  text: 'Multiple Choice',
	  type: 'control_checkbox',
	  value: [{ type: 'checkbox', label: 'Type option 1', name: 'option1' }, { type: 'checkbox', label: 'Type option 2', name: 'option2' }],
	  icon: 'v4_checkbox'
	}, {
	  text: 'Number',
	  type: 'control_number',
	  value: [{ type: 'textbox', label: '', name: 'Number', inputType: 'number' }],
	  icon: 'v4_number'
	}, {
	  text: 'Time',
	  type: 'control_time',
	  value: [{ type: 'timebox', label: 'Time', name: 'Time' }],
	  icon: 'v4_time'
	}];

	var getSubFields = function getSubFields(isAdmin) {
	  return DROPDOWN_LIST.filter(function (field) {
	    return isAdmin || !field.__adminOnly;
	  });
	};

	var FONTS = ['Sans Serif', 'Abril Fatface', 'Arial', 'Arial Black', 'Bevan', 'Comic Sans MS', 'Courier New', 'Diplomata', 'Fredoka One', 'Galada', 'Helvetica', 'Impact', 'Lobster', 'Playball', 'Sail', 'Tahoma', 'Times New Roman', 'Trebuchet MS', 'Roboto', 'Verdana'];

	var popoverProps = {
	  popoverOptions: {
	    placement: 'bottom-start',
	    modifiers: [{ name: 'offset', options: { offset: [0, 6] } }]
	  }
	};

	var Img = function Img(_ref9) {
	  var icon = _ref9.icon;
	  return _react2.default.createElement('img', {
	    className: icon,
	    src: '//cdn.jotfor.ms/assets/img/v4/fields/control_inline/' + icon + '.svg'
	  });
	};

	var classNames = function classNames(list) {
	  return list.filter(function (a) {
	    return a;
	  }).join(' ');
	};

	var dropdownButton = function dropdownButton(text, classname) {
	  var icon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
	  return (0, _react.forwardRef)(function (props, ref) {
	    return _react2.default.createElement(
	      'button',
	      _extends({
	        ref: ref,
	        'data-value': props.option ? props.option.value : '',
	        className: classNames(['FITB-button', classname]),
	        type: 'button'
	      }, props),
	      icon && _react2.default.createElement(Img, { icon: icon }),
	      _react2.default.createElement(
	        'span',
	        null,
	        text
	      ),
	      _react2.default.createElement(Img, { icon: 'arrow' })
	    );
	  });
	};

	var listItem = function listItem(_ref10) {
	  var _ref10$option = _ref10.option,
	      text = _ref10$option.text,
	      name = _ref10$option.name,
	      value = _ref10$option.value,
	      icon = _ref10$option.icon;
	  return _react2.default.createElement(
	    'div',
	    {
	      'data-value': value || name,
	      className: classNames(['FITB-dropdown-listItem', icon && 'ji-' + icon])
	    },
	    text
	  );
	};

	var isLast = function isLast(blots) {
	  return function (blot) {
	    var groupBlots = blots.filter(function (b) {
	      return b.type === 'checkbox' || b.type === 'radiobox';
	    });
	    return groupBlots[groupBlots.length - 1] === blot;
	  };
	};

	var blotWithAdditionalProps = function blotWithAdditionalProps(props) {
	  return function (blot) {
	    return Object.assign({}, blot, props);
	  };
	};

	var abs = function abs(x) {
	  return x < 0 ? x * -1 : x;
	};

	var getBlotOptions = function getBlotOptions(field) {
	  if (field.type === 'control_dropdown') {
	    return [field.options.reduce(function (acc, o) {
	      return {
	        type: o.type,
	        id: setBlotId(field.id)(o.type),
	        default: field.label,
	        options: [].concat(acc.options || acc.label, [o.label])
	      };
	    })];
	  }

	  return field.options;
	};

	var getBlots = function getBlots(fields) {
	  return Array.isArray(fields) ? fields.reduce(function (acc, f) {
	    return [].concat(acc, getBlotOptions(f).map(function (blot) {
	      return blotWithAdditionalProps({
	        required: f.required,
	        groupType: f.type,
	        last: isLast(f.options)(blot)
	      })(blot);
	    }) || []);
	  }, []) : [];
	};

	var getFieldProps = function getFieldProps(fields, blotId) {
	  return Array.isArray(fields) ? fields.find(function (_ref11) {
	    var id = _ref11.id;
	    return id === parseBlotId(blotId).id;
	  }) : undefined;
	};

	var getBlotMarkup = function getBlotMarkup(questionId, questionName, required, fields, themeVersion) {
	  return function (blotId) {
	    var blot = getBlots(fields.value).find(function (_ref12) {
	      var id = _ref12.id;
	      return id === blotId;
	    });
	    var field = getFieldProps(fields.value, blotId);

	    if (blot && field && BLOT_COMPS[blot.type]) {
	      return _server2.default.renderToStaticMarkup(BLOT_COMPS[blot.type]({ questionId: questionId, questionName: questionName, required: required, field: field, blot: blot, themeVersion: themeVersion }));
	    }
	    return '';
	  };
	};

	var Toolbar = function Toolbar(_ref13) {
	  var qid = _ref13.qid,
	      formFields = _ref13.formFields,
	      onFormFieldSelect = _ref13.onFormFieldSelect;
	  return _react2.default.createElement(
	    'div',
	    { id: 'texteditor_toolbar_' + qid, className: 'FITB-quillTB disable-drag' },
	    _react2.default.createElement(
	      'span',
	      { className: 'ql-formats' },
	      _react2.default.createElement(
	        'select',
	        { className: 'ql-font', defaultValue: 'sans-serif' },
	        FONTS.map(function (f) {
	          return _react2.default.createElement(
	            'option',
	            { value: f.toLowerCase().replace(/\s/g, '-') },
	            f
	          );
	        })
	      )
	    ),
	    _react2.default.createElement(
	      'span',
	      { className: 'ql-formats' },
	      _react2.default.createElement(
	        'select',
	        { className: 'ql-size', defaultValue: '12px' },
	        _react2.default.createElement(
	          'option',
	          { value: '10px' },
	          '10px'
	        ),
	        _react2.default.createElement(
	          'option',
	          { value: '12px' },
	          '12px'
	        ),
	        _react2.default.createElement(
	          'option',
	          { value: '18px' },
	          '18px'
	        ),
	        _react2.default.createElement(
	          'option',
	          { value: '32px' },
	          '32px'
	        )
	      )
	    ),
	    _react2.default.createElement(
	      'span',
	      { className: 'ql-formats' },
	      _react2.default.createElement('select', { 'aria-label': 'format', className: 'ql-header' })
	    ),
	    _react2.default.createElement(
	      'span',
	      { className: 'ql-formats' },
	      _react2.default.createElement('button', { type: 'button', 'aria-label': 'bold', className: 'ql-bold' }),
	      _react2.default.createElement('button', { type: 'button', 'aria-label': 'italic', className: 'ql-italic' }),
	      _react2.default.createElement('button', { type: 'button', 'aria-label': 'underline', className: 'ql-underline' })
	    ),
	    _react2.default.createElement(
	      'span',
	      { className: 'ql-formats' },
	      _react2.default.createElement('select', { 'aria-label': 'color', className: 'ql-color' })
	    ),
	    _react2.default.createElement(
	      'span',
	      { className: 'ql-formats' },
	      _react2.default.createElement('select', { 'aria-label': 'align', className: 'ql-align' })
	    ),
	    _react2.default.createElement(
	      'span',
	      { className: 'ql-formats' },
	      _react2.default.createElement('button', { type: 'button', 'aria-label': 'bold', className: 'ql-list', value: 'ordered' }),
	      _react2.default.createElement('button', { type: 'button', 'aria-label': 'bold', className: 'ql-list', value: 'bullet' }),
	      _react2.default.createElement('button', { type: 'button', 'aria-label': 'bold', className: 'ql-indent', value: '+1' }),
	      _react2.default.createElement('button', { type: 'button', 'aria-label': 'bold', className: 'ql-indent', value: '-1' })
	    ),
	    _react2.default.createElement(
	      'span',
	      { className: 'ql-formats' },
	      _react2.default.createElement('button', { type: 'button', 'aria-label': 'bold', className: 'ql-link' }),
	      _react2.default.createElement('button', { type: 'button', 'aria-label': 'bold', className: 'ql-image' })
	    ),
	    formFields && formFields.length > 0 && _react2.default.createElement(
	      'span',
	      { className: 'ql-formats' },
	      _react2.default.createElement(_Dropdown2.default, {
	        options: formFields,
	        ButtonRenderer: dropdownButton('Form fields', 'formFields'),
	        onOptionSelect: onFormFieldSelect,
	        OptionRenderer: listItem,
	        ContainerRenderer: function ContainerRenderer(_ref14) {
	          var children = _ref14.children;
	          return _react2.default.createElement(
	            'ul',
	            { className: 'FITB-dropdown' },
	            children
	          );
	        },
	        popoverProps: popoverProps
	      })
	    )
	  );
	};

	var handleStickyTB = function handleStickyTB(el, stageScroller, currTop) {
	  var _el$parentNode$getBou = el.parentNode.getBoundingClientRect(),
	      top = _el$parentNode$getBou.top,
	      height = _el$parentNode$getBou.height;

	  var _stageScroller$getBou = stageScroller.getBoundingClientRect(),
	      contTop = _stageScroller$getBou.top;

	  var topLimit = top - contTop;

	  if (abs(topLimit) === currTop) {
	    return currTop;
	  }

	  var offsetHeight = el.offsetHeight;


	  return topLimit <= 0 && topLimit + (height - offsetHeight) >= 0 && abs(topLimit);
	};

	var Inline = function Inline(_ref15) {
	  var TextEditor = _ref15.TextEditor,
	      ImageUpload = _ref15.ImageUpload,
	      questionId = _ref15.id.value,
	      questionName = _ref15.name.value,
	      passive = _ref15.passive,
	      template = _ref15.template,
	      onChangeText = _ref15.onChangeText,
	      onCreateBlots = _ref15.onCreateBlots,
	      onDeleteBlots = _ref15.onDeleteBlots,
	      onClickBlot = _ref15.onClickBlot,
	      fields = _ref15.fields,
	      onBlotUpdate = _ref15.onBlotUpdate,
	      updateBlotsIndex = _ref15.updateBlotsIndex,
	      isSelected = _ref15.isSelected,
	      isRightPanelOpen = _ref15.isRightPanelOpen,
	      required = _ref15.required,
	      formFields = _ref15.formFields,
	      isAdmin = _ref15.isAdmin,
	      themeVersion = _ref15.themeVersion,
	      darkMode = _ref15.darkMode,
	      actions = _ref15.actions;

	  if (TextEditor && passive) {
	    var editorRef = (0, _react.useRef)();
	    var TBContRef = (0, _react.useRef)();

	    var _useState = (0, _react.useState)(false),
	        showQuillTB = _useState[0],
	        setShowQuillTB = _useState[1];

	    var _useState2 = (0, _react.useState)(false),
	        stickyTBtop = _useState2[0],
	        setStickyTBTop = _useState2[1];

	    var onBlotSelect = function onBlotSelect(_ref16) {
	      var value = _ref16.value,
	          type = _ref16.type,
	          _ref16$fieldProps = _ref16.fieldProps,
	          fieldProps = _ref16$fieldProps === undefined ? {} : _ref16$fieldProps;

	      if (value) {
	        editorRef.current.createBlots(value, { type: type, fieldProps: fieldProps });
	      }
	    };

	    var onFormFieldSelect = function onFormFieldSelect(q) {
	      editorRef.current.insertTextContent('{' + q.name + '}');
	    };

	    var handleSwitchClick = function handleSwitchClick() {
	      var _editorRef$current$fo = editorRef.current.focus,
	          focus = _editorRef$current$fo === undefined ? identity : _editorRef$current$fo;


	      focus(); // we loose the selection highlight so restore it again
	      setShowQuillTB(!showQuillTB);
	    };

	    (0, _react.useEffect)(function () {
	      if (isSelected) {
	        var stageScroller = global.document.querySelector('.stageScroller');
	        var scrollAction = function scrollAction() {
	          return setStickyTBTop(handleStickyTB(TBContRef.current, stageScroller, stickyTBtop));
	        };

	        scrollAction();
	        stageScroller.addEventListener('scroll', scrollAction);

	        return function () {
	          return stageScroller.removeEventListener('scroll', scrollAction);
	        };
	      }
	    }, [isSelected]);

	    return _react2.default.createElement(
	      'div',
	      _extends({
	        className: classNames(['FITB', showQuillTB && isSelected && 'showQuillTB', isSelected && 'selected', isRightPanelOpen && isSelected && 'rightPanelOpen'])
	      }, darkMode ? { 'data-darkmode': true } : {}),
	      _react2.default.createElement(
	        'div',
	        _extends({
	          className: classNames(['FITB-TBCont', isSelected && stickyTBtop && 'stickyTB']),
	          ref: TBContRef
	        }, isSelected && stickyTBtop ? { style: { transform: 'translateY(' + stickyTBtop + 'px)' } } : {}),
	        _react2.default.createElement(
	          'div',
	          { className: 'FITB-buttonCont' },
	          _react2.default.createElement(
	            'button',
	            {
	              className: 'FITB-button TBSwitch',
	              type: 'button',
	              onClick: handleSwitchClick
	            },
	            _react2.default.createElement(Img, { icon: 'toolbarSwitch' })
	          ),
	          _react2.default.createElement(_Dropdown2.default, {
	            onOptionSelect: onBlotSelect,
	            ButtonRenderer: dropdownButton('Add field', '', 'plus'),
	            options: getSubFields(isAdmin),
	            OptionRenderer: listItem,
	            ContainerRenderer: function ContainerRenderer(_ref17) {
	              var children = _ref17.children;
	              return _react2.default.createElement(
	                'ul',
	                { className: 'FITB-dropdown' },
	                children
	              );
	            },
	            popoverProps: popoverProps
	          })
	        ),
	        _react2.default.createElement(Toolbar, { qid: questionId, formFields: formFields, onFormFieldSelect: onFormFieldSelect })
	      ),
	      _react2.default.createElement(TextEditor, {
	        className: 'disable-drag',
	        ref: editorRef,
	        qid: questionId,
	        toolbar: '#texteditor_toolbar_' + questionId,
	        placeholder: 'Type here...',
	        onChangeText: onChangeText,
	        onCreateBlots: onCreateBlots,
	        defaultContent: template,
	        onDeleteBlots: onDeleteBlots,
	        onBlotUpdate: onBlotUpdate,
	        onBlotsIndexUpdate: updateBlotsIndex,
	        onClickBlot: onClickBlot,
	        blots: getBlots(fields),
	        scrollingContainer: '#stage',
	        useImageUploader: true,
	        ImageUploader: ImageUpload,
	        actions: actions
	      })
	    );
	  }

	  var createMarkup = function createMarkup() {
	    var withBlotMarkups = template.value.replace(BLOT_REGEX, function (str, id) {
	      return getBlotMarkup(questionId, questionName, required, fields, themeVersion)(id);
	    });
	    return {
	      __html: withBlotMarkups.replace(/\{.*?\}/g, function (str) {
	        return '<span class="fitb-replace-tag">' + str + '</span>';
	      }) // wrap formField with span tag
	    };
	  };

	  return _react2.default.createElement('div', {
	    id: 'FITB_' + questionId,
	    className: 'FITB formRender',
	    dangerouslySetInnerHTML: createMarkup()
	  });
	};

	Inline.getScript = function (_ref18) {
	  var fields = _ref18.fields,
	      formProperties = _ref18.formProperties,
	      id = _ref18.id;

	  var dateFields = Array.isArray(fields.value) ? fields.value.filter(function (field) {
	    return field.type === 'control_datetime';
	  }) : [];

	  var script = '';
	  script = dateFields.reduce(function (acc, field) {
	    var blotId = Array.isArray(field.options) && field.options[0] ? field.options[0].id : '';
	    var result = acc;
	    result = result + ' JotForm.setCalendar("' + id.value + '-' + blotId + '");\n';

	    if (field.defaultDate === 'current') {
	      result = result + ' JotForm.formatDate({date:(new Date()), dateField:$("id_' + id.value + '-' + blotId + '")});\n';
	    }

	    if (field.defaultDate && field.defaultDate.indexOf('custom') > -1 && field.defaultDate.indexOf('today') > -1) {
	      var dynamicDate = field.defaultDate.replace(/custom_/gi, '');
	      result = result + ' JotForm.displayDynamicDate(' + blotId + ',"' + dynamicDate + '");\n';
	    }
	    return result;
	  }, '\n');

	  script += '\n    if (window.commonLib && window.commonLib.BGColorLightness(\'' + formProperties.formBackground + '\')) {\n      document.getElementById(\'FITB_' + id.value + '\').setAttribute(\'data-darkmode\', \'true\'); \n    }\n';

	  return script;
	};

	Inline.propTypes = {
	  id: _propTypes2.default.shape(),
	  name: _propTypes2.default.shape(),
	  passive: _propTypes2.default.bool,
	  TextEditor: _propTypes2.default.shape(),
	  ImageUpload: _propTypes2.default.shape(),
	  template: _propTypes2.default.string,
	  onChangeText: _propTypes2.default.func,
	  onCreateBlots: _propTypes2.default.func,
	  onDeleteBlots: _propTypes2.default.func,
	  onBlotUpdate: _propTypes2.default.func,
	  updateBlotsIndex: _propTypes2.default.func,
	  onClickBlot: _propTypes2.default.func,
	  fields: _propTypes2.default.arrayOf(_propTypes2.default.shape()),
	  isSelected: _propTypes2.default.bool,
	  isRightPanelOpen: _propTypes2.default.bool,
	  required: _propTypes2.default.shape(),
	  formFields: _propTypes2.default.arrayOf(_propTypes2.default.shape()),
	  isAdmin: _propTypes2.default.bool,
	  themeVersion: _propTypes2.default.string,
	  darkMode: _propTypes2.default.bool,
	  actions: _propTypes2.default.shape()
	};

	Toolbar.propTypes = {
	  qid: _propTypes2.default.string,
	  formFields: _propTypes2.default.arrayOf(_propTypes2.default.shape()),
	  onFormFieldSelect: _propTypes2.default.func
	};

	listItem.propTypes = {
	  option: _propTypes2.default.shape()
	};

	Img.propTypes = {
	  icon: _propTypes2.default.string
	};

	Inline.defaultProps = {
	  isAdmin: false,
	  themeVersion: 'v1'
	};

	exports.default = Inline;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	if (process.env.NODE_ENV === 'production') {
	  module.exports = __webpack_require__(203);
	} else {
	  module.exports = __webpack_require__(208);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	/** @license React v16.3.0
	 * react-dom-server.browser.production.min.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';var p=__webpack_require__(10),q=__webpack_require__(2),t=__webpack_require__(7),w=__webpack_require__(204),x=__webpack_require__(205),y=__webpack_require__(207);
	function z(a){for(var b=arguments.length-1,d="Minified React error #"+a+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d"+a,c=0;c<b;c++)d+="\x26args[]\x3d"+encodeURIComponent(arguments[c+1]);b=Error(d+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name="Invariant Violation";b.framesToPop=1;throw b;}
	var A="function"===typeof Symbol&&Symbol["for"],C=A?Symbol["for"]("react.call"):60104,aa=A?Symbol["for"]("react.return"):60105,ba=A?Symbol["for"]("react.portal"):60106,E=A?Symbol["for"]("react.fragment"):60107,ca=A?Symbol["for"]("react.strict_mode"):60108,F=A?Symbol["for"]("react.provider"):60109,da=A?Symbol["for"]("react.context"):60110,ea=A?Symbol["for"]("react.async_mode"):60111,fa=A?Symbol["for"]("react.forward_ref"):60112,ha=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
	G={},H={};function ia(a){if(H.hasOwnProperty(a))return!0;if(G.hasOwnProperty(a))return!1;if(ha.test(a))return H[a]=!0;G[a]=!0;return!1}function ja(a,b,d,c){if(null!==d&&0===d.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(c)return!1;if(null!==d)return!d.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}
	function ka(a,b,d,c){if(null===b||"undefined"===typeof b||ja(a,b,d,c))return!0;if(null!==d)switch(d.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function I(a,b,d,c,k){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=c;this.attributeNamespace=k;this.mustUseProperty=d;this.propertyName=a;this.type=b}var J={};
	"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){J[a]=new I(a,0,!1,a,null)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});
	["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});["checked","multiple","muted","selected"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});
	["capture","download"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});["cols","rows","size","span"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});["rowSpan","start"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var K=/[\-\:]([a-z])/g;function L(a){return a[1].toUpperCase()}
	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(K,
	L);J[b]=new I(b,1,!1,a,null)});"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(K,L);J[b]=new I(b,1,!1,a,"http://www.w3.org/1999/xlink")});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(K,L);J[b]=new I(b,1,!1,a,"http://www.w3.org/XML/1998/namespace")});J.tabIndex=new I("tabIndex",1,!1,"tabindex",null);var la=/["'&<>]/;
	function M(a){if("boolean"===typeof a||"number"===typeof a)return""+a;a=""+a;var b=la.exec(a);if(b){var d="",c,k=0;for(c=b.index;c<a.length;c++){switch(a.charCodeAt(c)){case 34:b="\x26quot;";break;case 38:b="\x26amp;";break;case 39:b="\x26#x27;";break;case 60:b="\x26lt;";break;case 62:b="\x26gt;";break;default:continue}k!==c&&(d+=a.substring(k,c));k=c+1;d+=b}a=k!==c?d+a.substring(k,c):d}return a}var N={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
	function O(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}
	var P={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},ma=p({menuitem:!0},P),Q={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,
	fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},na=["Webkit","ms","Moz","O"];Object.keys(Q).forEach(function(a){na.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Q[b]=Q[a]})});var R=q.Children.toArray,S=t.thatReturns("");t.thatReturns("");var oa={listing:!0,pre:!0,textarea:!0};
	function T(a){return"string"===typeof a?a:"function"===typeof a?a.displayName||a.name:null}var pa=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,U={},qa=y(function(a){return x(a)});function ra(a){var b="";q.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}function sa(a,b){if(a=a.contextTypes){var d={},c;for(c in a)d[c]=b[c];b=d}else b=w;return b}var ta={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null,suppressHydrationWarning:null};
	function V(a,b){void 0===a&&z("152",T(b)||"Component")}
	function ua(a,b){function d(c,k){var d=sa(k,b),f=[],h=!1,g={isMounted:function(){return!1},enqueueForceUpdate:function(){if(null===f)return null},enqueueReplaceState:function(b,a){h=!0;f=[a]},enqueueSetState:function(b,a){if(null===f)return null;f.push(a)}},e=void 0;if(k.prototype&&k.prototype.isReactComponent){if(e=new k(c.props,d,g),"function"===typeof k.getDerivedStateFromProps){var v=k.getDerivedStateFromProps.call(null,c.props,e.state);null!=v&&(e.state=p({},e.state,v))}}else if(e=k(c.props,
	d,g),null==e||null==e.render){a=e;V(a,k);return}e.props=c.props;e.context=d;e.updater=g;g=e.state;void 0===g&&(e.state=g=null);if("function"===typeof e.UNSAFE_componentWillMount||"function"===typeof e.componentWillMount)if("function"===typeof e.componentWillMount&&"function"!==typeof k.getDerivedStateFromProps&&e.componentWillMount(),"function"===typeof e.UNSAFE_componentWillMount&&"function"!==typeof k.getDerivedStateFromProps&&e.UNSAFE_componentWillMount(),f.length){g=f;var u=h;f=null;h=!1;if(u&&
	1===g.length)e.state=g[0];else{v=u?g[0]:e.state;var m=!0;for(u=u?1:0;u<g.length;u++){var n=g[u];n="function"===typeof n?n.call(e,v,c.props,d):n;null!=n&&(m?(m=!1,v=p({},v,n)):p(v,n))}e.state=v}}else f=null;a=e.render();V(a,k);c=void 0;if("function"===typeof e.getChildContext&&(d=k.childContextTypes,"object"===typeof d)){c=e.getChildContext();for(var r in c)r in d?void 0:z("108",T(k)||"Unknown",r)}c&&(b=p({},b,c))}for(;q.isValidElement(a);){var c=a,k=c.type;if("function"!==typeof k)break;d(c,k)}return{child:a,
	context:b}}
	var W=function(){function a(b,d){if(!(this instanceof a))throw new TypeError("Cannot call a class as a function");q.isValidElement(b)?b.type!==E?b=[b]:(b=b.props.children,b=q.isValidElement(b)?[b]:R(b)):b=R(b);this.stack=[{type:null,domNamespace:N.html,children:b,childIndex:0,context:w,footer:""}];this.exhausted=!1;this.currentSelectValue=null;this.previousWasTextNode=!1;this.makeStaticMarkup=d;this.providerStack=[];this.providerIndex=-1}a.prototype.pushProvider=function(a){this.providerIndex+=1;
	this.providerStack[this.providerIndex]=a;a.type.context._currentValue=a.props.value};a.prototype.popProvider=function(a){this.providerStack[this.providerIndex]=null;--this.providerIndex;a=a.type.context;a._currentValue=0>this.providerIndex?a._defaultValue:this.providerStack[this.providerIndex].props.value};a.prototype.read=function(a){if(this.exhausted)return null;for(var b="";b.length<a;){if(0===this.stack.length){this.exhausted=!0;break}var c=this.stack[this.stack.length-1];if(c.childIndex>=c.children.length){var k=
	c.footer;b+=k;""!==k&&(this.previousWasTextNode=!1);this.stack.pop();"select"===c.type?this.currentSelectValue=null:null!=c.type&&null!=c.type.type&&c.type.type.$$typeof===F&&this.popProvider(c.type)}else k=c.children[c.childIndex++],b+=this.render(k,c.context,c.domNamespace)}return b};a.prototype.render=function(a,d,c){if("string"===typeof a||"number"===typeof a){c=""+a;if(""===c)return"";if(this.makeStaticMarkup)return M(c);if(this.previousWasTextNode)return"\x3c!-- --\x3e"+M(c);this.previousWasTextNode=
	!0;return M(c)}d=ua(a,d);a=d.child;d=d.context;if(null===a||!1===a)return"";if(!q.isValidElement(a)){if(null!=a&&null!=a.$$typeof){var b=a.$$typeof;b===ba?z("257"):void 0;z("258",b.toString())}a=R(a);this.stack.push({type:null,domNamespace:c,children:a,childIndex:0,context:d,footer:""});return""}b=a.type;if("string"===typeof b)return this.renderDOM(a,d,c);switch(b){case ca:case ea:case E:return a=R(a.props.children),this.stack.push({type:null,domNamespace:c,children:a,childIndex:0,context:d,footer:""}),
	"";case C:case aa:z("259")}if("object"===typeof b&&null!==b)switch(b.$$typeof){case fa:return a=R(b.render(a.props,a.ref)),this.stack.push({type:null,domNamespace:c,children:a,childIndex:0,context:d,footer:""}),"";case F:return b=R(a.props.children),c={type:a,domNamespace:c,children:b,childIndex:0,context:d,footer:""},this.pushProvider(a),this.stack.push(c),"";case da:return b=R(a.props.children(a.type._currentValue)),this.stack.push({type:a,domNamespace:c,children:b,childIndex:0,context:d,footer:""}),
	""}z("130",null==b?b:typeof b,"")};a.prototype.renderDOM=function(a,d,c){var b=a.type.toLowerCase();c===N.html&&O(b);U.hasOwnProperty(b)||(pa.test(b)?void 0:z("65",b),U[b]=!0);var f=a.props;if("input"===b)f=p({type:void 0},f,{defaultChecked:void 0,defaultValue:void 0,value:null!=f.value?f.value:f.defaultValue,checked:null!=f.checked?f.checked:f.defaultChecked});else if("textarea"===b){var h=f.value;if(null==h){h=f.defaultValue;var l=f.children;null!=l&&(null!=h?z("92"):void 0,Array.isArray(l)&&(1>=
	l.length?void 0:z("93"),l=l[0]),h=""+l);null==h&&(h="")}f=p({},f,{value:void 0,children:""+h})}else if("select"===b)this.currentSelectValue=null!=f.value?f.value:f.defaultValue,f=p({},f,{value:void 0});else if("option"===b){l=this.currentSelectValue;var D=ra(f.children);if(null!=l){var B=null!=f.value?f.value+"":D;h=!1;if(Array.isArray(l))for(var g=0;g<l.length;g++){if(""+l[g]===B){h=!0;break}}else h=""+l===B;f=p({selected:void 0,children:void 0},f,{selected:h,children:D})}}if(h=f)ma[b]&&(null!=h.children||
	null!=h.dangerouslySetInnerHTML?z("137",b,S()):void 0),null!=h.dangerouslySetInnerHTML&&(null!=h.children?z("60"):void 0,"object"===typeof h.dangerouslySetInnerHTML&&"__html"in h.dangerouslySetInnerHTML?void 0:z("61")),null!=h.style&&"object"!==typeof h.style?z("62",S()):void 0;h=f;l=this.makeStaticMarkup;D=1===this.stack.length;B="\x3c"+a.type;for(r in h)if(h.hasOwnProperty(r)){var e=h[r];if(null!=e){if("style"===r){g=void 0;var v="",u="";for(g in e)if(e.hasOwnProperty(g)){var m=0===g.indexOf("--"),
	n=e[g];null!=n&&(v+=u+qa(g)+":",u=g,m=null==n||"boolean"===typeof n||""===n?"":m||"number"!==typeof n||0===n||Q.hasOwnProperty(u)&&Q[u]?(""+n).trim():n+"px",v+=m,u=";")}e=v||null}g=null;b:if(m=b,n=h,-1===m.indexOf("-"))m="string"===typeof n.is;else switch(m){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":m=!1;break b;default:m=!0}if(m)ta.hasOwnProperty(r)||(g=r,g=ia(g)&&null!=
	e?g+"\x3d"+('"'+M(e)+'"'):"");else{m=r;g=e;e=J.hasOwnProperty(m)?J[m]:null;if(n="style"!==m)n=null!==e?0===e.type:!(2<m.length)||"o"!==m[0]&&"O"!==m[0]||"n"!==m[1]&&"N"!==m[1]?!1:!0;n||ka(m,g,e,!1)?g="":null!==e?(m=e.attributeName,e=e.type,g=3===e||4===e&&!0===g?m+'\x3d""':m+"\x3d"+('"'+M(g)+'"')):g=m+"\x3d"+('"'+M(g)+'"')}g&&(B+=" "+g)}}l||D&&(B+=' data-reactroot\x3d""');var r=B;h="";P.hasOwnProperty(b)?r+="/\x3e":(r+="\x3e",h="\x3c/"+a.type+"\x3e");a:{l=f.dangerouslySetInnerHTML;if(null!=l){if(null!=
	l.__html){l=l.__html;break a}}else if(l=f.children,"string"===typeof l||"number"===typeof l){l=M(l);break a}l=null}null!=l?(f=[],oa[b]&&"\n"===l.charAt(0)&&(r+="\n"),r+=l):f=R(f.children);a=a.type;c=null==c||"http://www.w3.org/1999/xhtml"===c?O(a):"http://www.w3.org/2000/svg"===c&&"foreignObject"===a?"http://www.w3.org/1999/xhtml":c;this.stack.push({domNamespace:c,type:b,children:f,childIndex:0,context:d,footer:h});this.previousWasTextNode=!1;return r};return a}(),X={renderToString:function(a){return(new W(a,
	!1)).read(Infinity)},renderToStaticMarkup:function(a){return(new W(a,!0)).read(Infinity)},renderToNodeStream:function(){z("207")},renderToStaticNodeStream:function(){z("208")},version:"16.3.0"},Y=Object.freeze({default:X}),Z=Y&&X||Y;module.exports=Z["default"]?Z["default"]:Z;


/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(206);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 206 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 207 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.3.0
	 * react-dom-server.browser.development.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';



	if (process.env.NODE_ENV !== "production") {
	  (function() {
	'use strict';

	var invariant = __webpack_require__(8);
	var _assign = __webpack_require__(10);
	var React = __webpack_require__(2);
	var emptyFunction = __webpack_require__(7);
	var emptyObject = __webpack_require__(204);
	var hyphenateStyleName = __webpack_require__(205);
	var memoizeStringOnly = __webpack_require__(207);
	var warning = __webpack_require__(9);
	var checkPropTypes = __webpack_require__(12);
	var camelizeStyleName = __webpack_require__(209);

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	// TODO: this is special because it gets imported during build.

	var ReactVersion = '16.3.0';

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	{
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	var lowPriorityWarning$1 = lowPriorityWarning;

	var describeComponentFrame = function (name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	};

	var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

	var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
	var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

	// Exports ReactDOM.createRoot


	// Mutating mode (React DOM, React ART, React Native):

	// Experimental noop mode (currently unused):

	// Experimental persistent mode (Fabric):

	// Experimental error-boundary API that can recover from errors within a single
	// render phase

	// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:


	// In some cases, StrictMode should also double-render lifecycles.
	// This can be confusing for tests though,
	// And it can be bad for performance in production.
	// This feature flag can be used to control the behavior:


	// To preserve the "Pause on caught exceptions" behavior of the debugger, we
	// replay the begin phase of a failed component inside invokeGuardedCallback.


	// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
	var warnAboutDeprecatedLifecycles = false;



	// Only used in www builds.

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol['for'];


	var REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;
	var REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol['for']('react.strict_mode') : 0xeacc;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol['for']('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol['for']('react.context') : 0xeace;
	var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol['for']('react.async_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol['for']('react.forward_ref') : 0xead0;

	// A reserved attribute.
	// It is handled by React separately and shouldn't be written to the DOM.
	var RESERVED = 0;

	// A simple string attribute.
	// Attributes that aren't in the whitelist are presumed to have this type.
	var STRING = 1;

	// A string attribute that accepts booleans in React. In HTML, these are called
	// "enumerated" attributes with "true" and "false" as possible values.
	// When true, it should be set to a "true" string.
	// When false, it should be set to a "false" string.
	var BOOLEANISH_STRING = 2;

	// A real boolean attribute.
	// When true, it should be present (set either to an empty string or its name).
	// When false, it should be omitted.
	var BOOLEAN = 3;

	// An attribute that can be used as a flag as well as with a value.
	// When true, it should be present (set either to an empty string or its name).
	// When false, it should be omitted.
	// For any other value, should be present with that value.
	var OVERLOADED_BOOLEAN = 4;

	// An attribute that must be numeric or parse as a numeric.
	// When falsy, it should be removed.
	var NUMERIC = 5;

	// An attribute that must be positive numeric or parse as a positive numeric.
	// When falsy, it should be removed.
	var POSITIVE_NUMERIC = 6;

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';


	var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');

	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  {
	    warning(false, 'Invalid attribute name: `%s`', attributeName);
	  }
	  return false;
	}

	function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
	  if (propertyInfo !== null) {
	    return propertyInfo.type === RESERVED;
	  }
	  if (isCustomComponentTag) {
	    return false;
	  }
	  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
	    return true;
	  }
	  return false;
	}

	function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
	  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
	    return false;
	  }
	  switch (typeof value) {
	    case 'function':
	    // $FlowIssue symbol is perfectly valid here
	    case 'symbol':
	      // eslint-disable-line
	      return true;
	    case 'boolean':
	      {
	        if (isCustomComponentTag) {
	          return false;
	        }
	        if (propertyInfo !== null) {
	          return !propertyInfo.acceptsBooleans;
	        } else {
	          var prefix = name.toLowerCase().slice(0, 5);
	          return prefix !== 'data-' && prefix !== 'aria-';
	        }
	      }
	    default:
	      return false;
	  }
	}

	function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
	  if (value === null || typeof value === 'undefined') {
	    return true;
	  }
	  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
	    return true;
	  }
	  if (propertyInfo !== null) {
	    switch (propertyInfo.type) {
	      case BOOLEAN:
	        return !value;
	      case OVERLOADED_BOOLEAN:
	        return value === false;
	      case NUMERIC:
	        return isNaN(value);
	      case POSITIVE_NUMERIC:
	        return isNaN(value) || value < 1;
	    }
	  }
	  return false;
	}

	function getPropertyInfo(name) {
	  return properties.hasOwnProperty(name) ? properties[name] : null;
	}

	function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {
	  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
	  this.attributeName = attributeName;
	  this.attributeNamespace = attributeNamespace;
	  this.mustUseProperty = mustUseProperty;
	  this.propertyName = name;
	  this.type = type;
	}

	// When adding attributes to this list, be sure to also add them to
	// the `possibleStandardNames` module to ensure casing and incorrect
	// name warnings.
	var properties = {};

	// These props are reserved by React. They shouldn't be written to the DOM.
	['children', 'dangerouslySetInnerHTML',
	// TODO: This prevents the assignment of defaultValue to regular
	// elements (not just inputs). Now that ReactDOMInput assigns to the
	// defaultValue property -- do we need this?
	'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
	  name, // attributeName
	  null);
	});

	// A few React string attributes have a different name.
	// This is a mapping from React prop names to the attribute names.
	[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
	  var name = _ref[0],
	      attributeName = _ref[1];

	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, // attributeName
	  null);
	});

	// These are "enumerated" HTML attributes that accept "true" and "false".
	// In React, we let users pass `true` and `false` even though technically
	// these aren't boolean attributes (they are coerced to strings).
	['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	});

	// These are "enumerated" SVG attributes that accept "true" and "false".
	// In React, we let users pass `true` and `false` even though technically
	// these aren't boolean attributes (they are coerced to strings).
	// Since these are SVG attributes, their attribute names are case-sensitive.
	['autoReverse', 'externalResourcesRequired', 'preserveAlpha'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
	  name, // attributeName
	  null);
	});

	// These are HTML boolean attributes.
	['allowFullScreen', 'async',
	// Note: there is a special case that prevents it from being written to the DOM
	// on the client side because the browsers are inconsistent. Instead we call focus().
	'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',
	// Microdata
	'itemScope'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	});

	// These are the few React props that we set as DOM properties
	// rather than attributes. These are all booleans.
	['checked',
	// Note: `option.selected` is not updated if `select.multiple` is
	// disabled with `removeAttribute`. We have special logic for handling this.
	'multiple', 'muted', 'selected'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	});

	// These are HTML attributes that are "overloaded booleans": they behave like
	// booleans, but can also accept a string value.
	['capture', 'download'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	});

	// These are HTML attributes that must be positive numbers.
	['cols', 'rows', 'size', 'span'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	});

	// These are HTML attributes that must be numbers.
	['rowSpan', 'start'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	});

	var CAMELIZE = /[\-\:]([a-z])/g;
	var capitalize = function (token) {
	  return token[1].toUpperCase();
	};

	// This is a list of all SVG attributes that need special casing, namespacing,
	// or boolean value assignment. Regular attributes that just accept strings
	// and have the same names are omitted, just like in the HTML whitelist.
	// Some of these attributes can be hard to find. This list was created by
	// scrapping the MDN documentation.
	['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, null);
	});

	// String SVG attributes with the xlink namespace.
	['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, 'http://www.w3.org/1999/xlink');
	});

	// String SVG attributes with the xml namespace.
	['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, 'http://www.w3.org/XML/1998/namespace');
	});

	// Special case: this attribute exists both in HTML and SVG.
	// Its "tabindex" attribute name is case-sensitive in SVG so we can't just use
	// its React `tabIndex` name, like we do for attributes that exist only in HTML.
	properties.tabIndex = new PropertyInfoRecord('tabIndex', STRING, false, // mustUseProperty
	'tabindex', // attributeName
	null);

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escapes special characters and HTML entities in a given html string.
	 *
	 * @param  {string} string HTML string to escape for later insertion
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape = void 0;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextForBrowser(value) + '"';
	}

	/**
	 * Operations for dealing with DOM properties.
	 */

	/**
	 * Creates markup for the ID property.
	 *
	 * @param {string} id Unescaped ID.
	 * @return {string} Markup string.
	 */


	function createMarkupForRoot() {
	  return ROOT_ATTRIBUTE_NAME + '=""';
	}

	/**
	 * Creates markup for a property.
	 *
	 * @param {string} name
	 * @param {*} value
	 * @return {?string} Markup string, or null if the property was invalid.
	 */
	function createMarkupForProperty(name, value) {
	  var propertyInfo = getPropertyInfo(name);
	  if (name !== 'style' && shouldIgnoreAttribute(name, propertyInfo, false)) {
	    return '';
	  }
	  if (shouldRemoveAttribute(name, value, propertyInfo, false)) {
	    return '';
	  }
	  if (propertyInfo !== null) {
	    var attributeName = propertyInfo.attributeName;
	    var type = propertyInfo.type;

	    if (type === BOOLEAN || type === OVERLOADED_BOOLEAN && value === true) {
	      return attributeName + '=""';
	    } else {
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    }
	  } else {
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  }
	}

	/**
	 * Creates markup for a custom property.
	 *
	 * @param {string} name
	 * @param {*} value
	 * @return {string} Markup string, or empty string if the property was invalid.
	 */
	function createMarkupForCustomAttribute(name, value) {
	  if (!isAttributeNameSafe(name) || value == null) {
	    return '';
	  }
	  return name + '=' + quoteAttributeValueForBrowser(value);
	}

	var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
	var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
	var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

	var Namespaces = {
	  html: HTML_NAMESPACE,
	  mathml: MATH_NAMESPACE,
	  svg: SVG_NAMESPACE
	};

	// Assumes there is no parent namespace.
	function getIntrinsicNamespace(type) {
	  switch (type) {
	    case 'svg':
	      return SVG_NAMESPACE;
	    case 'math':
	      return MATH_NAMESPACE;
	    default:
	      return HTML_NAMESPACE;
	  }
	}

	function getChildNamespace(parentNamespace, type) {
	  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
	    // No (or default) parent namespace: potential entry point.
	    return getIntrinsicNamespace(type);
	  }
	  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
	    // We're leaving SVG.
	    return HTML_NAMESPACE;
	  }
	  // By default, pass namespace below.
	  return parentNamespace;
	}

	var ReactControlledValuePropTypes = {
	  checkPropTypes: null
	};

	{
	  var hasReadOnlyValue = {
	    button: true,
	    checkbox: true,
	    image: true,
	    hidden: true,
	    radio: true,
	    reset: true,
	    submit: true
	  };

	  var propTypes = {
	    value: function (props, propName, componentName) {
	      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	        return null;
	      }
	      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	    },
	    checked: function (props, propName, componentName) {
	      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	        return null;
	      }
	      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	    }
	  };

	  /**
	   * Provide a linked `value` attribute for controlled forms. You should not use
	   * this outside of the ReactDOM controlled form components.
	   */
	  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props, getStack) {
	    checkPropTypes(propTypes, props, 'prop', tagName, getStack);
	  };
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  area: true,
	  base: true,
	  br: true,
	  col: true,
	  embed: true,
	  hr: true,
	  img: true,
	  input: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  menuitem: true
	}, omittedCloseTags);

	var HTML = '__html';

	function assertValidProps(tag, props, getStack) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, getStack()) : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
	  }
	  {
	    warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.%s', getStack());
	  }
	  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getStack()) : void 0;
	}

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  columns: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridRowEnd: true,
	  gridRowSpan: true,
	  gridRowStart: true,
	  gridColumn: true,
	  gridColumnEnd: true,
	  gridColumnSpan: true,
	  gridColumnStart: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, isCustomProperty) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
	    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
	  }

	  return ('' + value).trim();
	}

	function isCustomComponent(tagName, props) {
	  if (tagName.indexOf('-') === -1) {
	    return typeof props.is === 'string';
	  }
	  switch (tagName) {
	    // These are reserved SVG and MathML elements.
	    // We don't mind this whitelist too much because we expect it to never grow.
	    // The alternative is to track the namespace in a few places which is convoluted.
	    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
	    case 'annotation-xml':
	    case 'color-profile':
	    case 'font-face':
	    case 'font-face-src':
	    case 'font-face-uri':
	    case 'font-face-format':
	    case 'font-face-name':
	    case 'missing-glyph':
	      return false;
	    default:
	      return true;
	  }
	}

	var warnValidStyle = emptyFunction;

	{
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	  var warnedForInfinityValue = false;

	  var warnHyphenatedStyleName = function (name, getStack) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), getStack());
	  };

	  var warnBadVendoredStyleName = function (name, getStack) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), getStack());
	  };

	  var warnStyleValueWithSemicolon = function (name, value, getStack) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    warning(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.%s', name, value.replace(badStyleValueWithSemicolonPattern, ''), getStack());
	  };

	  var warnStyleValueIsNaN = function (name, value, getStack) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, getStack());
	  };

	  var warnStyleValueIsInfinity = function (name, value, getStack) {
	    if (warnedForInfinityValue) {
	      return;
	    }

	    warnedForInfinityValue = true;
	    warning(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, getStack());
	  };

	  warnValidStyle = function (name, value, getStack) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, getStack);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, getStack);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, getStack);
	    }

	    if (typeof value === 'number') {
	      if (isNaN(value)) {
	        warnStyleValueIsNaN(name, value, getStack);
	      } else if (!isFinite(value)) {
	        warnStyleValueIsInfinity(name, value, getStack);
	      }
	    }
	  };
	}

	var warnValidStyle$1 = warnValidStyle;

	var ariaProperties = {
	  'aria-current': 0, // state
	  'aria-details': 0,
	  'aria-disabled': 0, // state
	  'aria-hidden': 0, // state
	  'aria-invalid': 0, // state
	  'aria-keyshortcuts': 0,
	  'aria-label': 0,
	  'aria-roledescription': 0,
	  // Widget Attributes
	  'aria-autocomplete': 0,
	  'aria-checked': 0,
	  'aria-expanded': 0,
	  'aria-haspopup': 0,
	  'aria-level': 0,
	  'aria-modal': 0,
	  'aria-multiline': 0,
	  'aria-multiselectable': 0,
	  'aria-orientation': 0,
	  'aria-placeholder': 0,
	  'aria-pressed': 0,
	  'aria-readonly': 0,
	  'aria-required': 0,
	  'aria-selected': 0,
	  'aria-sort': 0,
	  'aria-valuemax': 0,
	  'aria-valuemin': 0,
	  'aria-valuenow': 0,
	  'aria-valuetext': 0,
	  // Live Region Attributes
	  'aria-atomic': 0,
	  'aria-busy': 0,
	  'aria-live': 0,
	  'aria-relevant': 0,
	  // Drag-and-Drop Attributes
	  'aria-dropeffect': 0,
	  'aria-grabbed': 0,
	  // Relationship Attributes
	  'aria-activedescendant': 0,
	  'aria-colcount': 0,
	  'aria-colindex': 0,
	  'aria-colspan': 0,
	  'aria-controls': 0,
	  'aria-describedby': 0,
	  'aria-errormessage': 0,
	  'aria-flowto': 0,
	  'aria-labelledby': 0,
	  'aria-owns': 0,
	  'aria-posinset': 0,
	  'aria-rowcount': 0,
	  'aria-rowindex': 0,
	  'aria-rowspan': 0,
	  'aria-setsize': 0
	};

	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
	var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	function getStackAddendum$1() {
	  var stack = ReactDebugCurrentFrame.getStackAddendum();
	  return stack != null ? stack : '';
	}

	function validateProperty(tagName, name) {
	  if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
	    return true;
	  }

	  if (rARIACamel.test(name)) {
	    var ariaName = 'aria-' + name.slice(4).toLowerCase();
	    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (correctName == null) {
	      warning(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s', name, getStackAddendum$1());
	      warnedProperties[name] = true;
	      return true;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== correctName) {
	      warning(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?%s', name, correctName, getStackAddendum$1());
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	      warning(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$1());
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  return true;
	}

	function warnInvalidARIAProps(type, props) {
	  var invalidProps = [];

	  for (var key in props) {
	    var isValid = validateProperty(type, key);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }

	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (invalidProps.length === 1) {
	    warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum$1());
	  } else if (invalidProps.length > 1) {
	    warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum$1());
	  }
	}

	function validateProperties(type, props) {
	  if (isCustomComponent(type, props)) {
	    return;
	  }
	  warnInvalidARIAProps(type, props);
	}

	var didWarnValueNull = false;

	function getStackAddendum$2() {
	  var stack = ReactDebugCurrentFrame.getStackAddendum();
	  return stack != null ? stack : '';
	}

	function validateProperties$1(type, props) {
	  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
	    return;
	  }

	  if (props != null && props.value === null && !didWarnValueNull) {
	    didWarnValueNull = true;
	    if (type === 'select' && props.multiple) {
	      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.%s', type, getStackAddendum$2());
	    } else {
	      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', type, getStackAddendum$2());
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */

	/**
	 * Ordered list of injected plugins.
	 */


	/**
	 * Mapping from event name to dispatch config
	 */


	/**
	 * Mapping from registration name to plugin module
	 */
	var registrationNameModules = {};

	/**
	 * Mapping from registration name to event name
	 */


	/**
	 * Mapping from lowercase registration names to the properly cased version,
	 * used to warn in the case of missing event handlers. Available
	 * only in true.
	 * @type {Object}
	 */
	var possibleRegistrationNames = {};
	// Trust the developer to only use possibleRegistrationNames in true

	/**
	 * Injects an ordering of plugins (by plugin name). This allows the ordering
	 * to be decoupled from injection of the actual plugins so that ordering is
	 * always deterministic regardless of packaging, on-the-fly injection, etc.
	 *
	 * @param {array} InjectedEventPluginOrder
	 * @internal
	 * @see {EventPluginHub.injection.injectEventPluginOrder}
	 */


	/**
	 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	 * in the ordering injected by `injectEventPluginOrder`.
	 *
	 * Plugins can be injected as part of page initialization or on-the-fly.
	 *
	 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	 * @internal
	 * @see {EventPluginHub.injection.injectEventPluginsByName}
	 */

	// When adding attributes to the HTML or SVG whitelist, be sure to
	// also add them to this module to ensure casing and incorrect name
	// warnings.
	var possibleStandardNames = {
	  // HTML
	  accept: 'accept',
	  acceptcharset: 'acceptCharset',
	  'accept-charset': 'acceptCharset',
	  accesskey: 'accessKey',
	  action: 'action',
	  allowfullscreen: 'allowFullScreen',
	  alt: 'alt',
	  as: 'as',
	  async: 'async',
	  autocapitalize: 'autoCapitalize',
	  autocomplete: 'autoComplete',
	  autocorrect: 'autoCorrect',
	  autofocus: 'autoFocus',
	  autoplay: 'autoPlay',
	  autosave: 'autoSave',
	  capture: 'capture',
	  cellpadding: 'cellPadding',
	  cellspacing: 'cellSpacing',
	  challenge: 'challenge',
	  charset: 'charSet',
	  checked: 'checked',
	  children: 'children',
	  cite: 'cite',
	  'class': 'className',
	  classid: 'classID',
	  classname: 'className',
	  cols: 'cols',
	  colspan: 'colSpan',
	  content: 'content',
	  contenteditable: 'contentEditable',
	  contextmenu: 'contextMenu',
	  controls: 'controls',
	  controlslist: 'controlsList',
	  coords: 'coords',
	  crossorigin: 'crossOrigin',
	  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
	  data: 'data',
	  datetime: 'dateTime',
	  'default': 'default',
	  defaultchecked: 'defaultChecked',
	  defaultvalue: 'defaultValue',
	  defer: 'defer',
	  dir: 'dir',
	  disabled: 'disabled',
	  download: 'download',
	  draggable: 'draggable',
	  enctype: 'encType',
	  'for': 'htmlFor',
	  form: 'form',
	  formmethod: 'formMethod',
	  formaction: 'formAction',
	  formenctype: 'formEncType',
	  formnovalidate: 'formNoValidate',
	  formtarget: 'formTarget',
	  frameborder: 'frameBorder',
	  headers: 'headers',
	  height: 'height',
	  hidden: 'hidden',
	  high: 'high',
	  href: 'href',
	  hreflang: 'hrefLang',
	  htmlfor: 'htmlFor',
	  httpequiv: 'httpEquiv',
	  'http-equiv': 'httpEquiv',
	  icon: 'icon',
	  id: 'id',
	  innerhtml: 'innerHTML',
	  inputmode: 'inputMode',
	  integrity: 'integrity',
	  is: 'is',
	  itemid: 'itemID',
	  itemprop: 'itemProp',
	  itemref: 'itemRef',
	  itemscope: 'itemScope',
	  itemtype: 'itemType',
	  keyparams: 'keyParams',
	  keytype: 'keyType',
	  kind: 'kind',
	  label: 'label',
	  lang: 'lang',
	  list: 'list',
	  loop: 'loop',
	  low: 'low',
	  manifest: 'manifest',
	  marginwidth: 'marginWidth',
	  marginheight: 'marginHeight',
	  max: 'max',
	  maxlength: 'maxLength',
	  media: 'media',
	  mediagroup: 'mediaGroup',
	  method: 'method',
	  min: 'min',
	  minlength: 'minLength',
	  multiple: 'multiple',
	  muted: 'muted',
	  name: 'name',
	  nomodule: 'noModule',
	  nonce: 'nonce',
	  novalidate: 'noValidate',
	  open: 'open',
	  optimum: 'optimum',
	  pattern: 'pattern',
	  placeholder: 'placeholder',
	  playsinline: 'playsInline',
	  poster: 'poster',
	  preload: 'preload',
	  profile: 'profile',
	  radiogroup: 'radioGroup',
	  readonly: 'readOnly',
	  referrerpolicy: 'referrerPolicy',
	  rel: 'rel',
	  required: 'required',
	  reversed: 'reversed',
	  role: 'role',
	  rows: 'rows',
	  rowspan: 'rowSpan',
	  sandbox: 'sandbox',
	  scope: 'scope',
	  scoped: 'scoped',
	  scrolling: 'scrolling',
	  seamless: 'seamless',
	  selected: 'selected',
	  shape: 'shape',
	  size: 'size',
	  sizes: 'sizes',
	  span: 'span',
	  spellcheck: 'spellCheck',
	  src: 'src',
	  srcdoc: 'srcDoc',
	  srclang: 'srcLang',
	  srcset: 'srcSet',
	  start: 'start',
	  step: 'step',
	  style: 'style',
	  summary: 'summary',
	  tabindex: 'tabIndex',
	  target: 'target',
	  title: 'title',
	  type: 'type',
	  usemap: 'useMap',
	  value: 'value',
	  width: 'width',
	  wmode: 'wmode',
	  wrap: 'wrap',

	  // SVG
	  about: 'about',
	  accentheight: 'accentHeight',
	  'accent-height': 'accentHeight',
	  accumulate: 'accumulate',
	  additive: 'additive',
	  alignmentbaseline: 'alignmentBaseline',
	  'alignment-baseline': 'alignmentBaseline',
	  allowreorder: 'allowReorder',
	  alphabetic: 'alphabetic',
	  amplitude: 'amplitude',
	  arabicform: 'arabicForm',
	  'arabic-form': 'arabicForm',
	  ascent: 'ascent',
	  attributename: 'attributeName',
	  attributetype: 'attributeType',
	  autoreverse: 'autoReverse',
	  azimuth: 'azimuth',
	  basefrequency: 'baseFrequency',
	  baselineshift: 'baselineShift',
	  'baseline-shift': 'baselineShift',
	  baseprofile: 'baseProfile',
	  bbox: 'bbox',
	  begin: 'begin',
	  bias: 'bias',
	  by: 'by',
	  calcmode: 'calcMode',
	  capheight: 'capHeight',
	  'cap-height': 'capHeight',
	  clip: 'clip',
	  clippath: 'clipPath',
	  'clip-path': 'clipPath',
	  clippathunits: 'clipPathUnits',
	  cliprule: 'clipRule',
	  'clip-rule': 'clipRule',
	  color: 'color',
	  colorinterpolation: 'colorInterpolation',
	  'color-interpolation': 'colorInterpolation',
	  colorinterpolationfilters: 'colorInterpolationFilters',
	  'color-interpolation-filters': 'colorInterpolationFilters',
	  colorprofile: 'colorProfile',
	  'color-profile': 'colorProfile',
	  colorrendering: 'colorRendering',
	  'color-rendering': 'colorRendering',
	  contentscripttype: 'contentScriptType',
	  contentstyletype: 'contentStyleType',
	  cursor: 'cursor',
	  cx: 'cx',
	  cy: 'cy',
	  d: 'd',
	  datatype: 'datatype',
	  decelerate: 'decelerate',
	  descent: 'descent',
	  diffuseconstant: 'diffuseConstant',
	  direction: 'direction',
	  display: 'display',
	  divisor: 'divisor',
	  dominantbaseline: 'dominantBaseline',
	  'dominant-baseline': 'dominantBaseline',
	  dur: 'dur',
	  dx: 'dx',
	  dy: 'dy',
	  edgemode: 'edgeMode',
	  elevation: 'elevation',
	  enablebackground: 'enableBackground',
	  'enable-background': 'enableBackground',
	  end: 'end',
	  exponent: 'exponent',
	  externalresourcesrequired: 'externalResourcesRequired',
	  fill: 'fill',
	  fillopacity: 'fillOpacity',
	  'fill-opacity': 'fillOpacity',
	  fillrule: 'fillRule',
	  'fill-rule': 'fillRule',
	  filter: 'filter',
	  filterres: 'filterRes',
	  filterunits: 'filterUnits',
	  floodopacity: 'floodOpacity',
	  'flood-opacity': 'floodOpacity',
	  floodcolor: 'floodColor',
	  'flood-color': 'floodColor',
	  focusable: 'focusable',
	  fontfamily: 'fontFamily',
	  'font-family': 'fontFamily',
	  fontsize: 'fontSize',
	  'font-size': 'fontSize',
	  fontsizeadjust: 'fontSizeAdjust',
	  'font-size-adjust': 'fontSizeAdjust',
	  fontstretch: 'fontStretch',
	  'font-stretch': 'fontStretch',
	  fontstyle: 'fontStyle',
	  'font-style': 'fontStyle',
	  fontvariant: 'fontVariant',
	  'font-variant': 'fontVariant',
	  fontweight: 'fontWeight',
	  'font-weight': 'fontWeight',
	  format: 'format',
	  from: 'from',
	  fx: 'fx',
	  fy: 'fy',
	  g1: 'g1',
	  g2: 'g2',
	  glyphname: 'glyphName',
	  'glyph-name': 'glyphName',
	  glyphorientationhorizontal: 'glyphOrientationHorizontal',
	  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
	  glyphorientationvertical: 'glyphOrientationVertical',
	  'glyph-orientation-vertical': 'glyphOrientationVertical',
	  glyphref: 'glyphRef',
	  gradienttransform: 'gradientTransform',
	  gradientunits: 'gradientUnits',
	  hanging: 'hanging',
	  horizadvx: 'horizAdvX',
	  'horiz-adv-x': 'horizAdvX',
	  horizoriginx: 'horizOriginX',
	  'horiz-origin-x': 'horizOriginX',
	  ideographic: 'ideographic',
	  imagerendering: 'imageRendering',
	  'image-rendering': 'imageRendering',
	  in2: 'in2',
	  'in': 'in',
	  inlist: 'inlist',
	  intercept: 'intercept',
	  k1: 'k1',
	  k2: 'k2',
	  k3: 'k3',
	  k4: 'k4',
	  k: 'k',
	  kernelmatrix: 'kernelMatrix',
	  kernelunitlength: 'kernelUnitLength',
	  kerning: 'kerning',
	  keypoints: 'keyPoints',
	  keysplines: 'keySplines',
	  keytimes: 'keyTimes',
	  lengthadjust: 'lengthAdjust',
	  letterspacing: 'letterSpacing',
	  'letter-spacing': 'letterSpacing',
	  lightingcolor: 'lightingColor',
	  'lighting-color': 'lightingColor',
	  limitingconeangle: 'limitingConeAngle',
	  local: 'local',
	  markerend: 'markerEnd',
	  'marker-end': 'markerEnd',
	  markerheight: 'markerHeight',
	  markermid: 'markerMid',
	  'marker-mid': 'markerMid',
	  markerstart: 'markerStart',
	  'marker-start': 'markerStart',
	  markerunits: 'markerUnits',
	  markerwidth: 'markerWidth',
	  mask: 'mask',
	  maskcontentunits: 'maskContentUnits',
	  maskunits: 'maskUnits',
	  mathematical: 'mathematical',
	  mode: 'mode',
	  numoctaves: 'numOctaves',
	  offset: 'offset',
	  opacity: 'opacity',
	  operator: 'operator',
	  order: 'order',
	  orient: 'orient',
	  orientation: 'orientation',
	  origin: 'origin',
	  overflow: 'overflow',
	  overlineposition: 'overlinePosition',
	  'overline-position': 'overlinePosition',
	  overlinethickness: 'overlineThickness',
	  'overline-thickness': 'overlineThickness',
	  paintorder: 'paintOrder',
	  'paint-order': 'paintOrder',
	  panose1: 'panose1',
	  'panose-1': 'panose1',
	  pathlength: 'pathLength',
	  patterncontentunits: 'patternContentUnits',
	  patterntransform: 'patternTransform',
	  patternunits: 'patternUnits',
	  pointerevents: 'pointerEvents',
	  'pointer-events': 'pointerEvents',
	  points: 'points',
	  pointsatx: 'pointsAtX',
	  pointsaty: 'pointsAtY',
	  pointsatz: 'pointsAtZ',
	  prefix: 'prefix',
	  preservealpha: 'preserveAlpha',
	  preserveaspectratio: 'preserveAspectRatio',
	  primitiveunits: 'primitiveUnits',
	  property: 'property',
	  r: 'r',
	  radius: 'radius',
	  refx: 'refX',
	  refy: 'refY',
	  renderingintent: 'renderingIntent',
	  'rendering-intent': 'renderingIntent',
	  repeatcount: 'repeatCount',
	  repeatdur: 'repeatDur',
	  requiredextensions: 'requiredExtensions',
	  requiredfeatures: 'requiredFeatures',
	  resource: 'resource',
	  restart: 'restart',
	  result: 'result',
	  results: 'results',
	  rotate: 'rotate',
	  rx: 'rx',
	  ry: 'ry',
	  scale: 'scale',
	  security: 'security',
	  seed: 'seed',
	  shaperendering: 'shapeRendering',
	  'shape-rendering': 'shapeRendering',
	  slope: 'slope',
	  spacing: 'spacing',
	  specularconstant: 'specularConstant',
	  specularexponent: 'specularExponent',
	  speed: 'speed',
	  spreadmethod: 'spreadMethod',
	  startoffset: 'startOffset',
	  stddeviation: 'stdDeviation',
	  stemh: 'stemh',
	  stemv: 'stemv',
	  stitchtiles: 'stitchTiles',
	  stopcolor: 'stopColor',
	  'stop-color': 'stopColor',
	  stopopacity: 'stopOpacity',
	  'stop-opacity': 'stopOpacity',
	  strikethroughposition: 'strikethroughPosition',
	  'strikethrough-position': 'strikethroughPosition',
	  strikethroughthickness: 'strikethroughThickness',
	  'strikethrough-thickness': 'strikethroughThickness',
	  string: 'string',
	  stroke: 'stroke',
	  strokedasharray: 'strokeDasharray',
	  'stroke-dasharray': 'strokeDasharray',
	  strokedashoffset: 'strokeDashoffset',
	  'stroke-dashoffset': 'strokeDashoffset',
	  strokelinecap: 'strokeLinecap',
	  'stroke-linecap': 'strokeLinecap',
	  strokelinejoin: 'strokeLinejoin',
	  'stroke-linejoin': 'strokeLinejoin',
	  strokemiterlimit: 'strokeMiterlimit',
	  'stroke-miterlimit': 'strokeMiterlimit',
	  strokewidth: 'strokeWidth',
	  'stroke-width': 'strokeWidth',
	  strokeopacity: 'strokeOpacity',
	  'stroke-opacity': 'strokeOpacity',
	  suppresscontenteditablewarning: 'suppressContentEditableWarning',
	  suppresshydrationwarning: 'suppressHydrationWarning',
	  surfacescale: 'surfaceScale',
	  systemlanguage: 'systemLanguage',
	  tablevalues: 'tableValues',
	  targetx: 'targetX',
	  targety: 'targetY',
	  textanchor: 'textAnchor',
	  'text-anchor': 'textAnchor',
	  textdecoration: 'textDecoration',
	  'text-decoration': 'textDecoration',
	  textlength: 'textLength',
	  textrendering: 'textRendering',
	  'text-rendering': 'textRendering',
	  to: 'to',
	  transform: 'transform',
	  'typeof': 'typeof',
	  u1: 'u1',
	  u2: 'u2',
	  underlineposition: 'underlinePosition',
	  'underline-position': 'underlinePosition',
	  underlinethickness: 'underlineThickness',
	  'underline-thickness': 'underlineThickness',
	  unicode: 'unicode',
	  unicodebidi: 'unicodeBidi',
	  'unicode-bidi': 'unicodeBidi',
	  unicoderange: 'unicodeRange',
	  'unicode-range': 'unicodeRange',
	  unitsperem: 'unitsPerEm',
	  'units-per-em': 'unitsPerEm',
	  unselectable: 'unselectable',
	  valphabetic: 'vAlphabetic',
	  'v-alphabetic': 'vAlphabetic',
	  values: 'values',
	  vectoreffect: 'vectorEffect',
	  'vector-effect': 'vectorEffect',
	  version: 'version',
	  vertadvy: 'vertAdvY',
	  'vert-adv-y': 'vertAdvY',
	  vertoriginx: 'vertOriginX',
	  'vert-origin-x': 'vertOriginX',
	  vertoriginy: 'vertOriginY',
	  'vert-origin-y': 'vertOriginY',
	  vhanging: 'vHanging',
	  'v-hanging': 'vHanging',
	  videographic: 'vIdeographic',
	  'v-ideographic': 'vIdeographic',
	  viewbox: 'viewBox',
	  viewtarget: 'viewTarget',
	  visibility: 'visibility',
	  vmathematical: 'vMathematical',
	  'v-mathematical': 'vMathematical',
	  vocab: 'vocab',
	  widths: 'widths',
	  wordspacing: 'wordSpacing',
	  'word-spacing': 'wordSpacing',
	  writingmode: 'writingMode',
	  'writing-mode': 'writingMode',
	  x1: 'x1',
	  x2: 'x2',
	  x: 'x',
	  xchannelselector: 'xChannelSelector',
	  xheight: 'xHeight',
	  'x-height': 'xHeight',
	  xlinkactuate: 'xlinkActuate',
	  'xlink:actuate': 'xlinkActuate',
	  xlinkarcrole: 'xlinkArcrole',
	  'xlink:arcrole': 'xlinkArcrole',
	  xlinkhref: 'xlinkHref',
	  'xlink:href': 'xlinkHref',
	  xlinkrole: 'xlinkRole',
	  'xlink:role': 'xlinkRole',
	  xlinkshow: 'xlinkShow',
	  'xlink:show': 'xlinkShow',
	  xlinktitle: 'xlinkTitle',
	  'xlink:title': 'xlinkTitle',
	  xlinktype: 'xlinkType',
	  'xlink:type': 'xlinkType',
	  xmlbase: 'xmlBase',
	  'xml:base': 'xmlBase',
	  xmllang: 'xmlLang',
	  'xml:lang': 'xmlLang',
	  xmlns: 'xmlns',
	  'xml:space': 'xmlSpace',
	  xmlnsxlink: 'xmlnsXlink',
	  'xmlns:xlink': 'xmlnsXlink',
	  xmlspace: 'xmlSpace',
	  y1: 'y1',
	  y2: 'y2',
	  y: 'y',
	  ychannelselector: 'yChannelSelector',
	  z: 'z',
	  zoomandpan: 'zoomAndPan'
	};

	function getStackAddendum$3() {
	  var stack = ReactDebugCurrentFrame.getStackAddendum();
	  return stack != null ? stack : '';
	}

	var validateProperty$1 = function () {};

	{
	  var warnedProperties$1 = {};
	  var _hasOwnProperty = Object.prototype.hasOwnProperty;
	  var EVENT_NAME_REGEX = /^on./;
	  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
	  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
	  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

	  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
	    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
	      return true;
	    }

	    var lowerCasedName = name.toLowerCase();
	    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
	      warning(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // We can't rely on the event system being injected on the server.
	    if (canUseEventSystem) {
	      if (registrationNameModules.hasOwnProperty(name)) {
	        return true;
	      }
	      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
	      if (registrationName != null) {
	        warning(false, 'Invalid event handler property `%s`. Did you mean `%s`?%s', name, registrationName, getStackAddendum$3());
	        warnedProperties$1[name] = true;
	        return true;
	      }
	      if (EVENT_NAME_REGEX.test(name)) {
	        warning(false, 'Unknown event handler property `%s`. It will be ignored.%s', name, getStackAddendum$3());
	        warnedProperties$1[name] = true;
	        return true;
	      }
	    } else if (EVENT_NAME_REGEX.test(name)) {
	      // If no event plugins have been injected, we are in a server environment.
	      // So we can't tell if the event name is correct for sure, but we can filter
	      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
	      if (INVALID_EVENT_NAME_REGEX.test(name)) {
	        warning(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.%s', name, getStackAddendum$3());
	      }
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // Let the ARIA attribute hook validate ARIA attributes
	    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
	      return true;
	    }

	    if (lowerCasedName === 'innerhtml') {
	      warning(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (lowerCasedName === 'aria') {
	      warning(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
	      warning(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.%s', typeof value, getStackAddendum$3());
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warning(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.%s', name, getStackAddendum$3());
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    var propertyInfo = getPropertyInfo(name);
	    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;

	    // Known attributes should match the casing specified in the property config.
	    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
	      var standardName = possibleStandardNames[lowerCasedName];
	      if (standardName !== name) {
	        warning(false, 'Invalid DOM property `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$3());
	        warnedProperties$1[name] = true;
	        return true;
	      }
	    } else if (!isReserved && name !== lowerCasedName) {
	      // Unknown attributes should have lowercase casing since that's how they
	      // will be cased anyway with server rendering.
	      warning(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.%s', name, lowerCasedName, getStackAddendum$3());
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
	      if (value) {
	        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.%s', value, name, name, value, name, getStackAddendum$3());
	      } else {
	        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', value, name, name, value, name, name, name, getStackAddendum$3());
	      }
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // Now that we've validated casing, do not validate
	    // data types for reserved props
	    if (isReserved) {
	      return true;
	    }

	    // Warn when a known attribute is a bad type
	    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
	      warnedProperties$1[name] = true;
	      return false;
	    }

	    return true;
	  };
	}

	var warnUnknownProperties = function (type, props, canUseEventSystem) {
	  var unknownProps = [];
	  for (var key in props) {
	    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	  if (unknownProps.length === 1) {
	    warning(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$3());
	  } else if (unknownProps.length > 1) {
	    warning(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$3());
	  }
	};

	function validateProperties$2(type, props, canUseEventSystem) {
	  if (isCustomComponent(type, props)) {
	    return;
	  }
	  warnUnknownProperties(type, props, canUseEventSystem);
	}

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	// Based on reading the React.Children implementation. TODO: type this somewhere?

	var toArray = React.Children.toArray;

	var currentDebugStack = void 0;
	var currentDebugElementStack = void 0;

	var getStackAddendum = emptyFunction.thatReturns('');
	var describeStackFrame = emptyFunction.thatReturns('');

	var validatePropertiesInDevelopment = function (type, props) {};
	var setCurrentDebugStack = function (stack) {};
	var pushElementToDebugStack = function (element) {};
	var resetCurrentDebugStack = function () {};

	{
	  validatePropertiesInDevelopment = function (type, props) {
	    validateProperties(type, props);
	    validateProperties$1(type, props);
	    validateProperties$2(type, props, /* canUseEventSystem */false);
	  };

	  describeStackFrame = function (element) {
	    var source = element._source;
	    var type = element.type;
	    var name = getComponentName(type);
	    var ownerName = null;
	    return describeComponentFrame(name, source, ownerName);
	  };

	  currentDebugStack = null;
	  currentDebugElementStack = null;
	  setCurrentDebugStack = function (stack) {
	    var frame = stack[stack.length - 1];
	    currentDebugElementStack = frame.debugElementStack;
	    // We are about to enter a new composite stack, reset the array.
	    currentDebugElementStack.length = 0;
	    currentDebugStack = stack;
	    ReactDebugCurrentFrame.getCurrentStack = getStackAddendum;
	  };
	  pushElementToDebugStack = function (element) {
	    if (currentDebugElementStack !== null) {
	      currentDebugElementStack.push(element);
	    }
	  };
	  resetCurrentDebugStack = function () {
	    currentDebugElementStack = null;
	    currentDebugStack = null;
	    ReactDebugCurrentFrame.getCurrentStack = null;
	  };
	  getStackAddendum = function () {
	    if (currentDebugStack === null) {
	      return '';
	    }
	    var stack = '';
	    var debugStack = currentDebugStack;
	    for (var i = debugStack.length - 1; i >= 0; i--) {
	      var frame = debugStack[i];
	      var _debugElementStack = frame.debugElementStack;
	      for (var ii = _debugElementStack.length - 1; ii >= 0; ii--) {
	        stack += describeStackFrame(_debugElementStack[ii]);
	      }
	    }
	    return stack;
	  };
	}

	var didWarnDefaultInputValue = false;
	var didWarnDefaultChecked = false;
	var didWarnDefaultSelectValue = false;
	var didWarnDefaultTextareaValue = false;
	var didWarnInvalidOptionChildren = false;
	var didWarnAboutNoopUpdateForComponent = {};
	var didWarnAboutBadClass = {};
	var didWarnAboutDeprecatedWillMount = {};
	var didWarnAboutUndefinedDerivedState = {};
	var didWarnAboutUninitializedState = {};
	var valuePropNames = ['value', 'defaultValue'];
	var newlineEatingTags = {
	  listing: true,
	  pre: true,
	  textarea: true
	};

	function getComponentName(type) {
	  return typeof type === 'string' ? type : typeof type === 'function' ? type.displayName || type.name : null;
	}

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	function validateDangerousTag(tag) {
	  if (!validatedTagCache.hasOwnProperty(tag)) {
	    !VALID_TAG_REGEX.test(tag) ? invariant(false, 'Invalid tag: %s', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	function createMarkupForStyles(styles) {
	  var serialized = '';
	  var delimiter = '';
	  for (var styleName in styles) {
	    if (!styles.hasOwnProperty(styleName)) {
	      continue;
	    }
	    var isCustomProperty = styleName.indexOf('--') === 0;
	    var styleValue = styles[styleName];
	    {
	      if (!isCustomProperty) {
	        warnValidStyle$1(styleName, styleValue, getStackAddendum);
	      }
	    }
	    if (styleValue != null) {
	      serialized += delimiter + processStyleName(styleName) + ':';
	      serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

	      delimiter = ';';
	    }
	  }
	  return serialized || null;
	}

	function warnNoop(publicInstance, callerName) {
	  {
	    var _constructor = publicInstance.constructor;
	    var componentName = _constructor && getComponentName(_constructor) || 'ReactClass';
	    var warningKey = componentName + '.' + callerName;
	    if (didWarnAboutNoopUpdateForComponent[warningKey]) {
	      return;
	    }

	    warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, componentName);
	    didWarnAboutNoopUpdateForComponent[warningKey] = true;
	  }
	}

	function shouldConstruct(Component) {
	  return Component.prototype && Component.prototype.isReactComponent;
	}

	function getNonChildrenInnerMarkup(props) {
	  var innerHTML = props.dangerouslySetInnerHTML;
	  if (innerHTML != null) {
	    if (innerHTML.__html != null) {
	      return innerHTML.__html;
	    }
	  } else {
	    var content = props.children;
	    if (typeof content === 'string' || typeof content === 'number') {
	      return escapeTextForBrowser(content);
	    }
	  }
	  return null;
	}

	function flattenTopLevelChildren(children) {
	  if (!React.isValidElement(children)) {
	    return toArray(children);
	  }
	  var element = children;
	  if (element.type !== REACT_FRAGMENT_TYPE) {
	    return [element];
	  }
	  var fragmentChildren = element.props.children;
	  if (!React.isValidElement(fragmentChildren)) {
	    return toArray(fragmentChildren);
	  }
	  var fragmentChildElement = fragmentChildren;
	  return [fragmentChildElement];
	}

	function flattenOptionChildren(children) {
	  var content = '';
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else {
	      {
	        if (!didWarnInvalidOptionChildren) {
	          didWarnInvalidOptionChildren = true;
	          warning(false, 'Only strings and numbers are supported as <option> children.');
	        }
	      }
	    }
	  });
	  return content;
	}

	function maskContext(type, context) {
	  var contextTypes = type.contextTypes;
	  if (!contextTypes) {
	    return emptyObject;
	  }
	  var maskedContext = {};
	  for (var contextName in contextTypes) {
	    maskedContext[contextName] = context[contextName];
	  }
	  return maskedContext;
	}

	function checkContextTypes(typeSpecs, values, location) {
	  {
	    checkPropTypes(typeSpecs, values, location, 'Component', getStackAddendum);
	  }
	}

	function processContext(type, context) {
	  var maskedContext = maskContext(type, context);
	  {
	    if (type.contextTypes) {
	      checkContextTypes(type.contextTypes, maskedContext, 'context');
	    }
	  }
	  return maskedContext;
	}

	var STYLE = 'style';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null,
	  suppressHydrationWarning: null
	};

	function createOpenTagMarkup(tagVerbatim, tagLowercase, props, namespace, makeStaticMarkup, isRootElement) {
	  var ret = '<' + tagVerbatim;

	  for (var propKey in props) {
	    if (!props.hasOwnProperty(propKey)) {
	      continue;
	    }
	    var propValue = props[propKey];
	    if (propValue == null) {
	      continue;
	    }
	    if (propKey === STYLE) {
	      propValue = createMarkupForStyles(propValue);
	    }
	    var markup = null;
	    if (isCustomComponent(tagLowercase, props)) {
	      if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	        markup = createMarkupForCustomAttribute(propKey, propValue);
	      }
	    } else {
	      markup = createMarkupForProperty(propKey, propValue);
	    }
	    if (markup) {
	      ret += ' ' + markup;
	    }
	  }

	  // For static pages, no need to put React ID and checksum. Saves lots of
	  // bytes.
	  if (makeStaticMarkup) {
	    return ret;
	  }

	  if (isRootElement) {
	    ret += ' ' + createMarkupForRoot();
	  }
	  return ret;
	}

	function validateRenderResult(child, type) {
	  if (child === undefined) {
	    invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', getComponentName(type) || 'Component');
	  }
	}

	function resolve(child, context) {
	  while (React.isValidElement(child)) {
	    // Safe because we just checked it's an element.
	    var element = child;
	    var Component = element.type;
	    {
	      pushElementToDebugStack(element);
	    }
	    if (typeof Component !== 'function') {
	      break;
	    }
	    processChild(element, Component);
	  }

	  // Extra closure so queue and replace can be captured properly
	  function processChild(element, Component) {
	    var publicContext = processContext(Component, context);

	    var queue = [];
	    var replace = false;
	    var updater = {
	      isMounted: function (publicInstance) {
	        return false;
	      },
	      enqueueForceUpdate: function (publicInstance) {
	        if (queue === null) {
	          warnNoop(publicInstance, 'forceUpdate');
	          return null;
	        }
	      },
	      enqueueReplaceState: function (publicInstance, completeState) {
	        replace = true;
	        queue = [completeState];
	      },
	      enqueueSetState: function (publicInstance, currentPartialState) {
	        if (queue === null) {
	          warnNoop(publicInstance, 'setState');
	          return null;
	        }
	        queue.push(currentPartialState);
	      }
	    };

	    var inst = void 0;
	    if (shouldConstruct(Component)) {
	      inst = new Component(element.props, publicContext, updater);

	      if (typeof Component.getDerivedStateFromProps === 'function') {
	        {
	          if (inst.state === null || inst.state === undefined) {
	            var componentName = getComponentName(Component) || 'Unknown';
	            if (!didWarnAboutUninitializedState[componentName]) {
	              warning(false, '%s: Did not properly initialize state during construction. ' + 'Expected state to be an object, but it was %s.', componentName, inst.state === null ? 'null' : 'undefined');
	              didWarnAboutUninitializedState[componentName] = true;
	            }
	          }
	        }

	        var partialState = Component.getDerivedStateFromProps.call(null, element.props, inst.state);

	        {
	          if (partialState === undefined) {
	            var _componentName = getComponentName(Component) || 'Unknown';
	            if (!didWarnAboutUndefinedDerivedState[_componentName]) {
	              warning(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', _componentName);
	              didWarnAboutUndefinedDerivedState[_componentName] = true;
	            }
	          }
	        }

	        if (partialState != null) {
	          inst.state = _assign({}, inst.state, partialState);
	        }
	      }
	    } else {
	      {
	        if (Component.prototype && typeof Component.prototype.render === 'function') {
	          var _componentName2 = getComponentName(Component) || 'Unknown';

	          if (!didWarnAboutBadClass[_componentName2]) {
	            warning(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', _componentName2, _componentName2);
	            didWarnAboutBadClass[_componentName2] = true;
	          }
	        }
	      }
	      inst = Component(element.props, publicContext, updater);
	      if (inst == null || inst.render == null) {
	        child = inst;
	        validateRenderResult(child, Component);
	        return;
	      }
	    }

	    inst.props = element.props;
	    inst.context = publicContext;
	    inst.updater = updater;

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    if (typeof inst.UNSAFE_componentWillMount === 'function' || typeof inst.componentWillMount === 'function') {
	      if (typeof inst.componentWillMount === 'function') {
	        {
	          if (warnAboutDeprecatedLifecycles && inst.componentWillMount.__suppressDeprecationWarning !== true) {
	            var _componentName3 = getComponentName(Component) || 'Unknown';

	            if (!didWarnAboutDeprecatedWillMount[_componentName3]) {
	              lowPriorityWarning$1(false, '%s: componentWillMount() is deprecated and will be ' + 'removed in the next major version. Read about the motivations ' + 'behind this change: ' + 'https://fb.me/react-async-component-lifecycle-hooks' + '\n\n' + 'As a temporary workaround, you can rename to ' + 'UNSAFE_componentWillMount instead.', _componentName3);
	              didWarnAboutDeprecatedWillMount[_componentName3] = true;
	            }
	          }
	        }

	        // In order to support react-lifecycles-compat polyfilled components,
	        // Unsafe lifecycles should not be invoked for any component with the new gDSFP.
	        if (typeof Component.getDerivedStateFromProps !== 'function') {
	          inst.componentWillMount();
	        }
	      }
	      if (typeof inst.UNSAFE_componentWillMount === 'function' && typeof Component.getDerivedStateFromProps !== 'function') {
	        // In order to support react-lifecycles-compat polyfilled components,
	        // Unsafe lifecycles should not be invoked for any component with the new gDSFP.
	        inst.UNSAFE_componentWillMount();
	      }
	      if (queue.length) {
	        var oldQueue = queue;
	        var oldReplace = replace;
	        queue = null;
	        replace = false;

	        if (oldReplace && oldQueue.length === 1) {
	          inst.state = oldQueue[0];
	        } else {
	          var nextState = oldReplace ? oldQueue[0] : inst.state;
	          var dontMutate = true;
	          for (var i = oldReplace ? 1 : 0; i < oldQueue.length; i++) {
	            var partial = oldQueue[i];
	            var _partialState = typeof partial === 'function' ? partial.call(inst, nextState, element.props, publicContext) : partial;
	            if (_partialState != null) {
	              if (dontMutate) {
	                dontMutate = false;
	                nextState = _assign({}, nextState, _partialState);
	              } else {
	                _assign(nextState, _partialState);
	              }
	            }
	          }
	          inst.state = nextState;
	        }
	      } else {
	        queue = null;
	      }
	    }
	    child = inst.render();

	    {
	      if (child === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        child = null;
	      }
	    }
	    validateRenderResult(child, Component);

	    var childContext = void 0;
	    if (typeof inst.getChildContext === 'function') {
	      var childContextTypes = Component.childContextTypes;
	      if (typeof childContextTypes === 'object') {
	        childContext = inst.getChildContext();
	        for (var contextKey in childContext) {
	          !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(Component) || 'Unknown', contextKey) : void 0;
	        }
	      } else {
	        warning(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', getComponentName(Component) || 'Unknown');
	      }
	    }
	    if (childContext) {
	      context = _assign({}, context, childContext);
	    }
	  }
	  return { child: child, context: context };
	}

	var ReactDOMServerRenderer = function () {
	  function ReactDOMServerRenderer(children, makeStaticMarkup) {
	    _classCallCheck(this, ReactDOMServerRenderer);

	    var flatChildren = flattenTopLevelChildren(children);

	    var topFrame = {
	      type: null,
	      // Assume all trees start in the HTML namespace (not totally true, but
	      // this is what we did historically)
	      domNamespace: Namespaces.html,
	      children: flatChildren,
	      childIndex: 0,
	      context: emptyObject,
	      footer: ''
	    };
	    {
	      topFrame.debugElementStack = [];
	    }
	    this.stack = [topFrame];
	    this.exhausted = false;
	    this.currentSelectValue = null;
	    this.previousWasTextNode = false;
	    this.makeStaticMarkup = makeStaticMarkup;

	    // Context (new API)
	    this.providerStack = []; // Stack of provider objects
	    this.providerIndex = -1;
	  }
	  // TODO: type this more strictly:


	  ReactDOMServerRenderer.prototype.pushProvider = function pushProvider(provider) {
	    this.providerIndex += 1;
	    this.providerStack[this.providerIndex] = provider;
	    var context = provider.type.context;
	    context._currentValue = provider.props.value;
	  };

	  ReactDOMServerRenderer.prototype.popProvider = function popProvider(provider) {
	    {
	      warning(this.providerIndex > -1 && provider === this.providerStack[this.providerIndex], 'Unexpected pop.');
	    }
	    this.providerStack[this.providerIndex] = null;
	    this.providerIndex -= 1;
	    var context = provider.type.context;
	    if (this.providerIndex < 0) {
	      context._currentValue = context._defaultValue;
	    } else {
	      // We assume this type is correct because of the index check above.
	      var previousProvider = this.providerStack[this.providerIndex];
	      context._currentValue = previousProvider.props.value;
	    }
	  };

	  ReactDOMServerRenderer.prototype.read = function read(bytes) {
	    if (this.exhausted) {
	      return null;
	    }

	    var out = '';
	    while (out.length < bytes) {
	      if (this.stack.length === 0) {
	        this.exhausted = true;
	        break;
	      }
	      var frame = this.stack[this.stack.length - 1];
	      if (frame.childIndex >= frame.children.length) {
	        var _footer = frame.footer;
	        out += _footer;
	        if (_footer !== '') {
	          this.previousWasTextNode = false;
	        }
	        this.stack.pop();
	        if (frame.type === 'select') {
	          this.currentSelectValue = null;
	        } else if (frame.type != null && frame.type.type != null && frame.type.type.$$typeof === REACT_PROVIDER_TYPE) {
	          var provider = frame.type;
	          this.popProvider(provider);
	        }
	        continue;
	      }
	      var child = frame.children[frame.childIndex++];
	      {
	        setCurrentDebugStack(this.stack);
	      }
	      out += this.render(child, frame.context, frame.domNamespace);
	      {
	        // TODO: Handle reentrant server render calls. This doesn't.
	        resetCurrentDebugStack();
	      }
	    }
	    return out;
	  };

	  ReactDOMServerRenderer.prototype.render = function render(child, context, parentNamespace) {
	    if (typeof child === 'string' || typeof child === 'number') {
	      var text = '' + child;
	      if (text === '') {
	        return '';
	      }
	      if (this.makeStaticMarkup) {
	        return escapeTextForBrowser(text);
	      }
	      if (this.previousWasTextNode) {
	        return '<!-- -->' + escapeTextForBrowser(text);
	      }
	      this.previousWasTextNode = true;
	      return escapeTextForBrowser(text);
	    } else {
	      var nextChild = void 0;

	      var _resolve = resolve(child, context);

	      nextChild = _resolve.child;
	      context = _resolve.context;

	      if (nextChild === null || nextChild === false) {
	        return '';
	      } else if (!React.isValidElement(nextChild)) {
	        if (nextChild != null && nextChild.$$typeof != null) {
	          // Catch unexpected special types early.
	          var $$typeof = nextChild.$$typeof;
	          !($$typeof !== REACT_PORTAL_TYPE) ? invariant(false, 'Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.') : void 0;
	          // Catch-all to prevent an infinite loop if React.Children.toArray() supports some new type.
	          invariant(false, 'Unknown element-like object type: %s. This is likely a bug in React. Please file an issue.', $$typeof.toString());
	        }
	        var nextChildren = toArray(nextChild);
	        var frame = {
	          type: null,
	          domNamespace: parentNamespace,
	          children: nextChildren,
	          childIndex: 0,
	          context: context,
	          footer: ''
	        };
	        {
	          frame.debugElementStack = [];
	        }
	        this.stack.push(frame);
	        return '';
	      }
	      // Safe because we just checked it's an element.
	      var nextElement = nextChild;
	      var elementType = nextElement.type;

	      if (typeof elementType === 'string') {
	        return this.renderDOM(nextElement, context, parentNamespace);
	      }

	      switch (elementType) {
	        case REACT_STRICT_MODE_TYPE:
	        case REACT_ASYNC_MODE_TYPE:
	        case REACT_FRAGMENT_TYPE:
	          {
	            var _nextChildren = toArray(nextChild.props.children);
	            var _frame = {
	              type: null,
	              domNamespace: parentNamespace,
	              children: _nextChildren,
	              childIndex: 0,
	              context: context,
	              footer: ''
	            };
	            {
	              _frame.debugElementStack = [];
	            }
	            this.stack.push(_frame);
	            return '';
	          }
	        case REACT_CALL_TYPE:
	        case REACT_RETURN_TYPE:
	          invariant(false, 'The experimental Call and Return types are not currently supported by the server renderer.');
	        // eslint-disable-next-line-no-fallthrough
	        default:
	          break;
	      }
	      if (typeof elementType === 'object' && elementType !== null) {
	        switch (elementType.$$typeof) {
	          case REACT_FORWARD_REF_TYPE:
	            {
	              var element = nextChild;
	              var _nextChildren2 = toArray(elementType.render(element.props, element.ref));
	              var _frame2 = {
	                type: null,
	                domNamespace: parentNamespace,
	                children: _nextChildren2,
	                childIndex: 0,
	                context: context,
	                footer: ''
	              };
	              {
	                _frame2.debugElementStack = [];
	              }
	              this.stack.push(_frame2);
	              return '';
	            }
	          case REACT_PROVIDER_TYPE:
	            {
	              var provider = nextChild;
	              var nextProps = provider.props;
	              var _nextChildren3 = toArray(nextProps.children);
	              var _frame3 = {
	                type: provider,
	                domNamespace: parentNamespace,
	                children: _nextChildren3,
	                childIndex: 0,
	                context: context,
	                footer: ''
	              };
	              {
	                _frame3.debugElementStack = [];
	              }

	              this.pushProvider(provider);

	              this.stack.push(_frame3);
	              return '';
	            }
	          case REACT_CONTEXT_TYPE:
	            {
	              var consumer = nextChild;
	              var _nextProps = consumer.props;
	              var nextValue = consumer.type._currentValue;

	              var _nextChildren4 = toArray(_nextProps.children(nextValue));
	              var _frame4 = {
	                type: nextChild,
	                domNamespace: parentNamespace,
	                children: _nextChildren4,
	                childIndex: 0,
	                context: context,
	                footer: ''
	              };
	              {
	                _frame4.debugElementStack = [];
	              }
	              this.stack.push(_frame4);
	              return '';
	            }
	          default:
	            break;
	        }
	      }

	      var info = '';
	      {
	        var owner = nextElement._owner;
	        if (elementType === undefined || typeof elementType === 'object' && elementType !== null && Object.keys(elementType).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
	        }
	        var ownerName = owner ? getComponentName(owner) : null;
	        if (ownerName) {
	          info += '\n\nCheck the render method of `' + ownerName + '`.';
	        }
	      }
	      invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', elementType == null ? elementType : typeof elementType, info);
	    }
	  };

	  ReactDOMServerRenderer.prototype.renderDOM = function renderDOM(element, context, parentNamespace) {
	    var tag = element.type.toLowerCase();

	    var namespace = parentNamespace;
	    if (parentNamespace === Namespaces.html) {
	      namespace = getIntrinsicNamespace(tag);
	    }

	    {
	      if (namespace === Namespaces.html) {
	        // Should this check be gated by parent namespace? Not sure we want to
	        // allow <SVG> or <mATH>.
	        warning(tag === element.type, '<%s /> is using uppercase HTML. Always use lowercase HTML tags ' + 'in React.', element.type);
	      }
	    }

	    validateDangerousTag(tag);

	    var props = element.props;
	    if (tag === 'input') {
	      {
	        ReactControlledValuePropTypes.checkPropTypes('input', props, getStackAddendum);

	        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnDefaultChecked) {
	          warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', 'A component', props.type);
	          didWarnDefaultChecked = true;
	        }
	        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultInputValue) {
	          warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', 'A component', props.type);
	          didWarnDefaultInputValue = true;
	        }
	      }

	      props = _assign({
	        type: undefined
	      }, props, {
	        defaultChecked: undefined,
	        defaultValue: undefined,
	        value: props.value != null ? props.value : props.defaultValue,
	        checked: props.checked != null ? props.checked : props.defaultChecked
	      });
	    } else if (tag === 'textarea') {
	      {
	        ReactControlledValuePropTypes.checkPropTypes('textarea', props, getStackAddendum);
	        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultTextareaValue) {
	          warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
	          didWarnDefaultTextareaValue = true;
	        }
	      }

	      var initialValue = props.value;
	      if (initialValue == null) {
	        var defaultValue = props.defaultValue;
	        // TODO (yungsters): Remove support for children content in <textarea>.
	        var textareaChildren = props.children;
	        if (textareaChildren != null) {
	          {
	            warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
	          }
	          !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
	          if (Array.isArray(textareaChildren)) {
	            !(textareaChildren.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
	            textareaChildren = textareaChildren[0];
	          }

	          defaultValue = '' + textareaChildren;
	        }
	        if (defaultValue == null) {
	          defaultValue = '';
	        }
	        initialValue = defaultValue;
	      }

	      props = _assign({}, props, {
	        value: undefined,
	        children: '' + initialValue
	      });
	    } else if (tag === 'select') {
	      {
	        ReactControlledValuePropTypes.checkPropTypes('select', props, getStackAddendum);

	        for (var i = 0; i < valuePropNames.length; i++) {
	          var propName = valuePropNames[i];
	          if (props[propName] == null) {
	            continue;
	          }
	          var isArray = Array.isArray(props[propName]);
	          if (props.multiple && !isArray) {
	            warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, '');
	          } else if (!props.multiple && isArray) {
	            warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, '');
	          }
	        }

	        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnDefaultSelectValue) {
	          warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
	          didWarnDefaultSelectValue = true;
	        }
	      }
	      this.currentSelectValue = props.value != null ? props.value : props.defaultValue;
	      props = _assign({}, props, {
	        value: undefined
	      });
	    } else if (tag === 'option') {
	      var selected = null;
	      var selectValue = this.currentSelectValue;
	      var optionChildren = flattenOptionChildren(props.children);
	      if (selectValue != null) {
	        var value = void 0;
	        if (props.value != null) {
	          value = props.value + '';
	        } else {
	          value = optionChildren;
	        }
	        selected = false;
	        if (Array.isArray(selectValue)) {
	          // multiple
	          for (var j = 0; j < selectValue.length; j++) {
	            if ('' + selectValue[j] === value) {
	              selected = true;
	              break;
	            }
	          }
	        } else {
	          selected = '' + selectValue === value;
	        }

	        props = _assign({
	          selected: undefined,
	          children: undefined
	        }, props, {
	          selected: selected,
	          children: optionChildren
	        });
	      }
	    }

	    {
	      validatePropertiesInDevelopment(tag, props);
	    }

	    assertValidProps(tag, props, getStackAddendum);

	    var out = createOpenTagMarkup(element.type, tag, props, namespace, this.makeStaticMarkup, this.stack.length === 1);
	    var footer = '';
	    if (omittedCloseTags.hasOwnProperty(tag)) {
	      out += '/>';
	    } else {
	      out += '>';
	      footer = '</' + element.type + '>';
	    }
	    var children = void 0;
	    var innerMarkup = getNonChildrenInnerMarkup(props);
	    if (innerMarkup != null) {
	      children = [];
	      if (newlineEatingTags[tag] && innerMarkup.charAt(0) === '\n') {
	        // text/html ignores the first character in these tags if it's a newline
	        // Prefer to break application/xml over text/html (for now) by adding
	        // a newline specifically to get eaten by the parser. (Alternately for
	        // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	        // \r is normalized out by HTMLTextAreaElement#value.)
	        // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	        // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	        // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	        // See: Parsing of "textarea" "listing" and "pre" elements
	        //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	        out += '\n';
	      }
	      out += innerMarkup;
	    } else {
	      children = toArray(props.children);
	    }
	    var frame = {
	      domNamespace: getChildNamespace(parentNamespace, element.type),
	      type: tag,
	      children: children,
	      childIndex: 0,
	      context: context,
	      footer: footer
	    };
	    {
	      frame.debugElementStack = [];
	    }
	    this.stack.push(frame);
	    this.previousWasTextNode = false;
	    return out;
	  };

	  return ReactDOMServerRenderer;
	}();

	/**
	 * Render a ReactElement to its initial HTML. This should only be used on the
	 * server.
	 * See https://reactjs.org/docs/react-dom-server.html#rendertostring
	 */
	function renderToString(element) {
	  var renderer = new ReactDOMServerRenderer(element, false);
	  var markup = renderer.read(Infinity);
	  return markup;
	}

	/**
	 * Similar to renderToString, except this doesn't create extra DOM attributes
	 * such as data-react-id that React uses internally.
	 * See https://reactjs.org/docs/react-dom-server.html#rendertostaticmarkup
	 */
	function renderToStaticMarkup(element) {
	  var renderer = new ReactDOMServerRenderer(element, true);
	  var markup = renderer.read(Infinity);
	  return markup;
	}

	function renderToNodeStream() {
	  invariant(false, 'ReactDOMServer.renderToNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToString() instead.');
	}

	function renderToStaticNodeStream() {
	  invariant(false, 'ReactDOMServer.renderToStaticNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToStaticMarkup() instead.');
	}

	// Note: when changing this, also consider https://github.com/facebook/react/issues/11526
	var ReactDOMServerBrowser = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup,
	  renderToNodeStream: renderToNodeStream,
	  renderToStaticNodeStream: renderToStaticNodeStream,
	  version: ReactVersion
	};

	var ReactDOMServerBrowser$1 = Object.freeze({
		default: ReactDOMServerBrowser
	});

	var ReactDOMServer = ( ReactDOMServerBrowser$1 && ReactDOMServerBrowser ) || ReactDOMServerBrowser$1;

	// TODO: decide on the top-level export form.
	// This is hacky but makes it work with both Rollup and Jest
	var server_browser = ReactDOMServer['default'] ? ReactDOMServer['default'] : ReactDOMServer;

	module.exports = server_browser;
	  })();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(210);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 210 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	__webpack_require__(212);
	var _rollupPluginBabelHelpers = __webpack_require__(268);
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	var PropTypes = __webpack_require__(269);
	var PropTypes__default = _interopDefault(PropTypes);
	__webpack_require__(277);
	var index = __webpack_require__(283);
	var index$1 = __webpack_require__(328);
	__webpack_require__(329);
	var isEqual = _interopDefault(__webpack_require__(331));
	var hooks = __webpack_require__(413);
	var index$2 = __webpack_require__(421);
	var index$3 = __webpack_require__(425);
	var index$4 = __webpack_require__(427);

	var Dropdown = React.forwardRef(function (_ref, ref) {
	  var options = _ref.options,
	      defaultValue = _ref.defaultValue,
	      GroupRenderer = _ref.GroupRenderer,
	      OptionRenderer = _ref.OptionRenderer,
	      OptionContainerRenderer = _ref.OptionContainerRenderer,
	      ButtonRenderer = _ref.ButtonRenderer,
	      ContainerRenderer = _ref.ContainerRenderer,
	      TextInputRenderer = _ref.TextInputRenderer,
	      onOptionSelect = _ref.onOptionSelect,
	      closeOnOptionSelect = _ref.closeOnOptionSelect,
	      popoverProps = _ref.popoverProps,
	      disabled = _ref.disabled,
	      filterable = _ref.filterable,
	      extendable = _ref.extendable,
	      onTextInputChange = _ref.onTextInputChange,
	      onOptionAdded = _ref.onOptionAdded,
	      allowEmpty = _ref.allowEmpty,
	      placeholder = _ref.placeholder,
	      textInputPlaceholder = _ref.textInputPlaceholder;
	  var textInputRef = React.useRef();
	  var buttonRef = React.useRef();
	  var containerRef = React.useRef();
	  var dropdownRef = React.useRef();
	  var rootRef = hooks.useCombinedRefs(dropdownRef, ref);

	  var _useState = React.useState(false),
	      _useState2 = _rollupPluginBabelHelpers.slicedToArray(_useState, 2),
	      selectedOption = _useState2[0],
	      setSelectedOption = _useState2[1];

	  var _useClickOutsideState = hooks.useClickOutsideState(false, [containerRef, buttonRef]),
	      _useClickOutsideState2 = _rollupPluginBabelHelpers.slicedToArray(_useClickOutsideState, 2),
	      isOptionsVisible = _useClickOutsideState2[0],
	      _setOptionsVisibility = _useClickOutsideState2[1];

	  var _useState3 = React.useState(''),
	      _useState4 = _rollupPluginBabelHelpers.slicedToArray(_useState3, 2),
	      textInputValue = _useState4[0],
	      _setTextInputValue = _useState4[1];

	  var filteredOptions = hooks.useFuse(options, filterable ? textInputValue : undefined).map(function (each) {
	    return each.item ? each.item : each;
	  });

	  var handleInputChange = function handleInputChange(e) {
	    var _ref2 = typeof e === 'string' ? {
	      value: e
	    } : e.target,
	        value = _ref2.value;

	    _setTextInputValue(value);

	    onTextInputChange(value);
	  };

	  var clearInput = function clearInput() {
	    return handleInputChange('');
	  };

	  var handleChangeOptionsVisibility = function handleChangeOptionsVisibility(visible) {
	    clearInput();

	    _setOptionsVisibility(visible);
	  };

	  var checkOptionSelectionState = function checkOptionSelectionState(option) {
	    if (selectedOption && option && selectedOption.value && option.value) {
	      return selectedOption.value === option.value;
	    }

	    return false;
	  };

	  var onButtonClick = function onButtonClick() {
	    return handleChangeOptionsVisibility(!isOptionsVisible);
	  };

	  var onButtonKeyPress = function onButtonKeyPress(event) {
	    return index.isPressedKeyEnter(event) && handleChangeOptionsVisibility(!isOptionsVisible);
	  };

	  var setSelected = function setSelected(option) {
	    if (option && option.disabled) return;
	    clearInput();
	    setSelectedOption(option);

	    if (option) {
	      var isDisabled = option.disabled,
	          rest = _rollupPluginBabelHelpers.objectWithoutProperties(option, ["disabled"]);

	      onOptionSelect(rest);
	    } else {
	      // Selection must be cleared
	      onOptionSelect();
	    }

	    if (closeOnOptionSelect) {
	      handleChangeOptionsVisibility(false);
	    }
	  };

	  var findByText = function findByText(text) {
	    return options.find(function (opt) {
	      return opt.text.toLowerCase() === text.toLowerCase();
	    });
	  };

	  var handleAddNewOption = function handleAddNewOption(newOptionText) {
	    var alreadyHave = findByText(newOptionText);

	    if (alreadyHave) {
	      setSelected(alreadyHave);
	      return;
	    }

	    clearInput();
	    onOptionAdded(newOptionText);
	  };

	  var handleKeyDown = function handleKeyDown(e) {
	    if (extendable && textInputValue && index.isPressedKeyEnter(e)) {
	      handleAddNewOption(textInputValue);
	    }
	  };

	  var clearSelection = function clearSelection() {
	    setSelected();
	  };

	  hooks.useEffectIgnoreFirst(function () {
	    var foundByValue = index.findOptionByValue(defaultValue, options, allowEmpty); // Check every possible difference on the option.
	    // It may have other attributes besides text which affects selected option visibility especially when used with custom option renderer

	    if (!isEqual(foundByValue, selectedOption)) {
	      if (foundByValue) {
	        setSelectedOption(foundByValue);
	      } else {
	        setSelectedOption(false);
	      }
	    }
	  }, [defaultValue, options]);
	  React.useEffect(function () {
	    var foundByValue = index.findOptionByValue(defaultValue, options, allowEmpty);

	    if (foundByValue) {
	      setSelectedOption(foundByValue);
	    }
	  }, []);
	  React.useEffect(function () {
	    if (isOptionsVisible) {
	      if (textInputRef.current) {
	        setTimeout(function () {
	          // Popper renders content as display:none at first, and focus call is not working on non displayed elements
	          textInputRef.current.focus();
	        });
	      }
	    }
	  }, [isOptionsVisible]);
	  React.useImperativeHandle(rootRef, function () {
	    return {
	      buttonRef: buttonRef,
	      containerRef: containerRef,
	      setSelected: setSelected,
	      setOptionsVisibility: handleChangeOptionsVisibility,
	      clearSelection: clearSelection
	    };
	  });
	  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(ButtonRenderer, {
	    ref: buttonRef,
	    isOptionsVisible: isOptionsVisible,
	    option: selectedOption,
	    onClick: onButtonClick,
	    onKeyPress: onButtonKeyPress,
	    disabled: disabled,
	    placeholder: placeholder
	  }), isOptionsVisible && /*#__PURE__*/React__default.createElement(index$2, _rollupPluginBabelHelpers.extends({
	    ref: containerRef,
	    targetRef: buttonRef
	  }, popoverProps), filterable || extendable ? /*#__PURE__*/React__default.createElement(TextInputRenderer, {
	    ref: textInputRef,
	    type: extendable ? 'text' : 'search',
	    value: textInputValue,
	    placeholder: textInputPlaceholder || (extendable ? 'Type to add' : 'Type to filter'),
	    onChange: handleInputChange,
	    onKeyDown: handleKeyDown
	  }) : null, /*#__PURE__*/React__default.createElement(index$3, {
	    options: filteredOptions,
	    setSelected: setSelected,
	    GroupRenderer: GroupRenderer,
	    OptionRenderer: OptionRenderer,
	    ContainerRenderer: ContainerRenderer,
	    OptionContainerRenderer: OptionContainerRenderer,
	    checkOptionSelectionState: checkOptionSelectionState
	  })));
	});
	Dropdown.propTypes = {
	  options: PropTypes.arrayOf(PropTypes.shape({
	    text: PropTypes.string,
	    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
	  })),
	  disabled: PropTypes.bool,
	  popoverProps: PropTypes.shape({}),
	  GroupRenderer: PropTypes.elementType,
	  ButtonRenderer: PropTypes.elementType,
	  OptionRenderer: PropTypes.elementType,
	  OptionContainerRenderer: PropTypes.elementType,
	  ContainerRenderer: PropTypes.elementType,
	  TextInputRenderer: PropTypes.elementType,
	  closeOnOptionSelect: PropTypes.bool,
	  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
	  onOptionSelect: PropTypes.func,
	  filterable: PropTypes.bool,
	  extendable: PropTypes.bool,
	  onTextInputChange: PropTypes.func,
	  onOptionAdded: PropTypes.func,
	  allowEmpty: PropTypes.bool,
	  placeholder: PropTypes.string,
	  textInputPlaceholder: PropTypes.string
	};
	/* eslint react/prop-types: "off" */

	Dropdown.defaultProps = {
	  options: [],
	  disabled: false,
	  defaultValue: undefined,
	  closeOnOptionSelect: true,
	  popoverProps: {},
	  GroupRenderer: function GroupRenderer(_ref3) {
	    var text = _ref3.text,
	        children = _ref3.children,
	        props = _rollupPluginBabelHelpers.objectWithoutProperties(_ref3, ["text", "children"]);

	    return /*#__PURE__*/React__default.createElement("div", props, /*#__PURE__*/React__default.createElement("b", null, text), /*#__PURE__*/React__default.createElement("div", null, children));
	  },
	  ContainerRenderer: function ContainerRenderer(_ref4) {
	    var children = _ref4.children;
	    return /*#__PURE__*/React__default.createElement("ul", null, children);
	  },
	  ButtonRenderer: React.forwardRef(function (_ref5, ref) {
	    var _ref5$option = _ref5.option;
	    _ref5$option = _ref5$option === void 0 ? {} : _ref5$option;

	    var text = _ref5$option.text,
	        value = _ref5$option.value,
	        placeholder = _ref5.placeholder,
	        props = _rollupPluginBabelHelpers.objectWithoutProperties(_ref5, ["option", "placeholder"]);

	    return /*#__PURE__*/React__default.createElement(index$1, _rollupPluginBabelHelpers.extends({
	      ref: ref,
	      type: "button",
	      "data-value": value
	    }, props), text || placeholder);
	  }),
	  OptionRenderer: function OptionRenderer(_ref6) {
	    var _ref6$option = _ref6.option,
	        text = _ref6$option.text,
	        value = _ref6$option.value,
	        isSelected = _ref6.isSelected;
	    return /*#__PURE__*/React__default.createElement("div", {
	      "data-value": value,
	      "data-selected": isSelected
	    }, text);
	  },
	  OptionContainerRenderer: function OptionContainerRenderer(props) {
	    return /*#__PURE__*/React__default.createElement("li", props);
	  },
	  TextInputRenderer: React.forwardRef(function (_ref7, ref) {
	    var props = Object.assign({}, _ref7);
	    return /*#__PURE__*/React__default.createElement(index$4, _rollupPluginBabelHelpers.extends({
	      ref: ref
	    }, props));
	  }),
	  onOptionSelect: function onOptionSelect(f) {
	    return f;
	  },
	  filterable: false,
	  extendable: false,
	  onTextInputChange: function onTextInputChange(f) {
	    return f;
	  },
	  onOptionAdded: function onOptionAdded(f) {
	    return f;
	  },
	  allowEmpty: false,
	  placeholder: 'Please select',
	  textInputPlaceholder: ''
	};

	module.exports = Dropdown;
	//# sourceMappingURL=index.js.map


/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $ = __webpack_require__(213);
	var $map = __webpack_require__(256).map;
	var fails = __webpack_require__(217);
	var arrayMethodHasSpeciesSupport = __webpack_require__(265);

	var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');
	// FF49- issue
	var USES_TO_LENGTH = HAS_SPECIES_SUPPORT && !fails(function () {
	  [].map.call({ length: -1, 0: 1 }, function (it) { throw it; });
	});

	// `Array.prototype.map` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.map
	// with adding support of @@species
	$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
	  map: function map(callbackfn /* , thisArg */) {
	    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});


/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(214);
	var getOwnPropertyDescriptor = __webpack_require__(215).f;
	var createNonEnumerableProperty = __webpack_require__(229);
	var redefine = __webpack_require__(232);
	var setGlobal = __webpack_require__(233);
	var copyConstructorProperties = __webpack_require__(243);
	var isForced = __webpack_require__(255);

	/*
	  options.target      - name of the target object
	  options.global      - target is the global object
	  options.stat        - export as static methods of target
	  options.proto       - export as prototype methods of target
	  options.real        - real prototype method for the `pure` version
	  options.forced      - export even if the native feature is available
	  options.bind        - bind methods to the target, required for the `pure` version
	  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
	  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
	  options.sham        - add a flag to not completely full polyfills
	  options.enumerable  - export as enumerable property
	  options.noTargetGet - prevent calling a getter on target
	*/
	module.exports = function (options, source) {
	  var TARGET = options.target;
	  var GLOBAL = options.global;
	  var STATIC = options.stat;
	  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
	  if (GLOBAL) {
	    target = global;
	  } else if (STATIC) {
	    target = global[TARGET] || setGlobal(TARGET, {});
	  } else {
	    target = (global[TARGET] || {}).prototype;
	  }
	  if (target) for (key in source) {
	    sourceProperty = source[key];
	    if (options.noTargetGet) {
	      descriptor = getOwnPropertyDescriptor(target, key);
	      targetProperty = descriptor && descriptor.value;
	    } else targetProperty = target[key];
	    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
	    // contained in target
	    if (!FORCED && targetProperty !== undefined) {
	      if (typeof sourceProperty === typeof targetProperty) continue;
	      copyConstructorProperties(sourceProperty, targetProperty);
	    }
	    // add a flag to not completely full polyfills
	    if (options.sham || (targetProperty && targetProperty.sham)) {
	      createNonEnumerableProperty(sourceProperty, 'sham', true);
	    }
	    // extend global
	    redefine(target, key, sourceProperty, options);
	  }
	};


/***/ },
/* 214 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
	  return it && it.Math == Math && it;
	};

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	module.exports =
	  // eslint-disable-next-line no-undef
	  check(typeof globalThis == 'object' && globalThis) ||
	  check(typeof window == 'object' && window) ||
	  check(typeof self == 'object' && self) ||
	  check(typeof global == 'object' && global) ||
	  // eslint-disable-next-line no-new-func
	  Function('return this')();

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	var DESCRIPTORS = __webpack_require__(216);
	var propertyIsEnumerableModule = __webpack_require__(218);
	var createPropertyDescriptor = __webpack_require__(219);
	var toIndexedObject = __webpack_require__(220);
	var toPrimitive = __webpack_require__(224);
	var has = __webpack_require__(226);
	var IE8_DOM_DEFINE = __webpack_require__(227);

	var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

	// `Object.getOwnPropertyDescriptor` method
	// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
	exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
	  O = toIndexedObject(O);
	  P = toPrimitive(P, true);
	  if (IE8_DOM_DEFINE) try {
	    return nativeGetOwnPropertyDescriptor(O, P);
	  } catch (error) { /* empty */ }
	  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
	};


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(217);

	// Thank's IE8 for his funny defineProperty
	module.exports = !fails(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ },
/* 217 */
/***/ function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (error) {
	    return true;
	  }
	};


/***/ },
/* 218 */
/***/ function(module, exports) {

	'use strict';
	var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
	var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

	// Nashorn ~ JDK8 bug
	var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

	// `Object.prototype.propertyIsEnumerable` method implementation
	// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
	exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
	  var descriptor = getOwnPropertyDescriptor(this, V);
	  return !!descriptor && descriptor.enumerable;
	} : nativePropertyIsEnumerable;


/***/ },
/* 219 */
/***/ function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	// toObject with fallback for non-array-like ES3 strings
	var IndexedObject = __webpack_require__(221);
	var requireObjectCoercible = __webpack_require__(223);

	module.exports = function (it) {
	  return IndexedObject(requireObjectCoercible(it));
	};


/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(217);
	var classof = __webpack_require__(222);

	var split = ''.split;

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	module.exports = fails(function () {
	  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
	  // eslint-disable-next-line no-prototype-builtins
	  return !Object('z').propertyIsEnumerable(0);
	}) ? function (it) {
	  return classof(it) == 'String' ? split.call(it, '') : Object(it);
	} : Object;


/***/ },
/* 222 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ },
/* 223 */
/***/ function(module, exports) {

	// `RequireObjectCoercible` abstract operation
	// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on " + it);
	  return it;
	};


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(225);

	// `ToPrimitive` abstract operation
	// https://tc39.github.io/ecma262/#sec-toprimitive
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (input, PREFERRED_STRING) {
	  if (!isObject(input)) return input;
	  var fn, val;
	  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
	  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
	  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ },
/* 225 */
/***/ function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ },
/* 226 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;

	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	var DESCRIPTORS = __webpack_require__(216);
	var fails = __webpack_require__(217);
	var createElement = __webpack_require__(228);

	// Thank's IE8 for his funny defineProperty
	module.exports = !DESCRIPTORS && !fails(function () {
	  return Object.defineProperty(createElement('div'), 'a', {
	    get: function () { return 7; }
	  }).a != 7;
	});


/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(214);
	var isObject = __webpack_require__(225);

	var document = global.document;
	// typeof document.createElement is 'object' in old IE
	var EXISTS = isObject(document) && isObject(document.createElement);

	module.exports = function (it) {
	  return EXISTS ? document.createElement(it) : {};
	};


/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	var DESCRIPTORS = __webpack_require__(216);
	var definePropertyModule = __webpack_require__(230);
	var createPropertyDescriptor = __webpack_require__(219);

	module.exports = DESCRIPTORS ? function (object, key, value) {
	  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	var DESCRIPTORS = __webpack_require__(216);
	var IE8_DOM_DEFINE = __webpack_require__(227);
	var anObject = __webpack_require__(231);
	var toPrimitive = __webpack_require__(224);

	var nativeDefineProperty = Object.defineProperty;

	// `Object.defineProperty` method
	// https://tc39.github.io/ecma262/#sec-object.defineproperty
	exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return nativeDefineProperty(O, P, Attributes);
	  } catch (error) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(225);

	module.exports = function (it) {
	  if (!isObject(it)) {
	    throw TypeError(String(it) + ' is not an object');
	  } return it;
	};


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(214);
	var createNonEnumerableProperty = __webpack_require__(229);
	var has = __webpack_require__(226);
	var setGlobal = __webpack_require__(233);
	var inspectSource = __webpack_require__(234);
	var InternalStateModule = __webpack_require__(236);

	var getInternalState = InternalStateModule.get;
	var enforceInternalState = InternalStateModule.enforce;
	var TEMPLATE = String(String).split('String');

	(module.exports = function (O, key, value, options) {
	  var unsafe = options ? !!options.unsafe : false;
	  var simple = options ? !!options.enumerable : false;
	  var noTargetGet = options ? !!options.noTargetGet : false;
	  if (typeof value == 'function') {
	    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);
	    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
	  }
	  if (O === global) {
	    if (simple) O[key] = value;
	    else setGlobal(key, value);
	    return;
	  } else if (!unsafe) {
	    delete O[key];
	  } else if (!noTargetGet && O[key]) {
	    simple = true;
	  }
	  if (simple) O[key] = value;
	  else createNonEnumerableProperty(O, key, value);
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, 'toString', function toString() {
	  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
	});


/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(214);
	var createNonEnumerableProperty = __webpack_require__(229);

	module.exports = function (key, value) {
	  try {
	    createNonEnumerableProperty(global, key, value);
	  } catch (error) {
	    global[key] = value;
	  } return value;
	};


/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	var store = __webpack_require__(235);

	var functionToString = Function.toString;

	// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
	if (typeof store.inspectSource != 'function') {
	  store.inspectSource = function (it) {
	    return functionToString.call(it);
	  };
	}

	module.exports = store.inspectSource;


/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(214);
	var setGlobal = __webpack_require__(233);

	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || setGlobal(SHARED, {});

	module.exports = store;


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	var NATIVE_WEAK_MAP = __webpack_require__(237);
	var global = __webpack_require__(214);
	var isObject = __webpack_require__(225);
	var createNonEnumerableProperty = __webpack_require__(229);
	var objectHas = __webpack_require__(226);
	var sharedKey = __webpack_require__(238);
	var hiddenKeys = __webpack_require__(242);

	var WeakMap = global.WeakMap;
	var set, get, has;

	var enforce = function (it) {
	  return has(it) ? get(it) : set(it, {});
	};

	var getterFor = function (TYPE) {
	  return function (it) {
	    var state;
	    if (!isObject(it) || (state = get(it)).type !== TYPE) {
	      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
	    } return state;
	  };
	};

	if (NATIVE_WEAK_MAP) {
	  var store = new WeakMap();
	  var wmget = store.get;
	  var wmhas = store.has;
	  var wmset = store.set;
	  set = function (it, metadata) {
	    wmset.call(store, it, metadata);
	    return metadata;
	  };
	  get = function (it) {
	    return wmget.call(store, it) || {};
	  };
	  has = function (it) {
	    return wmhas.call(store, it);
	  };
	} else {
	  var STATE = sharedKey('state');
	  hiddenKeys[STATE] = true;
	  set = function (it, metadata) {
	    createNonEnumerableProperty(it, STATE, metadata);
	    return metadata;
	  };
	  get = function (it) {
	    return objectHas(it, STATE) ? it[STATE] : {};
	  };
	  has = function (it) {
	    return objectHas(it, STATE);
	  };
	}

	module.exports = {
	  set: set,
	  get: get,
	  has: has,
	  enforce: enforce,
	  getterFor: getterFor
	};


/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(214);
	var inspectSource = __webpack_require__(234);

	var WeakMap = global.WeakMap;

	module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(239);
	var uid = __webpack_require__(241);

	var keys = shared('keys');

	module.exports = function (key) {
	  return keys[key] || (keys[key] = uid(key));
	};


/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	var IS_PURE = __webpack_require__(240);
	var store = __webpack_require__(235);

	(module.exports = function (key, value) {
	  return store[key] || (store[key] = value !== undefined ? value : {});
	})('versions', []).push({
	  version: '3.5.0',
	  mode: IS_PURE ? 'pure' : 'global',
	  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
	});


/***/ },
/* 240 */
/***/ function(module, exports) {

	module.exports = false;


/***/ },
/* 241 */
/***/ function(module, exports) {

	var id = 0;
	var postfix = Math.random();

	module.exports = function (key) {
	  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
	};


/***/ },
/* 242 */
/***/ function(module, exports) {

	module.exports = {};


/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	var has = __webpack_require__(226);
	var ownKeys = __webpack_require__(244);
	var getOwnPropertyDescriptorModule = __webpack_require__(215);
	var definePropertyModule = __webpack_require__(230);

	module.exports = function (target, source) {
	  var keys = ownKeys(source);
	  var defineProperty = definePropertyModule.f;
	  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
	  }
	};


/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	var getBuiltIn = __webpack_require__(245);
	var getOwnPropertyNamesModule = __webpack_require__(247);
	var getOwnPropertySymbolsModule = __webpack_require__(254);
	var anObject = __webpack_require__(231);

	// all object keys, includes non-enumerable and symbols
	module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
	  var keys = getOwnPropertyNamesModule.f(anObject(it));
	  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
	  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
	};


/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	var path = __webpack_require__(246);
	var global = __webpack_require__(214);

	var aFunction = function (variable) {
	  return typeof variable == 'function' ? variable : undefined;
	};

	module.exports = function (namespace, method) {
	  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
	    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
	};


/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(214);

	module.exports = global;


/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	var internalObjectKeys = __webpack_require__(248);
	var enumBugKeys = __webpack_require__(253);

	var hiddenKeys = enumBugKeys.concat('length', 'prototype');

	// `Object.getOwnPropertyNames` method
	// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return internalObjectKeys(O, hiddenKeys);
	};


/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	var has = __webpack_require__(226);
	var toIndexedObject = __webpack_require__(220);
	var indexOf = __webpack_require__(249).indexOf;
	var hiddenKeys = __webpack_require__(242);

	module.exports = function (object, names) {
	  var O = toIndexedObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~indexOf(result, key) || result.push(key);
	  }
	  return result;
	};


/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	var toIndexedObject = __webpack_require__(220);
	var toLength = __webpack_require__(250);
	var toAbsoluteIndex = __webpack_require__(252);

	// `Array.prototype.{ indexOf, includes }` methods implementation
	var createMethod = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIndexedObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) {
	      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

	module.exports = {
	  // `Array.prototype.includes` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.includes
	  includes: createMethod(true),
	  // `Array.prototype.indexOf` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
	  indexOf: createMethod(false)
	};


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(251);

	var min = Math.min;

	// `ToLength` abstract operation
	// https://tc39.github.io/ecma262/#sec-tolength
	module.exports = function (argument) {
	  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
	};


/***/ },
/* 251 */
/***/ function(module, exports) {

	var ceil = Math.ceil;
	var floor = Math.floor;

	// `ToInteger` abstract operation
	// https://tc39.github.io/ecma262/#sec-tointeger
	module.exports = function (argument) {
	  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
	};


/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(251);

	var max = Math.max;
	var min = Math.min;

	// Helper for a popular repeating case of the spec:
	// Let integer be ? ToInteger(index).
	// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
	module.exports = function (index, length) {
	  var integer = toInteger(index);
	  return integer < 0 ? max(integer + length, 0) : min(integer, length);
	};


/***/ },
/* 253 */
/***/ function(module, exports) {

	// IE8- don't enum bug keys
	module.exports = [
	  'constructor',
	  'hasOwnProperty',
	  'isPrototypeOf',
	  'propertyIsEnumerable',
	  'toLocaleString',
	  'toString',
	  'valueOf'
	];


/***/ },
/* 254 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;


/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(217);

	var replacement = /#|\.prototype\./;

	var isForced = function (feature, detection) {
	  var value = data[normalize(feature)];
	  return value == POLYFILL ? true
	    : value == NATIVE ? false
	    : typeof detection == 'function' ? fails(detection)
	    : !!detection;
	};

	var normalize = isForced.normalize = function (string) {
	  return String(string).replace(replacement, '.').toLowerCase();
	};

	var data = isForced.data = {};
	var NATIVE = isForced.NATIVE = 'N';
	var POLYFILL = isForced.POLYFILL = 'P';

	module.exports = isForced;


/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	var bind = __webpack_require__(257);
	var IndexedObject = __webpack_require__(221);
	var toObject = __webpack_require__(259);
	var toLength = __webpack_require__(250);
	var arraySpeciesCreate = __webpack_require__(260);

	var push = [].push;

	// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
	var createMethod = function (TYPE) {
	  var IS_MAP = TYPE == 1;
	  var IS_FILTER = TYPE == 2;
	  var IS_SOME = TYPE == 3;
	  var IS_EVERY = TYPE == 4;
	  var IS_FIND_INDEX = TYPE == 6;
	  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
	  return function ($this, callbackfn, that, specificCreate) {
	    var O = toObject($this);
	    var self = IndexedObject(O);
	    var boundFunction = bind(callbackfn, that, 3);
	    var length = toLength(self.length);
	    var index = 0;
	    var create = specificCreate || arraySpeciesCreate;
	    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
	    var value, result;
	    for (;length > index; index++) if (NO_HOLES || index in self) {
	      value = self[index];
	      result = boundFunction(value, index, O);
	      if (TYPE) {
	        if (IS_MAP) target[index] = result; // map
	        else if (result) switch (TYPE) {
	          case 3: return true;              // some
	          case 5: return value;             // find
	          case 6: return index;             // findIndex
	          case 2: push.call(target, value); // filter
	        } else if (IS_EVERY) return false;  // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
	  };
	};

	module.exports = {
	  // `Array.prototype.forEach` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach
	  forEach: createMethod(0),
	  // `Array.prototype.map` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.map
	  map: createMethod(1),
	  // `Array.prototype.filter` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.filter
	  filter: createMethod(2),
	  // `Array.prototype.some` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.some
	  some: createMethod(3),
	  // `Array.prototype.every` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.every
	  every: createMethod(4),
	  // `Array.prototype.find` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.find
	  find: createMethod(5),
	  // `Array.prototype.findIndex` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
	  findIndex: createMethod(6)
	};


/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	var aFunction = __webpack_require__(258);

	// optional / simple context binding
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 0: return function () {
	      return fn.call(that);
	    };
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ },
/* 258 */
/***/ function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') {
	    throw TypeError(String(it) + ' is not a function');
	  } return it;
	};


/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var requireObjectCoercible = __webpack_require__(223);

	// `ToObject` abstract operation
	// https://tc39.github.io/ecma262/#sec-toobject
	module.exports = function (argument) {
	  return Object(requireObjectCoercible(argument));
	};


/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(225);
	var isArray = __webpack_require__(261);
	var wellKnownSymbol = __webpack_require__(262);

	var SPECIES = wellKnownSymbol('species');

	// `ArraySpeciesCreate` abstract operation
	// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
	module.exports = function (originalArray, length) {
	  var C;
	  if (isArray(originalArray)) {
	    C = originalArray.constructor;
	    // cross-realm fallback
	    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
	    else if (isObject(C)) {
	      C = C[SPECIES];
	      if (C === null) C = undefined;
	    }
	  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
	};


/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(222);

	// `IsArray` abstract operation
	// https://tc39.github.io/ecma262/#sec-isarray
	module.exports = Array.isArray || function isArray(arg) {
	  return classof(arg) == 'Array';
	};


/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(214);
	var shared = __webpack_require__(239);
	var has = __webpack_require__(226);
	var uid = __webpack_require__(241);
	var NATIVE_SYMBOL = __webpack_require__(263);
	var USE_SYMBOL_AS_UID = __webpack_require__(264);

	var WellKnownSymbolsStore = shared('wks');
	var Symbol = global.Symbol;
	var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : uid;

	module.exports = function (name) {
	  if (!has(WellKnownSymbolsStore, name)) {
	    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];
	    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
	  } return WellKnownSymbolsStore[name];
	};


/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(217);

	module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
	  // Chrome 38 Symbol has incorrect toString conversion
	  // eslint-disable-next-line no-undef
	  return !String(Symbol());
	});


/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	var NATIVE_SYMBOL = __webpack_require__(263);

	module.exports = NATIVE_SYMBOL
	  // eslint-disable-next-line no-undef
	  && !Symbol.sham
	  // eslint-disable-next-line no-undef
	  && typeof Symbol() == 'symbol';


/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(217);
	var wellKnownSymbol = __webpack_require__(262);
	var V8_VERSION = __webpack_require__(266);

	var SPECIES = wellKnownSymbol('species');

	module.exports = function (METHOD_NAME) {
	  // We can't use this feature detection in V8 since it causes
	  // deoptimization and serious performance degradation
	  // https://github.com/zloirock/core-js/issues/677
	  return V8_VERSION >= 51 || !fails(function () {
	    var array = [];
	    var constructor = array.constructor = {};
	    constructor[SPECIES] = function () {
	      return { foo: 1 };
	    };
	    return array[METHOD_NAME](Boolean).foo !== 1;
	  });
	};


/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(214);
	var userAgent = __webpack_require__(267);

	var process = global.process;
	var versions = process && process.versions;
	var v8 = versions && versions.v8;
	var match, version;

	if (v8) {
	  match = v8.split('.');
	  version = match[0] + match[1];
	} else if (userAgent) {
	  match = userAgent.match(/Edge\/(\d+)/);
	  if (!match || match[1] >= 74) {
	    match = userAgent.match(/Chrome\/(\d+)/);
	    if (match) version = match[1];
	  }
	}

	module.exports = version && +version;


/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var getBuiltIn = __webpack_require__(245);

	module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ },
/* 268 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	function _typeof(obj) {
	  "@babel/helpers - typeof";

	  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
	    _typeof = function (obj) {
	      return typeof obj;
	    };
	  } else {
	    _typeof = function (obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	    };
	  }

	  return _typeof(obj);
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _defineProperties(target, props) {
	  for (var i = 0; i < props.length; i++) {
	    var descriptor = props[i];
	    descriptor.enumerable = descriptor.enumerable || false;
	    descriptor.configurable = true;
	    if ("value" in descriptor) descriptor.writable = true;
	    Object.defineProperty(target, descriptor.key, descriptor);
	  }
	}

	function _createClass(Constructor, protoProps, staticProps) {
	  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
	  if (staticProps) _defineProperties(Constructor, staticProps);
	  return Constructor;
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }

	  return obj;
	}

	function _extends() {
	  _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];

	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }

	    return target;
	  };

	  return _extends.apply(this, arguments);
	}

	function ownKeys(object, enumerableOnly) {
	  var keys = Object.keys(object);

	  if (Object.getOwnPropertySymbols) {
	    var symbols = Object.getOwnPropertySymbols(object);
	    if (enumerableOnly) symbols = symbols.filter(function (sym) {
	      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
	    });
	    keys.push.apply(keys, symbols);
	  }

	  return keys;
	}

	function _objectSpread2(target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i] != null ? arguments[i] : {};

	    if (i % 2) {
	      ownKeys(Object(source), true).forEach(function (key) {
	        _defineProperty(target, key, source[key]);
	      });
	    } else if (Object.getOwnPropertyDescriptors) {
	      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
	    } else {
	      ownKeys(Object(source)).forEach(function (key) {
	        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
	      });
	    }
	  }

	  return target;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function");
	  }

	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf(subClass, superClass);
	}

	function _getPrototypeOf(o) {
	  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
	    return o.__proto__ || Object.getPrototypeOf(o);
	  };
	  return _getPrototypeOf(o);
	}

	function _setPrototypeOf(o, p) {
	  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };

	  return _setPrototypeOf(o, p);
	}

	function _isNativeReflectConstruct() {
	  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
	  if (Reflect.construct.sham) return false;
	  if (typeof Proxy === "function") return true;

	  try {
	    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
	    return true;
	  } catch (e) {
	    return false;
	  }
	}

	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;

	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }

	  return target;
	}

	function _objectWithoutProperties(source, excluded) {
	  if (source == null) return {};

	  var target = _objectWithoutPropertiesLoose(source, excluded);

	  var key, i;

	  if (Object.getOwnPropertySymbols) {
	    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

	    for (i = 0; i < sourceSymbolKeys.length; i++) {
	      key = sourceSymbolKeys[i];
	      if (excluded.indexOf(key) >= 0) continue;
	      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
	      target[key] = source[key];
	    }
	  }

	  return target;
	}

	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return self;
	}

	function _possibleConstructorReturn(self, call) {
	  if (call && (typeof call === "object" || typeof call === "function")) {
	    return call;
	  }

	  return _assertThisInitialized(self);
	}

	function _createSuper(Derived) {
	  var hasNativeReflectConstruct = _isNativeReflectConstruct();

	  return function _createSuperInternal() {
	    var Super = _getPrototypeOf(Derived),
	        result;

	    if (hasNativeReflectConstruct) {
	      var NewTarget = _getPrototypeOf(this).constructor;

	      result = Reflect.construct(Super, arguments, NewTarget);
	    } else {
	      result = Super.apply(this, arguments);
	    }

	    return _possibleConstructorReturn(this, result);
	  };
	}

	function _slicedToArray(arr, i) {
	  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
	}

	function _toConsumableArray(arr) {
	  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
	}

	function _arrayWithoutHoles(arr) {
	  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
	}

	function _arrayWithHoles(arr) {
	  if (Array.isArray(arr)) return arr;
	}

	function _iterableToArray(iter) {
	  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
	}

	function _iterableToArrayLimit(arr, i) {
	  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
	  var _arr = [];
	  var _n = true;
	  var _d = false;
	  var _e = undefined;

	  try {
	    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
	      _arr.push(_s.value);

	      if (i && _arr.length === i) break;
	    }
	  } catch (err) {
	    _d = true;
	    _e = err;
	  } finally {
	    try {
	      if (!_n && _i["return"] != null) _i["return"]();
	    } finally {
	      if (_d) throw _e;
	    }
	  }

	  return _arr;
	}

	function _unsupportedIterableToArray(o, minLen) {
	  if (!o) return;
	  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
	  var n = Object.prototype.toString.call(o).slice(8, -1);
	  if (n === "Object" && o.constructor) n = o.constructor.name;
	  if (n === "Map" || n === "Set") return Array.from(o);
	  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
	}

	function _arrayLikeToArray(arr, len) {
	  if (len == null || len > arr.length) len = arr.length;

	  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

	  return arr2;
	}

	function _nonIterableSpread() {
	  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}

	function _nonIterableRest() {
	  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}

	exports.arrayLikeToArray = _arrayLikeToArray;
	exports.arrayWithHoles = _arrayWithHoles;
	exports.arrayWithoutHoles = _arrayWithoutHoles;
	exports.assertThisInitialized = _assertThisInitialized;
	exports.classCallCheck = _classCallCheck;
	exports.createClass = _createClass;
	exports.createSuper = _createSuper;
	exports.defineProperty = _defineProperty;
	exports.extends = _extends;
	exports.getPrototypeOf = _getPrototypeOf;
	exports.inherits = _inherits;
	exports.isNativeReflectConstruct = _isNativeReflectConstruct;
	exports.iterableToArray = _iterableToArray;
	exports.iterableToArrayLimit = _iterableToArrayLimit;
	exports.nonIterableRest = _nonIterableRest;
	exports.nonIterableSpread = _nonIterableSpread;
	exports.objectSpread2 = _objectSpread2;
	exports.objectWithoutProperties = _objectWithoutProperties;
	exports.objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;
	exports.possibleConstructorReturn = _possibleConstructorReturn;
	exports.setPrototypeOf = _setPrototypeOf;
	exports.slicedToArray = _slicedToArray;
	exports.toConsumableArray = _toConsumableArray;
	exports.typeof = _typeof;
	exports.unsupportedIterableToArray = _unsupportedIterableToArray;
	//# sourceMappingURL=_rollupPluginBabelHelpers.js.map


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	if (process.env.NODE_ENV !== 'production') {
	  var ReactIs = __webpack_require__(270);

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = __webpack_require__(273)(ReactIs.isElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(276)();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	if (process.env.NODE_ENV === 'production') {
	  module.exports = __webpack_require__(271);
	} else {
	  module.exports = __webpack_require__(272);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 271 */
/***/ function(module, exports) {

	/** @license React v16.13.1
	 * react-is.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?
	Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;
	function z(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;
	exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};
	exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};
	exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;


/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.13.1
	 * react-is.development.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';



	if (process.env.NODE_ENV !== "production") {
	  (function() {
	'use strict';

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol.for;
	var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
	// (unstable) APIs that have been removed. Can we remove the symbols?

	var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
	var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
	var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
	var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
	var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
	var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
	var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
	var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

	function isValidElementType(type) {
	  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
	  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
	}

	function typeOf(object) {
	  if (typeof object === 'object' && object !== null) {
	    var $$typeof = object.$$typeof;

	    switch ($$typeof) {
	      case REACT_ELEMENT_TYPE:
	        var type = object.type;

	        switch (type) {
	          case REACT_ASYNC_MODE_TYPE:
	          case REACT_CONCURRENT_MODE_TYPE:
	          case REACT_FRAGMENT_TYPE:
	          case REACT_PROFILER_TYPE:
	          case REACT_STRICT_MODE_TYPE:
	          case REACT_SUSPENSE_TYPE:
	            return type;

	          default:
	            var $$typeofType = type && type.$$typeof;

	            switch ($$typeofType) {
	              case REACT_CONTEXT_TYPE:
	              case REACT_FORWARD_REF_TYPE:
	              case REACT_LAZY_TYPE:
	              case REACT_MEMO_TYPE:
	              case REACT_PROVIDER_TYPE:
	                return $$typeofType;

	              default:
	                return $$typeof;
	            }

	        }

	      case REACT_PORTAL_TYPE:
	        return $$typeof;
	    }
	  }

	  return undefined;
	} // AsyncMode is deprecated along with isAsyncMode

	var AsyncMode = REACT_ASYNC_MODE_TYPE;
	var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
	var ContextConsumer = REACT_CONTEXT_TYPE;
	var ContextProvider = REACT_PROVIDER_TYPE;
	var Element = REACT_ELEMENT_TYPE;
	var ForwardRef = REACT_FORWARD_REF_TYPE;
	var Fragment = REACT_FRAGMENT_TYPE;
	var Lazy = REACT_LAZY_TYPE;
	var Memo = REACT_MEMO_TYPE;
	var Portal = REACT_PORTAL_TYPE;
	var Profiler = REACT_PROFILER_TYPE;
	var StrictMode = REACT_STRICT_MODE_TYPE;
	var Suspense = REACT_SUSPENSE_TYPE;
	var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

	function isAsyncMode(object) {
	  {
	    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
	      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

	      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
	    }
	  }

	  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
	}
	function isConcurrentMode(object) {
	  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
	}
	function isContextConsumer(object) {
	  return typeOf(object) === REACT_CONTEXT_TYPE;
	}
	function isContextProvider(object) {
	  return typeOf(object) === REACT_PROVIDER_TYPE;
	}
	function isElement(object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	}
	function isForwardRef(object) {
	  return typeOf(object) === REACT_FORWARD_REF_TYPE;
	}
	function isFragment(object) {
	  return typeOf(object) === REACT_FRAGMENT_TYPE;
	}
	function isLazy(object) {
	  return typeOf(object) === REACT_LAZY_TYPE;
	}
	function isMemo(object) {
	  return typeOf(object) === REACT_MEMO_TYPE;
	}
	function isPortal(object) {
	  return typeOf(object) === REACT_PORTAL_TYPE;
	}
	function isProfiler(object) {
	  return typeOf(object) === REACT_PROFILER_TYPE;
	}
	function isStrictMode(object) {
	  return typeOf(object) === REACT_STRICT_MODE_TYPE;
	}
	function isSuspense(object) {
	  return typeOf(object) === REACT_SUSPENSE_TYPE;
	}

	exports.AsyncMode = AsyncMode;
	exports.ConcurrentMode = ConcurrentMode;
	exports.ContextConsumer = ContextConsumer;
	exports.ContextProvider = ContextProvider;
	exports.Element = Element;
	exports.ForwardRef = ForwardRef;
	exports.Fragment = Fragment;
	exports.Lazy = Lazy;
	exports.Memo = Memo;
	exports.Portal = Portal;
	exports.Profiler = Profiler;
	exports.StrictMode = StrictMode;
	exports.Suspense = Suspense;
	exports.isAsyncMode = isAsyncMode;
	exports.isConcurrentMode = isConcurrentMode;
	exports.isContextConsumer = isContextConsumer;
	exports.isContextProvider = isContextProvider;
	exports.isElement = isElement;
	exports.isForwardRef = isForwardRef;
	exports.isFragment = isFragment;
	exports.isLazy = isLazy;
	exports.isMemo = isMemo;
	exports.isPortal = isPortal;
	exports.isProfiler = isProfiler;
	exports.isStrictMode = isStrictMode;
	exports.isSuspense = isSuspense;
	exports.isValidElementType = isValidElementType;
	exports.typeOf = typeOf;
	  })();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactIs = __webpack_require__(270);
	var assign = __webpack_require__(10);

	var ReactPropTypesSecret = __webpack_require__(274);
	var checkPropTypes = __webpack_require__(275);

	var has = Function.call.bind(Object.prototype.hasOwnProperty);
	var printWarning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  printWarning = function(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	}

	function emptyFunctionThatReturnsNull() {
	  return null;
	}

	module.exports = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    elementType: createElementTypeTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker,
	    exact: createStrictShapeTypeChecker,
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message) {
	    this.message = message;
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (process.env.NODE_ENV !== 'production') {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          var err = new Error(
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	          err.name = 'Invariant Violation';
	          throw err;
	        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            printWarning(
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!ReactIs.isValidElementType(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (arguments.length > 1) {
	          printWarning(
	            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
	            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
	          );
	        } else {
	          printWarning('Invalid argument supplied to oneOf, expected an array.');
	        }
	      }
	      return emptyFunctionThatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
	        var type = getPreciseType(value);
	        if (type === 'symbol') {
	          return String(value);
	        }
	        return value;
	      });
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (has(propValue, key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunctionThatReturnsNull;
	    }

	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        printWarning(
	          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
	          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
	        );
	        return emptyFunctionThatReturnsNull;
	      }
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	          return null;
	        }
	      }

	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          continue;
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createStrictShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      // We need to check all keys in case some are required but missing from
	      // props.
	      var allKeys = assign({}, props[propName], shapeTypes);
	      for (var key in allKeys) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          return new PropTypeError(
	            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
	            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
	            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
	          );
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }

	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // falsy value can't be a Symbol
	    if (!propValue) {
	      return false;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 274 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;


/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var printWarning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  var ReactPropTypesSecret = __webpack_require__(274);
	  var loggedTypeFailures = {};
	  var has = Function.call.bind(Object.prototype.hasOwnProperty);

	  printWarning = function(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (has(typeSpecs, typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          if (typeof typeSpecs[typeSpecName] !== 'function') {
	            var err = Error(
	              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
	              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
	            );
	            err.name = 'Invariant Violation';
	            throw err;
	          }
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error && !(error instanceof Error)) {
	          printWarning(
	            (componentName || 'React class') + ': type specification of ' +
	            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
	            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
	            'You may have forgotten to pass an argument to the type checker ' +
	            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
	            'shape all require an argument).'
	          );
	        }
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          printWarning(
	            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
	          );
	        }
	      }
	    }
	  }
	}

	/**
	 * Resets warning cache when testing.
	 *
	 * @private
	 */
	checkPropTypes.resetWarningCache = function() {
	  if (process.env.NODE_ENV !== 'production') {
	    loggedTypeFailures = {};
	  }
	}

	module.exports = checkPropTypes;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactPropTypesSecret = __webpack_require__(274);

	function emptyFunction() {}
	function emptyFunctionWithReset() {}
	emptyFunctionWithReset.resetWarningCache = emptyFunction;

	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    var err = new Error(
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	    err.name = 'Invariant Violation';
	    throw err;
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    elementType: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim,

	    checkPropTypes: emptyFunctionWithReset,
	    resetWarningCache: emptyFunction
	  };

	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};


/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $ = __webpack_require__(213);
	var $find = __webpack_require__(256).find;
	var addToUnscopables = __webpack_require__(278);

	var FIND = 'find';
	var SKIPS_HOLES = true;

	// Shouldn't skip holes
	if (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });

	// `Array.prototype.find` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.find
	$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
	  find: function find(callbackfn /* , that = undefined */) {
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
	addToUnscopables(FIND);


/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var wellKnownSymbol = __webpack_require__(262);
	var create = __webpack_require__(279);
	var createNonEnumerableProperty = __webpack_require__(229);

	var UNSCOPABLES = wellKnownSymbol('unscopables');
	var ArrayPrototype = Array.prototype;

	// Array.prototype[@@unscopables]
	// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
	if (ArrayPrototype[UNSCOPABLES] == undefined) {
	  createNonEnumerableProperty(ArrayPrototype, UNSCOPABLES, create(null));
	}

	// add a key to Array.prototype[@@unscopables]
	module.exports = function (key) {
	  ArrayPrototype[UNSCOPABLES][key] = true;
	};


/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(231);
	var defineProperties = __webpack_require__(280);
	var enumBugKeys = __webpack_require__(253);
	var hiddenKeys = __webpack_require__(242);
	var html = __webpack_require__(282);
	var documentCreateElement = __webpack_require__(228);
	var sharedKey = __webpack_require__(238);
	var IE_PROTO = sharedKey('IE_PROTO');

	var PROTOTYPE = 'prototype';
	var Empty = function () { /* empty */ };

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = documentCreateElement('iframe');
	  var length = enumBugKeys.length;
	  var lt = '<';
	  var script = 'script';
	  var gt = '>';
	  var js = 'java' + script + ':';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  html.appendChild(iframe);
	  iframe.src = String(js);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];
	  return createDict();
	};

	// `Object.create` method
	// https://tc39.github.io/ecma262/#sec-object.create
	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : defineProperties(result, Properties);
	};

	hiddenKeys[IE_PROTO] = true;


/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var DESCRIPTORS = __webpack_require__(216);
	var definePropertyModule = __webpack_require__(230);
	var anObject = __webpack_require__(231);
	var objectKeys = __webpack_require__(281);

	// `Object.defineProperties` method
	// https://tc39.github.io/ecma262/#sec-object.defineproperties
	module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = objectKeys(Properties);
	  var length = keys.length;
	  var index = 0;
	  var key;
	  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
	  return O;
	};


/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var internalObjectKeys = __webpack_require__(248);
	var enumBugKeys = __webpack_require__(253);

	// `Object.keys` method
	// https://tc39.github.io/ecma262/#sec-object.keys
	module.exports = Object.keys || function keys(O) {
	  return internalObjectKeys(O, enumBugKeys);
	};


/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var getBuiltIn = __webpack_require__(245);

	module.exports = getBuiltIn('document', 'documentElement');


/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	__webpack_require__(284);
	__webpack_require__(212);
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	__webpack_require__(286);
	__webpack_require__(288);
	__webpack_require__(277);
	__webpack_require__(289);
	__webpack_require__(290);
	__webpack_require__(292);
	__webpack_require__(293);
	__webpack_require__(294);
	__webpack_require__(295);
	__webpack_require__(298);
	__webpack_require__(303);
	var isElement = _interopDefault(__webpack_require__(306));
	var shortid = __webpack_require__(317);
	var constants = __webpack_require__(327);

	var wrapWithComp = function wrapWithComp(child, type) {
	  var Comp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'span';

	  if (typeof child === 'string') {
	    return /*#__PURE__*/React__default.createElement(Comp, {
	      "data-type": type
	    }, child);
	  }

	  return child;
	}; // Check if node2 contains node1

	var nodeContains = function nodeContains(node2, node1) {
	  return isElement(node2) && isElement(node1) && (node2 === node1 || nodeContains(node2, node1.parentNode));
	}; // Expects event as parameter

	var prepareKeyList = function prepareKeyList(keyList) {
	  return Object.keys(constants.KEY_KEYCODE_LIST).filter(function (key) {
	    return keyList.indexOf(key) > -1;
	  }).map(function (key) {
	    return {
	      key: key,
	      keyCode: constants.KEY_KEYCODE_LIST[key]
	    };
	  });
	};
	var isPressedKeyFN = function isPressedKeyFN(keyList) {
	  var preparedKeyList = prepareKeyList(keyList);
	  return function (_ref) {
	    var key = _ref.key,
	        keyCode = _ref.keyCode;
	    return preparedKeyList.filter(function (_ref2) {
	      var expectedKey = _ref2.key,
	          expectedKeyCode = _ref2.keyCode;
	      return expectedKey === key || expectedKeyCode === keyCode;
	    }).length > 0;
	  };
	};
	var isPressedKeyEnter = isPressedKeyFN(['Enter']);
	var isPressedKeyBackspace = isPressedKeyFN(['Backspace']);
	var isPressedKeyTab = isPressedKeyFN(['Tab']);
	var isPressedKeyPillboxAddKey = isPressedKeyFN(['Enter', 'Comma', 'Space', 'Tab']);
	var isPressedKeyEnterOrSpace = isPressedKeyFN(['Enter', 'Space']);
	var isPressedKeyEscape = isPressedKeyFN(['Escape']);
	var isPressedKeyOneOf = function isPressedKeyOneOf(keyList) {
	  return isPressedKeyFN(keyList);
	};
	var flattenOptions = function flattenOptions(options) {
	  return options.reduce(function (flattenedOptions, option) {
	    return flattenedOptions.concat(option.type === 'group' ? flattenOptions(option.options) : [option]);
	  }, []);
	};
	var findOptionByValue = function findOptionByValue(value, options) {
	  var allowEmpty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	  if (options.length === 0) {
	    return;
	  }

	  var flattenedOptions = flattenOptions(options);
	  var optionsHaveSomeDisabledOptions = flattenedOptions.some(function (option) {
	    return option.disabled;
	  });
	  var dropdownMayBeEmpty = allowEmpty || optionsHaveSomeDisabledOptions; // if options contain any disabled option treat like allowEmpty is true

	  var sanitizedOptions = dropdownMayBeEmpty ? flattenedOptions.filter(function (option) {
	    return !option.disabled;
	  }) : flattenedOptions;

	  if (!value) {
	    return dropdownMayBeEmpty ? undefined : sanitizedOptions[0];
	  }

	  return sanitizedOptions.find(function (_ref3) {
	    var optionValue = _ref3.value;
	    return optionValue === value;
	  });
	};
	var shortenString = function shortenString(str) {
	  var maxLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;
	  var sanitizedString = str.replace(/(<([^>]+)>)/ig, '');
	  return sanitizedString.length > maxLength ? "".concat(sanitizedString.substring(0, maxLength - 2), "...") : sanitizedString;
	};
	var createFileMetadata = function createFileMetadata(_ref4, url) {
	  var name = _ref4.name,
	      type = _ref4.type;
	  return {
	    name: name,
	    type: type,
	    url: url
	  };
	};
	var generateShortID = function generateShortID() {
	  return shortid.generate().split(/^\d/).join('_');
	};

	exports.createFileMetadata = createFileMetadata;
	exports.findOptionByValue = findOptionByValue;
	exports.flattenOptions = flattenOptions;
	exports.generateShortID = generateShortID;
	exports.isPressedKeyBackspace = isPressedKeyBackspace;
	exports.isPressedKeyEnter = isPressedKeyEnter;
	exports.isPressedKeyEnterOrSpace = isPressedKeyEnterOrSpace;
	exports.isPressedKeyEscape = isPressedKeyEscape;
	exports.isPressedKeyFN = isPressedKeyFN;
	exports.isPressedKeyOneOf = isPressedKeyOneOf;
	exports.isPressedKeyPillboxAddKey = isPressedKeyPillboxAddKey;
	exports.isPressedKeyTab = isPressedKeyTab;
	exports.nodeContains = nodeContains;
	exports.prepareKeyList = prepareKeyList;
	exports.shortenString = shortenString;
	exports.wrapWithComp = wrapWithComp;
	//# sourceMappingURL=index.js.map


/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $ = __webpack_require__(213);
	var IndexedObject = __webpack_require__(221);
	var toIndexedObject = __webpack_require__(220);
	var sloppyArrayMethod = __webpack_require__(285);

	var nativeJoin = [].join;

	var ES3_STRINGS = IndexedObject != Object;
	var SLOPPY_METHOD = sloppyArrayMethod('join', ',');

	// `Array.prototype.join` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.join
	$({ target: 'Array', proto: true, forced: ES3_STRINGS || SLOPPY_METHOD }, {
	  join: function join(separator) {
	    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);
	  }
	});


/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var fails = __webpack_require__(217);

	module.exports = function (METHOD_NAME, argument) {
	  var method = [][METHOD_NAME];
	  return !method || !fails(function () {
	    // eslint-disable-next-line no-useless-call,no-throw-literal
	    method.call(null, argument || function () { throw 1; }, 1);
	  });
	};


/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $ = __webpack_require__(213);
	var fails = __webpack_require__(217);
	var isArray = __webpack_require__(261);
	var isObject = __webpack_require__(225);
	var toObject = __webpack_require__(259);
	var toLength = __webpack_require__(250);
	var createProperty = __webpack_require__(287);
	var arraySpeciesCreate = __webpack_require__(260);
	var arrayMethodHasSpeciesSupport = __webpack_require__(265);
	var wellKnownSymbol = __webpack_require__(262);
	var V8_VERSION = __webpack_require__(266);

	var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
	var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
	var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

	// We can't use this feature detection in V8 since it causes
	// deoptimization and serious performance degradation
	// https://github.com/zloirock/core-js/issues/679
	var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
	  var array = [];
	  array[IS_CONCAT_SPREADABLE] = false;
	  return array.concat()[0] !== array;
	});

	var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

	var isConcatSpreadable = function (O) {
	  if (!isObject(O)) return false;
	  var spreadable = O[IS_CONCAT_SPREADABLE];
	  return spreadable !== undefined ? !!spreadable : isArray(O);
	};

	var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

	// `Array.prototype.concat` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.concat
	// with adding support of @@isConcatSpreadable and @@species
	$({ target: 'Array', proto: true, forced: FORCED }, {
	  concat: function concat(arg) { // eslint-disable-line no-unused-vars
	    var O = toObject(this);
	    var A = arraySpeciesCreate(O, 0);
	    var n = 0;
	    var i, k, length, len, E;
	    for (i = -1, length = arguments.length; i < length; i++) {
	      E = i === -1 ? O : arguments[i];
	      if (isConcatSpreadable(E)) {
	        len = toLength(E.length);
	        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
	        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
	      } else {
	        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
	        createProperty(A, n++, E);
	      }
	    }
	    A.length = n;
	    return A;
	  }
	});


/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var toPrimitive = __webpack_require__(224);
	var definePropertyModule = __webpack_require__(230);
	var createPropertyDescriptor = __webpack_require__(219);

	module.exports = function (object, key, value) {
	  var propertyKey = toPrimitive(key);
	  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
	  else object[propertyKey] = value;
	};


/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $ = __webpack_require__(213);
	var $filter = __webpack_require__(256).filter;
	var fails = __webpack_require__(217);
	var arrayMethodHasSpeciesSupport = __webpack_require__(265);

	var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');
	// Edge 14- issue
	var USES_TO_LENGTH = HAS_SPECIES_SUPPORT && !fails(function () {
	  [].filter.call({ length: -1, 0: 1 }, function (it) { throw it; });
	});

	// `Array.prototype.filter` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.filter
	// with adding support of @@species
	$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {
	  filter: function filter(callbackfn /* , thisArg */) {
	    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});


/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $ = __webpack_require__(213);
	var $indexOf = __webpack_require__(249).indexOf;
	var sloppyArrayMethod = __webpack_require__(285);

	var nativeIndexOf = [].indexOf;

	var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
	var SLOPPY_METHOD = sloppyArrayMethod('indexOf');

	// `Array.prototype.indexOf` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
	$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || SLOPPY_METHOD }, {
	  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
	    return NEGATIVE_ZERO
	      // convert -0 to +0
	      ? nativeIndexOf.apply(this, arguments) || 0
	      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});


/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $ = __webpack_require__(213);
	var $reduce = __webpack_require__(291).left;
	var sloppyArrayMethod = __webpack_require__(285);

	// `Array.prototype.reduce` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.reduce
	$({ target: 'Array', proto: true, forced: sloppyArrayMethod('reduce') }, {
	  reduce: function reduce(callbackfn /* , initialValue */) {
	    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});


/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var aFunction = __webpack_require__(258);
	var toObject = __webpack_require__(259);
	var IndexedObject = __webpack_require__(221);
	var toLength = __webpack_require__(250);

	// `Array.prototype.{ reduce, reduceRight }` methods implementation
	var createMethod = function (IS_RIGHT) {
	  return function (that, callbackfn, argumentsLength, memo) {
	    aFunction(callbackfn);
	    var O = toObject(that);
	    var self = IndexedObject(O);
	    var length = toLength(O.length);
	    var index = IS_RIGHT ? length - 1 : 0;
	    var i = IS_RIGHT ? -1 : 1;
	    if (argumentsLength < 2) while (true) {
	      if (index in self) {
	        memo = self[index];
	        index += i;
	        break;
	      }
	      index += i;
	      if (IS_RIGHT ? index < 0 : length <= index) {
	        throw TypeError('Reduce of empty array with no initial value');
	      }
	    }
	    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
	      memo = callbackfn(memo, self[index], index, O);
	    }
	    return memo;
	  };
	};

	module.exports = {
	  // `Array.prototype.reduce` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.reduce
	  left: createMethod(false),
	  // `Array.prototype.reduceRight` method
	  // https://tc39.github.io/ecma262/#sec-array.prototype.reduceright
	  right: createMethod(true)
	};


/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $ = __webpack_require__(213);
	var $some = __webpack_require__(256).some;
	var sloppyArrayMethod = __webpack_require__(285);

	// `Array.prototype.some` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.some
	$({ target: 'Array', proto: true, forced: sloppyArrayMethod('some') }, {
	  some: function some(callbackfn /* , thisArg */) {
	    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});


/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	var DESCRIPTORS = __webpack_require__(216);
	var defineProperty = __webpack_require__(230).f;

	var FunctionPrototype = Function.prototype;
	var FunctionPrototypeToString = FunctionPrototype.toString;
	var nameRE = /^\s*function ([^ (]*)/;
	var NAME = 'name';

	// Function instances `.name` property
	// https://tc39.github.io/ecma262/#sec-function-instances-name
	if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
	  defineProperty(FunctionPrototype, NAME, {
	    configurable: true,
	    get: function () {
	      try {
	        return FunctionPrototypeToString.call(this).match(nameRE)[1];
	      } catch (error) {
	        return '';
	      }
	    }
	  });
	}


/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	var $ = __webpack_require__(213);
	var toObject = __webpack_require__(259);
	var nativeKeys = __webpack_require__(281);
	var fails = __webpack_require__(217);

	var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

	// `Object.keys` method
	// https://tc39.github.io/ecma262/#sec-object.keys
	$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
	  keys: function keys(it) {
	    return nativeKeys(toObject(it));
	  }
	});


/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $ = __webpack_require__(213);
	var exec = __webpack_require__(296);

	$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
	  exec: exec
	});


/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var regexpFlags = __webpack_require__(297);

	var nativeExec = RegExp.prototype.exec;
	// This always refers to the native implementation, because the
	// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
	// which loads this file before patching the method.
	var nativeReplace = String.prototype.replace;

	var patchedExec = nativeExec;

	var UPDATES_LAST_INDEX_WRONG = (function () {
	  var re1 = /a/;
	  var re2 = /b*/g;
	  nativeExec.call(re1, 'a');
	  nativeExec.call(re2, 'a');
	  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
	})();

	// nonparticipating capturing group, copied from es5-shim's String#split patch.
	var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

	var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

	if (PATCH) {
	  patchedExec = function exec(str) {
	    var re = this;
	    var lastIndex, reCopy, match, i;

	    if (NPCG_INCLUDED) {
	      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
	    }
	    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

	    match = nativeExec.call(re, str);

	    if (UPDATES_LAST_INDEX_WRONG && match) {
	      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
	    }
	    if (NPCG_INCLUDED && match && match.length > 1) {
	      // Fix browsers whose `exec` methods don't consistently return `undefined`
	      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
	      nativeReplace.call(match[0], reCopy, function () {
	        for (i = 1; i < arguments.length - 2; i++) {
	          if (arguments[i] === undefined) match[i] = undefined;
	        }
	      });
	    }

	    return match;
	  };
	}

	module.exports = patchedExec;


/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var anObject = __webpack_require__(231);

	// `RegExp.prototype.flags` getter implementation
	// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
	module.exports = function () {
	  var that = anObject(this);
	  var result = '';
	  if (that.global) result += 'g';
	  if (that.ignoreCase) result += 'i';
	  if (that.multiline) result += 'm';
	  if (that.dotAll) result += 's';
	  if (that.unicode) result += 'u';
	  if (that.sticky) result += 'y';
	  return result;
	};


/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var fixRegExpWellKnownSymbolLogic = __webpack_require__(299);
	var anObject = __webpack_require__(231);
	var toObject = __webpack_require__(259);
	var toLength = __webpack_require__(250);
	var toInteger = __webpack_require__(251);
	var requireObjectCoercible = __webpack_require__(223);
	var advanceStringIndex = __webpack_require__(300);
	var regExpExec = __webpack_require__(302);

	var max = Math.max;
	var min = Math.min;
	var floor = Math.floor;
	var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d\d?|<[^>]*>)/g;
	var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d\d?)/g;

	var maybeToString = function (it) {
	  return it === undefined ? it : String(it);
	};

	// @@replace logic
	fixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative) {
	  return [
	    // `String.prototype.replace` method
	    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
	    function replace(searchValue, replaceValue) {
	      var O = requireObjectCoercible(this);
	      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];
	      return replacer !== undefined
	        ? replacer.call(searchValue, O, replaceValue)
	        : nativeReplace.call(String(O), searchValue, replaceValue);
	    },
	    // `RegExp.prototype[@@replace]` method
	    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
	    function (regexp, replaceValue) {
	      var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);
	      if (res.done) return res.value;

	      var rx = anObject(regexp);
	      var S = String(this);

	      var functionalReplace = typeof replaceValue === 'function';
	      if (!functionalReplace) replaceValue = String(replaceValue);

	      var global = rx.global;
	      if (global) {
	        var fullUnicode = rx.unicode;
	        rx.lastIndex = 0;
	      }
	      var results = [];
	      while (true) {
	        var result = regExpExec(rx, S);
	        if (result === null) break;

	        results.push(result);
	        if (!global) break;

	        var matchStr = String(result[0]);
	        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
	      }

	      var accumulatedResult = '';
	      var nextSourcePosition = 0;
	      for (var i = 0; i < results.length; i++) {
	        result = results[i];

	        var matched = String(result[0]);
	        var position = max(min(toInteger(result.index), S.length), 0);
	        var captures = [];
	        // NOTE: This is equivalent to
	        //   captures = result.slice(1).map(maybeToString)
	        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
	        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
	        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
	        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
	        var namedCaptures = result.groups;
	        if (functionalReplace) {
	          var replacerArgs = [matched].concat(captures, position, S);
	          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
	          var replacement = String(replaceValue.apply(undefined, replacerArgs));
	        } else {
	          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
	        }
	        if (position >= nextSourcePosition) {
	          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
	          nextSourcePosition = position + matched.length;
	        }
	      }
	      return accumulatedResult + S.slice(nextSourcePosition);
	    }
	  ];

	  // https://tc39.github.io/ecma262/#sec-getsubstitution
	  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
	    var tailPos = position + matched.length;
	    var m = captures.length;
	    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
	    if (namedCaptures !== undefined) {
	      namedCaptures = toObject(namedCaptures);
	      symbols = SUBSTITUTION_SYMBOLS;
	    }
	    return nativeReplace.call(replacement, symbols, function (match, ch) {
	      var capture;
	      switch (ch.charAt(0)) {
	        case '$': return '$';
	        case '&': return matched;
	        case '`': return str.slice(0, position);
	        case "'": return str.slice(tailPos);
	        case '<':
	          capture = namedCaptures[ch.slice(1, -1)];
	          break;
	        default: // \d\d?
	          var n = +ch;
	          if (n === 0) return match;
	          if (n > m) {
	            var f = floor(n / 10);
	            if (f === 0) return match;
	            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
	            return match;
	          }
	          capture = captures[n - 1];
	      }
	      return capture === undefined ? '' : capture;
	    });
	  }
	});


/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var createNonEnumerableProperty = __webpack_require__(229);
	var redefine = __webpack_require__(232);
	var fails = __webpack_require__(217);
	var wellKnownSymbol = __webpack_require__(262);
	var regexpExec = __webpack_require__(296);

	var SPECIES = wellKnownSymbol('species');

	var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
	  // #replace needs built-in support for named groups.
	  // #match works fine because it just return the exec results, even if it has
	  // a "grops" property.
	  var re = /./;
	  re.exec = function () {
	    var result = [];
	    result.groups = { a: '7' };
	    return result;
	  };
	  return ''.replace(re, '$<a>') !== '7';
	});

	// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
	// Weex JS has frozen built-in prototypes, so use try / catch wrapper
	var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
	  var re = /(?:)/;
	  var originalExec = re.exec;
	  re.exec = function () { return originalExec.apply(this, arguments); };
	  var result = 'ab'.split(re);
	  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
	});

	module.exports = function (KEY, length, exec, sham) {
	  var SYMBOL = wellKnownSymbol(KEY);

	  var DELEGATES_TO_SYMBOL = !fails(function () {
	    // String methods call symbol-named RegEp methods
	    var O = {};
	    O[SYMBOL] = function () { return 7; };
	    return ''[KEY](O) != 7;
	  });

	  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
	    // Symbol-named RegExp methods call .exec
	    var execCalled = false;
	    var re = /a/;

	    if (KEY === 'split') {
	      // We can't use real regex here since it causes deoptimization
	      // and serious performance degradation in V8
	      // https://github.com/zloirock/core-js/issues/306
	      re = {};
	      // RegExp[@@split] doesn't call the regex's exec method, but first creates
	      // a new one. We need to return the patched regex when creating the new one.
	      re.constructor = {};
	      re.constructor[SPECIES] = function () { return re; };
	      re.flags = '';
	      re[SYMBOL] = /./[SYMBOL];
	    }

	    re.exec = function () { execCalled = true; return null; };

	    re[SYMBOL]('');
	    return !execCalled;
	  });

	  if (
	    !DELEGATES_TO_SYMBOL ||
	    !DELEGATES_TO_EXEC ||
	    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
	    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
	  ) {
	    var nativeRegExpMethod = /./[SYMBOL];
	    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
	      if (regexp.exec === regexpExec) {
	        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
	          // The native String method already delegates to @@method (this
	          // polyfilled function), leasing to infinite recursion.
	          // We avoid it by directly calling the native @@method method.
	          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
	        }
	        return { done: true, value: nativeMethod.call(str, regexp, arg2) };
	      }
	      return { done: false };
	    });
	    var stringMethod = methods[0];
	    var regexMethod = methods[1];

	    redefine(String.prototype, KEY, stringMethod);
	    redefine(RegExp.prototype, SYMBOL, length == 2
	      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	      ? function (string, arg) { return regexMethod.call(string, this, arg); }
	      // 21.2.5.6 RegExp.prototype[@@match](string)
	      // 21.2.5.9 RegExp.prototype[@@search](string)
	      : function (string) { return regexMethod.call(string, this); }
	    );
	    if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);
	  }
	};


/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var charAt = __webpack_require__(301).charAt;

	// `AdvanceStringIndex` abstract operation
	// https://tc39.github.io/ecma262/#sec-advancestringindex
	module.exports = function (S, index, unicode) {
	  return index + (unicode ? charAt(S, index).length : 1);
	};


/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(251);
	var requireObjectCoercible = __webpack_require__(223);

	// `String.prototype.{ codePointAt, at }` methods implementation
	var createMethod = function (CONVERT_TO_STRING) {
	  return function ($this, pos) {
	    var S = String(requireObjectCoercible($this));
	    var position = toInteger(pos);
	    var size = S.length;
	    var first, second;
	    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
	    first = S.charCodeAt(position);
	    return first < 0xD800 || first > 0xDBFF || position + 1 === size
	      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
	        ? CONVERT_TO_STRING ? S.charAt(position) : first
	        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
	  };
	};

	module.exports = {
	  // `String.prototype.codePointAt` method
	  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
	  codeAt: createMethod(false),
	  // `String.prototype.at` method
	  // https://github.com/mathiasbynens/String.prototype.at
	  charAt: createMethod(true)
	};


/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(222);
	var regexpExec = __webpack_require__(296);

	// `RegExpExec` abstract operation
	// https://tc39.github.io/ecma262/#sec-regexpexec
	module.exports = function (R, S) {
	  var exec = R.exec;
	  if (typeof exec === 'function') {
	    var result = exec.call(R, S);
	    if (typeof result !== 'object') {
	      throw TypeError('RegExp exec method returned something other than an Object or null');
	    }
	    return result;
	  }

	  if (classof(R) !== 'RegExp') {
	    throw TypeError('RegExp#exec called on incompatible receiver');
	  }

	  return regexpExec.call(R, S);
	};



/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var fixRegExpWellKnownSymbolLogic = __webpack_require__(299);
	var isRegExp = __webpack_require__(304);
	var anObject = __webpack_require__(231);
	var requireObjectCoercible = __webpack_require__(223);
	var speciesConstructor = __webpack_require__(305);
	var advanceStringIndex = __webpack_require__(300);
	var toLength = __webpack_require__(250);
	var callRegExpExec = __webpack_require__(302);
	var regexpExec = __webpack_require__(296);
	var fails = __webpack_require__(217);

	var arrayPush = [].push;
	var min = Math.min;
	var MAX_UINT32 = 0xFFFFFFFF;

	// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
	var SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });

	// @@split logic
	fixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {
	  var internalSplit;
	  if (
	    'abbc'.split(/(b)*/)[1] == 'c' ||
	    'test'.split(/(?:)/, -1).length != 4 ||
	    'ab'.split(/(?:ab)*/).length != 2 ||
	    '.'.split(/(.?)(.?)/).length != 4 ||
	    '.'.split(/()()/).length > 1 ||
	    ''.split(/.?/).length
	  ) {
	    // based on es5-shim implementation, need to rework it
	    internalSplit = function (separator, limit) {
	      var string = String(requireObjectCoercible(this));
	      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
	      if (lim === 0) return [];
	      if (separator === undefined) return [string];
	      // If `separator` is not a regex, use native split
	      if (!isRegExp(separator)) {
	        return nativeSplit.call(string, separator, lim);
	      }
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') +
	                  (separator.multiline ? 'm' : '') +
	                  (separator.unicode ? 'u' : '') +
	                  (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var match, lastIndex, lastLength;
	      while (match = regexpExec.call(separatorCopy, string)) {
	        lastIndex = separatorCopy.lastIndex;
	        if (lastIndex > lastLastIndex) {
	          output.push(string.slice(lastLastIndex, match.index));
	          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));
	          lastLength = match[0].length;
	          lastLastIndex = lastIndex;
	          if (output.length >= lim) break;
	        }
	        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
	      }
	      if (lastLastIndex === string.length) {
	        if (lastLength || !separatorCopy.test('')) output.push('');
	      } else output.push(string.slice(lastLastIndex));
	      return output.length > lim ? output.slice(0, lim) : output;
	    };
	  // Chakra, V8
	  } else if ('0'.split(undefined, 0).length) {
	    internalSplit = function (separator, limit) {
	      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);
	    };
	  } else internalSplit = nativeSplit;

	  return [
	    // `String.prototype.split` method
	    // https://tc39.github.io/ecma262/#sec-string.prototype.split
	    function split(separator, limit) {
	      var O = requireObjectCoercible(this);
	      var splitter = separator == undefined ? undefined : separator[SPLIT];
	      return splitter !== undefined
	        ? splitter.call(separator, O, limit)
	        : internalSplit.call(String(O), separator, limit);
	    },
	    // `RegExp.prototype[@@split]` method
	    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
	    //
	    // NOTE: This cannot be properly polyfilled in engines that don't support
	    // the 'y' flag.
	    function (regexp, limit) {
	      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);
	      if (res.done) return res.value;

	      var rx = anObject(regexp);
	      var S = String(this);
	      var C = speciesConstructor(rx, RegExp);

	      var unicodeMatching = rx.unicode;
	      var flags = (rx.ignoreCase ? 'i' : '') +
	                  (rx.multiline ? 'm' : '') +
	                  (rx.unicode ? 'u' : '') +
	                  (SUPPORTS_Y ? 'y' : 'g');

	      // ^(? + rx + ) is needed, in combination with some S slicing, to
	      // simulate the 'y' flag.
	      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
	      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
	      if (lim === 0) return [];
	      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
	      var p = 0;
	      var q = 0;
	      var A = [];
	      while (q < S.length) {
	        splitter.lastIndex = SUPPORTS_Y ? q : 0;
	        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
	        var e;
	        if (
	          z === null ||
	          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
	        ) {
	          q = advanceStringIndex(S, q, unicodeMatching);
	        } else {
	          A.push(S.slice(p, q));
	          if (A.length === lim) return A;
	          for (var i = 1; i <= z.length - 1; i++) {
	            A.push(z[i]);
	            if (A.length === lim) return A;
	          }
	          q = p = e;
	        }
	      }
	      A.push(S.slice(p));
	      return A;
	    }
	  ];
	}, !SUPPORTS_Y);


/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(225);
	var classof = __webpack_require__(222);
	var wellKnownSymbol = __webpack_require__(262);

	var MATCH = wellKnownSymbol('match');

	// `IsRegExp` abstract operation
	// https://tc39.github.io/ecma262/#sec-isregexp
	module.exports = function (it) {
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
	};


/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(231);
	var aFunction = __webpack_require__(258);
	var wellKnownSymbol = __webpack_require__(262);

	var SPECIES = wellKnownSymbol('species');

	// `SpeciesConstructor` abstract operation
	// https://tc39.github.io/ecma262/#sec-speciesconstructor
	module.exports = function (O, defaultConstructor) {
	  var C = anObject(O).constructor;
	  var S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
	};


/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	var isObjectLike = __webpack_require__(307),
	    isPlainObject = __webpack_require__(308);

	/**
	 * Checks if `value` is likely a DOM element.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
	 * @example
	 *
	 * _.isElement(document.body);
	 * // => true
	 *
	 * _.isElement('<body>');
	 * // => false
	 */
	function isElement(value) {
	  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
	}

	module.exports = isElement;


/***/ },
/* 307 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(309),
	    getPrototype = __webpack_require__(315),
	    isObjectLike = __webpack_require__(307);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}

	module.exports = isPlainObject;


/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(310),
	    getRawTag = __webpack_require__(313),
	    objectToString = __webpack_require__(314);

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}

	module.exports = baseGetTag;


/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(311);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(312);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ },
/* 312 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(310);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];

	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}

	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}

	module.exports = getRawTag;


/***/ },
/* 314 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}

	module.exports = objectToString;


/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(316);

	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);

	module.exports = getPrototype;


/***/ },
/* 316 */
/***/ function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	module.exports = overArg;


/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	module.exports = __webpack_require__(318);


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var alphabet = __webpack_require__(319);
	var build = __webpack_require__(321);
	var isValid = __webpack_require__(325);

	// if you are using cluster or multiple servers use this to make each instance
	// has a unique value for worker
	// Note: I don't know if this is automatically set when using third
	// party cluster solutions such as pm2.
	var clusterWorkerId = __webpack_require__(326) || 0;

	/**
	 * Set the seed.
	 * Highly recommended if you don't want people to try to figure out your id schema.
	 * exposed as shortid.seed(int)
	 * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.
	 */
	function seed(seedValue) {
	    alphabet.seed(seedValue);
	    return module.exports;
	}

	/**
	 * Set the cluster worker or machine id
	 * exposed as shortid.worker(int)
	 * @param workerId worker must be positive integer.  Number less than 16 is recommended.
	 * returns shortid module so it can be chained.
	 */
	function worker(workerId) {
	    clusterWorkerId = workerId;
	    return module.exports;
	}

	/**
	 *
	 * sets new characters to use in the alphabet
	 * returns the shuffled alphabet
	 */
	function characters(newCharacters) {
	    if (newCharacters !== undefined) {
	        alphabet.characters(newCharacters);
	    }

	    return alphabet.shuffled();
	}

	/**
	 * Generate unique id
	 * Returns string id
	 */
	function generate() {
	  return build(clusterWorkerId);
	}

	// Export all other functions as properties of the generate function
	module.exports = generate;
	module.exports.generate = generate;
	module.exports.seed = seed;
	module.exports.worker = worker;
	module.exports.characters = characters;
	module.exports.isValid = isValid;


/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var randomFromSeed = __webpack_require__(320);

	var ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
	var alphabet;
	var previousSeed;

	var shuffled;

	function reset() {
	    shuffled = false;
	}

	function setCharacters(_alphabet_) {
	    if (!_alphabet_) {
	        if (alphabet !== ORIGINAL) {
	            alphabet = ORIGINAL;
	            reset();
	        }
	        return;
	    }

	    if (_alphabet_ === alphabet) {
	        return;
	    }

	    if (_alphabet_.length !== ORIGINAL.length) {
	        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
	    }

	    var unique = _alphabet_.split('').filter(function(item, ind, arr){
	       return ind !== arr.lastIndexOf(item);
	    });

	    if (unique.length) {
	        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
	    }

	    alphabet = _alphabet_;
	    reset();
	}

	function characters(_alphabet_) {
	    setCharacters(_alphabet_);
	    return alphabet;
	}

	function setSeed(seed) {
	    randomFromSeed.seed(seed);
	    if (previousSeed !== seed) {
	        reset();
	        previousSeed = seed;
	    }
	}

	function shuffle() {
	    if (!alphabet) {
	        setCharacters(ORIGINAL);
	    }

	    var sourceArray = alphabet.split('');
	    var targetArray = [];
	    var r = randomFromSeed.nextValue();
	    var characterIndex;

	    while (sourceArray.length > 0) {
	        r = randomFromSeed.nextValue();
	        characterIndex = Math.floor(r * sourceArray.length);
	        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
	    }
	    return targetArray.join('');
	}

	function getShuffled() {
	    if (shuffled) {
	        return shuffled;
	    }
	    shuffled = shuffle();
	    return shuffled;
	}

	/**
	 * lookup shuffled letter
	 * @param index
	 * @returns {string}
	 */
	function lookup(index) {
	    var alphabetShuffled = getShuffled();
	    return alphabetShuffled[index];
	}

	function get () {
	  return alphabet || ORIGINAL;
	}

	module.exports = {
	    get: get,
	    characters: characters,
	    seed: setSeed,
	    lookup: lookup,
	    shuffled: getShuffled
	};


/***/ },
/* 320 */
/***/ function(module, exports) {

	'use strict';

	// Found this seed-based random generator somewhere
	// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)

	var seed = 1;

	/**
	 * return a random number based on a seed
	 * @param seed
	 * @returns {number}
	 */
	function getNextValue() {
	    seed = (seed * 9301 + 49297) % 233280;
	    return seed/(233280.0);
	}

	function setSeed(_seed_) {
	    seed = _seed_;
	}

	module.exports = {
	    nextValue: getNextValue,
	    seed: setSeed
	};


/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var generate = __webpack_require__(322);
	var alphabet = __webpack_require__(319);

	// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.
	// This number should be updated every year or so to keep the generated id short.
	// To regenerate `new Date() - 0` and bump the version. Always bump the version!
	var REDUCE_TIME = 1567752802062;

	// don't change unless we change the algos or REDUCE_TIME
	// must be an integer and less than 16
	var version = 7;

	// Counter is used when shortid is called multiple times in one second.
	var counter;

	// Remember the last time shortid was called in case counter is needed.
	var previousSeconds;

	/**
	 * Generate unique id
	 * Returns string id
	 */
	function build(clusterWorkerId) {
	    var str = '';

	    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);

	    if (seconds === previousSeconds) {
	        counter++;
	    } else {
	        counter = 0;
	        previousSeconds = seconds;
	    }

	    str = str + generate(version);
	    str = str + generate(clusterWorkerId);
	    if (counter > 0) {
	        str = str + generate(counter);
	    }
	    str = str + generate(seconds);
	    return str;
	}

	module.exports = build;


/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var alphabet = __webpack_require__(319);
	var random = __webpack_require__(323);
	var format = __webpack_require__(324);

	function generate(number) {
	    var loopCounter = 0;
	    var done;

	    var str = '';

	    while (!done) {
	        str = str + format(random, alphabet.get(), 1);
	        done = number < (Math.pow(16, loopCounter + 1 ) );
	        loopCounter++;
	    }
	    return str;
	}

	module.exports = generate;


/***/ },
/* 323 */
/***/ function(module, exports) {

	'use strict';

	var crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto

	var randomByte;

	if (!crypto || !crypto.getRandomValues) {
	    randomByte = function(size) {
	        var bytes = [];
	        for (var i = 0; i < size; i++) {
	            bytes.push(Math.floor(Math.random() * 256));
	        }
	        return bytes;
	    };
	} else {
	    randomByte = function(size) {
	        return crypto.getRandomValues(new Uint8Array(size));
	    };
	}

	module.exports = randomByte;


/***/ },
/* 324 */
/***/ function(module, exports) {

	// This file replaces `format.js` in bundlers like webpack or Rollup,
	// according to `browser` config in `package.json`.

	module.exports = function (random, alphabet, size) {
	  // We can’t use bytes bigger than the alphabet. To make bytes values closer
	  // to the alphabet, we apply bitmask on them. We look for the closest
	  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have
	  // 30 symbols in the alphabet, we will take 31 (00011111).
	  // We do not use faster Math.clz32, because it is not available in browsers.
	  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1
	  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,
	  // which is bigger than the alphabet). As a result, we will need more bytes,
	  // than ID size, because we will refuse bytes bigger than the alphabet.

	  // Every hardware random generator call is costly,
	  // because we need to wait for entropy collection. This is why often it will
	  // be faster to ask for few extra bytes in advance, to avoid additional calls.

	  // Here we calculate how many random bytes should we call in advance.
	  // It depends on ID length, mask / alphabet size and magic number 1.6
	  // (which was selected according benchmarks).

	  // -~f => Math.ceil(f) if n is float number
	  // -~i => i + 1 if n is integer number
	  var step = -~(1.6 * mask * size / alphabet.length)
	  var id = ''

	  while (true) {
	    var bytes = random(step)
	    // Compact alternative for `for (var i = 0; i < step; i++)`
	    var i = step
	    while (i--) {
	      // If random byte is bigger than alphabet even after bitmask,
	      // we refuse it by `|| ''`.
	      id += alphabet[bytes[i] & mask] || ''
	      // More compact than `id.length + 1 === size`
	      if (id.length === +size) return id
	    }
	  }
	}


/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var alphabet = __webpack_require__(319);

	function isShortId(id) {
	    if (!id || typeof id !== 'string' || id.length < 6 ) {
	        return false;
	    }

	    var nonAlphabetic = new RegExp('[^' +
	      alphabet.get().replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&') +
	    ']');
	    return !nonAlphabetic.test(id);
	}

	module.exports = isShortId;


/***/ },
/* 326 */
/***/ function(module, exports) {

	'use strict';

	module.exports = 0;


/***/ },
/* 327 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	var KEY_KEYCODE_LIST = {
	  Enter: 13,
	  Backspace: 8,
	  Comma: 188,
	  Tab: 9,
	  Space: 32,
	  Escape: 27
	};
	var SERVER_ERROR = 'Server error';
	var FILE_TYPE_ERROR = 'Unsupported file type';

	exports.FILE_TYPE_ERROR = FILE_TYPE_ERROR;
	exports.KEY_KEYCODE_LIST = KEY_KEYCODE_LIST;
	exports.SERVER_ERROR = SERVER_ERROR;
	//# sourceMappingURL=constants.js.map


/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	__webpack_require__(284);
	__webpack_require__(212);
	var _rollupPluginBabelHelpers = __webpack_require__(268);
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	var PropTypes = __webpack_require__(269);
	var PropTypes__default = _interopDefault(PropTypes);
	var index = __webpack_require__(283);

	var getSomeString = function getSomeString(el) {
	  var defaultString = 'Button';
	  var resultString = '';

	  if (typeof el === 'string') {
	    resultString = el;
	  } else if (Array.isArray(el)) {
	    var strArr = [];
	    el.map(function (i) {
	      return typeof i === 'string' && strArr.push(i);
	    });
	    resultString = strArr.length === 0 ? defaultString : strArr.join(' ');
	  } else {
	    resultString = defaultString;
	  }

	  return resultString;
	};

	var Button = React__default.forwardRef(function (_ref, ref) {
	  var children = _ref.children,
	      disabled = _ref.disabled,
	      ariaLabel = _ref.ariaLabel,
	      others = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, ["children", "disabled", "ariaLabel"]);

	  var producedAriaLabel = ariaLabel === 'Button' && getSomeString(children);
	  return /*#__PURE__*/React__default.createElement("button", _rollupPluginBabelHelpers.extends({
	    tabIndex: disabled ? '-1' : null,
	    disabled: disabled,
	    "aria-label": producedAriaLabel,
	    ref: ref
	  }, others), React__default.Children.map(children, function (child) {
	    return index.wrapWithComp(child, 'btn-label');
	  }));
	});
	Button.propTypes = {
	  disabled: PropTypes__default.bool,
	  ariaLabel: PropTypes__default.string,
	  children: PropTypes__default.node.isRequired
	};
	Button.defaultProps = {
	  disabled: false,
	  ariaLabel: 'Button'
	};

	module.exports = Button;
	//# sourceMappingURL=index.js.map


/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	var $ = __webpack_require__(213);
	var assign = __webpack_require__(330);

	// `Object.assign` method
	// https://tc39.github.io/ecma262/#sec-object.assign
	$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {
	  assign: assign
	});


/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var DESCRIPTORS = __webpack_require__(216);
	var fails = __webpack_require__(217);
	var objectKeys = __webpack_require__(281);
	var getOwnPropertySymbolsModule = __webpack_require__(254);
	var propertyIsEnumerableModule = __webpack_require__(218);
	var toObject = __webpack_require__(259);
	var IndexedObject = __webpack_require__(221);

	var nativeAssign = Object.assign;
	var defineProperty = Object.defineProperty;

	// `Object.assign` method
	// https://tc39.github.io/ecma262/#sec-object.assign
	module.exports = !nativeAssign || fails(function () {
	  // should have correct order of operations (Edge bug)
	  if (DESCRIPTORS && nativeAssign({ b: 1 }, nativeAssign(defineProperty({}, 'a', {
	    enumerable: true,
	    get: function () {
	      defineProperty(this, 'b', {
	        value: 3,
	        enumerable: false
	      });
	    }
	  }), { b: 2 })).b !== 1) return true;
	  // should work with symbols and should have deterministic property order (V8 bug)
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var symbol = Symbol();
	  var alphabet = 'abcdefghijklmnopqrst';
	  A[symbol] = 7;
	  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
	  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var argumentsLength = arguments.length;
	  var index = 1;
	  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
	  var propertyIsEnumerable = propertyIsEnumerableModule.f;
	  while (argumentsLength > index) {
	    var S = IndexedObject(arguments[index++]);
	    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) {
	      key = keys[j++];
	      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];
	    }
	  } return T;
	} : nativeAssign;


/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(332);

	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are compared by strict equality, i.e. `===`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}

	module.exports = isEqual;


/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(333),
	    isObjectLike = __webpack_require__(307);

	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Unordered comparison
	 *  2 - Partial comparison
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, bitmask, customizer, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	}

	module.exports = baseIsEqual;


/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(334),
	    equalArrays = __webpack_require__(372),
	    equalByTag = __webpack_require__(378),
	    equalObjects = __webpack_require__(382),
	    getTag = __webpack_require__(408),
	    isArray = __webpack_require__(386),
	    isBuffer = __webpack_require__(395),
	    isTypedArray = __webpack_require__(399);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = objIsArr ? arrayTag : getTag(object),
	      othTag = othIsArr ? arrayTag : getTag(other);

	  objTag = objTag == argsTag ? objectTag : objTag;
	  othTag = othTag == argsTag ? objectTag : othTag;

	  var objIsObj = objTag == objectTag,
	      othIsObj = othTag == objectTag,
	      isSameTag = objTag == othTag;

	  if (isSameTag && isBuffer(object)) {
	    if (!isBuffer(other)) {
	      return false;
	    }
	    objIsArr = true;
	    objIsObj = false;
	  }
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	  }
	  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;

	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	}

	module.exports = baseIsEqualDeep;


/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(335),
	    stackClear = __webpack_require__(343),
	    stackDelete = __webpack_require__(344),
	    stackGet = __webpack_require__(345),
	    stackHas = __webpack_require__(346),
	    stackSet = __webpack_require__(347);

	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  var data = this.__data__ = new ListCache(entries);
	  this.size = data.size;
	}

	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;

	module.exports = Stack;


/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(336),
	    listCacheDelete = __webpack_require__(337),
	    listCacheGet = __webpack_require__(340),
	    listCacheHas = __webpack_require__(341),
	    listCacheSet = __webpack_require__(342);

	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;

	module.exports = ListCache;


/***/ },
/* 336 */
/***/ function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}

	module.exports = listCacheClear;


/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(338);

	/** Used for built-in method references. */
	var arrayProto = Array.prototype;

	/** Built-in value references. */
	var splice = arrayProto.splice;

	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}

	module.exports = listCacheDelete;


/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(339);

	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}

	module.exports = assocIndexOf;


/***/ },
/* 339 */
/***/ function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	module.exports = eq;


/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(338);

	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  return index < 0 ? undefined : data[index][1];
	}

	module.exports = listCacheGet;


/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(338);

	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}

	module.exports = listCacheHas;


/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(338);

	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}

	module.exports = listCacheSet;


/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(335);

	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	  this.size = 0;
	}

	module.exports = stackClear;


/***/ },
/* 344 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  var data = this.__data__,
	      result = data['delete'](key);

	  this.size = data.size;
	  return result;
	}

	module.exports = stackDelete;


/***/ },
/* 345 */
/***/ function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}

	module.exports = stackGet;


/***/ },
/* 346 */
/***/ function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}

	module.exports = stackHas;


/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(335),
	    Map = __webpack_require__(348),
	    MapCache = __webpack_require__(357);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var data = this.__data__;
	  if (data instanceof ListCache) {
	    var pairs = data.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      this.size = ++data.size;
	      return this;
	    }
	    data = this.__data__ = new MapCache(pairs);
	  }
	  data.set(key, value);
	  this.size = data.size;
	  return this;
	}

	module.exports = stackSet;


/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(349),
	    root = __webpack_require__(311);

	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');

	module.exports = Map;


/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(350),
	    getValue = __webpack_require__(356);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(351),
	    isMasked = __webpack_require__(353),
	    isObject = __webpack_require__(352),
	    toSource = __webpack_require__(355);

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}

	module.exports = baseIsNative;


/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(309),
	    isObject = __webpack_require__(352);

	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}

	module.exports = isFunction;


/***/ },
/* 352 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(354);

	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());

	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}

	module.exports = isMasked;


/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(311);

	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];

	module.exports = coreJsData;


/***/ },
/* 355 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to convert.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}

	module.exports = toSource;


/***/ },
/* 356 */
/***/ function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}

	module.exports = getValue;


/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(358),
	    mapCacheDelete = __webpack_require__(366),
	    mapCacheGet = __webpack_require__(369),
	    mapCacheHas = __webpack_require__(370),
	    mapCacheSet = __webpack_require__(371);

	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;

	module.exports = MapCache;


/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(359),
	    ListCache = __webpack_require__(335),
	    Map = __webpack_require__(348);

	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.size = 0;
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}

	module.exports = mapCacheClear;


/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(360),
	    hashDelete = __webpack_require__(362),
	    hashGet = __webpack_require__(363),
	    hashHas = __webpack_require__(364),
	    hashSet = __webpack_require__(365);

	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;

	module.exports = Hash;


/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(361);

	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	  this.size = 0;
	}

	module.exports = hashClear;


/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(349);

	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');

	module.exports = nativeCreate;


/***/ },
/* 362 */
/***/ function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  var result = this.has(key) && delete this.__data__[key];
	  this.size -= result ? 1 : 0;
	  return result;
	}

	module.exports = hashDelete;


/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(361);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}

	module.exports = hashGet;


/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(361);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	}

	module.exports = hashHas;


/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(361);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  this.size += this.has(key) ? 0 : 1;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}

	module.exports = hashSet;


/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(367);

	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  var result = getMapData(this, key)['delete'](key);
	  this.size -= result ? 1 : 0;
	  return result;
	}

	module.exports = mapCacheDelete;


/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(368);

	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}

	module.exports = getMapData;


/***/ },
/* 368 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}

	module.exports = isKeyable;


/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(367);

	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}

	module.exports = mapCacheGet;


/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(367);

	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}

	module.exports = mapCacheHas;


/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(367);

	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  var data = getMapData(this, key),
	      size = data.size;

	  data.set(key, value);
	  this.size += data.size == size ? 0 : 1;
	  return this;
	}

	module.exports = mapCacheSet;


/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(373),
	    arraySome = __webpack_require__(376),
	    cacheHas = __webpack_require__(377);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;

	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      arrLength = array.length,
	      othLength = other.length;

	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

	  stack.set(array, other);
	  stack.set(other, array);

	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!cacheHas(seen, othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	              return seen.push(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, bitmask, customizer, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}

	module.exports = equalArrays;


/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(357),
	    setCacheAdd = __webpack_require__(374),
	    setCacheHas = __webpack_require__(375);

	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values == null ? 0 : values.length;

	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}

	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;

	module.exports = SetCache;


/***/ },
/* 374 */
/***/ function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}

	module.exports = setCacheAdd;


/***/ },
/* 375 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}

	module.exports = setCacheHas;


/***/ },
/* 376 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;

	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}

	module.exports = arraySome;


/***/ },
/* 377 */
/***/ function(module, exports) {

	/**
	 * Checks if a `cache` value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}

	module.exports = cacheHas;


/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(310),
	    Uint8Array = __webpack_require__(379),
	    eq = __webpack_require__(339),
	    equalArrays = __webpack_require__(372),
	    mapToArray = __webpack_require__(380),
	    setToArray = __webpack_require__(381);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;

	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;

	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;

	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);

	    case errorTag:
	      return object.name == other.name && object.message == other.message;

	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');

	    case mapTag:
	      var convert = mapToArray;

	    case setTag:
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	      convert || (convert = setToArray);

	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= COMPARE_UNORDERED_FLAG;

	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	      stack['delete'](object);
	      return result;

	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}

	module.exports = equalByTag;


/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	var root = __webpack_require__(311);

	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;

	module.exports = Uint8Array;


/***/ },
/* 380 */
/***/ function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);

	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}

	module.exports = mapToArray;


/***/ },
/* 381 */
/***/ function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);

	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}

	module.exports = setToArray;


/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	var getAllKeys = __webpack_require__(383);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      objProps = getAllKeys(object),
	      objLength = objProps.length,
	      othProps = getAllKeys(other),
	      othLength = othProps.length;

	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);

	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;

	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}

	module.exports = equalObjects;


/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(384),
	    getSymbols = __webpack_require__(387),
	    keys = __webpack_require__(390);

	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}

	module.exports = getAllKeys;


/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(385),
	    isArray = __webpack_require__(386);

	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}

	module.exports = baseGetAllKeys;


/***/ },
/* 385 */
/***/ function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;

	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}

	module.exports = arrayPush;


/***/ },
/* 386 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	module.exports = isArray;


/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(388),
	    stubArray = __webpack_require__(389);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;

	/**
	 * Creates an array of the own enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	  if (object == null) {
	    return [];
	  }
	  object = Object(object);
	  return arrayFilter(nativeGetSymbols(object), function(symbol) {
	    return propertyIsEnumerable.call(object, symbol);
	  });
	};

	module.exports = getSymbols;


/***/ },
/* 388 */
/***/ function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];

	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}

	module.exports = arrayFilter;


/***/ },
/* 389 */
/***/ function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}

	module.exports = stubArray;


/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(391),
	    baseKeys = __webpack_require__(404),
	    isArrayLike = __webpack_require__(407);

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}

	module.exports = keys;


/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(392),
	    isArguments = __webpack_require__(393),
	    isArray = __webpack_require__(386),
	    isBuffer = __webpack_require__(395),
	    isIndex = __webpack_require__(398),
	    isTypedArray = __webpack_require__(399);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  var isArr = isArray(value),
	      isArg = !isArr && isArguments(value),
	      isBuff = !isArr && !isArg && isBuffer(value),
	      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	      skipIndexes = isArr || isArg || isBuff || isType,
	      result = skipIndexes ? baseTimes(value.length, String) : [],
	      length = result.length;

	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (
	           // Safari 9 has enumerable `arguments.length` in strict mode.
	           key == 'length' ||
	           // Node.js 0.10 has enumerable non-index properties on buffers.
	           (isBuff && (key == 'offset' || key == 'parent')) ||
	           // PhantomJS 2 has enumerable non-index properties on typed arrays.
	           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	           // Skip index properties.
	           isIndex(key, length)
	        ))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = arrayLikeKeys;


/***/ },
/* 392 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);

	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}

	module.exports = baseTimes;


/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsArguments = __webpack_require__(394),
	    isObjectLike = __webpack_require__(307);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	    !propertyIsEnumerable.call(value, 'callee');
	};

	module.exports = isArguments;


/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(309),
	    isObjectLike = __webpack_require__(307);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';

	/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */
	function baseIsArguments(value) {
	  return isObjectLike(value) && baseGetTag(value) == argsTag;
	}

	module.exports = baseIsArguments;


/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(311),
	    stubFalse = __webpack_require__(397);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;

	module.exports = isBuffer;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(396)(module)))

/***/ },
/* 396 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 397 */
/***/ function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}

	module.exports = stubFalse;


/***/ },
/* 398 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  var type = typeof value;
	  length = length == null ? MAX_SAFE_INTEGER : length;

	  return !!length &&
	    (type == 'number' ||
	      (type != 'symbol' && reIsUint.test(value))) &&
	        (value > -1 && value % 1 == 0 && value < length);
	}

	module.exports = isIndex;


/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(400),
	    baseUnary = __webpack_require__(402),
	    nodeUtil = __webpack_require__(403);

	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	module.exports = isTypedArray;


/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(309),
	    isLength = __webpack_require__(401),
	    isObjectLike = __webpack_require__(307);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;

	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	}

	module.exports = baseIsTypedArray;


/***/ },
/* 401 */
/***/ function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	module.exports = isLength;


/***/ },
/* 402 */
/***/ function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}

	module.exports = baseUnary;


/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(312);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;

	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    // Use `util.types` for Node.js 10+.
	    var types = freeModule && freeModule.require && freeModule.require('util').types;

	    if (types) {
	      return types;
	    }

	    // Legacy `process.binding('util')` for Node.js < 10.
	    return freeProcess && freeProcess.binding && freeProcess.binding('util');
	  } catch (e) {}
	}());

	module.exports = nodeUtil;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(396)(module)))

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(405),
	    nativeKeys = __webpack_require__(406);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = baseKeys;


/***/ },
/* 405 */
/***/ function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	  return value === proto;
	}

	module.exports = isPrototype;


/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(316);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);

	module.exports = nativeKeys;


/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(351),
	    isLength = __webpack_require__(401);

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}

	module.exports = isArrayLike;


/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(409),
	    Map = __webpack_require__(348),
	    Promise = __webpack_require__(410),
	    Set = __webpack_require__(411),
	    WeakMap = __webpack_require__(412),
	    baseGetTag = __webpack_require__(309),
	    toSource = __webpack_require__(355);

	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';

	var dataViewTag = '[object DataView]';

	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);

	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;

	// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = baseGetTag(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : '';

	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}

	module.exports = getTag;


/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(349),
	    root = __webpack_require__(311);

	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');

	module.exports = DataView;


/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(349),
	    root = __webpack_require__(311);

	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');

	module.exports = Promise;


/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(349),
	    root = __webpack_require__(311);

	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');

	module.exports = Set;


/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(349),
	    root = __webpack_require__(311);

	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');

	module.exports = WeakMap;


/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	var _rollupPluginBabelHelpers = __webpack_require__(268);
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	__webpack_require__(286);
	__webpack_require__(288);
	__webpack_require__(277);
	__webpack_require__(289);
	__webpack_require__(295);
	var index = __webpack_require__(283);
	__webpack_require__(414);
	__webpack_require__(416);
	__webpack_require__(418);
	var Fuse = _interopDefault(__webpack_require__(420));

	var useClickOutsideState = function useClickOutsideState(initialState) {
	  var refs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

	  var _useState = React.useState(initialState),
	      _useState2 = _rollupPluginBabelHelpers.slicedToArray(_useState, 2),
	      isVisible = _useState2[0],
	      setVisibility = _useState2[1];

	  var hideMenu = function hideMenu(_ref) {
	    var target = _ref.target;
	    return !refs.find(function (ref) {
	      return index.nodeContains(ref.current, target);
	    }) && setVisibility(false);
	  };

	  React.useEffect(function () {
	    global.window.addEventListener('mouseup', hideMenu);
	    return function () {
	      return global.window.removeEventListener('mouseup', hideMenu);
	    };
	  }, [refs]);
	  return [isVisible, setVisibility];
	};
	var useSelectionState = function useSelectionState(initialState) {
	  var isMultiSelect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	  // Instance methods
	  var sanitizeInitialState = !Array.isArray(initialState) ? [initialState] : initialState; // States

	  var _useState3 = React.useState(sanitizeInitialState),
	      _useState4 = _rollupPluginBabelHelpers.slicedToArray(_useState3, 2),
	      selectedOptions = _useState4[0],
	      setSelectedOptions = _useState4[1]; // State methods


	  var toggleOptionSelection = function toggleOptionSelection(selectedValue) {
	    var isOptionExist = selectedOptions.indexOf(selectedValue) > -1;
	    var newSelectionArray = isOptionExist ? selectedOptions.filter(function (value) {
	      return selectedValue !== value;
	    }) : [].concat(_rollupPluginBabelHelpers.toConsumableArray(selectedOptions), [selectedValue]);
	    setSelectedOptions(newSelectionArray);
	  };

	  var singleToggleOptionSelection = function singleToggleOptionSelection(selectedValue) {
	    var isOptionExist = selectedOptions.indexOf(selectedValue) > -1;

	    if (isOptionExist) {
	      return;
	    }

	    setSelectedOptions([selectedValue]);
	  };

	  if (isMultiSelect) {
	    return [selectedOptions, toggleOptionSelection, setSelectedOptions];
	  }

	  return [selectedOptions, singleToggleOptionSelection, setSelectedOptions];
	};
	var useEffectIgnoreFirst = function useEffectIgnoreFirst(effectHandler, effectDependedValues) {
	  var isFirstRun = React.useRef(true);
	  React.useEffect(function () {
	    if (isFirstRun.current) {
	      isFirstRun.current = false;
	      return;
	    }

	    return effectHandler();
	  }, effectDependedValues);
	};
	var useCombinedRefs = function useCombinedRefs() {
	  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
	    refs[_key] = arguments[_key];
	  }

	  var targetRef = React.useRef();
	  React.useEffect(function () {
	    refs.forEach(function (ref) {
	      if (!ref) {
	        return;
	      }

	      if (typeof ref === 'function') {
	        ref(targetRef.current);
	      } else {
	        // eslint-disable-next-line no-param-reassign
	        ref.current = targetRef.current;
	      }
	    });
	  }, [refs]);
	  return targetRef;
	};
	var usePortalRef = function usePortalRef() {
	  var containerSelector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'body';
	  var usePortal = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	  var portalAttribute = arguments.length > 2 ? arguments[2] : undefined;
	  var portalRef = React.useRef(false);
	  React.useEffect(function () {
	    if (containerSelector && usePortal) {
	      var portalContainer = global.document.querySelector(containerSelector);

	      if (portalContainer) {
	        var currentPortalDiv = portalAttribute ? portalContainer.querySelector("[".concat(portalAttribute, "=true]")) : false;

	        if (currentPortalDiv) {
	          portalRef.current = currentPortalDiv;
	        } else {
	          var id = index.generateShortID();
	          var div = global.document.createElement('div');
	          div.setAttribute('class', 'uikitGeneratedPortalContainer');
	          div.setAttribute('id', id);
	          portalContainer.appendChild(div);
	          portalRef.current = div;
	        }
	      }
	    }

	    return function () {
	      try {
	        if (portalRef.current) {
	          portalRef.current.parentNode.removeChild(portalRef.current);
	          portalRef.current = false;
	        }
	      } catch (_unused) {
	        console.error('Error while deleting portal container');
	      }
	    };
	  }, [containerSelector, usePortal]);
	  return portalRef;
	};
	var useDragState = function useDragState(initialState) {
	  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      onDropCallBack = _ref2.onDrop,
	      onDragOverCallBack = _ref2.onDragOver,
	      onDragEnterCallBack = _ref2.onDragEnter,
	      onDragLeaveCallBack = _ref2.onDragLeave;

	  var _useState5 = React.useState(initialState),
	      _useState6 = _rollupPluginBabelHelpers.slicedToArray(_useState5, 2),
	      isDragging = _useState6[0],
	      setDragState = _useState6[1];

	  var generateDragEventHandler = function generateDragEventHandler(state, callback) {
	    return function (event) {
	      setDragState(state);
	      event.stopPropagation();
	      event.preventDefault();

	      if (typeof callback === 'function') {
	        callback(event);
	      }

	      return false;
	    };
	  };

	  var onDragEnter = generateDragEventHandler(true, onDragEnterCallBack);
	  var onDragOver = generateDragEventHandler(true, onDragOverCallBack);
	  var onDragLeave = generateDragEventHandler(false, onDragLeaveCallBack);
	  var onDrop = generateDragEventHandler(false, onDropCallBack);
	  return [isDragging, {
	    onDragEnter: onDragEnter,
	    onDragOver: onDragOver,
	    onDragLeave: onDragLeave,
	    onDrop: onDrop
	  }];
	};
	var cachedScripts = [];
	var useScript = function useScript(src) {
	  var _useState7 = React.useState({
	    loaded: false,
	    error: false
	  }),
	      _useState8 = _rollupPluginBabelHelpers.slicedToArray(_useState7, 2),
	      scriptState = _useState8[0],
	      setLoadState = _useState8[1];

	  React.useEffect(function () {
	    if (cachedScripts.indexOf(src) > -1) {
	      setLoadState({
	        loaded: true,
	        error: false
	      });
	      return function (f) {
	        return f;
	      };
	    }

	    cachedScripts.push(src);
	    var scriptTag = document.createElement('script');
	    scriptTag.src = src;
	    scriptTag.async = true;

	    var onScriptLoad = function onScriptLoad() {
	      return setLoadState({
	        loaded: true,
	        error: false
	      });
	    };

	    var onScriptError = function onScriptError() {
	      setLoadState({
	        loaded: true,
	        error: true
	      });
	      scriptTag.remove();
	    };

	    scriptTag.addEventListener('load', onScriptLoad);
	    scriptTag.addEventListener('error', onScriptError);
	    document.body.appendChild(scriptTag);
	    return function () {
	      scriptTag.removeEventListener('load', onScriptLoad);
	      scriptTag.removeEventListener('error', onScriptError);
	    };
	  }, [src]);
	  return scriptState;
	};
	var useFuse = function useFuse(list, searchTerm) {
	  var keys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['text'];
	  var fuseOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {
	    shouldSort: true,
	    threshold: 0.4,
	    location: 0,
	    distance: 100,
	    maxPatternLength: 32,
	    minMatchCharLength: 1
	  };
	  var fuse = React.useMemo(function () {
	    return new Fuse(list, _rollupPluginBabelHelpers.objectSpread2({}, fuseOptions, {
	      keys: keys
	    }));
	  }, [list, fuseOptions, keys]);
	  var results = React.useMemo(function () {
	    return !searchTerm ? list : fuse.search(searchTerm);
	  }, [fuse, searchTerm]);
	  return results;
	};
	var usePrev = function usePrev(value) {
	  var ref = React.useRef();
	  React.useEffect(function () {
	    ref.current = value;
	  });
	  return ref.current;
	};

	exports.useClickOutsideState = useClickOutsideState;
	exports.useCombinedRefs = useCombinedRefs;
	exports.useDragState = useDragState;
	exports.useEffectIgnoreFirst = useEffectIgnoreFirst;
	exports.useFuse = useFuse;
	exports.usePortalRef = usePortalRef;
	exports.usePrev = usePrev;
	exports.useScript = useScript;
	exports.useSelectionState = useSelectionState;
	//# sourceMappingURL=hooks.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $ = __webpack_require__(213);
	var forEach = __webpack_require__(415);

	// `Array.prototype.forEach` method
	// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
	$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
	  forEach: forEach
	});


/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $forEach = __webpack_require__(256).forEach;
	var sloppyArrayMethod = __webpack_require__(285);

	// `Array.prototype.forEach` method implementation
	// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
	module.exports = sloppyArrayMethod('forEach') ? function forEach(callbackfn /* , thisArg */) {
	  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	} : [].forEach;


/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var fixRegExpWellKnownSymbolLogic = __webpack_require__(299);
	var anObject = __webpack_require__(231);
	var requireObjectCoercible = __webpack_require__(223);
	var sameValue = __webpack_require__(417);
	var regExpExec = __webpack_require__(302);

	// @@search logic
	fixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {
	  return [
	    // `String.prototype.search` method
	    // https://tc39.github.io/ecma262/#sec-string.prototype.search
	    function search(regexp) {
	      var O = requireObjectCoercible(this);
	      var searcher = regexp == undefined ? undefined : regexp[SEARCH];
	      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	    },
	    // `RegExp.prototype[@@search]` method
	    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
	    function (regexp) {
	      var res = maybeCallNative(nativeSearch, regexp, this);
	      if (res.done) return res.value;

	      var rx = anObject(regexp);
	      var S = String(this);

	      var previousLastIndex = rx.lastIndex;
	      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
	      var result = regExpExec(rx, S);
	      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
	      return result === null ? -1 : result.index;
	    }
	  ];
	});


/***/ },
/* 417 */
/***/ function(module, exports) {

	// `SameValue` abstract operation
	// https://tc39.github.io/ecma262/#sec-samevalue
	module.exports = Object.is || function is(x, y) {
	  // eslint-disable-next-line no-self-compare
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};


/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(214);
	var DOMIterables = __webpack_require__(419);
	var forEach = __webpack_require__(415);
	var createNonEnumerableProperty = __webpack_require__(229);

	for (var COLLECTION_NAME in DOMIterables) {
	  var Collection = global[COLLECTION_NAME];
	  var CollectionPrototype = Collection && Collection.prototype;
	  // some Chrome versions have non-configurable methods on DOMTokenList
	  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
	    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
	  } catch (error) {
	    CollectionPrototype.forEach = forEach;
	  }
	}


/***/ },
/* 419 */
/***/ function(module, exports) {

	// iterable DOM collections
	// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
	module.exports = {
	  CSSRuleList: 0,
	  CSSStyleDeclaration: 0,
	  CSSValueList: 0,
	  ClientRectList: 0,
	  DOMRectList: 0,
	  DOMStringList: 0,
	  DOMTokenList: 1,
	  DataTransferItemList: 0,
	  FileList: 0,
	  HTMLAllCollection: 0,
	  HTMLCollection: 0,
	  HTMLFormElement: 0,
	  HTMLSelectElement: 0,
	  MediaList: 0,
	  MimeTypeArray: 0,
	  NamedNodeMap: 0,
	  NodeList: 1,
	  PaintRequestList: 0,
	  Plugin: 0,
	  PluginArray: 0,
	  SVGLengthList: 0,
	  SVGNumberList: 0,
	  SVGPathSegList: 0,
	  SVGPointList: 0,
	  SVGStringList: 0,
	  SVGTransformList: 0,
	  SourceBufferList: 0,
	  StyleSheetList: 0,
	  TextTrackCueList: 0,
	  TextTrackList: 0,
	  TouchList: 0
	};


/***/ },
/* 420 */
/***/ function(module, exports) {

	/**
	 * Fuse.js v6.4.0 - Lightweight fuzzy-search (http://fusejs.io)
	 *
	 * Copyright (c) 2020 Kiro Risk (http://kiro.me)
	 * All Rights Reserved. Apache Software License 2.0
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 */

	'use strict';

	function _typeof(obj) {
	  "@babel/helpers - typeof";

	  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
	    _typeof = function (obj) {
	      return typeof obj;
	    };
	  } else {
	    _typeof = function (obj) {
	      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	    };
	  }

	  return _typeof(obj);
	}

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _defineProperties(target, props) {
	  for (var i = 0; i < props.length; i++) {
	    var descriptor = props[i];
	    descriptor.enumerable = descriptor.enumerable || false;
	    descriptor.configurable = true;
	    if ("value" in descriptor) descriptor.writable = true;
	    Object.defineProperty(target, descriptor.key, descriptor);
	  }
	}

	function _createClass(Constructor, protoProps, staticProps) {
	  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
	  if (staticProps) _defineProperties(Constructor, staticProps);
	  return Constructor;
	}

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }

	  return obj;
	}

	function ownKeys(object, enumerableOnly) {
	  var keys = Object.keys(object);

	  if (Object.getOwnPropertySymbols) {
	    var symbols = Object.getOwnPropertySymbols(object);
	    if (enumerableOnly) symbols = symbols.filter(function (sym) {
	      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
	    });
	    keys.push.apply(keys, symbols);
	  }

	  return keys;
	}

	function _objectSpread2(target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i] != null ? arguments[i] : {};

	    if (i % 2) {
	      ownKeys(Object(source), true).forEach(function (key) {
	        _defineProperty(target, key, source[key]);
	      });
	    } else if (Object.getOwnPropertyDescriptors) {
	      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
	    } else {
	      ownKeys(Object(source)).forEach(function (key) {
	        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
	      });
	    }
	  }

	  return target;
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function");
	  }

	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf(subClass, superClass);
	}

	function _getPrototypeOf(o) {
	  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
	    return o.__proto__ || Object.getPrototypeOf(o);
	  };
	  return _getPrototypeOf(o);
	}

	function _setPrototypeOf(o, p) {
	  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };

	  return _setPrototypeOf(o, p);
	}

	function _isNativeReflectConstruct() {
	  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
	  if (Reflect.construct.sham) return false;
	  if (typeof Proxy === "function") return true;

	  try {
	    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
	    return true;
	  } catch (e) {
	    return false;
	  }
	}

	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return self;
	}

	function _possibleConstructorReturn(self, call) {
	  if (call && (typeof call === "object" || typeof call === "function")) {
	    return call;
	  }

	  return _assertThisInitialized(self);
	}

	function _createSuper(Derived) {
	  var hasNativeReflectConstruct = _isNativeReflectConstruct();

	  return function _createSuperInternal() {
	    var Super = _getPrototypeOf(Derived),
	        result;

	    if (hasNativeReflectConstruct) {
	      var NewTarget = _getPrototypeOf(this).constructor;

	      result = Reflect.construct(Super, arguments, NewTarget);
	    } else {
	      result = Super.apply(this, arguments);
	    }

	    return _possibleConstructorReturn(this, result);
	  };
	}

	function _toConsumableArray(arr) {
	  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
	}

	function _arrayWithoutHoles(arr) {
	  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
	}

	function _iterableToArray(iter) {
	  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
	}

	function _unsupportedIterableToArray(o, minLen) {
	  if (!o) return;
	  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
	  var n = Object.prototype.toString.call(o).slice(8, -1);
	  if (n === "Object" && o.constructor) n = o.constructor.name;
	  if (n === "Map" || n === "Set") return Array.from(o);
	  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
	}

	function _arrayLikeToArray(arr, len) {
	  if (len == null || len > arr.length) len = arr.length;

	  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

	  return arr2;
	}

	function _nonIterableSpread() {
	  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}

	function isArray(value) {
	  return !Array.isArray ? Object.prototype.toString.call(value) === '[object Array]' : Array.isArray(value);
	} // Adapted from:
	// https://github.com/lodash/lodash/blob/f4ca396a796435422bd4fd41fadbd225edddf175/.internal/baseToString.js

	var INFINITY = 1 / 0;
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }

	  var result = value + '';
	  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
	}
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}
	function isString(value) {
	  return typeof value === 'string';
	}
	function isNumber(value) {
	  return typeof value === 'number';
	}
	function isObject(value) {
	  return _typeof(value) === 'object';
	}
	function isDefined(value) {
	  return value !== undefined && value !== null;
	}
	function isBlank(value) {
	  return !value.trim().length;
	}

	var EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';
	var INCORRECT_INDEX_TYPE = "Incorrect 'index' type";
	var LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = function LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key) {
	  return "Invalid value for key ".concat(key);
	};
	var PATTERN_LENGTH_TOO_LARGE = function PATTERN_LENGTH_TOO_LARGE(max) {
	  return "Pattern length exceeds max of ".concat(max, ".");
	};
	var MISSING_KEY_PROPERTY = function MISSING_KEY_PROPERTY(name) {
	  return "Missing ".concat(name, " property in key");
	};
	var INVALID_KEY_WEIGHT_VALUE = function INVALID_KEY_WEIGHT_VALUE(key) {
	  return "Property 'weight' in key '".concat(key, "' must be a positive integer");
	};

	var hasOwn = Object.prototype.hasOwnProperty;

	var KeyStore = /*#__PURE__*/function () {
	  function KeyStore(keys) {
	    var _this = this;

	    _classCallCheck(this, KeyStore);

	    this._keys = [];
	    this._keyMap = {};
	    var totalWeight = 0;
	    keys.forEach(function (key) {
	      var obj = createKey(key);
	      totalWeight += obj.weight;

	      _this._keys.push(obj);

	      _this._keyMap[obj.id] = obj;
	      totalWeight += obj.weight;
	    }); // Normalize weights so that their sum is equal to 1

	    this._keys.forEach(function (key) {
	      key.weight /= totalWeight;
	    });
	  }

	  _createClass(KeyStore, [{
	    key: "get",
	    value: function get(keyId) {
	      return this._keyMap[keyId];
	    }
	  }, {
	    key: "keys",
	    value: function keys() {
	      return this._keys;
	    }
	  }, {
	    key: "toJSON",
	    value: function toJSON() {
	      return JSON.stringify(this._keys);
	    }
	  }]);

	  return KeyStore;
	}();
	function createKey(key) {
	  var path = null;
	  var id = null;
	  var src = null;
	  var weight = 1;

	  if (isString(key) || isArray(key)) {
	    src = key;
	    path = createKeyPath(key);
	    id = createKeyId(key);
	  } else {
	    if (!hasOwn.call(key, 'name')) {
	      throw new Error(MISSING_KEY_PROPERTY('name'));
	    }

	    var name = key.name;
	    src = name;

	    if (hasOwn.call(key, 'weight')) {
	      weight = key.weight;

	      if (weight <= 0) {
	        throw new Error(INVALID_KEY_WEIGHT_VALUE(name));
	      }
	    }

	    path = createKeyPath(name);
	    id = createKeyId(name);
	  }

	  return {
	    path: path,
	    id: id,
	    weight: weight,
	    src: src
	  };
	}
	function createKeyPath(key) {
	  return isArray(key) ? key : key.split('.');
	}
	function createKeyId(key) {
	  return isArray(key) ? key.join('.') : key;
	}

	function get(obj, path) {
	  var list = [];
	  var arr = false;

	  var deepGet = function deepGet(obj, path, index) {
	    if (!path[index]) {
	      // If there's no path left, we've arrived at the object we care about.
	      list.push(obj);
	    } else {
	      var key = path[index];
	      var value = obj[key];

	      if (!isDefined(value)) {
	        return;
	      }

	      if (index === path.length - 1 && (isString(value) || isNumber(value))) {
	        list.push(toString(value));
	      } else if (isArray(value)) {
	        arr = true; // Search each item in the array.

	        for (var i = 0, len = value.length; i < len; i += 1) {
	          deepGet(value[i], path, index + 1);
	        }
	      } else if (path.length) {
	        // An object. Recurse further.
	        deepGet(value, path, index + 1);
	      }
	    }
	  }; // Backwards compatibility (since path used to be a string)


	  deepGet(obj, isString(path) ? path.split('.') : path, 0);
	  return arr ? list : list[0];
	}

	var MatchOptions = {
	  // Whether the matches should be included in the result set. When `true`, each record in the result
	  // set will include the indices of the matched characters.
	  // These can consequently be used for highlighting purposes.
	  includeMatches: false,
	  // When `true`, the matching function will continue to the end of a search pattern even if
	  // a perfect match has already been located in the string.
	  findAllMatches: false,
	  // Minimum number of characters that must be matched before a result is considered a match
	  minMatchCharLength: 1
	};
	var BasicOptions = {
	  // When `true`, the algorithm continues searching to the end of the input even if a perfect
	  // match is found before the end of the same input.
	  isCaseSensitive: false,
	  // When true, the matching function will continue to the end of a search pattern even if
	  includeScore: false,
	  // List of properties that will be searched. This also supports nested properties.
	  keys: [],
	  // Whether to sort the result list, by score
	  shouldSort: true,
	  // Default sort function: sort by ascending score, ascending index
	  sortFn: function sortFn(a, b) {
	    return a.score === b.score ? a.idx < b.idx ? -1 : 1 : a.score < b.score ? -1 : 1;
	  }
	};
	var FuzzyOptions = {
	  // Approximately where in the text is the pattern expected to be found?
	  location: 0,
	  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match
	  // (of both letters and location), a threshold of '1.0' would match anything.
	  threshold: 0.6,
	  // Determines how close the match must be to the fuzzy location (specified above).
	  // An exact letter match which is 'distance' characters away from the fuzzy location
	  // would score as a complete mismatch. A distance of '0' requires the match be at
	  // the exact location specified, a threshold of '1000' would require a perfect match
	  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.
	  distance: 100
	};
	var AdvancedOptions = {
	  // When `true`, it enables the use of unix-like search commands
	  useExtendedSearch: false,
	  // The get function to use when fetching an object's properties.
	  // The default will search nested paths *ie foo.bar.baz*
	  getFn: get,
	  // When `true`, search will ignore `location` and `distance`, so it won't matter
	  // where in the string the pattern appears.
	  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score
	  ignoreLocation: false,
	  // When `true`, the calculation for the relevance score (used for sorting) will
	  // ignore the field-length norm.
	  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm
	  ignoreFieldNorm: false
	};
	var Config = _objectSpread2({}, BasicOptions, {}, MatchOptions, {}, FuzzyOptions, {}, AdvancedOptions);

	var SPACE = /[^ ]+/g; // Field-length norm: the shorter the field, the higher the weight.
	// Set to 3 decimals to reduce index size.

	function norm() {
	  var mantissa = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;
	  var cache = new Map();
	  return {
	    get: function get(value) {
	      var numTokens = value.match(SPACE).length;

	      if (cache.has(numTokens)) {
	        return cache.get(numTokens);
	      }

	      var n = parseFloat((1 / Math.sqrt(numTokens)).toFixed(mantissa));
	      cache.set(numTokens, n);
	      return n;
	    },
	    clear: function clear() {
	      cache.clear();
	    }
	  };
	}

	var FuseIndex = /*#__PURE__*/function () {
	  function FuseIndex() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$getFn = _ref.getFn,
	        getFn = _ref$getFn === void 0 ? Config.getFn : _ref$getFn;

	    _classCallCheck(this, FuseIndex);

	    this.norm = norm(3);
	    this.getFn = getFn;
	    this.isCreated = false;
	    this.setIndexRecords();
	  }

	  _createClass(FuseIndex, [{
	    key: "setSources",
	    value: function setSources() {
	      var docs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      this.docs = docs;
	    }
	  }, {
	    key: "setIndexRecords",
	    value: function setIndexRecords() {
	      var records = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      this.records = records;
	    }
	  }, {
	    key: "setKeys",
	    value: function setKeys() {
	      var _this = this;

	      var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      this.keys = keys;
	      this._keysMap = {};
	      keys.forEach(function (key, idx) {
	        _this._keysMap[key.id] = idx;
	      });
	    }
	  }, {
	    key: "create",
	    value: function create() {
	      var _this2 = this;

	      if (this.isCreated || !this.docs.length) {
	        return;
	      }

	      this.isCreated = true; // List is Array<String>

	      if (isString(this.docs[0])) {
	        this.docs.forEach(function (doc, docIndex) {
	          _this2._addString(doc, docIndex);
	        });
	      } else {
	        // List is Array<Object>
	        this.docs.forEach(function (doc, docIndex) {
	          _this2._addObject(doc, docIndex);
	        });
	      }

	      this.norm.clear();
	    } // Adds a doc to the end of the index

	  }, {
	    key: "add",
	    value: function add(doc) {
	      var idx = this.size();

	      if (isString(doc)) {
	        this._addString(doc, idx);
	      } else {
	        this._addObject(doc, idx);
	      }
	    } // Removes the doc at the specified index of the index

	  }, {
	    key: "removeAt",
	    value: function removeAt(idx) {
	      this.records.splice(idx, 1); // Change ref index of every subsquent doc

	      for (var i = idx, len = this.size(); i < len; i += 1) {
	        this.records[i].i -= 1;
	      }
	    }
	  }, {
	    key: "getValueForItemAtKeyId",
	    value: function getValueForItemAtKeyId(item, keyId) {
	      return item[this._keysMap[keyId]];
	    }
	  }, {
	    key: "size",
	    value: function size() {
	      return this.records.length;
	    }
	  }, {
	    key: "_addString",
	    value: function _addString(doc, docIndex) {
	      if (!isDefined(doc) || isBlank(doc)) {
	        return;
	      }

	      var record = {
	        v: doc,
	        i: docIndex,
	        n: this.norm.get(doc)
	      };
	      this.records.push(record);
	    }
	  }, {
	    key: "_addObject",
	    value: function _addObject(doc, docIndex) {
	      var _this3 = this;

	      var record = {
	        i: docIndex,
	        $: {}
	      }; // Iterate over every key (i.e, path), and fetch the value at that key

	      this.keys.forEach(function (key, keyIndex) {
	        // console.log(key)
	        var value = _this3.getFn(doc, key.path);

	        if (!isDefined(value)) {
	          return;
	        }

	        if (isArray(value)) {
	          (function () {
	            var subRecords = [];
	            var stack = [{
	              nestedArrIndex: -1,
	              value: value
	            }];

	            while (stack.length) {
	              var _stack$pop = stack.pop(),
	                  nestedArrIndex = _stack$pop.nestedArrIndex,
	                  _value = _stack$pop.value;

	              if (!isDefined(_value)) {
	                continue;
	              }

	              if (isString(_value) && !isBlank(_value)) {
	                var subRecord = {
	                  v: _value,
	                  i: nestedArrIndex,
	                  n: _this3.norm.get(_value)
	                };
	                subRecords.push(subRecord);
	              } else if (isArray(_value)) {
	                _value.forEach(function (item, k) {
	                  stack.push({
	                    nestedArrIndex: k,
	                    value: item
	                  });
	                });
	              }
	            }

	            record.$[keyIndex] = subRecords;
	          })();
	        } else if (!isBlank(value)) {
	          var subRecord = {
	            v: value,
	            n: _this3.norm.get(value)
	          };
	          record.$[keyIndex] = subRecord;
	        }
	      });
	      this.records.push(record);
	    }
	  }, {
	    key: "toJSON",
	    value: function toJSON() {
	      return {
	        keys: this.keys,
	        records: this.records
	      };
	    }
	  }]);

	  return FuseIndex;
	}();
	function createIndex(keys, docs) {
	  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref2$getFn = _ref2.getFn,
	      getFn = _ref2$getFn === void 0 ? Config.getFn : _ref2$getFn;

	  var myIndex = new FuseIndex({
	    getFn: getFn
	  });
	  myIndex.setKeys(keys.map(createKey));
	  myIndex.setSources(docs);
	  myIndex.create();
	  return myIndex;
	}
	function parseIndex(data) {
	  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref3$getFn = _ref3.getFn,
	      getFn = _ref3$getFn === void 0 ? Config.getFn : _ref3$getFn;

	  var keys = data.keys,
	      records = data.records;
	  var myIndex = new FuseIndex({
	    getFn: getFn
	  });
	  myIndex.setKeys(keys);
	  myIndex.setIndexRecords(records);
	  return myIndex;
	}

	function transformMatches(result, data) {
	  var matches = result.matches;
	  data.matches = [];

	  if (!isDefined(matches)) {
	    return;
	  }

	  matches.forEach(function (match) {
	    if (!isDefined(match.indices) || !match.indices.length) {
	      return;
	    }

	    var indices = match.indices,
	        value = match.value;
	    var obj = {
	      indices: indices,
	      value: value
	    };

	    if (match.key) {
	      obj.key = match.key.src;
	    }

	    if (match.idx > -1) {
	      obj.refIndex = match.idx;
	    }

	    data.matches.push(obj);
	  });
	}

	function transformScore(result, data) {
	  data.score = result.score;
	}

	function computeScore(pattern) {
	  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref$errors = _ref.errors,
	      errors = _ref$errors === void 0 ? 0 : _ref$errors,
	      _ref$currentLocation = _ref.currentLocation,
	      currentLocation = _ref$currentLocation === void 0 ? 0 : _ref$currentLocation,
	      _ref$expectedLocation = _ref.expectedLocation,
	      expectedLocation = _ref$expectedLocation === void 0 ? 0 : _ref$expectedLocation,
	      _ref$distance = _ref.distance,
	      distance = _ref$distance === void 0 ? Config.distance : _ref$distance,
	      _ref$ignoreLocation = _ref.ignoreLocation,
	      ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;

	  var accuracy = errors / pattern.length;

	  if (ignoreLocation) {
	    return accuracy;
	  }

	  var proximity = Math.abs(expectedLocation - currentLocation);

	  if (!distance) {
	    // Dodge divide by zero error.
	    return proximity ? 1.0 : accuracy;
	  }

	  return accuracy + proximity / distance;
	}

	function convertMaskToIndices() {
	  var matchmask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	  var minMatchCharLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Config.minMatchCharLength;
	  var indices = [];
	  var start = -1;
	  var end = -1;
	  var i = 0;

	  for (var len = matchmask.length; i < len; i += 1) {
	    var match = matchmask[i];

	    if (match && start === -1) {
	      start = i;
	    } else if (!match && start !== -1) {
	      end = i - 1;

	      if (end - start + 1 >= minMatchCharLength) {
	        indices.push([start, end]);
	      }

	      start = -1;
	    }
	  } // (i-1 - start) + 1 => i - start


	  if (matchmask[i - 1] && i - start >= minMatchCharLength) {
	    indices.push([start, i - 1]);
	  }

	  return indices;
	}

	// Machine word size
	var MAX_BITS = 32;

	function search(text, pattern, patternAlphabet) {
	  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
	      _ref$location = _ref.location,
	      location = _ref$location === void 0 ? Config.location : _ref$location,
	      _ref$distance = _ref.distance,
	      distance = _ref$distance === void 0 ? Config.distance : _ref$distance,
	      _ref$threshold = _ref.threshold,
	      threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,
	      _ref$findAllMatches = _ref.findAllMatches,
	      findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,
	      _ref$minMatchCharLeng = _ref.minMatchCharLength,
	      minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,
	      _ref$includeMatches = _ref.includeMatches,
	      includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,
	      _ref$ignoreLocation = _ref.ignoreLocation,
	      ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;

	  if (pattern.length > MAX_BITS) {
	    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS));
	  }

	  var patternLen = pattern.length; // Set starting location at beginning text and initialize the alphabet.

	  var textLen = text.length; // Handle the case when location > text.length

	  var expectedLocation = Math.max(0, Math.min(location, textLen)); // Highest score beyond which we give up.

	  var currentThreshold = threshold; // Is there a nearby exact match? (speedup)

	  var bestLocation = expectedLocation; // Performance: only computer matches when the minMatchCharLength > 1
	  // OR if `includeMatches` is true.

	  var computeMatches = minMatchCharLength > 1 || includeMatches; // A mask of the matches, used for building the indices

	  var matchMask = computeMatches ? Array(textLen) : [];
	  var index; // Get all exact matches, here for speed up

	  while ((index = text.indexOf(pattern, bestLocation)) > -1) {
	    var score = computeScore(pattern, {
	      currentLocation: index,
	      expectedLocation: expectedLocation,
	      distance: distance,
	      ignoreLocation: ignoreLocation
	    });
	    currentThreshold = Math.min(score, currentThreshold);
	    bestLocation = index + patternLen;

	    if (computeMatches) {
	      var i = 0;

	      while (i < patternLen) {
	        matchMask[index + i] = 1;
	        i += 1;
	      }
	    }
	  } // Reset the best location


	  bestLocation = -1;
	  var lastBitArr = [];
	  var finalScore = 1;
	  var binMax = patternLen + textLen;
	  var mask = 1 << patternLen - 1;

	  for (var _i = 0; _i < patternLen; _i += 1) {
	    // Scan for the best match; each iteration allows for one more error.
	    // Run a binary search to determine how far from the match location we can stray
	    // at this error level.
	    var binMin = 0;
	    var binMid = binMax;

	    while (binMin < binMid) {
	      var _score2 = computeScore(pattern, {
	        errors: _i,
	        currentLocation: expectedLocation + binMid,
	        expectedLocation: expectedLocation,
	        distance: distance,
	        ignoreLocation: ignoreLocation
	      });

	      if (_score2 <= currentThreshold) {
	        binMin = binMid;
	      } else {
	        binMax = binMid;
	      }

	      binMid = Math.floor((binMax - binMin) / 2 + binMin);
	    } // Use the result from this iteration as the maximum for the next.


	    binMax = binMid;
	    var start = Math.max(1, expectedLocation - binMid + 1);
	    var finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen; // Initialize the bit array

	    var bitArr = Array(finish + 2);
	    bitArr[finish + 1] = (1 << _i) - 1;

	    for (var j = finish; j >= start; j -= 1) {
	      var currentLocation = j - 1;
	      var charMatch = patternAlphabet[text.charAt(currentLocation)];

	      if (computeMatches) {
	        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)
	        matchMask[currentLocation] = +!!charMatch;
	      } // First pass: exact match


	      bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch; // Subsequent passes: fuzzy match

	      if (_i) {
	        bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];
	      }

	      if (bitArr[j] & mask) {
	        finalScore = computeScore(pattern, {
	          errors: _i,
	          currentLocation: currentLocation,
	          expectedLocation: expectedLocation,
	          distance: distance,
	          ignoreLocation: ignoreLocation
	        }); // This match will almost certainly be better than any existing match.
	        // But check anyway.

	        if (finalScore <= currentThreshold) {
	          // Indeed it is
	          currentThreshold = finalScore;
	          bestLocation = currentLocation; // Already passed `loc`, downhill from here on in.

	          if (bestLocation <= expectedLocation) {
	            break;
	          } // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.


	          start = Math.max(1, 2 * expectedLocation - bestLocation);
	        }
	      }
	    } // No hope for a (better) match at greater error levels.


	    var _score = computeScore(pattern, {
	      errors: _i + 1,
	      currentLocation: expectedLocation,
	      expectedLocation: expectedLocation,
	      distance: distance,
	      ignoreLocation: ignoreLocation
	    });

	    if (_score > currentThreshold) {
	      break;
	    }

	    lastBitArr = bitArr;
	  }

	  var result = {
	    isMatch: bestLocation >= 0,
	    // Count exact matches (those with a score of 0) to be "almost" exact
	    score: Math.max(0.001, finalScore)
	  };

	  if (computeMatches) {
	    var indices = convertMaskToIndices(matchMask, minMatchCharLength);

	    if (!indices.length) {
	      result.isMatch = false;
	    } else if (includeMatches) {
	      result.indices = indices;
	    }
	  }

	  return result;
	}

	function createPatternAlphabet(pattern) {
	  var mask = {};

	  for (var i = 0, len = pattern.length; i < len; i += 1) {
	    var char = pattern.charAt(i);
	    mask[char] = (mask[char] || 0) | 1 << len - i - 1;
	  }

	  return mask;
	}

	var BitapSearch = /*#__PURE__*/function () {
	  function BitapSearch(pattern) {
	    var _this = this;

	    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        _ref$location = _ref.location,
	        location = _ref$location === void 0 ? Config.location : _ref$location,
	        _ref$threshold = _ref.threshold,
	        threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,
	        _ref$distance = _ref.distance,
	        distance = _ref$distance === void 0 ? Config.distance : _ref$distance,
	        _ref$includeMatches = _ref.includeMatches,
	        includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,
	        _ref$findAllMatches = _ref.findAllMatches,
	        findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,
	        _ref$minMatchCharLeng = _ref.minMatchCharLength,
	        minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,
	        _ref$isCaseSensitive = _ref.isCaseSensitive,
	        isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive,
	        _ref$ignoreLocation = _ref.ignoreLocation,
	        ignoreLocation = _ref$ignoreLocation === void 0 ? Config.ignoreLocation : _ref$ignoreLocation;

	    _classCallCheck(this, BitapSearch);

	    this.options = {
	      location: location,
	      threshold: threshold,
	      distance: distance,
	      includeMatches: includeMatches,
	      findAllMatches: findAllMatches,
	      minMatchCharLength: minMatchCharLength,
	      isCaseSensitive: isCaseSensitive,
	      ignoreLocation: ignoreLocation
	    };
	    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
	    this.chunks = [];

	    if (!this.pattern.length) {
	      return;
	    }

	    var addChunk = function addChunk(pattern, startIndex) {
	      _this.chunks.push({
	        pattern: pattern,
	        alphabet: createPatternAlphabet(pattern),
	        startIndex: startIndex
	      });
	    };

	    var len = this.pattern.length;

	    if (len > MAX_BITS) {
	      var i = 0;
	      var remainder = len % MAX_BITS;
	      var end = len - remainder;

	      while (i < end) {
	        addChunk(this.pattern.substr(i, MAX_BITS), i);
	        i += MAX_BITS;
	      }

	      if (remainder) {
	        var startIndex = len - MAX_BITS;
	        addChunk(this.pattern.substr(startIndex), startIndex);
	      }
	    } else {
	      addChunk(this.pattern, 0);
	    }
	  }

	  _createClass(BitapSearch, [{
	    key: "searchIn",
	    value: function searchIn(text) {
	      var _this$options = this.options,
	          isCaseSensitive = _this$options.isCaseSensitive,
	          includeMatches = _this$options.includeMatches;

	      if (!isCaseSensitive) {
	        text = text.toLowerCase();
	      } // Exact match


	      if (this.pattern === text) {
	        var _result = {
	          isMatch: true,
	          score: 0
	        };

	        if (includeMatches) {
	          _result.indices = [[0, text.length - 1]];
	        }

	        return _result;
	      } // Otherwise, use Bitap algorithm


	      var _this$options2 = this.options,
	          location = _this$options2.location,
	          distance = _this$options2.distance,
	          threshold = _this$options2.threshold,
	          findAllMatches = _this$options2.findAllMatches,
	          minMatchCharLength = _this$options2.minMatchCharLength,
	          ignoreLocation = _this$options2.ignoreLocation;
	      var allIndices = [];
	      var totalScore = 0;
	      var hasMatches = false;
	      this.chunks.forEach(function (_ref2) {
	        var pattern = _ref2.pattern,
	            alphabet = _ref2.alphabet,
	            startIndex = _ref2.startIndex;

	        var _search = search(text, pattern, alphabet, {
	          location: location + startIndex,
	          distance: distance,
	          threshold: threshold,
	          findAllMatches: findAllMatches,
	          minMatchCharLength: minMatchCharLength,
	          includeMatches: includeMatches,
	          ignoreLocation: ignoreLocation
	        }),
	            isMatch = _search.isMatch,
	            score = _search.score,
	            indices = _search.indices;

	        if (isMatch) {
	          hasMatches = true;
	        }

	        totalScore += score;

	        if (isMatch && indices) {
	          allIndices = [].concat(_toConsumableArray(allIndices), _toConsumableArray(indices));
	        }
	      });
	      var result = {
	        isMatch: hasMatches,
	        score: hasMatches ? totalScore / this.chunks.length : 1
	      };

	      if (hasMatches && includeMatches) {
	        result.indices = allIndices;
	      }

	      return result;
	    }
	  }]);

	  return BitapSearch;
	}();

	var BaseMatch = /*#__PURE__*/function () {
	  function BaseMatch(pattern) {
	    _classCallCheck(this, BaseMatch);

	    this.pattern = pattern;
	  }

	  _createClass(BaseMatch, [{
	    key: "search",
	    value: function search()
	    /*text*/
	    {}
	  }], [{
	    key: "isMultiMatch",
	    value: function isMultiMatch(pattern) {
	      return getMatch(pattern, this.multiRegex);
	    }
	  }, {
	    key: "isSingleMatch",
	    value: function isSingleMatch(pattern) {
	      return getMatch(pattern, this.singleRegex);
	    }
	  }]);

	  return BaseMatch;
	}();

	function getMatch(pattern, exp) {
	  var matches = pattern.match(exp);
	  return matches ? matches[1] : null;
	}

	var ExactMatch = /*#__PURE__*/function (_BaseMatch) {
	  _inherits(ExactMatch, _BaseMatch);

	  var _super = _createSuper(ExactMatch);

	  function ExactMatch(pattern) {
	    _classCallCheck(this, ExactMatch);

	    return _super.call(this, pattern);
	  }

	  _createClass(ExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var isMatch = text === this.pattern;
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [0, this.pattern.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^="(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^=(.*)$/;
	    }
	  }]);

	  return ExactMatch;
	}(BaseMatch);

	var InverseExactMatch = /*#__PURE__*/function (_BaseMatch) {
	  _inherits(InverseExactMatch, _BaseMatch);

	  var _super = _createSuper(InverseExactMatch);

	  function InverseExactMatch(pattern) {
	    _classCallCheck(this, InverseExactMatch);

	    return _super.call(this, pattern);
	  }

	  _createClass(InverseExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var index = text.indexOf(this.pattern);
	      var isMatch = index === -1;
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [0, text.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'inverse-exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^!"(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^!(.*)$/;
	    }
	  }]);

	  return InverseExactMatch;
	}(BaseMatch);

	var PrefixExactMatch = /*#__PURE__*/function (_BaseMatch) {
	  _inherits(PrefixExactMatch, _BaseMatch);

	  var _super = _createSuper(PrefixExactMatch);

	  function PrefixExactMatch(pattern) {
	    _classCallCheck(this, PrefixExactMatch);

	    return _super.call(this, pattern);
	  }

	  _createClass(PrefixExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var isMatch = text.startsWith(this.pattern);
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [0, this.pattern.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'prefix-exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^\^"(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^\^(.*)$/;
	    }
	  }]);

	  return PrefixExactMatch;
	}(BaseMatch);

	var InversePrefixExactMatch = /*#__PURE__*/function (_BaseMatch) {
	  _inherits(InversePrefixExactMatch, _BaseMatch);

	  var _super = _createSuper(InversePrefixExactMatch);

	  function InversePrefixExactMatch(pattern) {
	    _classCallCheck(this, InversePrefixExactMatch);

	    return _super.call(this, pattern);
	  }

	  _createClass(InversePrefixExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var isMatch = !text.startsWith(this.pattern);
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [0, text.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'inverse-prefix-exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^!\^"(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^!\^(.*)$/;
	    }
	  }]);

	  return InversePrefixExactMatch;
	}(BaseMatch);

	var SuffixExactMatch = /*#__PURE__*/function (_BaseMatch) {
	  _inherits(SuffixExactMatch, _BaseMatch);

	  var _super = _createSuper(SuffixExactMatch);

	  function SuffixExactMatch(pattern) {
	    _classCallCheck(this, SuffixExactMatch);

	    return _super.call(this, pattern);
	  }

	  _createClass(SuffixExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var isMatch = text.endsWith(this.pattern);
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [text.length - this.pattern.length, text.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'suffix-exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^"(.*)"\$$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^(.*)\$$/;
	    }
	  }]);

	  return SuffixExactMatch;
	}(BaseMatch);

	var InverseSuffixExactMatch = /*#__PURE__*/function (_BaseMatch) {
	  _inherits(InverseSuffixExactMatch, _BaseMatch);

	  var _super = _createSuper(InverseSuffixExactMatch);

	  function InverseSuffixExactMatch(pattern) {
	    _classCallCheck(this, InverseSuffixExactMatch);

	    return _super.call(this, pattern);
	  }

	  _createClass(InverseSuffixExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var isMatch = !text.endsWith(this.pattern);
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [0, text.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'inverse-suffix-exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^!"(.*)"\$$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^!(.*)\$$/;
	    }
	  }]);

	  return InverseSuffixExactMatch;
	}(BaseMatch);

	var FuzzyMatch = /*#__PURE__*/function (_BaseMatch) {
	  _inherits(FuzzyMatch, _BaseMatch);

	  var _super = _createSuper(FuzzyMatch);

	  function FuzzyMatch(pattern) {
	    var _this;

	    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        _ref$location = _ref.location,
	        location = _ref$location === void 0 ? Config.location : _ref$location,
	        _ref$threshold = _ref.threshold,
	        threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,
	        _ref$distance = _ref.distance,
	        distance = _ref$distance === void 0 ? Config.distance : _ref$distance,
	        _ref$includeMatches = _ref.includeMatches,
	        includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,
	        _ref$findAllMatches = _ref.findAllMatches,
	        findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,
	        _ref$minMatchCharLeng = _ref.minMatchCharLength,
	        minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,
	        _ref$isCaseSensitive = _ref.isCaseSensitive,
	        isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive;

	    _classCallCheck(this, FuzzyMatch);

	    _this = _super.call(this, pattern);
	    _this._bitapSearch = new BitapSearch(pattern, {
	      location: location,
	      threshold: threshold,
	      distance: distance,
	      includeMatches: includeMatches,
	      findAllMatches: findAllMatches,
	      minMatchCharLength: minMatchCharLength,
	      isCaseSensitive: isCaseSensitive
	    });
	    return _this;
	  }

	  _createClass(FuzzyMatch, [{
	    key: "search",
	    value: function search(text) {
	      return this._bitapSearch.searchIn(text);
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'fuzzy';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^"(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^(.*)$/;
	    }
	  }]);

	  return FuzzyMatch;
	}(BaseMatch);

	var IncludeMatch = /*#__PURE__*/function (_BaseMatch) {
	  _inherits(IncludeMatch, _BaseMatch);

	  var _super = _createSuper(IncludeMatch);

	  function IncludeMatch(pattern) {
	    _classCallCheck(this, IncludeMatch);

	    return _super.call(this, pattern);
	  }

	  _createClass(IncludeMatch, [{
	    key: "search",
	    value: function search(text) {
	      var location = 0;
	      var index;
	      var indices = [];
	      var patternLen = this.pattern.length; // Get all exact matches

	      while ((index = text.indexOf(this.pattern, location)) > -1) {
	        location = index + patternLen;
	        indices.push([index, location - 1]);
	      }

	      var isMatch = !!indices.length;
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 1 : 0,
	        indices: indices
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'include';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^'"(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^'(.*)$/;
	    }
	  }]);

	  return IncludeMatch;
	}(BaseMatch);

	var searchers = [ExactMatch, IncludeMatch, PrefixExactMatch, InversePrefixExactMatch, InverseSuffixExactMatch, SuffixExactMatch, InverseExactMatch, FuzzyMatch];
	var searchersLen = searchers.length; // Regex to split by spaces, but keep anything in quotes together

	var SPACE_RE = / +(?=([^\"]*\"[^\"]*\")*[^\"]*$)/;
	var OR_TOKEN = '|'; // Return a 2D array representation of the query, for simpler parsing.
	// Example:
	// "^core go$ | rb$ | py$ xy$" => [["^core", "go$"], ["rb$"], ["py$", "xy$"]]

	function parseQuery(pattern) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  return pattern.split(OR_TOKEN).map(function (item) {
	    var query = item.trim().split(SPACE_RE).filter(function (item) {
	      return item && !!item.trim();
	    });
	    var results = [];

	    for (var i = 0, len = query.length; i < len; i += 1) {
	      var queryItem = query[i]; // 1. Handle multiple query match (i.e, once that are quoted, like `"hello world"`)

	      var found = false;
	      var idx = -1;

	      while (!found && ++idx < searchersLen) {
	        var searcher = searchers[idx];
	        var token = searcher.isMultiMatch(queryItem);

	        if (token) {
	          results.push(new searcher(token, options));
	          found = true;
	        }
	      }

	      if (found) {
	        continue;
	      } // 2. Handle single query matches (i.e, once that are *not* quoted)


	      idx = -1;

	      while (++idx < searchersLen) {
	        var _searcher = searchers[idx];

	        var _token = _searcher.isSingleMatch(queryItem);

	        if (_token) {
	          results.push(new _searcher(_token, options));
	          break;
	        }
	      }
	    }

	    return results;
	  });
	}

	// to a singl match

	var MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);
	/**
	 * Command-like searching
	 * ======================
	 *
	 * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,
	 * search in a given text.
	 *
	 * Search syntax:
	 *
	 * | Token       | Match type                 | Description                            |
	 * | ----------- | -------------------------- | -------------------------------------- |
	 * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |
	 * | `=scheme`   | exact-match                | Items that are `scheme`                |
	 * | `'python`   | include-match              | Items that include `python`            |
	 * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |
	 * | `^java`     | prefix-exact-match         | Items that start with `java`           |
	 * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |
	 * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |
	 * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |
	 *
	 * A single pipe character acts as an OR operator. For example, the following
	 * query matches entries that start with `core` and end with either`go`, `rb`,
	 * or`py`.
	 *
	 * ```
	 * ^core go$ | rb$ | py$
	 * ```
	 */

	var ExtendedSearch = /*#__PURE__*/function () {
	  function ExtendedSearch(pattern) {
	    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        _ref$isCaseSensitive = _ref.isCaseSensitive,
	        isCaseSensitive = _ref$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref$isCaseSensitive,
	        _ref$includeMatches = _ref.includeMatches,
	        includeMatches = _ref$includeMatches === void 0 ? Config.includeMatches : _ref$includeMatches,
	        _ref$minMatchCharLeng = _ref.minMatchCharLength,
	        minMatchCharLength = _ref$minMatchCharLeng === void 0 ? Config.minMatchCharLength : _ref$minMatchCharLeng,
	        _ref$findAllMatches = _ref.findAllMatches,
	        findAllMatches = _ref$findAllMatches === void 0 ? Config.findAllMatches : _ref$findAllMatches,
	        _ref$location = _ref.location,
	        location = _ref$location === void 0 ? Config.location : _ref$location,
	        _ref$threshold = _ref.threshold,
	        threshold = _ref$threshold === void 0 ? Config.threshold : _ref$threshold,
	        _ref$distance = _ref.distance,
	        distance = _ref$distance === void 0 ? Config.distance : _ref$distance;

	    _classCallCheck(this, ExtendedSearch);

	    this.query = null;
	    this.options = {
	      isCaseSensitive: isCaseSensitive,
	      includeMatches: includeMatches,
	      minMatchCharLength: minMatchCharLength,
	      findAllMatches: findAllMatches,
	      location: location,
	      threshold: threshold,
	      distance: distance
	    };
	    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
	    this.query = parseQuery(this.pattern, this.options);
	  }

	  _createClass(ExtendedSearch, [{
	    key: "searchIn",
	    value: function searchIn(text) {
	      var query = this.query;

	      if (!query) {
	        return {
	          isMatch: false,
	          score: 1
	        };
	      }

	      var _this$options = this.options,
	          includeMatches = _this$options.includeMatches,
	          isCaseSensitive = _this$options.isCaseSensitive;
	      text = isCaseSensitive ? text : text.toLowerCase();
	      var numMatches = 0;
	      var allIndices = [];
	      var totalScore = 0; // ORs

	      for (var i = 0, qLen = query.length; i < qLen; i += 1) {
	        var searchers = query[i]; // Reset indices

	        allIndices.length = 0;
	        numMatches = 0; // ANDs

	        for (var j = 0, pLen = searchers.length; j < pLen; j += 1) {
	          var searcher = searchers[j];

	          var _searcher$search = searcher.search(text),
	              isMatch = _searcher$search.isMatch,
	              indices = _searcher$search.indices,
	              score = _searcher$search.score;

	          if (isMatch) {
	            numMatches += 1;
	            totalScore += score;

	            if (includeMatches) {
	              var type = searcher.constructor.type;

	              if (MultiMatchSet.has(type)) {
	                allIndices = [].concat(_toConsumableArray(allIndices), _toConsumableArray(indices));
	              } else {
	                allIndices.push(indices);
	              }
	            }
	          } else {
	            totalScore = 0;
	            numMatches = 0;
	            allIndices.length = 0;
	            break;
	          }
	        } // OR condition, so if TRUE, return


	        if (numMatches) {
	          var result = {
	            isMatch: true,
	            score: totalScore / numMatches
	          };

	          if (includeMatches) {
	            result.indices = allIndices;
	          }

	          return result;
	        }
	      } // Nothing was matched


	      return {
	        isMatch: false,
	        score: 1
	      };
	    }
	  }], [{
	    key: "condition",
	    value: function condition(_, options) {
	      return options.useExtendedSearch;
	    }
	  }]);

	  return ExtendedSearch;
	}();

	var registeredSearchers = [];
	function register() {
	  registeredSearchers.push.apply(registeredSearchers, arguments);
	}
	function createSearcher(pattern, options) {
	  for (var i = 0, len = registeredSearchers.length; i < len; i += 1) {
	    var searcherClass = registeredSearchers[i];

	    if (searcherClass.condition(pattern, options)) {
	      return new searcherClass(pattern, options);
	    }
	  }

	  return new BitapSearch(pattern, options);
	}

	var LogicalOperator = {
	  AND: '$and',
	  OR: '$or'
	};
	var KeyType = {
	  PATH: '$path',
	  PATTERN: '$val'
	};

	var isExpression = function isExpression(query) {
	  return !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);
	};

	var isPath = function isPath(query) {
	  return !!query[KeyType.PATH];
	};

	var isLeaf = function isLeaf(query) {
	  return !isArray(query) && isObject(query) && !isExpression(query);
	};

	var convertToExplicit = function convertToExplicit(query) {
	  return _defineProperty({}, LogicalOperator.AND, Object.keys(query).map(function (key) {
	    return _defineProperty({}, key, query[key]);
	  }));
	}; // When `auto` is `true`, the parse function will infer and initialize and add
	// the appropriate `Searcher` instance


	function parse(query, options) {
	  var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref3$auto = _ref3.auto,
	      auto = _ref3$auto === void 0 ? true : _ref3$auto;

	  var next = function next(query) {
	    var keys = Object.keys(query);
	    var isQueryPath = isPath(query);

	    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {
	      return next(convertToExplicit(query));
	    }

	    if (isLeaf(query)) {
	      var key = isQueryPath ? query[KeyType.PATH] : keys[0];
	      var pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];

	      if (!isString(pattern)) {
	        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key));
	      }

	      var obj = {
	        keyId: createKeyId(key),
	        pattern: pattern
	      };

	      if (auto) {
	        obj.searcher = createSearcher(pattern, options);
	      }

	      return obj;
	    }

	    var node = {
	      children: [],
	      operator: keys[0]
	    };
	    keys.forEach(function (key) {
	      var value = query[key];

	      if (isArray(value)) {
	        value.forEach(function (item) {
	          node.children.push(next(item));
	        });
	      }
	    });
	    return node;
	  };

	  if (!isExpression(query)) {
	    query = convertToExplicit(query);
	  }

	  return next(query);
	}

	var Fuse = /*#__PURE__*/function () {
	  function Fuse(docs) {
	    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    var index = arguments.length > 2 ? arguments[2] : undefined;

	    _classCallCheck(this, Fuse);

	    this.options = _objectSpread2({}, Config, {}, options);

	    if (this.options.useExtendedSearch && !true) {
	      throw new Error(EXTENDED_SEARCH_UNAVAILABLE);
	    }

	    this._keyStore = new KeyStore(this.options.keys);
	    this.setCollection(docs, index);
	  }

	  _createClass(Fuse, [{
	    key: "setCollection",
	    value: function setCollection(docs, index) {
	      this._docs = docs;

	      if (index && !(index instanceof FuseIndex)) {
	        throw new Error(INCORRECT_INDEX_TYPE);
	      }

	      this._myIndex = index || createIndex(this.options.keys, this._docs, {
	        getFn: this.options.getFn
	      });
	    }
	  }, {
	    key: "add",
	    value: function add(doc) {
	      if (!isDefined(doc)) {
	        return;
	      }

	      this._docs.push(doc);

	      this._myIndex.add(doc);
	    }
	  }, {
	    key: "remove",
	    value: function remove() {
	      var predicate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {
	        return (
	          /* doc, idx */
	          false
	        );
	      };
	      var results = [];

	      for (var i = 0, len = this._docs.length; i < len; i += 1) {
	        var doc = this._docs[i];

	        if (predicate(doc, i)) {
	          this.removeAt(i);
	          i -= 1;
	          results.push(doc);
	        }
	      }

	      return results;
	    }
	  }, {
	    key: "removeAt",
	    value: function removeAt(idx) {
	      this._docs.splice(idx, 1);

	      this._myIndex.removeAt(idx);
	    }
	  }, {
	    key: "getIndex",
	    value: function getIndex() {
	      return this._myIndex;
	    }
	  }, {
	    key: "search",
	    value: function search(query) {
	      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	          _ref$limit = _ref.limit,
	          limit = _ref$limit === void 0 ? -1 : _ref$limit;

	      var _this$options = this.options,
	          includeMatches = _this$options.includeMatches,
	          includeScore = _this$options.includeScore,
	          shouldSort = _this$options.shouldSort,
	          sortFn = _this$options.sortFn,
	          ignoreFieldNorm = _this$options.ignoreFieldNorm;
	      var results = isString(query) ? isString(this._docs[0]) ? this._searchStringList(query) : this._searchObjectList(query) : this._searchLogical(query);
	      computeScore$1(results, {
	        ignoreFieldNorm: ignoreFieldNorm
	      });

	      if (shouldSort) {
	        results.sort(sortFn);
	      }

	      if (isNumber(limit) && limit > -1) {
	        results = results.slice(0, limit);
	      }

	      return format(results, this._docs, {
	        includeMatches: includeMatches,
	        includeScore: includeScore
	      });
	    }
	  }, {
	    key: "_searchStringList",
	    value: function _searchStringList(query) {
	      var searcher = createSearcher(query, this.options);
	      var records = this._myIndex.records;
	      var results = []; // Iterate over every string in the index

	      records.forEach(function (_ref2) {
	        var text = _ref2.v,
	            idx = _ref2.i,
	            norm = _ref2.n;

	        if (!isDefined(text)) {
	          return;
	        }

	        var _searcher$searchIn = searcher.searchIn(text),
	            isMatch = _searcher$searchIn.isMatch,
	            score = _searcher$searchIn.score,
	            indices = _searcher$searchIn.indices;

	        if (isMatch) {
	          results.push({
	            item: text,
	            idx: idx,
	            matches: [{
	              score: score,
	              value: text,
	              norm: norm,
	              indices: indices
	            }]
	          });
	        }
	      });
	      return results;
	    }
	  }, {
	    key: "_searchLogical",
	    value: function _searchLogical(query) {
	      var _this = this;

	      var expression = parse(query, this.options);

	      var evaluate = function evaluate(node, item, idx) {
	        if (!node.children) {
	          var keyId = node.keyId,
	              searcher = node.searcher;

	          var matches = _this._findMatches({
	            key: _this._keyStore.get(keyId),
	            value: _this._myIndex.getValueForItemAtKeyId(item, keyId),
	            searcher: searcher
	          });

	          if (matches && matches.length) {
	            return [{
	              idx: idx,
	              item: item,
	              matches: matches
	            }];
	          }

	          return [];
	        }
	        /*eslint indent: [2, 2, {"SwitchCase": 1}]*/


	        switch (node.operator) {
	          case LogicalOperator.AND:
	            {
	              var res = [];

	              for (var i = 0, len = node.children.length; i < len; i += 1) {
	                var child = node.children[i];
	                var result = evaluate(child, item, idx);

	                if (result.length) {
	                  res.push.apply(res, _toConsumableArray(result));
	                } else {
	                  return [];
	                }
	              }

	              return res;
	            }

	          case LogicalOperator.OR:
	            {
	              var _res = [];

	              for (var _i = 0, _len = node.children.length; _i < _len; _i += 1) {
	                var _child = node.children[_i];

	                var _result = evaluate(_child, item, idx);

	                if (_result.length) {
	                  _res.push.apply(_res, _toConsumableArray(_result));

	                  break;
	                }
	              }

	              return _res;
	            }
	        }
	      };

	      var records = this._myIndex.records;
	      var resultMap = {};
	      var results = [];
	      records.forEach(function (_ref3) {
	        var item = _ref3.$,
	            idx = _ref3.i;

	        if (isDefined(item)) {
	          var expResults = evaluate(expression, item, idx);

	          if (expResults.length) {
	            // Dedupe when adding
	            if (!resultMap[idx]) {
	              resultMap[idx] = {
	                idx: idx,
	                item: item,
	                matches: []
	              };
	              results.push(resultMap[idx]);
	            }

	            expResults.forEach(function (_ref4) {
	              var _resultMap$idx$matche;

	              var matches = _ref4.matches;

	              (_resultMap$idx$matche = resultMap[idx].matches).push.apply(_resultMap$idx$matche, _toConsumableArray(matches));
	            });
	          }
	        }
	      });
	      return results;
	    }
	  }, {
	    key: "_searchObjectList",
	    value: function _searchObjectList(query) {
	      var _this2 = this;

	      var searcher = createSearcher(query, this.options);
	      var _this$_myIndex = this._myIndex,
	          keys = _this$_myIndex.keys,
	          records = _this$_myIndex.records;
	      var results = []; // List is Array<Object>

	      records.forEach(function (_ref5) {
	        var item = _ref5.$,
	            idx = _ref5.i;

	        if (!isDefined(item)) {
	          return;
	        }

	        var matches = []; // Iterate over every key (i.e, path), and fetch the value at that key

	        keys.forEach(function (key, keyIndex) {
	          matches.push.apply(matches, _toConsumableArray(_this2._findMatches({
	            key: key,
	            value: item[keyIndex],
	            searcher: searcher
	          })));
	        });

	        if (matches.length) {
	          results.push({
	            idx: idx,
	            item: item,
	            matches: matches
	          });
	        }
	      });
	      return results;
	    }
	  }, {
	    key: "_findMatches",
	    value: function _findMatches(_ref6) {
	      var key = _ref6.key,
	          value = _ref6.value,
	          searcher = _ref6.searcher;

	      if (!isDefined(value)) {
	        return [];
	      }

	      var matches = [];

	      if (isArray(value)) {
	        value.forEach(function (_ref7) {
	          var text = _ref7.v,
	              idx = _ref7.i,
	              norm = _ref7.n;

	          if (!isDefined(text)) {
	            return;
	          }

	          var _searcher$searchIn2 = searcher.searchIn(text),
	              isMatch = _searcher$searchIn2.isMatch,
	              score = _searcher$searchIn2.score,
	              indices = _searcher$searchIn2.indices;

	          if (isMatch) {
	            matches.push({
	              score: score,
	              key: key,
	              value: text,
	              idx: idx,
	              norm: norm,
	              indices: indices
	            });
	          }
	        });
	      } else {
	        var text = value.v,
	            norm = value.n;

	        var _searcher$searchIn3 = searcher.searchIn(text),
	            isMatch = _searcher$searchIn3.isMatch,
	            score = _searcher$searchIn3.score,
	            indices = _searcher$searchIn3.indices;

	        if (isMatch) {
	          matches.push({
	            score: score,
	            key: key,
	            value: text,
	            norm: norm,
	            indices: indices
	          });
	        }
	      }

	      return matches;
	    }
	  }]);

	  return Fuse;
	}(); // Practical scoring function

	function computeScore$1(results, _ref8) {
	  var _ref8$ignoreFieldNorm = _ref8.ignoreFieldNorm,
	      ignoreFieldNorm = _ref8$ignoreFieldNorm === void 0 ? Config.ignoreFieldNorm : _ref8$ignoreFieldNorm;
	  results.forEach(function (result) {
	    var totalScore = 1;
	    result.matches.forEach(function (_ref9) {
	      var key = _ref9.key,
	          norm = _ref9.norm,
	          score = _ref9.score;
	      var weight = key ? key.weight : null;
	      totalScore *= Math.pow(score === 0 && weight ? Number.EPSILON : score, (weight || 1) * (ignoreFieldNorm ? 1 : norm));
	    });
	    result.score = totalScore;
	  });
	}

	function format(results, docs) {
	  var _ref10 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref10$includeMatches = _ref10.includeMatches,
	      includeMatches = _ref10$includeMatches === void 0 ? Config.includeMatches : _ref10$includeMatches,
	      _ref10$includeScore = _ref10.includeScore,
	      includeScore = _ref10$includeScore === void 0 ? Config.includeScore : _ref10$includeScore;

	  var transformers = [];
	  if (includeMatches) transformers.push(transformMatches);
	  if (includeScore) transformers.push(transformScore);
	  return results.map(function (result) {
	    var idx = result.idx;
	    var data = {
	      item: docs[idx],
	      refIndex: idx
	    };

	    if (transformers.length) {
	      transformers.forEach(function (transformer) {
	        transformer(result, data);
	      });
	    }

	    return data;
	  });
	}

	Fuse.version = '6.4.0';
	Fuse.createIndex = createIndex;
	Fuse.parseIndex = parseIndex;
	Fuse.config = Config;

	{
	  Fuse.parseQuery = parse;
	}

	{
	  register(ExtendedSearch);
	}

	module.exports = Fuse;


/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	var _rollupPluginBabelHelpers = __webpack_require__(268);
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	var PropTypes = __webpack_require__(269);
	var PropTypes__default = _interopDefault(PropTypes);
	var core = __webpack_require__(422);
	var hooks = __webpack_require__(413);
	var index = __webpack_require__(423);

	var Popover = React.forwardRef(function (_ref, ref) {
	  var children = _ref.children,
	      current = _ref.targetRef.current,
	      popoverOptions = _ref.popoverOptions,
	      usePortal = _ref.usePortal,
	      portalContainerSelector = _ref.portalContainerSelector,
	      style = _ref.style,
	      props = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, ["children", "targetRef", "popoverOptions", "usePortal", "portalContainerSelector", "style"]);

	  if (!current) {
	    return null;
	  } // States


	  var _useState = React.useState(false),
	      _useState2 = _rollupPluginBabelHelpers.slicedToArray(_useState, 2),
	      popperInstance = _useState2[0],
	      setPopperInstance = _useState2[1]; // Refs


	  var innerRef = React.useRef();
	  var rootRef = hooks.useCombinedRefs(ref, innerRef);
	  React.useEffect(function () {
	    if (rootRef.current && current) {
	      setPopperInstance(core.createPopper(current, rootRef.current, popoverOptions));
	    }

	    return function () {
	      return popperInstance && popperInstance.destroy();
	    };
	  }, [rootRef.current, current]);
	  React.useEffect(function () {
	    if (popperInstance) {
	      popperInstance.setOptions(popoverOptions);
	    }
	  }, [popoverOptions]);
	  return /*#__PURE__*/React__default.createElement(index, {
	    usePortal: usePortal,
	    containerSelector: portalContainerSelector
	  }, /*#__PURE__*/React__default.createElement("div", _rollupPluginBabelHelpers.extends({}, props, {
	    ref: rootRef,
	    style: popperInstance ? style : {
	      display: 'none'
	    }
	  }), children));
	});
	Popover.propTypes = {
	  usePortal: PropTypes.bool,
	  children: PropTypes.node,
	  targetRef: PropTypes.shape({}),
	  popoverOptions: PropTypes.shape({}),
	  style: PropTypes.shape({}),
	  portalContainerSelector: PropTypes.string
	};
	Popover.defaultProps = {
	  usePortal: false,
	  targetRef: {
	    current: null
	  },
	  popoverOptions: {},
	  style: {},
	  children: null,
	  portalContainerSelector: undefined
	};

	module.exports = Popover;
	//# sourceMappingURL=index.js.map


/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * @popperjs/core v2.0.3 - MIT License
	 */

	'use strict';

	Object.defineProperty(exports, '__esModule', { value: true });

	function getBoundingClientRect(element) {
	  var rect = element.getBoundingClientRect();
	  return {
	    width: rect.width,
	    height: rect.height,
	    top: rect.top,
	    right: rect.right,
	    bottom: rect.bottom,
	    left: rect.left,
	    x: rect.left,
	    y: rect.top
	  };
	}

	function getWindow(node) {
	  if ({}.toString.call(node) !== '[object Window]') {
	    var ownerDocument = node.ownerDocument;
	    return ownerDocument ? ownerDocument.defaultView : window;
	  }

	  return node;
	}

	function getWindowScroll(node) {
	  var win = getWindow(node);
	  var scrollLeft = win.pageXOffset;
	  var scrollTop = win.pageYOffset;
	  return {
	    scrollLeft: scrollLeft,
	    scrollTop: scrollTop
	  };
	}

	/*:: declare function isElement(node: mixed): boolean %checks(node instanceof
	  Element); */

	function isElement(node) {
	  var OwnElement = getWindow(node).Element;
	  return node instanceof OwnElement;
	}
	/*:: declare function isHTMLElement(node: mixed): boolean %checks(node instanceof
	  HTMLElement); */


	function isHTMLElement(node) {
	  var OwnElement = getWindow(node).HTMLElement;
	  return node instanceof OwnElement;
	}

	function getHTMLElementScroll(element) {
	  return {
	    scrollLeft: element.scrollLeft,
	    scrollTop: element.scrollTop
	  };
	}

	function getNodeScroll(node) {
	  if (node === getWindow(node) || !isHTMLElement(node)) {
	    return getWindowScroll(node);
	  } else {
	    return getHTMLElementScroll(node);
	  }
	}

	function getNodeName(element) {
	  return element ? (element.nodeName || '').toLowerCase() : null;
	}

	function getComputedStyle(element) {
	  return getWindow(element).getComputedStyle(element);
	}

	function toNumber(cssValue) {
	  return parseFloat(cssValue) || 0;
	}

	function getBorders(element) {
	  var computedStyle = isHTMLElement(element) ? getComputedStyle(element) : {};
	  return {
	    top: toNumber(computedStyle.borderTopWidth),
	    right: toNumber(computedStyle.borderRightWidth),
	    bottom: toNumber(computedStyle.borderBottomWidth),
	    left: toNumber(computedStyle.borderLeftWidth)
	  };
	}

	function getInnerOffsets(offsetParent) {
	  var rect = getBoundingClientRect(offsetParent);
	  var borders = getBorders(offsetParent);
	  return {
	    x: rect.x + borders.left,
	    y: rect.y + borders.top
	  };
	} // Returns the composite rect of an element relative to its offsetParent.
	// Composite means it takes into account transforms as well as layout.


	function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
	  if (isFixed === void 0) {
	    isFixed = false;
	  }

	  var rect = getBoundingClientRect(elementOrVirtualElement);
	  var scroll = {
	    scrollLeft: 0,
	    scrollTop: 0
	  };
	  var offsets = {
	    x: 0,
	    y: 0
	  };

	  if (!isFixed) {
	    if (getNodeName(offsetParent) !== 'body') {
	      scroll = getNodeScroll(offsetParent);
	    }

	    if (isHTMLElement(offsetParent)) {
	      offsets = getInnerOffsets(offsetParent);
	    }
	  }

	  return {
	    x: rect.left + scroll.scrollLeft - offsets.x,
	    y: rect.top + scroll.scrollTop - offsets.y,
	    width: rect.width,
	    height: rect.height
	  };
	}

	// Returns the layout rect of an element relative to its offsetParent. Layout
	// means it doesn't take into account transforms.
	function getLayoutRect(element) {
	  return {
	    x: element.offsetLeft,
	    y: element.offsetTop,
	    width: element.offsetWidth,
	    height: element.offsetHeight
	  };
	}

	function getParentNode(element) {
	  if (getNodeName(element) === 'html') {
	    return element;
	  }

	  return element.parentNode || // DOM Element detected
	  // $FlowFixMe: need a better way to handle this...
	  element.host || // ShadowRoot detected
	  document.ownerDocument || // Fallback to ownerDocument if available
	  document.documentElement // Or to documentElement if everything else fails
	  ;
	}

	function getScrollParent(node) {
	  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
	    // $FlowFixMe: assume body is always available
	    return node.ownerDocument.body;
	  }

	  if (isHTMLElement(node)) {
	    // Firefox wants us to check `-x` and `-y` variations as well
	    var _getComputedStyle = getComputedStyle(node),
	        overflow = _getComputedStyle.overflow,
	        overflowX = _getComputedStyle.overflowX,
	        overflowY = _getComputedStyle.overflowY;

	    if (/auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX)) {
	      return node;
	    }
	  }

	  return getScrollParent(getParentNode(node));
	}

	function listScrollParents(element, list) {
	  if (list === void 0) {
	    list = [];
	  }

	  var scrollParent = getScrollParent(element);
	  var isBody = getNodeName(scrollParent) === 'body';
	  var target = isBody ? getWindow(scrollParent) : scrollParent;
	  var updatedList = list.concat(target);
	  return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
	}

	function isTableElement(element) {
	  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
	}

	var isFirefox = function isFirefox() {
	  return typeof window.InstallTrigger !== 'undefined';
	};

	function getTrueOffsetParent(element) {
	  var offsetParent;

	  if (!isHTMLElement(element) || !(offsetParent = element.offsetParent) || // https://github.com/popperjs/popper.js/issues/837
	  isFirefox() && getComputedStyle(offsetParent).position === 'fixed') {
	    return null;
	  }

	  return offsetParent;
	}

	function getOffsetParent(element) {
	  var window = getWindow(element);
	  var offsetParent = getTrueOffsetParent(element); // Find the nearest non-table offsetParent

	  while (offsetParent && isTableElement(offsetParent)) {
	    offsetParent = getTrueOffsetParent(offsetParent);
	  }

	  if (offsetParent && getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static') {
	    return window;
	  }

	  return offsetParent || window;
	}

	var top = 'top';
	var bottom = 'bottom';
	var right = 'right';
	var left = 'left';
	var auto = 'auto';
	var basePlacements = [top, bottom, right, left];
	var start = 'start';
	var end = 'end';
	var clippingParents = 'clippingParents';
	var viewport = 'viewport';
	var popper = 'popper';
	var reference = 'reference';
	var variationPlacements =
	/*#__PURE__*/
	basePlacements.reduce(function (acc, placement) {
	  return acc.concat([placement + "-" + start, placement + "-" + end]);
	}, []);
	var placements =
	/*#__PURE__*/
	[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
	  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
	}, []); // modifiers that need to read the DOM

	var beforeRead = 'beforeRead';
	var read = 'read';
	var afterRead = 'afterRead'; // pure-logic modifiers

	var beforeMain = 'beforeMain';
	var main = 'main';
	var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

	var beforeWrite = 'beforeWrite';
	var write = 'write';
	var afterWrite = 'afterWrite';
	var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

	function order(modifiers) {
	  var map = new Map();
	  var visited = new Set();
	  var result = [];
	  modifiers.forEach(function (modifier) {
	    map.set(modifier.name, modifier);
	  }); // On visiting object, check for its dependencies and visit them recursively

	  function sort(modifier) {
	    visited.add(modifier.name);
	    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
	    requires.forEach(function (dep) {
	      if (!visited.has(dep)) {
	        var depModifier = map.get(dep);

	        if (depModifier) {
	          sort(depModifier);
	        }
	      }
	    });
	    result.push(modifier);
	  }

	  modifiers.forEach(function (modifier) {
	    if (!visited.has(modifier.name)) {
	      // check for visited object
	      sort(modifier);
	    }
	  });
	  return result;
	}

	function orderModifiers(modifiers) {
	  // order based on dependencies
	  var orderedModifiers = order(modifiers); // order based on phase

	  return modifierPhases.reduce(function (acc, phase) {
	    return acc.concat(orderedModifiers.filter(function (modifier) {
	      return modifier.phase === phase;
	    }));
	  }, []);
	}

	function debounce(fn) {
	  var pending;
	  return function () {
	    if (!pending) {
	      pending = new Promise(function (resolve) {
	        Promise.resolve().then(function () {
	          pending = undefined;
	          resolve(fn());
	        });
	      });
	    }

	    return pending;
	  };
	}

	function format(str) {
	  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    args[_key - 1] = arguments[_key];
	  }

	  return [].concat(args).reduce(function (p, c) {
	    return p.replace(/%s/, c);
	  }, str);
	}

	var INVALID_MODIFIER_ERROR = 'Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';
	var MISSING_DEPENDENCY_ERROR = 'Popper: modifier "%s" requires "%s", but "%s" modifier is not available';
	var VALID_PROPERTIES = ['name', 'enabled', 'phase', 'fn', 'effect', 'requires', 'options'];
	function validateModifiers(modifiers) {
	  modifiers.forEach(function (modifier) {
	    Object.keys(modifier).forEach(function (key) {
	      switch (key) {
	        case 'name':
	          if (typeof modifier.name !== 'string') {
	            console.error(format(INVALID_MODIFIER_ERROR, String(modifier.name), '"name"', '"string"', "\"" + String(modifier.name) + "\""));
	          }

	          break;

	        case 'enabled':
	          if (typeof modifier.enabled !== 'boolean') {
	            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"enabled"', '"boolean"', "\"" + String(modifier.enabled) + "\""));
	          }

	        case 'phase':
	          if (modifierPhases.indexOf(modifier.phase) < 0) {
	            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"phase"', "either " + modifierPhases.join(', '), "\"" + String(modifier.phase) + "\""));
	          }

	          break;

	        case 'fn':
	          if (typeof modifier.fn !== 'function') {
	            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"fn"', '"function"', "\"" + String(modifier.fn) + "\""));
	          }

	          break;

	        case 'effect':
	          if (typeof modifier.effect !== 'function') {
	            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"effect"', '"function"', "\"" + String(modifier.fn) + "\""));
	          }

	          break;

	        case 'requires':
	          if (!Array.isArray(modifier.requires)) {
	            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"requires"', '"array"', "\"" + String(modifier.requires) + "\""));
	          }

	          break;

	        case 'requiresIfExists':
	          if (!Array.isArray(modifier.requiresIfExists)) {
	            console.error(format(INVALID_MODIFIER_ERROR, modifier.name, '"requiresIfExists"', '"array"', "\"" + String(modifier.requiresIfExists) + "\""));
	          }

	          break;

	        case 'options':
	        case 'data':
	          break;

	        default:
	          console.error("PopperJS: an invalid property has been provided to the \"" + modifier.name + "\" modifier, valid properties are " + VALID_PROPERTIES.map(function (s) {
	            return "\"" + s + "\"";
	          }).join(', ') + "; but \"" + key + "\" was provided.");
	      }

	      modifier.requires && modifier.requires.forEach(function (requirement) {
	        if (modifiers.find(function (mod) {
	          return mod.name === requirement;
	        }) == null) {
	          console.error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name), requirement, requirement));
	        }
	      });
	    });
	  });
	}

	function uniqueBy(arr, fn) {
	  var identifiers = new Set();
	  return arr.filter(function (item) {
	    var identifier = fn(item);

	    if (!identifiers.has(identifier)) {
	      identifiers.add(identifier);
	      return true;
	    }
	  });
	}

	function getBasePlacement(placement) {
	  return placement.split('-')[0];
	}

	var INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided to Popper, they must be either a valid DOM element, virtual element, or a jQuery-wrapped DOM element.';
	var INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';
	var DEFAULT_OPTIONS = {
	  placement: 'bottom',
	  modifiers: [],
	  strategy: 'absolute'
	};

	function areValidElements() {
	  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }

	  return !args.some(function (element) {
	    return !(element && typeof element.getBoundingClientRect === 'function');
	  });
	}

	function popperGenerator(generatorOptions) {
	  if (generatorOptions === void 0) {
	    generatorOptions = {};
	  }

	  var _generatorOptions = generatorOptions,
	      _generatorOptions$def = _generatorOptions.defaultModifiers,
	      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
	      _generatorOptions$def2 = _generatorOptions.defaultOptions,
	      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
	  return function createPopper(reference, popper, options) {
	    if (options === void 0) {
	      options = defaultOptions;
	    }

	    var state = {
	      placement: 'bottom',
	      orderedModifiers: [],
	      options: Object.assign({}, DEFAULT_OPTIONS, {}, defaultOptions),
	      modifiersData: {},
	      elements: {
	        reference: reference,
	        popper: popper
	      },
	      attributes: {},
	      styles: {}
	    };
	    var effectCleanupFns = [];
	    var isDestroyed = false;
	    var instance = {
	      state: state,
	      setOptions: function setOptions(options) {
	        cleanupModifierEffects();
	        state.options = Object.assign({}, defaultOptions, {}, state.options, {}, options);
	        state.scrollParents = {
	          reference: isElement(reference) ? listScrollParents(reference) : [],
	          popper: listScrollParents(popper)
	        }; // Orders the modifiers based on their dependencies and `phase`
	        // properties

	        var orderedModifiers = orderModifiers([].concat(state.options.modifiers.filter(function (modifier) {
	          return !defaultModifiers.find(function (_ref) {
	            var name = _ref.name;
	            return name === modifier.name;
	          });
	        }), defaultModifiers.map(function (defaultModifier) {
	          return Object.assign({}, defaultModifier, {}, state.options.modifiers.find(function (_ref2) {
	            var name = _ref2.name;
	            return name === defaultModifier.name;
	          }));
	        }))); // Validate the provided modifiers so that the consumer will get warned
	        // if one of the modifiers is invalid for any reason

	        if (process.env.NODE_ENV !== "production") {
	          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref3) {
	            var name = _ref3.name;
	            return name;
	          });
	          validateModifiers(modifiers);

	          if (getBasePlacement(state.options.placement) === auto) {
	            var flipModifier = orderedModifiers.find(function (_ref4) {
	              var name = _ref4.name;
	              return name === 'flip';
	            });

	            if (!flipModifier) {
	              console.error(['Popper: "auto" placements require the "flip" modifier be', 'present and enabled to work.'].join(' '));
	            }
	          }

	          var _getComputedStyle = getComputedStyle(popper),
	              marginTop = _getComputedStyle.marginTop,
	              marginRight = _getComputedStyle.marginRight,
	              marginBottom = _getComputedStyle.marginBottom,
	              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can
	          // cause bugs with positioning, so we'll warn the consumer


	          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {
	            return parseFloat(margin);
	          })) {
	            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));
	          }
	        } // Strip out disabled modifiers


	        state.orderedModifiers = orderedModifiers.filter(function (m) {
	          return m.enabled;
	        });
	        runModifierEffects();
	        return instance.update();
	      },
	      // Sync update – it will always be executed, even if not necessary. This
	      // is useful for low frequency updates where sync behavior simplifies the
	      // logic.
	      // For high frequency updates (e.g. `resize` and `scroll` events), always
	      // prefer the async Popper#update method
	      forceUpdate: function forceUpdate() {
	        if (isDestroyed) {
	          return;
	        }

	        var _state$elements = state.elements,
	            reference = _state$elements.reference,
	            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
	        // anymore

	        if (!areValidElements(reference, popper)) {
	          if (process.env.NODE_ENV !== "production") {
	            console.error(INVALID_ELEMENT_ERROR);
	          }

	          return;
	        } // Store the reference and popper rects to be read by modifiers


	        state.rects = {
	          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
	          popper: getLayoutRect(popper)
	        }; // Modifiers have the ability to reset the current update cycle. The
	        // most common use case for this is the `flip` modifier changing the
	        // placement, which then needs to re-run all the modifiers, because the
	        // logic was previously ran for the previous placement and is therefore
	        // stale/incorrect

	        state.reset = false;
	        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
	        // is filled with the initial data specified by the modifier. This means
	        // it doesn't persist and is fresh on each update.
	        // To ensure persistent data, use `${name}#persistent`

	        state.orderedModifiers.forEach(function (modifier) {
	          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
	        });
	        var __debug_loops__ = 0;

	        for (var index = 0; index < state.orderedModifiers.length; index++) {
	          if (process.env.NODE_ENV !== "production") {
	            __debug_loops__ += 1;

	            if (__debug_loops__ > 100) {
	              console.error(INFINITE_LOOP_ERROR);
	              break;
	            }
	          }

	          if (state.reset === true) {
	            state.reset = false;
	            index = -1;
	            continue;
	          }

	          var _state$orderedModifie = state.orderedModifiers[index],
	              fn = _state$orderedModifie.fn,
	              _state$orderedModifie2 = _state$orderedModifie.options,
	              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
	              name = _state$orderedModifie.name;

	          if (typeof fn === 'function') {
	            state = fn({
	              state: state,
	              options: _options,
	              name: name,
	              instance: instance
	            }) || state;
	          }
	        }
	      },
	      // Async and optimistically optimized update – it will not be executed if
	      // not necessary (debounced to run at most once-per-tick)
	      update: debounce(function () {
	        return new Promise(function (resolve) {
	          instance.forceUpdate();
	          resolve(state);
	        });
	      }),
	      destroy: function destroy() {
	        cleanupModifierEffects();
	        isDestroyed = true;
	      }
	    };

	    if (!areValidElements(reference, popper)) {
	      if (process.env.NODE_ENV !== "production") {
	        console.error(INVALID_ELEMENT_ERROR);
	      }

	      return instance;
	    }

	    instance.setOptions(options).then(function (state) {
	      if (!isDestroyed && options.onFirstUpdate) {
	        options.onFirstUpdate(state);
	      }
	    }); // Modifiers have the ability to execute arbitrary code before the first
	    // update cycle runs. They will be executed in the same order as the update
	    // cycle. This is useful when a modifier adds some persistent data that
	    // other modifiers need to use, but the modifier is run after the dependent
	    // one.

	    function runModifierEffects() {
	      state.orderedModifiers.forEach(function (_ref5) {
	        var name = _ref5.name,
	            _ref5$options = _ref5.options,
	            options = _ref5$options === void 0 ? {} : _ref5$options,
	            effect = _ref5.effect;

	        if (typeof effect === 'function') {
	          var cleanupFn = effect({
	            state: state,
	            name: name,
	            instance: instance,
	            options: options
	          });

	          var noopFn = function noopFn() {};

	          effectCleanupFns.push(cleanupFn || noopFn);
	        }
	      });
	    }

	    function cleanupModifierEffects() {
	      effectCleanupFns.forEach(function (fn) {
	        return fn();
	      });
	      effectCleanupFns = [];
	    }

	    return instance;
	  };
	}

	var passive = {
	  passive: true
	};

	function effect(_ref) {
	  var state = _ref.state,
	      instance = _ref.instance,
	      options = _ref.options;
	  var _options$scroll = options.scroll,
	      scroll = _options$scroll === void 0 ? true : _options$scroll,
	      _options$resize = options.resize,
	      resize = _options$resize === void 0 ? true : _options$resize;
	  var window = getWindow(state.elements.popper);
	  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

	  if (scroll) {
	    scrollParents.forEach(function (scrollParent) {
	      scrollParent.addEventListener('scroll', instance.update, passive);
	    });
	  }

	  if (resize) {
	    window.addEventListener('resize', instance.update, passive);
	  }

	  return function () {
	    if (scroll) {
	      scrollParents.forEach(function (scrollParent) {
	        scrollParent.removeEventListener('scroll', instance.update, passive);
	      });
	    }

	    if (resize) {
	      window.removeEventListener('resize', instance.update, passive);
	    }
	  };
	}

	var eventListeners = {
	  name: 'eventListeners',
	  enabled: true,
	  phase: 'write',
	  fn: function fn() {},
	  effect: effect,
	  data: {}
	};

	function getVariation(placement) {
	  return placement.split('-')[1];
	}

	function getMainAxisFromPlacement(placement) {
	  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
	}

	function computeOffsets(_ref) {
	  var reference = _ref.reference,
	      element = _ref.element,
	      placement = _ref.placement;
	  var basePlacement = placement ? getBasePlacement(placement) : null;
	  var variation = placement ? getVariation(placement) : null;
	  var commonX = reference.x + reference.width / 2 - element.width / 2;
	  var commonY = reference.y + reference.height / 2 - element.height / 2;
	  var offsets;

	  switch (basePlacement) {
	    case top:
	      offsets = {
	        x: commonX,
	        y: reference.y - element.height
	      };
	      break;

	    case bottom:
	      offsets = {
	        x: commonX,
	        y: reference.y + reference.height
	      };
	      break;

	    case right:
	      offsets = {
	        x: reference.x + reference.width,
	        y: commonY
	      };
	      break;

	    case left:
	      offsets = {
	        x: reference.x - element.width,
	        y: commonY
	      };
	      break;

	    default:
	      offsets = {
	        x: reference.x,
	        y: reference.y
	      };
	  }

	  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

	  if (mainAxis != null) {
	    var len = mainAxis === 'y' ? 'height' : 'width';

	    switch (variation) {
	      case start:
	        offsets[mainAxis] = Math.floor(offsets[mainAxis]) - Math.floor(reference[len] / 2 - element[len] / 2);
	        break;

	      case end:
	        offsets[mainAxis] = Math.floor(offsets[mainAxis]) + Math.ceil(reference[len] / 2 - element[len] / 2);
	        break;
	    }
	  }

	  return offsets;
	}

	function popperOffsets(_ref) {
	  var state = _ref.state,
	      name = _ref.name;
	  // Offsets are the actual position the popper needs to have to be
	  // properly positioned near its reference element
	  // This is the most basic placement, and will be adjusted by
	  // the modifiers in the next step
	  state.modifiersData[name] = computeOffsets({
	    reference: state.rects.reference,
	    element: state.rects.popper,
	    strategy: 'absolute',
	    placement: state.placement
	  });
	}

	var popperOffsets$1 = {
	  name: 'popperOffsets',
	  enabled: true,
	  phase: 'read',
	  fn: popperOffsets,
	  data: {}
	};

	function getDocumentElement(element) {
	  // $FlowFixMe: assume body is always available
	  return element.ownerDocument.documentElement;
	}

	var unsetSides = {
	  top: 'auto',
	  right: 'auto',
	  bottom: 'auto',
	  left: 'auto'
	}; // Round the offsets to the nearest suitable subpixel based on the DPR.
	// Zooming can change the DPR, but it seems to report a value that will
	// cleanly divide the values into the appropriate subpixels.

	function roundOffsets(_ref) {
	  var x = _ref.x,
	      y = _ref.y;
	  var dpr = window.devicePixelRatio || 1;
	  return {
	    x: Math.round(x * dpr) / dpr || 0,
	    y: Math.round(y * dpr) / dpr || 0
	  };
	}

	function mapToStyles(_ref2) {
	  var _Object$assign2;

	  var popper = _ref2.popper,
	      popperRect = _ref2.popperRect,
	      placement = _ref2.placement,
	      offsets = _ref2.offsets,
	      position = _ref2.position,
	      gpuAcceleration = _ref2.gpuAcceleration,
	      adaptive = _ref2.adaptive;

	  var _roundOffsets = roundOffsets(offsets),
	      x = _roundOffsets.x,
	      y = _roundOffsets.y;

	  var hasX = offsets.hasOwnProperty('x');
	  var hasY = offsets.hasOwnProperty('y');
	  var sideX = left;
	  var sideY = top;

	  if (adaptive) {
	    var offsetParent = getOffsetParent(popper);

	    if (offsetParent === getWindow(popper)) {
	      offsetParent = getDocumentElement(popper);
	    }

	    if (placement === top) {
	      sideY = bottom;
	      y -= offsetParent.clientHeight - popperRect.height;
	      y *= gpuAcceleration ? 1 : -1;
	    }

	    if (placement === left) {
	      sideX = right;
	      x -= offsetParent.clientWidth - popperRect.width;
	      x *= gpuAcceleration ? 1 : -1;
	    }
	  }

	  var commonStyles = Object.assign({
	    position: position
	  }, adaptive && unsetSides);

	  if (gpuAcceleration) {
	    var _Object$assign;

	    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (window.devicePixelRatio || 1) < 2 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
	  }

	  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
	}

	function computeStyles(_ref3) {
	  var state = _ref3.state,
	      options = _ref3.options;
	  var _options$gpuAccelerat = options.gpuAcceleration,
	      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
	      _options$adaptive = options.adaptive,
	      adaptive = _options$adaptive === void 0 ? true : _options$adaptive;
	  var commonStyles = {
	    placement: getBasePlacement(state.placement),
	    popper: state.elements.popper,
	    popperRect: state.rects.popper,
	    gpuAcceleration: gpuAcceleration
	  }; // popper offsets are always available

	  state.styles.popper = Object.assign({}, state.styles.popper, {}, mapToStyles(Object.assign({}, commonStyles, {
	    offsets: state.modifiersData.popperOffsets,
	    position: state.options.strategy,
	    adaptive: adaptive
	  }))); // arrow offsets may not be available

	  if (state.modifiersData.arrow != null) {
	    state.styles.arrow = Object.assign({}, state.styles.arrow, {}, mapToStyles(Object.assign({}, commonStyles, {
	      offsets: state.modifiersData.arrow,
	      position: 'absolute',
	      adaptive: false
	    })));
	  }

	  state.attributes.popper = Object.assign({}, state.attributes.popper, {
	    'data-popper-placement': state.placement
	  });
	}

	var computeStyles$1 = {
	  name: 'computeStyles',
	  enabled: true,
	  phase: 'beforeWrite',
	  fn: computeStyles,
	  data: {}
	};

	// and applies them to the HTMLElements such as popper and arrow

	function applyStyles(_ref) {
	  var state = _ref.state;
	  Object.keys(state.elements).forEach(function (name) {
	    var style = state.styles[name] || {};
	    var attributes = state.attributes[name] || {};
	    var element = state.elements[name]; // arrow is optional + virtual elements

	    if (!isHTMLElement(element) || !getNodeName(element)) {
	      return;
	    } // Flow doesn't support to extend this property, but it's the most
	    // effective way to apply styles to an HTMLElement
	    // $FlowFixMe


	    Object.assign(element.style, style);
	    Object.keys(attributes).forEach(function (name) {
	      var value = attributes[name];

	      if (value === false) {
	        element.removeAttribute(name);
	      } else {
	        element.setAttribute(name, value === true ? '' : value);
	      }
	    });
	  });
	}

	function effect$1(_ref2) {
	  var state = _ref2.state;
	  var initialStyles = {
	    position: 'absolute',
	    left: '0',
	    top: '0',
	    margin: '0'
	  };
	  Object.assign(state.elements.popper.style, initialStyles);
	  return function () {
	    Object.keys(state.elements).forEach(function (name) {
	      var element = state.elements[name];
	      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? Object.assign({}, state.styles[name]) : initialStyles);
	      var attributes = state.attributes[name] || {}; // Set all values to an empty string to unset them

	      var style = styleProperties.reduce(function (style, property) {
	        var _Object$assign;

	        return Object.assign({}, style, (_Object$assign = {}, _Object$assign[String(property)] = '', _Object$assign));
	      }, {}); // arrow is optional + virtual elements

	      if (!isHTMLElement(element) || !getNodeName(element)) {
	        return;
	      } // Flow doesn't support to extend this property, but it's the most
	      // effective way to apply styles to an HTMLElement
	      // $FlowFixMe


	      Object.assign(element.style, style);
	      Object.keys(attributes).forEach(function (attribute) {
	        return element.removeAttribute(attribute);
	      });
	    });
	  };
	}

	var applyStyles$1 = {
	  name: 'applyStyles',
	  enabled: true,
	  phase: 'write',
	  fn: applyStyles,
	  effect: effect$1,
	  requires: ['computeStyles']
	};

	function distanceAndSkiddingToXY(placement, rects, offset) {
	  var basePlacement = getBasePlacement(placement);
	  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

	  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
	    placement: placement
	  })) : offset,
	      skidding = _ref[0],
	      distance = _ref[1];

	  skidding = skidding || 0;
	  distance = (distance || 0) * invertDistance;
	  return [left, right].indexOf(basePlacement) >= 0 ? {
	    x: distance,
	    y: skidding
	  } : {
	    x: skidding,
	    y: distance
	  };
	}

	function offset(_ref2) {
	  var state = _ref2.state,
	      options = _ref2.options,
	      name = _ref2.name;
	  var _options$offset = options.offset,
	      offset = _options$offset === void 0 ? [0, 0] : _options$offset;
	  var data = placements.reduce(function (acc, placement) {
	    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
	    return acc;
	  }, {});
	  var _data$state$placement = data[state.placement],
	      x = _data$state$placement.x,
	      y = _data$state$placement.y;
	  state.modifiersData.popperOffsets.x += x;
	  state.modifiersData.popperOffsets.y += y;
	  state.modifiersData[name] = data;
	}

	var offset$1 = {
	  name: 'offset',
	  enabled: true,
	  phase: 'main',
	  requires: ['popperOffsets'],
	  fn: offset
	};

	var hash = {
	  left: 'right',
	  right: 'left',
	  bottom: 'top',
	  top: 'bottom'
	};
	function getOppositePlacement(placement) {
	  return placement.replace(/left|right|bottom|top/g, function (matched) {
	    return hash[matched];
	  });
	}

	var hash$1 = {
	  start: 'end',
	  end: 'start'
	};
	function getOppositeVariationPlacement(placement) {
	  return placement.replace(/start|end/g, function (matched) {
	    return hash$1[matched];
	  });
	}

	function getViewportRect(element) {
	  var win = getWindow(element);
	  return {
	    width: win.innerWidth,
	    height: win.innerHeight,
	    x: 0,
	    y: 0
	  };
	}

	function getDocumentRect(element) {
	  var win = getWindow(element);
	  var winScroll = getWindowScroll(element);
	  var documentRect = getCompositeRect(getDocumentElement(element), win);
	  documentRect.height = Math.max(documentRect.height, win.innerHeight);
	  documentRect.width = Math.max(documentRect.width, win.innerWidth);
	  documentRect.x = -winScroll.scrollLeft;
	  documentRect.y = -winScroll.scrollTop;
	  return documentRect;
	}

	function getDecorations(element) {
	  var borders = getBorders(element);
	  var win = getWindow(element);
	  var right = element.offsetWidth - element.clientWidth - borders.right;
	  var bottom = element.offsetHeight - element.clientHeight - borders.bottom;

	  if (getNodeName(element) === 'html') {
	    right = win.innerWidth - element.clientWidth;
	    bottom = win.innerHeight - element.clientHeight;
	  }

	  return {
	    top: borders.top,
	    right: right,
	    bottom: bottom,
	    left: borders.left
	  };
	}

	function contains(parent, child) {
	  // $FlowFixMe: hasOwnProperty doesn't seem to work in tests
	  var isShadow = Boolean(child.getRootNode && child.getRootNode().host); // First, attempt with faster native method

	  if (parent.contains(child)) {
	    return true;
	  } // then fallback to custom implementation with Shadow DOM support
	  else if (isShadow) {
	      var next = child;

	      do {
	        if (next && parent.isSameNode(next)) {
	          return true;
	        } // $FlowFixMe: need a better way to handle this...


	        next = next.parentNode || next.host;
	      } while (next);
	    } // Give up, the result is false


	  return false;
	}

	function rectToClientRect(rect) {
	  return Object.assign({}, rect, {
	    left: rect.x,
	    top: rect.y,
	    right: rect.x + rect.width,
	    bottom: rect.y + rect.height
	  });
	}

	function getClientRectFromMixedType(element, clippingParent) {
	  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isHTMLElement(clippingParent) ? getBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
	} // A "clipping parent" is an overflowable container with the characteristic of
	// clipping (or hiding) overflowing elements with a position different from
	// `initial`


	function getClippingParents(element) {
	  var clippingParents = listScrollParents(element);
	  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;
	  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

	  if (!isElement(clipperElement)) {
	    return [];
	  }

	  return clippingParents.filter(function (clippingParent) {
	    return isElement(clippingParent) && contains(clippingParent, clipperElement);
	  });
	} // Gets the maximum area that the element is visible in due to any number of
	// clipping parents


	function getClippingRect(element, boundary, rootBoundary) {
	  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
	  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
	  var firstClippingParent = clippingParents[0];
	  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
	    var rect = getClientRectFromMixedType(element, clippingParent);
	    var decorations = getDecorations(isHTMLElement(clippingParent) ? clippingParent : getDocumentElement(element));
	    accRect.top = Math.max(rect.top + decorations.top, accRect.top);
	    accRect.right = Math.min(rect.right - decorations.right, accRect.right);
	    accRect.bottom = Math.min(rect.bottom - decorations.bottom, accRect.bottom);
	    accRect.left = Math.max(rect.left + decorations.left, accRect.left);
	    return accRect;
	  }, getClientRectFromMixedType(element, firstClippingParent));
	  clippingRect.width = clippingRect.right - clippingRect.left;
	  clippingRect.height = clippingRect.bottom - clippingRect.top;
	  clippingRect.x = clippingRect.left;
	  clippingRect.y = clippingRect.top;
	  return clippingRect;
	}

	function getFreshSideObject() {
	  return {
	    top: 0,
	    right: 0,
	    bottom: 0,
	    left: 0
	  };
	}

	function mergePaddingObject(paddingObject) {
	  return Object.assign({}, getFreshSideObject(), {}, paddingObject);
	}

	function expandToHashMap(value, keys) {
	  return keys.reduce(function (hashMap, key) {
	    hashMap[key] = value;
	    return hashMap;
	  }, {});
	}

	function detectOverflow(state, options) {
	  if (options === void 0) {
	    options = {};
	  }

	  var _options = options,
	      _options$placement = _options.placement,
	      placement = _options$placement === void 0 ? state.placement : _options$placement,
	      _options$boundary = _options.boundary,
	      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
	      _options$rootBoundary = _options.rootBoundary,
	      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
	      _options$elementConte = _options.elementContext,
	      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
	      _options$altBoundary = _options.altBoundary,
	      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
	      _options$padding = _options.padding,
	      padding = _options$padding === void 0 ? 0 : _options$padding;
	  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
	  var altContext = elementContext === popper ? reference : popper;
	  var referenceElement = state.elements.reference;
	  var popperRect = state.rects.popper;
	  var element = state.elements[altBoundary ? altContext : elementContext];
	  var clippingClientRect = getClippingRect(isElement(element) ? element : getDocumentElement(state.elements.popper), boundary, rootBoundary);
	  var referenceClientRect = getBoundingClientRect(referenceElement);
	  var popperOffsets = computeOffsets({
	    reference: referenceClientRect,
	    element: popperRect,
	    strategy: 'absolute',
	    placement: placement
	  });
	  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, {}, popperOffsets));
	  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
	  // 0 or negative = within the clipping rect

	  var overflowOffsets = {
	    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
	    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
	    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
	    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
	  };
	  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

	  if (elementContext === popper && offsetData) {
	    var offset = offsetData[placement];
	    Object.keys(overflowOffsets).forEach(function (key) {
	      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
	      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
	      overflowOffsets[key] += offset[axis] * multiply;
	    });
	  }

	  return overflowOffsets;
	}

	function computeAutoPlacement(state, options) {
	  if (options === void 0) {
	    options = {};
	  }

	  var _options = options,
	      placement = _options.placement,
	      boundary = _options.boundary,
	      rootBoundary = _options.rootBoundary,
	      padding = _options.padding,
	      flipVariations = _options.flipVariations;
	  var variation = getVariation(placement);
	  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
	    return getVariation(placement) === variation;
	  }) : basePlacements; // $FlowFixMe: Flow seems to have problems with two array unions...

	  var overflows = placements.reduce(function (acc, placement) {
	    acc[placement] = detectOverflow(state, {
	      placement: placement,
	      boundary: boundary,
	      rootBoundary: rootBoundary,
	      padding: padding
	    })[getBasePlacement(placement)];
	    return acc;
	  }, {});
	  return Object.keys(overflows).sort(function (a, b) {
	    return overflows[a] - overflows[b];
	  });
	}

	function getExpandedFallbackPlacements(placement) {
	  if (getBasePlacement(placement) === auto) {
	    return [];
	  }

	  var oppositePlacement = getOppositePlacement(placement);
	  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
	}

	function flip(_ref) {
	  var state = _ref.state,
	      options = _ref.options,
	      name = _ref.name;

	  if (state.modifiersData[name]._skip) {
	    return;
	  }

	  var specifiedFallbackPlacements = options.fallbackPlacements,
	      padding = options.padding,
	      boundary = options.boundary,
	      rootBoundary = options.rootBoundary,
	      _options$flipVariatio = options.flipVariations,
	      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio;
	  var preferredPlacement = state.options.placement;
	  var basePlacement = getBasePlacement(preferredPlacement);
	  var isBasePlacement = basePlacement === preferredPlacement;
	  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
	  var placements = uniqueBy([preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
	    return getBasePlacement(placement) === auto ? acc.concat(computeAutoPlacement(state, {
	      placement: placement,
	      boundary: boundary,
	      rootBoundary: rootBoundary,
	      padding: padding,
	      flipVariations: flipVariations
	    })) : acc.concat(placement);
	  }, []), function (placement) {
	    return placement;
	  });
	  var referenceRect = state.rects.reference;
	  var popperRect = state.rects.popper;
	  var checksMap = new Map();
	  var makeFallbackChecks = true;
	  var firstFittingPlacement = placements[0];

	  for (var i = 0; i < placements.length; i++) {
	    var placement = placements[i];

	    var _basePlacement = getBasePlacement(placement);

	    var isStartVariation = getVariation(placement) === start;
	    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
	    var len = isVertical ? 'width' : 'height';
	    var overflow = detectOverflow(state, {
	      placement: placement,
	      boundary: boundary,
	      rootBoundary: rootBoundary,
	      padding: padding
	    });
	    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

	    if (referenceRect[len] > popperRect[len]) {
	      mainVariationSide = getOppositePlacement(mainVariationSide);
	    }

	    var altVariationSide = getOppositePlacement(mainVariationSide);
	    var checks = [overflow[_basePlacement] <= 0, overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0];

	    if (checks.every(function (check) {
	      return check;
	    })) {
	      firstFittingPlacement = placement;
	      makeFallbackChecks = false;
	      break;
	    }

	    checksMap.set(placement, checks);
	  }

	  if (makeFallbackChecks) {
	    // `2` may be desired in some cases – research later
	    var numberOfChecks = flipVariations ? 3 : 1;

	    var _loop = function _loop(_i) {
	      var fittingPlacement = placements.find(function (placement) {
	        var checks = checksMap.get(placement);

	        if (checks) {
	          return checks.slice(0, _i).every(function (check) {
	            return check;
	          });
	        }
	      });

	      if (fittingPlacement) {
	        firstFittingPlacement = fittingPlacement;
	        return "break";
	      }
	    };

	    for (var _i = numberOfChecks; _i > 0; _i--) {
	      var _ret = _loop(_i);

	      if (_ret === "break") break;
	    }
	  }

	  if (state.placement !== firstFittingPlacement) {
	    state.modifiersData[name]._skip = true;
	    state.placement = firstFittingPlacement;
	    state.reset = true;
	  }
	}

	var flip$1 = {
	  name: 'flip',
	  enabled: true,
	  phase: 'main',
	  fn: flip,
	  requiresIfExists: ['offset'],
	  data: {
	    _skip: false
	  }
	};

	function getAltAxis(axis) {
	  return axis === 'x' ? 'y' : 'x';
	}

	function within(min, value, max) {
	  return Math.max(min, Math.min(value, max));
	}

	function preventOverflow(_ref) {
	  var state = _ref.state,
	      options = _ref.options,
	      name = _ref.name;
	  var _options$mainAxis = options.mainAxis,
	      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
	      _options$altAxis = options.altAxis,
	      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
	      boundary = options.boundary,
	      rootBoundary = options.rootBoundary,
	      padding = options.padding,
	      _options$tether = options.tether,
	      tether = _options$tether === void 0 ? true : _options$tether,
	      _options$tetherOffset = options.tetherOffset,
	      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
	  var overflow = detectOverflow(state, {
	    boundary: boundary,
	    rootBoundary: rootBoundary,
	    padding: padding
	  });
	  var basePlacement = getBasePlacement(state.placement);
	  var variation = getVariation(state.placement);
	  var isBasePlacement = !variation;
	  var mainAxis = getMainAxisFromPlacement(basePlacement);
	  var altAxis = getAltAxis(mainAxis);
	  var popperOffsets = state.modifiersData.popperOffsets;
	  var referenceRect = state.rects.reference;
	  var popperRect = state.rects.popper;
	  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
	    placement: state.placement
	  })) : tetherOffset;
	  var data = {
	    x: 0,
	    y: 0
	  };

	  if (checkMainAxis) {
	    var mainSide = mainAxis === 'y' ? top : left;
	    var altSide = mainAxis === 'y' ? bottom : right;
	    var len = mainAxis === 'y' ? 'height' : 'width';
	    var offset = popperOffsets[mainAxis];
	    var min = popperOffsets[mainAxis] + overflow[mainSide];
	    var max = popperOffsets[mainAxis] - overflow[altSide];
	    var additive = tether ? -popperRect[len] / 2 : 0;
	    var minLen = variation === start ? referenceRect[len] : popperRect[len];
	    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
	    // outside the reference bounds

	    var arrowElement = state.elements.arrow;
	    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
	      width: 0,
	      height: 0
	    };
	    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
	    var arrowPaddingMin = arrowPaddingObject[mainSide];
	    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
	    // to include its full size in the calculation. If the reference is small
	    // and near the edge of a boundary, the popper can overflow even if the
	    // reference is not overflowing as well (e.g. virtual elements with no
	    // width or height)

	    var arrowLen = within(0, Math.abs(referenceRect[len] - arrowRect[len]), arrowRect[len]);
	    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;
	    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;
	    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;
	    var tetherMin = state.modifiersData.popperOffsets[mainAxis] + minOffset - offsetModifierValue;
	    var tetherMax = state.modifiersData.popperOffsets[mainAxis] + maxOffset - offsetModifierValue;
	    var preventedOffset = within(tether ? Math.min(min, tetherMin) : min, offset, tether ? Math.max(max, tetherMax) : max);
	    state.modifiersData.popperOffsets[mainAxis] = preventedOffset;
	    data[mainAxis] = preventedOffset - offset;
	  }

	  if (checkAltAxis) {
	    var _mainSide = mainAxis === 'x' ? top : left;

	    var _altSide = mainAxis === 'x' ? bottom : right;

	    var _offset = popperOffsets[altAxis];

	    var _min = _offset + overflow[_mainSide];

	    var _max = _offset - overflow[_altSide];

	    var _preventedOffset = within(_min, _offset, _max);

	    state.modifiersData.popperOffsets[altAxis] = _preventedOffset;
	    data[altAxis] = _preventedOffset - _offset;
	  }

	  state.modifiersData[name] = data;
	}

	var preventOverflow$1 = {
	  name: 'preventOverflow',
	  enabled: true,
	  phase: 'main',
	  fn: preventOverflow,
	  requiresIfExists: ['offset']
	};

	function arrow(_ref) {
	  var _state$modifiersData$;

	  var state = _ref.state,
	      name = _ref.name;
	  var arrowElement = state.elements.arrow;
	  var popperOffsets = state.modifiersData.popperOffsets;
	  var basePlacement = getBasePlacement(state.placement);
	  var axis = getMainAxisFromPlacement(basePlacement);
	  var isVertical = [left, right].indexOf(basePlacement) >= 0;
	  var len = isVertical ? 'height' : 'width';

	  if (!arrowElement) {
	    return;
	  }

	  var paddingObject = state.modifiersData[name + "#persistent"].padding;
	  var arrowRect = getLayoutRect(arrowElement);
	  var minProp = axis === 'y' ? top : left;
	  var maxProp = axis === 'y' ? bottom : right;
	  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
	  var startDiff = popperOffsets[axis] - state.rects.reference[axis];
	  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
	  // outside of the popper bounds

	  var center = within(paddingObject[minProp], state.rects.popper[len] / 2 - arrowRect[len] / 2 + centerToReference, state.rects.popper[len] - arrowRect[len] - paddingObject[maxProp]); // Prevents breaking syntax highlighting...

	  var axisProp = axis;
	  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = center, _state$modifiersData$);
	}

	function effect$2(_ref2) {
	  var state = _ref2.state,
	      options = _ref2.options,
	      name = _ref2.name;
	  var _options$element = options.element,
	      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element,
	      _options$padding = options.padding,
	      padding = _options$padding === void 0 ? 0 : _options$padding; // CSS selector

	  if (typeof arrowElement === 'string') {
	    arrowElement = state.elements.popper.querySelector(arrowElement);

	    if (!arrowElement) {
	      return;
	    }
	  }

	  if (!contains(state.elements.popper, arrowElement)) {
	    if (process.env.NODE_ENV !== "production") {
	      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', 'element.'].join(' '));
	    }

	    return;
	  }

	  state.elements.arrow = arrowElement;
	  state.modifiersData[name + "#persistent"] = {
	    padding: mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements))
	  };
	}

	var arrow$1 = {
	  name: 'arrow',
	  enabled: true,
	  phase: 'main',
	  fn: arrow,
	  effect: effect$2,
	  requires: ['popperOffsets'],
	  requiresIfExists: ['preventOverflow']
	};

	function getSideOffsets(overflow, rect, preventedOffsets) {
	  if (preventedOffsets === void 0) {
	    preventedOffsets = {
	      x: 0,
	      y: 0
	    };
	  }

	  return {
	    top: overflow.top - rect.height - preventedOffsets.y,
	    right: overflow.right - rect.width + preventedOffsets.x,
	    bottom: overflow.bottom - rect.height + preventedOffsets.y,
	    left: overflow.left - rect.width - preventedOffsets.x
	  };
	}

	function isAnySideFullyClipped(overflow) {
	  return [top, right, bottom, left].some(function (side) {
	    return overflow[side] >= 0;
	  });
	}

	function hide(_ref) {
	  var state = _ref.state,
	      name = _ref.name;
	  var referenceRect = state.rects.reference;
	  var popperRect = state.rects.popper;
	  var preventedOffsets = state.modifiersData.preventOverflow;
	  var referenceOverflow = detectOverflow(state, {
	    elementContext: 'reference'
	  });
	  var popperAltOverflow = detectOverflow(state, {
	    altBoundary: true
	  });
	  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
	  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
	  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
	  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
	  state.modifiersData[name] = {
	    referenceClippingOffsets: referenceClippingOffsets,
	    popperEscapeOffsets: popperEscapeOffsets,
	    isReferenceHidden: isReferenceHidden,
	    hasPopperEscaped: hasPopperEscaped
	  };
	  state.attributes.popper = Object.assign({}, state.attributes.popper, {
	    'data-popper-reference-hidden': isReferenceHidden,
	    'data-popper-escaped': hasPopperEscaped
	  });
	}

	var hide$1 = {
	  name: 'hide',
	  enabled: true,
	  phase: 'main',
	  requiresIfExists: ['preventOverflow'],
	  fn: hide
	};

	var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
	var createPopper =
	/*#__PURE__*/
	popperGenerator({
	  defaultModifiers: defaultModifiers
	}); // eslint-disable-next-line import/no-unused-modules

	exports.createPopper = createPopper;
	exports.defaultModifiers = defaultModifiers;
	exports.popperGenerator = popperGenerator;
	//# sourceMappingURL=popper.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)))

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	var PropTypes = __webpack_require__(269);
	var PropTypes__default = _interopDefault(PropTypes);
	var reactDom = __webpack_require__(424);
	var hooks = __webpack_require__(413);

	var Portal = React.forwardRef(function (_ref, ref) {
	  var children = _ref.children,
	      usePortal = _ref.usePortal,
	      portalAttribute = _ref.portalAttribute,
	      containerSelector = _ref.containerSelector;
	  var portalRef = hooks.usePortalRef(containerSelector, usePortal, portalAttribute);
	  React.useImperativeHandle(ref, function () {
	    return {
	      portalID: portalRef.current ? portalRef.current.id : ''
	    };
	  });

	  if (usePortal && portalRef.current) {
	    return reactDom.createPortal(children, portalRef.current);
	  }

	  return children;
	});
	Portal.propTypes = {
	  children: PropTypes.node.isRequired,
	  usePortal: PropTypes.bool,
	  containerSelector: PropTypes.string,
	  portalAttribute: PropTypes.string
	};
	Portal.defaultProps = {
	  usePortal: true,
	  containerSelector: 'body',
	  portalAttribute: ''
	};

	module.exports = Portal;
	//# sourceMappingURL=index.js.map


/***/ },
/* 424 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_424__;

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	__webpack_require__(212);
	var _rollupPluginBabelHelpers = __webpack_require__(268);
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	var PropTypes = __webpack_require__(269);
	var PropTypes__default = _interopDefault(PropTypes);
	var index = __webpack_require__(426);

	var OptionGroup = React.forwardRef(function (_ref, ref) {
	  var options = _ref.options,
	      setSelected = _ref.setSelected,
	      checkOptionSelectionState = _ref.checkOptionSelectionState,
	      ContainerRenderer = _ref.ContainerRenderer,
	      OptionContainerRenderer = _ref.OptionContainerRenderer,
	      OptionRenderer = _ref.OptionRenderer,
	      disabled = _ref.disabled,
	      GroupRenderer = _ref.GroupRenderer,
	      text = _ref.text,
	      OptionContainerRendererProps = _ref.OptionContainerRendererProps;
	  return /*#__PURE__*/React__default.createElement(ContainerRenderer, {
	    ref: ref,
	    text: text
	  }, options.map(function (option) {
	    if (option.type === 'group') {
	      return /*#__PURE__*/React__default.createElement(OptionGroup, {
	        text: option.text,
	        disabled: disabled,
	        options: option.options,
	        setSelected: setSelected,
	        GroupRenderer: GroupRenderer,
	        OptionRenderer: OptionRenderer,
	        ContainerRenderer: GroupRenderer,
	        OptionContainerRenderer: OptionContainerRenderer,
	        OptionContainerRendererProps: OptionContainerRendererProps,
	        checkOptionSelectionState: checkOptionSelectionState
	      });
	    }

	    return /*#__PURE__*/React__default.createElement(index, {
	      option: option,
	      key: option.value,
	      Renderer: option.Renderer || OptionRenderer,
	      OptionContainerRendererProps: OptionContainerRendererProps,
	      setSelected: setSelected,
	      disabled: disabled || option.disabled,
	      ContainerRenderer: OptionContainerRenderer,
	      isSelected: checkOptionSelectionState(option)
	    });
	  }));
	});
	OptionGroup.prototype = {
	  disabled: PropTypes.bool,
	  setSelected: PropTypes.func,
	  GroupRenderer: PropTypes.elementType,
	  OptionRenderer: PropTypes.elementType,
	  ContainerRenderer: PropTypes.elementType,
	  OptionContainerRenderer: PropTypes.elementType,
	  OptionContainerRendererProps: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({})]),
	  checkOptionSelectionState: PropTypes.func,
	  options: PropTypes.arrayOf(PropTypes.shape({
	    text: PropTypes.string,
	    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
	  })),
	  selectedOptions: PropTypes.arrayOf(PropTypes.shape({
	    text: PropTypes.string,
	    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
	  }))
	};
	/* eslint react/prop-types: "off" */

	OptionGroup.defaultProps = {
	  options: [],
	  selectedOptions: [],
	  disabled: false,
	  setSelected: function setSelected(f) {
	    return f;
	  },
	  checkOptionSelectionState: function checkOptionSelectionState(f) {
	    return f;
	  },
	  GroupRenderer: function GroupRenderer(_ref2) {
	    var text = _ref2.text,
	        children = _ref2.children,
	        props = _rollupPluginBabelHelpers.objectWithoutProperties(_ref2, ["text", "children"]);

	    return /*#__PURE__*/React__default.createElement("div", props, /*#__PURE__*/React__default.createElement("b", null, text), /*#__PURE__*/React__default.createElement("div", null, children));
	  },
	  ContainerRenderer: function ContainerRenderer(_ref3) {
	    var children = _ref3.children;
	    return /*#__PURE__*/React__default.createElement("ul", null, children);
	  },
	  OptionContainerRenderer: function OptionContainerRenderer(props) {
	    return /*#__PURE__*/React__default.createElement("li", props);
	  },
	  OptionContainerRendererProps: {},
	  OptionRenderer: function OptionRenderer(_ref4) {
	    var _ref4$option = _ref4.option,
	        text = _ref4$option.text,
	        value = _ref4$option.value,
	        isSelected = _ref4.isSelected;
	    return /*#__PURE__*/React__default.createElement("div", {
	      "data-value": value,
	      "data-selected": isSelected
	    }, text);
	  }
	};

	module.exports = OptionGroup;
	//# sourceMappingURL=index.js.map


/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	var _rollupPluginBabelHelpers = __webpack_require__(268);
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	var PropTypes = __webpack_require__(269);
	var PropTypes__default = _interopDefault(PropTypes);
	var index = __webpack_require__(283);

	var Option = function Option(_ref) {
	  var option = _ref.option,
	      setSelected = _ref.setSelected,
	      ContainerRenderer = _ref.ContainerRenderer,
	      Renderer = _ref.Renderer,
	      isSelected = _ref.isSelected,
	      disabled = _ref.disabled,
	      OptionContainerRendererProps = _ref.OptionContainerRendererProps;

	  var handleSelection = function handleSelection(opt) {
	    if (disabled) return;
	    setSelected(opt);
	  };

	  var onOptionClick = function onOptionClick(opt) {
	    return function () {
	      return handleSelection(opt);
	    };
	  };

	  var onOptionKeyPress = function onOptionKeyPress(opt) {
	    return function (event) {
	      return index.isPressedKeyEnter(event) && handleSelection(opt);
	    };
	  };

	  var ContainerRendererProps = typeof OptionContainerRendererProps === 'function' ? OptionContainerRendererProps(option) : OptionContainerRendererProps;
	  return /*#__PURE__*/React__default.createElement(ContainerRenderer, _rollupPluginBabelHelpers.extends({
	    role: "option",
	    "aria-disabled": disabled,
	    "aria-selected": isSelected,
	    onClick: onOptionClick(option),
	    onKeyPress: onOptionKeyPress(option)
	  }, ContainerRendererProps), /*#__PURE__*/React__default.createElement(Renderer, {
	    option: option,
	    isSelected: isSelected
	  }));
	};

	Option.prototype = {
	  disabled: PropTypes.bool,
	  isSelected: PropTypes.bool,
	  setSelected: PropTypes.func,
	  Renderer: PropTypes.elementType,
	  ContainerRenderer: PropTypes.elementType,
	  OptionContainerRendererProps: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({})]),
	  option: PropTypes.shape({
	    text: PropTypes.string,
	    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
	  })
	};
	/* eslint react/prop-types: "off" */

	Option.defaultProps = {
	  option: {},
	  disabled: false,
	  isSelected: false,
	  setSelected: function setSelected(f) {
	    return f;
	  },
	  ContainerRenderer: function ContainerRenderer(props) {
	    return /*#__PURE__*/React__default.createElement("li", props);
	  },
	  OptionContainerRendererProps: {},
	  Renderer: function Renderer(_ref2) {
	    var _ref2$option = _ref2.option,
	        text = _ref2$option.text,
	        value = _ref2$option.value,
	        isSelected = _ref2.isSelected;
	    return /*#__PURE__*/React__default.createElement("div", {
	      "data-value": value,
	      "data-selected": isSelected
	    }, text);
	  }
	};

	module.exports = Option;
	//# sourceMappingURL=index.js.map


/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

	var _rollupPluginBabelHelpers = __webpack_require__(268);
	var React = __webpack_require__(2);
	var React__default = _interopDefault(React);
	var PropTypes = __webpack_require__(269);
	var PropTypes__default = _interopDefault(PropTypes);
	__webpack_require__(288);
	__webpack_require__(290);
	__webpack_require__(294);

	var TextInput = React.forwardRef(function (_ref, ref) {
	  var id = _ref.id,
	      label = _ref.label,
	      value = _ref.value,
	      defaultValue = _ref.defaultValue,
	      onChange = _ref.onChange,
	      onBlur = _ref.onBlur,
	      isErrored = _ref.isErrored,
	      props = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, ["id", "label", "value", "defaultValue", "onChange", "onBlur", "isErrored"]);

	  // States
	  var _useState = React.useState(false),
	      _useState2 = _rollupPluginBabelHelpers.slicedToArray(_useState, 2),
	      isDirty = _useState2[0],
	      setDirty = _useState2[1];

	  var _useState3 = React.useState(''),
	      _useState4 = _rollupPluginBabelHelpers.slicedToArray(_useState3, 2),
	      inputValue = _useState4[0],
	      setInputValue = _useState4[1];

	  var _useState5 = React.useState(''),
	      _useState6 = _rollupPluginBabelHelpers.slicedToArray(_useState5, 2),
	      errorMessage = _useState6[0],
	      setErrorMessage = _useState6[1]; // Event handler


	  var onInputValueChange = function onInputValueChange(e) {
	    setInputValue(e.target.value);
	    onChange(e, inputValue, setInputValue);
	  };

	  var onInputBlur = function onInputBlur(e) {
	    onBlur(e);
	    setDirty(isErrored(inputValue));
	  }; // Effect


	  React.useEffect(function () {
	    setInputValue(value || defaultValue);
	    setDirty(false);
	  }, [value, defaultValue]);
	  React.useEffect(function () {
	    setErrorMessage('');
	  }, [isDirty]);
	  React.useEffect(function () {
	    if (isDirty) {
	      setErrorMessage(isErrored(inputValue));
	    }
	  }, [isDirty, inputValue]); // Memoized values

	  var eventHandlerProps = React.useMemo(function () {
	    return Object.keys(props).filter(function (propKey) {
	      return /^on[A-Z]/.test(propKey) && typeof props[propKey] === 'function';
	    }).reduce(function (prev, propKey) {
	      return _rollupPluginBabelHelpers.objectSpread2({}, prev, _rollupPluginBabelHelpers.defineProperty({}, propKey, function (e) {
	        return props[propKey](e, inputValue, setInputValue);
	      }));
	    }, {});
	  }, [props]);
	  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, label && /*#__PURE__*/React__default.createElement("label", {
	    htmlFor: id
	  }, label), /*#__PURE__*/React__default.createElement("input", _rollupPluginBabelHelpers.extends({
	    id: id,
	    ref: ref,
	    value: inputValue,
	    onChange: onInputValueChange,
	    onBlur: onInputBlur
	  }, props, eventHandlerProps)), errorMessage && /*#__PURE__*/React__default.createElement("div", null, errorMessage));
	});
	TextInput.propTypes = {
	  id: PropTypes.string,
	  label: PropTypes.string,
	  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
	  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
	  onChange: PropTypes.func,
	  onBlur: PropTypes.func,
	  isErrored: PropTypes.func
	};
	TextInput.defaultProps = {
	  id: '',
	  label: '',
	  value: '',
	  defaultValue: '',
	  onChange: function onChange(f) {
	    return f;
	  },
	  onBlur: function onBlur(f) {
	    return f;
	  },
	  isErrored: function isErrored() {
	    return false;
	  }
	};

	module.exports = TextInput;
	//# sourceMappingURL=index.js.map


/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Location = function (_Component) {
	  _inherits(Location, _Component);

	  function Location() {
	    _classCallCheck(this, Location);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Location.prototype.render = function render() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props);

	    var countryOptions = [];
	    for (var lci = 0; lci < _Utils.specialOptions.LocationCountries.value.length; lci++) {
	      countryOptions.push(_react2.default.createElement(
	        'option',
	        { value: lci + 1, key: lci },
	        _Utils.specialOptions.LocationCountries.value[lci]
	      ));
	    }

	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: 'Country:',
	          defaultValue: 'Country:',
	          propPath: 'sublabels.country'
	        }),
	        _react2.default.createElement(
	          'select',
	          {
	            className: className,
	            disabled: this.props.inlineEditClass,
	            id: this.props.qid.value + '_country',
	            name: this.props.qname.value + '[country]'
	          },
	          _react2.default.createElement(
	            'option',
	            { selected: 1 },
	            'Please Select'
	          ),
	          countryOptions,
	          _react2.default.createElement(
	            'option',
	            { value: 'other' },
	            'Other'
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: 'State:',
	          defaultValue: 'State:',
	          propPath: 'sublabels.state'
	        }),
	        _react2.default.createElement(
	          'select',
	          {
	            className: className,
	            disabled: this.props.inlineEditClass,
	            id: this.props.qid.value + '_state',
	            name: this.props.qname.value + '[state]'
	          },
	          _react2.default.createElement(
	            'option',
	            null,
	            'Any'
	          )
	        )
	      ),
	      _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: 'City / Province:',
	          defaultValue: 'City / Province:',
	          propPath: 'sublabels.city'
	        }),
	        _react2.default.createElement(
	          'select',
	          {
	            className: className,
	            disabled: this.props.inlineEditClass,
	            id: this.props.qid.value + '_city',
	            name: this.props.qname.value + '[city]'
	          },
	          _react2.default.createElement(
	            'option',
	            null,
	            'Any'
	          )
	        )
	      )
	    );
	  };

	  return Location;
	}(_react.Component);

	exports.default = Location;


	Location.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  description: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func
	};

	Location.getState = function () {
	  return {};
	};

	Location.getScript = function (prop) {
	  var script = '      setLocationEvents($(\'"  ' + prop.qid.value + ' "_country\'), $(\'" ' + prop.qid.value + ' "_state\'), $(\'" ' + prop.qid.value + ' "_city\'));\n';

	  return script;
	};

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Matrix = function (_Component) {
	  _inherits(Matrix, _Component);

	  function Matrix() {
	    _classCallCheck(this, Matrix);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Matrix.prototype.renderField = function renderField(i, k, column, calcValue) {
	    var isDynamic = this.props.inputType.value === 'Dynamic';

	    var input = void 0;
	    var ID = 'input_' + this.props.id.value + '_' + i + '_' + k;
	    var nameSecCol = column.type === 'Radio Button' ? '' : '[]';
	    var name = isDynamic ? this.props.qname.value + '[' + i + '][' + k + ']' : this.props.qname.value + '[' + i + ']' + nameSecCol;
	    var tabIndex = this.props.inlineEditClass ? '-1' : null;
	    var sanitizedVal = column.text ? column.text.replace(/[\\"']/g, '\\$&').replace(/\u0000/g, '\\0') : '1';
	    var required = this.props.required && this.props.required.value === 'Yes' ? true : null;
	    var step = this.props.step ? this.props.step : 'any';

	    switch (column.type) {
	      case 'Radio Button':
	        // name +-> calcValue+' value -> mcol.sanitize()
	        input = _react2.default.createElement(
	          _react2.default.Fragment,
	          null,
	          _react2.default.createElement('input', {
	            readOnly: this.props.inlineEditClass,
	            id: ID,
	            className: (0, _Utils.addValidation)(_Utils.classNames.radio, this.props),
	            type: 'radio',
	            name: name,
	            'data-calcvalue': calcValue,
	            value: sanitizedVal,
	            tabIndex: tabIndex,
	            required: required,
	            'aria-labelledby': 'label_' + this.props.id.value + '_col_' + k
	          }),
	          _react2.default.createElement('label', { htmlFor: ID, className: 'matrix-choice-label matrix-radio-label' })
	        );
	        break;
	      case 'Check Box':
	        input = _react2.default.createElement(
	          _react2.default.Fragment,
	          null,
	          _react2.default.createElement('input', {
	            readOnly: this.props.inlineEditClass,
	            id: ID,
	            className: (0, _Utils.addValidation)(_Utils.classNames.checkbox, this.props),
	            type: 'checkbox', name: name,
	            'data-calcvalue': calcValue,
	            value: sanitizedVal,
	            tabIndex: tabIndex,
	            required: required,
	            'aria-labelledby': 'label_' + this.props.id.value + '_col_' + k
	          }),
	          _react2.default.createElement('label', { htmlFor: ID, className: 'matrix-choice-label matrix-checkbox-label' })
	        );
	        break;
	      case 'Text Box':
	        input = _react2.default.createElement('input', {
	          readOnly: this.props.inlineEditClass,
	          id: ID,
	          className: (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props),
	          type: 'text',
	          size: '5',
	          name: name,
	          style: { width: '100%', boxSizing: 'border-box' },
	          tabIndex: tabIndex,
	          required: required,
	          value: '',
	          'aria-labelledby': 'label_' + this.props.id.value + '_col_' + k
	        });
	        break;
	      case 'Currency Box':
	        input = _react2.default.createElement('input', {
	          readOnly: this.props.inlineEditClass,
	          id: ID,
	          className: (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props, 'Currency'),
	          type: 'text',
	          size: '5',
	          name: name,
	          style: { width: '100%', boxSizing: 'border-box' },
	          tabIndex: tabIndex,
	          required: required,
	          value: '',
	          'aria-labelledby': 'label_' + this.props.id.value + '_col_' + k
	        });
	        break;
	      case 'Numeric Text Box':
	        input = _react2.default.createElement('input', {
	          disabled: this.props.inlineEditClass,
	          id: ID,
	          type: 'number',
	          className: 'form-number-input ' + (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props),
	          name: name,
	          style: { width: '100%', boxSizing: 'border-box' },
	          size: '5',
	          tabIndex: tabIndex,
	          required: required,
	          value: '',
	          'aria-labelledby': 'label_' + this.props.id.value + '_col_' + k,
	          step: step
	        });
	        break;
	      case 'Drop Down':
	        var dropdownOptions = (isDynamic && column.options ? column.options : this.props.dropdown.value.replace(/&#0*39;/g, "'")).split('|');

	        var options = dropdownOptions.map(function (optionVal, oi) {
	          return _react2.default.createElement(
	            'option',
	            { key: oi, value: (0, _Utils.htmlDecode)((0, _Utils.sanitize)(optionVal)) },
	            (0, _Utils.htmlDecode)((0, _Utils.sanitize)(optionVal))
	          );
	        });

	        input = _react2.default.createElement(
	          'select',
	          {
	            disabled: this.props.inlineEditClass,
	            id: ID,
	            className: (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props),
	            name: name,
	            style: { width: '100%', boxSizing: 'border-box' },
	            required: required,
	            'aria-labelledby': 'label_' + this.props.id.value + '_col_' + k
	          },
	          _react2.default.createElement('option', null),
	          options
	        );
	        break;
	      default:
	        return null;
	    }

	    return input;
	  };

	  Matrix.prototype.render = function render() {
	    var _this2 = this;

	    var calcValues = this.props.calcMatrixValues && this.props.calcMatrixValues.value && this.props.calcMatrixValues.value.length > 0 && this.props.calcMatrixValues.value !== 'Click to edit' ? this.props.calcMatrixValues.value : false;
	    if (calcValues) {
	      calcValues = calcValues.split('|').map(function (line) {
	        return line.split(',');
	      });
	    }

	    var inputType = this.props.inputType ? this.props.inputType.value : '';
	    var isDynamic = this.props.inputType.value === 'Dynamic';
	    var cols = this.ColumnsArray;
	    var focusedColumnIndex = this.props.focusedPosition ? this.props.focusedPosition.mcolumns : null;
	    var focusedRowIndex = this.props.focusedPosition ? this.props.focusedPosition.mrows : null;

	    if (['Slider', 'Emoji Slider', 'Yes No'].indexOf(inputType) > -1) {
	      return _react2.default.createElement(
	        'div',
	        null,
	        'This matrix type is not available for legacy form layout.'
	      );
	    }

	    var THs = [];
	    for (var coli = 0; coli < cols.length; coli++) {
	      var col = null;

	      var colText = cols[coli] && cols[coli].text || '';
	      if (this.props.inlineEditClass) {
	        col = _react2.default.createElement(this.props.inlineEditClass, {
	          id: this.props.id.value,
	          propPath: (isDynamic ? 'dcolumns' : 'mcolumns') + '|' + coli,
	          text: colText,
	          defaultValue: _QuestionProps2.default[this.props.type.value].mcolumns.value.split('|')[coli] || 'Type Here',
	          placeholder: 'Type Col Name',
	          sanitizeText: true,
	          allowBreakSpaces: true,
	          renderHtmlTags: true,
	          focusToElement: focusedColumnIndex === coli
	        });

	        var colAction = null;

	        if (this.props.manageMatrixOptions) {
	          if (this.props.inputType.value === 'Dynamic') {
	            colAction = _react2.default.createElement(this.props.manageMatrixOptions, {
	              qid: this.props.id.value,
	              label: '',
	              type: 'column',
	              operation: 'editContext',
	              optionIndex: coli
	            });
	          } else {
	            colAction = _react2.default.createElement(this.props.manageMatrixOptions, {
	              qid: this.props.id.value,
	              label: '×',
	              type: 'column',
	              operation: 'remove',
	              optionIndex: coli
	            });
	          }
	        }

	        var matrixCells = this.props.matrixcells.value ? this.props.matrixcells.value + 'px' : null;
	        THs.push(_react2.default.createElement(
	          'th',
	          { scope: 'col', key: coli, className: 'form-matrix-headers form-matrix-column-headers form-matrix-column_' + coli, style: { width: matrixCells, position: 'relative' } },
	          col,
	          colAction
	        ));
	      } else {
	        // col = cols[coli];
	        col = {
	          __html: '<label id="label_' + this.props.id.value + '_col_' + coli + '" >' + (0, _Utils.sanitize)(colText) + '</label>'
	        };
	        var _matrixCells = this.props.matrixcells.value ? this.props.matrixcells.value + 'px' : null;
	        THs.push(_react2.default.createElement('th', { scope: 'col', key: coli, className: 'form-matrix-headers form-matrix-column-headers form-matrix-column_' + coli, style: { width: _matrixCells }, dangerouslySetInnerHTML: col }));
	      }
	    }

	    if (this.props.manageMatrixOptions) {
	      var operation = this.props.inputType && this.props.inputType.value === 'Dynamic' ? 'addContext' : 'add';

	      var addCol = _react2.default.createElement(this.props.manageMatrixOptions, {
	        qid: this.props.id.value,
	        label: 'add column',
	        type: 'column',
	        operation: operation,
	        optionIndex: cols.length - 1
	      });
	      THs.push(_react2.default.createElement(
	        'th',
	        { style: { border: 'none' } },
	        addCol
	      ));
	    }

	    var mRows = this.props.mrows.value ? this.props.mrows.value.split('|') : [''];
	    var TRs = mRows.map(function (row, i) {
	      var columns = _this2.ColumnsArray.map(function (column, k) {
	        var calcValue = calcValues && calcValues[i] && calcValues[i][k] ? calcValues[i][k] : null;
	        return _react2.default.createElement(
	          'td',
	          { key: k, className: 'form-matrix-values' },
	          _this2.renderField(i, k, column, calcValue)
	        );
	      });

	      var rowRender = void 0;

	      if (_this2.props.inlineEditClass) {
	        rowRender = _react2.default.createElement(_this2.props.inlineEditClass, {
	          id: _this2.props.id.value,
	          propPath: 'mrows|' + i,
	          text: row || '',
	          defaultValue: _QuestionProps2.default[_this2.props.type.value].mrows.value.split('|')[i] || 'type here',
	          placeholder: 'Type Row Name',
	          focusToElement: focusedRowIndex === i,
	          allowBreakSpaces: true,
	          sanitizeText: true,
	          renderHtmlTags: true,
	          isArrayModeEnabled: true
	        });

	        var rowRemove = null;

	        if (_this2.props.manageMatrixOptions) {
	          rowRemove = _react2.default.createElement(_this2.props.manageMatrixOptions, {
	            qid: _this2.props.id.value,
	            label: '×',
	            type: 'row',
	            operation: 'remove',
	            optionIndex: i
	          });
	        }

	        return _react2.default.createElement(
	          'tr',
	          {
	            key: i,
	            className: 'form-matrix-tr form-matrix-value-tr',
	            role: 'group',
	            'aria-labelledby': 'label_' + _this2.props.id.value + ' label_' + _this2.props.id.value + '_row_' + i
	          },
	          _react2.default.createElement(
	            'th',
	            {
	              scope: 'row',
	              className: 'form-matrix-headers form-matrix-row-headers'
	            },
	            rowRender,
	            rowRemove
	          ),
	          columns
	        );
	      }
	      rowRender = { __html: '<label id="label_' + _this2.props.id.value + '_row_' + i + '" >' + (0, _Utils.sanitize)(row) + '</label>' };
	      return _react2.default.createElement(
	        'tr',
	        {
	          key: i,
	          className: 'form-matrix-tr form-matrix-value-tr',
	          role: 'group',
	          'aria-labelledby': 'label_' + _this2.props.id.value + ' label_' + _this2.props.id.value + '_row_' + i
	        },
	        _react2.default.createElement('th', {
	          scope: 'row',
	          className: 'form-matrix-headers form-matrix-row-headers', dangerouslySetInnerHTML: rowRender
	        }),
	        columns
	      );
	    });

	    if (this.props.manageMatrixOptions) {
	      var addRow = _react2.default.createElement(this.props.manageMatrixOptions, {
	        qid: this.props.id.value,
	        label: 'add row',
	        type: 'row',
	        operation: 'add',
	        optionIndex: mRows.length - 1
	      });
	      TRs.push(_react2.default.createElement(
	        'tr',
	        { style: { background: 'transparent' } },
	        _react2.default.createElement(
	          'th',
	          { style: { border: 'none' } },
	          addRow
	        )
	      ));
	    }

	    return _react2.default.createElement(
	      'table',
	      {
	        summary: '',
	        role: 'presentation',
	        cellPadding: '4',
	        cellSpacing: '0',
	        className: 'form-matrix-table',
	        style: {
	          width: this.props.matrixwidth.value ? this.props.matrixwidth.value + 'px' : null
	        },
	        'data-component': 'matrix'
	      },
	      _react2.default.createElement(
	        'tr',
	        { className: 'form-matrix-tr form-matrix-header-tr' },
	        _react2.default.createElement(
	          'th',
	          { className: 'form-matrix-th', style: { border: 'none' } },
	          '\xA0'
	        ),
	        THs
	      ),
	      TRs
	    );
	  };

	  _createClass(Matrix, [{
	    key: 'ColumnsArray',


	    /*
	      Returns columns as array
	      format: [
	        { text, type }
	      ]
	      uses dcolumns(js array) if inputType is Dynamic,
	      otherwise uses mcolumns(string separated by pipe (|))
	    */
	    get: function get() {
	      var inputType = this.props.inputType ? this.props.inputType.value : '';
	      if (inputType === 'Dynamic') {
	        var dcolumns = this.props.dcolumns && this.props.dcolumns.value || [];
	        if (typeof dcolumns === 'string') {
	          dcolumns = JSON.parse(dcolumns);
	        }
	        return dcolumns;
	      }
	      var mcols = this.props.mcolumns.value ? this.props.mcolumns.value.split('|') : [''];
	      // Format like Dynamic
	      return mcols.map(function (text) {
	        return { text: text, type: inputType };
	      });
	    }
	  }]);

	  return Matrix;
	}(_react.Component);

	exports.default = Matrix;


	Matrix.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  id: _propTypes2.default.shape(),
	  mcolumns: _propTypes2.default.shape(),
	  dcolumns: _propTypes2.default.shape(),
	  mrows: _propTypes2.default.shape(),
	  calcMatrixValues: _propTypes2.default.shape(),
	  matrixwidth: _propTypes2.default.shape(),
	  matrixcells: _propTypes2.default.shape(),
	  inputType: _propTypes2.default.shape(),
	  dropdown: _propTypes2.default.shape(),
	  manageMatrixOptions: _propTypes2.default.func,
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  focusedPosition: _propTypes2.default.shape({
	    mcolumns: _propTypes2.default.number,
	    mrows: _propTypes2.default.number
	  }),
	  required: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  step: _propTypes2.default.string
	};

	Matrix.getScript = function (props) {
	  var _script = '';
	  if (props.shuffleMatrix && props.shuffleMatrix.value === 'Yes') {
	    _script += 'JotForm.shuffleOptions("' + props.id.value + '");\n';
	  }
	  if (props.inputType && props.inputType.value === 'Dynamic') {
	    _script += 'JotForm.handleSingleChoiceWithMultiTypeColumns();\n';
	  }
	  return _script;
	};

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Dropdown = __webpack_require__(122);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Mixed = function (_Component) {
	  _inherits(Mixed, _Component);

	  function Mixed() {
	    _classCallCheck(this, Mixed);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Mixed.prototype.generateRows = function generateRows() {
	    var rows = [];

	    for (var i = 0; i < this.fields.length; i++) {
	      // const field = Object.assign({}, this.fields[i]);
	      var field = this.fields[i];
	      // field.isSelected = this.props.isSelectedQuestion && field.fieldID === this.props.selectedField;
	      var fieldRow = field.row - 1;

	      if (rows[fieldRow] === undefined) {
	        rows[fieldRow] = [];
	      }

	      rows[fieldRow].push(field);
	    }

	    for (var _i = 0; _i < rows.length; _i++) {
	      var row = rows[_i];

	      if (row.length === 2 && row[0].col > row[1].col) {
	        var tempRow = [row[1], row[0]];
	        rows[_i] = tempRow;
	      }
	    }

	    return rows;
	  };

	  Mixed.prototype.renderTextbox = function renderTextbox(f, colSize) {
	    // const placeholder = f.hint ? { value: f.hint } : null;
	    // const inputType = f.type === 'textbox' ? 'text' : f.type;

	    var className = (0, _Utils.addValidation)('form-textbox', this.props);
	    if (f.type === 'email') {
	      // const clonedProps = Object.assign({}, this.props, { validation: { value: 'Email' } });
	      var clonedProps = this.props;
	      clonedProps.validation = { value: 'Email' };
	      className = (0, _Utils.addValidation)('form-textbox', clonedProps);
	      className += ' forEmail';
	    }

	    className += ' js-forMixed';

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'subLabel',
	        labelValue: this.props.sublabels.value['field_' + f.fieldID],
	        'for': this.props.qid.value,
	        wrapAlways: true,
	        colSize: colSize
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        qid: this.props.qid.value,
	        qname: this.props.qname.value + '[field_' + f.fieldID + ']',
	        componentDataType: 'input-textbox',
	        type: 'text',
	        additionalClass: className,
	        dataComponent: 'textbox'
	      }))
	    );
	  };

	  Mixed.prototype.renderDropdown = function renderDropdown(f, colSize) {
	    // const selectProps = {
	    //   'data-component': 'mixed-dropdown',
	    //   defaultValue: '',
	    //   tabIndex: this.props.inlineEditClass ? -1 : null,
	    //   disabled: this.props.inlineEditClass,
	    //   required: this.props.required && this.props.required.value === 'Yes' ? 'required' : ''
	    // };

	    var options = f.options.split('\n');
	    options = options.join('|');

	    // options.unshift({
	    //   type: 'option',
	    //   text: '',
	    //   optProps: { value: '' },
	    //   customOptProps: { 'data-value': '' }
	    // });

	    // const isMultipleSelect = f.multipleSelection && f.multipleSelection === 'Yes';
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'subLabel',
	        labelValue: this.props.sublabels.value['field_' + f.fieldID],
	        'for': this.props.qid.value,
	        wrapAlways: true,
	        colSize: colSize
	      }),
	      _react2.default.createElement(_Dropdown2.default, {
	        id: this.props.id.value,
	        qid: this.props.qid,
	        qname: { value: this.props.qname.value + '[field_' + f.fieldID + ']' },
	        options: { value: options },
	        emptyText: '-',
	        colSize: colSize,
	        inlineEditClass: this.props.inlineEditClass,
	        subLabel: { value: this.props.sublabels.value['field_' + f.fieldID] },
	        propPath: 'sublabels.field_' + f.fieldID,
	        dataComponent: 'mixed-dropdown',
	        size: { value: '0' },
	        multipleSelections: { value: false },
	        visibleOptions: { value: 1 },
	        passive: false,
	        selected: { value: '' },
	        type: { value: 'control_dropdown' }
	      })
	    );
	  };

	  Mixed.prototype.renderRows = function renderRows() {
	    var _this2 = this;

	    var rows = this.generateRows();

	    return rows.map(function (row) {
	      var colSize = row.length;

	      var rowMarkup = row.map(function (r) {
	        if (['textbox', 'email', 'number'].indexOf(r.type) > -1) {
	          var textbox = _this2.renderTextbox(r, colSize);

	          // if (this.props.passive && this.props.isSelectedQuestion) {
	          //   const selectedControls = React.createElement(this.props.selectedControls, {
	          //     qid: this.props.id.value,
	          //     fieldID: r.fieldID,
	          //     rowIndex: index + 1,
	          //     fieldCount: row.length,
	          //     isSelected: r.isSelected
	          //   }, textbox);
	          //   return selectedControls;
	          // }

	          return textbox;
	        }

	        var dropdown = _this2.renderDropdown(r, colSize);

	        // if (this.props.passive && this.props.isSelectedQuestion) {
	        //   const selectedControls = React.createElement(this.props.selectedControls, {
	        //     qid: this.props.id.value,
	        //     rowIndex: index + 1,
	        //     fieldID: r.fieldID,
	        //     fieldCount: row.length,
	        //     isSelected: r.isSelected
	        //   }, dropdown);
	        //   return selectedControls;
	        // }
	        return dropdown;
	      });

	      // if (colSize === 1 && (this.props.addField && this.props.isSelectedQuestion)) {
	      //   const addFieldButton = React.createElement(this.props.addField, {
	      //     qid: this.props.id.value,
	      //     type: 'col',
	      //     rowIndex: index + 1,
	      //     fieldID: row[0].fieldID
	      //   });

	      //   rowMarkup.push(addFieldButton);
	      // }
	      return rowMarkup;
	    });
	  };

	  Mixed.prototype.render = function render() {
	    var rows = this.renderRows();

	    return _react2.default.createElement(
	      'div',
	      { 'data-react-wrapper': 'true' },
	      rows
	    );
	    // const className = addValidation('form-textbox', this.props);
	    // const inputTextMask = this.props.inputTextMask && this.props.inputTextMask.value.length > 0;
	    // const hasInputMask = inputTextMask && this.props.inlineEditClass;
	    // const maskVal = inputTextMask ? 'true' : null;
	    // const hasDefaultValue = this.props.defaultValue && this.props.defaultValue.value.length > 0;
	    // let textVal = hasInputMask ? this.props.inputTextMask.value : '';
	    // textVal = hasDefaultValue ? this.props.defaultValue.value : textVal;
	    // const tempDefaultValue = {};
	    // if (textVal !== '') {
	    //   tempDefaultValue.value = textVal;
	    // }

	    // return (
	    //   <SubLabel
	    //     {...this.props}
	    //     propPath="subLabel"
	    //     labelValue={this.props.subLabel && this.props.subLabel.value !== '' ? this.props.subLabel.value : null}
	    //     for={this.props.qid.value}
	    //     defaultValue={QuestionProps[this.props.type.value].subLabel.value}
	    //   >
	    //     <BaseInput
	    //       {...this.props}
	    //       qid={this.props.qid.value}
	    //       qname={this.props.qname.value}
	    //       componentDataType="input-textbox"
	    //       type="text"
	    //       masked={maskVal}
	    //       defaultValue={tempDefaultValue}
	    //       additionalClass={className}
	    //       dataComponent="textbox"
	    //     />
	    //     {hasInputMask && hasDefaultValue && this.props.inlineEditClass ? <br /> : null}
	    //     {hasInputMask && hasDefaultValue && this.props.inlineEditClass ? this.renderInputMaskWarning() : null}
	    //   </SubLabel>
	    // );
	  };

	  _createClass(Mixed, [{
	    key: 'fields',
	    get: function get() {
	      // Handling revision history props
	      return typeof this.props.fields.value === 'string' ? JSON.parse(this.props.fields.value) : this.props.fields.value;
	    }
	  }]);

	  return Mixed;
	}(_react.Component);

	exports.default = Mixed;


	Mixed.propTypes = {
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  hasInputMask: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inputTextMask: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  confirmationHint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  fields: _propTypes2.default.shape(),
	  sublabels: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	var _MollieApmLists = __webpack_require__(432);

	var _MollieApmLists2 = _interopRequireDefault(_MollieApmLists);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Mollie = function (_Component) {
	  _inherits(Mollie, _Component);

	  function Mollie(props) {
	    _classCallCheck(this, Mollie);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	    _this.state = {
	      apmFetchStatus: 'not_fetched',
	      mollieAPM: [],
	      mollieAPMList: [],
	      isCreditCardFieldExist: false
	    };
	    return _this;
	  }

	  Mollie.prototype.componentDidMount = function componentDidMount() {
	    if (this.state.apmFetchStatus === 'not_fetched') {
	      this.fetchApmLists();
	    }
	  };

	  Mollie.prototype.componentDidUpdate = function componentDidUpdate(preProps) {
	    if (preProps.currency.value !== this.props.currency.value || preProps.sandbox.value !== this.props.sandbox.value || preProps.profileId.value !== this.props.profileId.value || preProps.paymentType.value !== this.props.paymentType.value) {
	      this.fetchApmLists();
	    }
	  };

	  // Utils


	  Mollie.prototype.getAPMList = function getAPMList(response) {
	    var apmList = this.parseJSON(response.content);
	    var creditCard = apmList.find(function (element) {
	      return element.id === 'creditcard';
	    });
	    if (typeof creditCard !== 'undefined') {
	      creditCard = Object.assign({}, creditCard);
	      apmList = apmList.filter(function (element) {
	        return element.id !== 'creditcard';
	      });
	      apmList.unshift(creditCard);
	    }

	    return apmList;
	  };

	  Mollie.prototype.isCreditCardExistsOnMollieAPMList = function isCreditCardExistsOnMollieAPMList(mollieAPMList) {
	    var creditCardField = mollieAPMList.find(function (element) {
	      return element.id === 'creditcard';
	    });
	    return typeof creditCardField === 'undefined' ? false : true;
	  };

	  Mollie.prototype.parseJSON = function parseJSON(content) {
	    return typeof content === 'string' ? JSON.parse(content) : content;
	  };

	  Mollie.prototype.fetchApmLists = function fetchApmLists() {
	    var _this2 = this;

	    var _props = this.props,
	        currency = _props.currency,
	        sandbox = _props.sandbox,
	        profileId = _props.profileId,
	        paymentType = _props.paymentType;


	    if (!profileId || profileId && !profileId.value) {
	      return;
	    }

	    this.setState({
	      apmFetchStatus: 'fetching'
	    }, function () {
	      //eslint-disable-next-line
	      var formdata = new FormData();
	      formdata.append('currency', currency.value);
	      formdata.append('sandbox', sandbox.value);
	      formdata.append('profileId', profileId.value);
	      formdata.append('paymentType', paymentType.value);

	      global.fetch('/API/payment/mollie/getapm/' + global.__formInfo.id, {
	        method: 'post',
	        body: formdata
	      }).then(function (resp) {
	        return resp.json();
	      }).then(function (response) {
	        if (response.responseCode === 200) {
	          _this2.setState({
	            mollieAPMList: _this2.getAPMList(response),
	            apmFetchStatus: 'fetched',
	            isCreditCardFieldExist: _this2.isCreditCardExistsOnMollieAPMList(_this2.parseJSON(response.content))
	          });
	        } else {
	          _this2.setState({
	            apmFetchStatus: 'failed'
	          });
	        }
	      }).catch(function () {
	        _this2.setState({
	          apmFetchStatus: 'failed'
	        });
	      });
	    });
	  };

	  Mollie.prototype.render = function render() {
	    var _state = this.state,
	        apmFetchStatus = _state.apmFetchStatus,
	        mollieAPM = _state.mollieAPM,
	        mollieAPMList = _state.mollieAPMList,
	        isCreditCardFieldExist = _state.isCreditCardFieldExist;


	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }

	    return _react2.default.createElement(
	      'div',
	      {
	        'data-wrapper-react': 'true',
	        id: 'mollie-payment-wrapper',
	        className: 'mollie-payment-wrapper',
	        'data-sandbox': this.props.sandbox && this.props.sandbox.value,
	        'data-mollie-currency': this.props.currency && this.props.currency.value
	      },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_mollie'
	      })),
	      _react2.default.createElement(
	        'span',
	        { style: { display: 'none' } },
	        _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, {
	          isCreditCardFieldExist: isCreditCardFieldExist,
	          controlPaymentType: 'control_mollie'
	        }))
	      ),
	      apmFetchStatus !== 'failed' && mollieAPMList.length > 0 && _react2.default.createElement(
	        'h4',
	        null,
	        'Payment Methods'
	      ),
	      _react2.default.createElement(_MollieApmLists2.default, _extends({}, this.props, {
	        apmFetchStatus: apmFetchStatus,
	        mollieAPM: mollieAPM,
	        mollieAPMList: mollieAPMList,
	        isCreditCardFieldExist: isCreditCardFieldExist,
	        controlPaymentType: 'control_mollie'
	      }))
	    );
	  };

	  return Mollie;
	}(_react.Component);

	exports.default = Mollie;


	Mollie.propTypes = {
	  currency: _propTypes2.default.oneOfType([_propTypes2.default.object]),
	  paymentType: _propTypes2.default.oneOfType([_propTypes2.default.object]),
	  sandbox: _propTypes2.default.oneOfType([_propTypes2.default.object]),
	  profileId: _propTypes2.default.oneOfType([_propTypes2.default.object])
	};

	Mollie.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Mollie.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Mollie.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document window */


	var MollieAPMLists = function (_Component) {
	  _inherits(MollieAPMLists, _Component);

	  function MollieAPMLists(props) {
	    _classCallCheck(this, MollieAPMLists);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	    _this.renderAPMLists = _this.renderAPMLists.bind(_this);

	    // this.state = {
	    //   selectedAPM: null
	    // }
	    return _this;
	  }

	  // componentWillReceiveProps(nextProps) {
	  //   // const checkArr = ['currency', 'sandbox', 'profileId'];
	  //   // if (this.checkProps.call(this, checkArr, nextProps)) {
	  //   //   this.fetchApmLists(nextProps);
	  //   // }
	  // }

	  // shouldComponentUpdate(nextProps, nextState) {
	  //   const checkArr = [
	  //     'merchantId', 'sandbox', 'currency', 'showSPB', 'showCardFields', 'authOnly', 'paymentType',
	  //     'styleColor', 'styleLabel', 'styleLayout', 'styleShape', 'styleSize',
	  //     'payLaterEnabled', 'payLaterLayout', 'payLaterLogoType', 'payLaterLogoPosition', 'payLaterTextColor', 'payLaterTextSize', 'payLaterBackgroundColor', 'payLaterRatio'
	  //   ];

	  //   if (this.checkProps.call(this, checkArr, nextProps)) {
	  //     return true;
	  //   }

	  //   if (JSON.stringify(this.state) !== JSON.stringify(nextState)) {
	  //     return true;
	  //   }

	  //   return false;
	  // }

	  MollieAPMLists.prototype.checkProps = function checkProps(checkArr, nextProps) {
	    var _this2 = this;

	    var isChanged = [];

	    checkArr.forEach(function (prop) {
	      if (!_this2.props[prop] && nextProps[prop] || _this2.props[prop] && nextProps[prop].value !== _this2.props[prop].value) {
	        isChanged.push(true);
	      } else {
	        isChanged.push(false);
	      }
	    });

	    return isChanged.find(function (p) {
	      return p === true;
	    });
	  };

	  // fetchApmLists(nextProps) {
	  //   let { currency, sandbox, profileId } = this.props;
	  //   if (nextProps) {
	  //     currency = nextProps.currency;
	  //     sandbox = nextProps.sandbox;
	  //     profileId = nextProps.profileId;
	  //   }

	  //   if (!profileId || (profileId && !profileId.value)) { return; }

	  //   this.setState({
	  //     apmFetchStatus: 'fetching'
	  //   }, () => {
	  //     //eslint-disable-next-line
	  //     const formdata = new FormData();
	  //     formdata.append('currency', currency.value);
	  //     formdata.append('sandbox', sandbox.value);
	  //     formdata.append('profileId', profileId.value);

	  //     global.fetch(`/API/payment/mollie/getapm/${global.__formInfo.id}`, {
	  //       method: 'post',
	  //       body: formdata
	  //     })
	  //     .then(resp => resp.json())
	  //     .then((response) => {
	  //       if (response.responseCode !== 200) {
	  //         // TODO: What should we do ?
	  //         console.log('RESPONSE:', response.message);
	  //       } else {
	  //         this.setState({
	  //           mollieAPMList: typeof response.content === 'string' ? JSON.parse(response.content) : response.content,
	  //           apmFetchStatus: 'fetched'
	  //         });
	  //       }
	  //     })
	  //     .catch(err => console.error(err));
	  //   });
	  // }

	  MollieAPMLists.prototype.renderAPMLists = function renderAPMLists() {
	    var mollieAPMList = this.props.mollieAPMList;

	    if (!Array.isArray(mollieAPMList) || mollieAPMList.length === 0) return null;
	    var apmDOM = [];

	    mollieAPMList.forEach(function (m) {
	      var apmName = m.id;
	      switch (apmName) {
	        case 'ideal':
	          apmName = 'iDEAL';
	          break;
	        case 'applepay':
	          apmName = 'Apple Pay';
	          break;
	        case 'banktransfer':
	          apmName = 'Bank Transfer';
	          break;
	        case 'paypal':
	          apmName = 'PayPal';
	          break;
	        case 'klarnapaylater':
	          apmName = 'Klarna: Pay Later';
	          break;
	        case 'klarnasliceit':
	          apmName = 'Klarna: Slice It';
	          break;
	        case 'creditcard':
	          apmName = 'Credit Card';
	          break;
	        case 'belfius':
	          apmName = 'Belfius Pay Button';
	          break;
	        case 'kbc':
	          apmName = 'KBC/CBC Payment Button';
	          break;
	        case 'giftcard':
	          apmName = 'Gift Cards';
	          break;
	        case 'eps':
	          apmName = 'EPS';
	          break;
	        default:
	          apmName = apmName && apmName[0].toUpperCase() + apmName.slice(1);
	          break;
	      }

	      apmDOM.push(_react2.default.createElement(
	        'div',
	        { id: 'mollieAPM', className: 'payment-method-container', style: { marginBottom: '5px', border: '1px solid #eee', padding: '10px' }, 'data-id': m.id },
	        _react2.default.createElement('img', { src: m.image }),
	        _react2.default.createElement('input', {
	          key: m.id,
	          className: 'form-radio',
	          type: 'radio',
	          name: 'mollie-payment-method',
	          'data-id': m.id,
	          id: m.id,
	          value: m.id
	        }),
	        _react2.default.createElement(
	          'label',
	          { htmlFor: m.id },
	          apmName
	        )
	      ));
	    });

	    return apmDOM;
	  };

	  // onAPMListChanged(apm) {
	  //   this.setState({
	  //     selectedAPM: apm.currentTarget.value
	  //   });
	  // }

	  MollieAPMLists.prototype.renderFetchStatusError = function renderFetchStatusError() {
	    return _react2.default.createElement(
	      'div',
	      { className: 'payment_alert high' },
	      'No payment method matches the selected Mode, Profile, Currency, and Payment Type. Please check the Mollie Dashboard and/or the API documentation for available payment methods and '.locale(),
	      _react2.default.createElement(
	        'a',
	        {
	          style: { textDecoration: 'underline', cursor: 'pointer' },
	          target: '_blank',
	          rel: 'noopener noreferrer',
	          href: 'https://docs.mollie.com/payments/multicurrency'
	        },
	        'currencies'.locale()
	      ),
	      '.'
	    );
	  };

	  MollieAPMLists.prototype.render = function render() {
	    var apmFetchStatus = this.props.apmFetchStatus;

	    var isBuilder = typeof window !== 'undefined';
	    // console.log(this.props);
	    return _react2.default.createElement(
	      'div',
	      { className: 'mollie-apm', id: 'mollie-apm', style: { marginTop: '30px' } },
	      _react2.default.createElement(
	        'div',
	        { className: 'mollie-apm-list', id: 'mollie-apm-list', style: { marginTop: '13px' } },
	        isBuilder && apmFetchStatus === 'failed' && this.renderFetchStatusError(),
	        isBuilder && apmFetchStatus === 'fetched' && this.renderAPMLists()
	      )
	    );
	  };

	  return MollieAPMLists;
	}(_react.Component);

	exports.default = MollieAPMLists;


	MollieAPMLists.propTypes = {
	  currency: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  sandbox: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  profileId: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  apmFetchStatus: _propTypes2.default.string,
	  mollieAPMList: _propTypes2.default.oneOfType([_propTypes2.default.object])
	};

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Moneris = function (_Component) {
	  _inherits(Moneris, _Component);

	  function Moneris() {
	    _classCallCheck(this, Moneris);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Moneris.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_moneris' }));
	    // const paymentCreditCardAndAddress = null;
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_moneris'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Moneris;
	}(_react.Component);

	exports.default = Moneris;


	Moneris.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Moneris.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Moneris.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 434 */,
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var NumberField = function (_Component) {
	  _inherits(NumberField, _Component);

	  function NumberField() {
	    _classCallCheck(this, NumberField);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  NumberField.prototype.render = function render() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    var additionalClass = ' form-number-input ' + className;

	    var style = this.props.size && this.props.size.value ? { width: 20 + this.props.size.value * 8 + 'px' } : null;
	    if (this.props.themeVersion && this.props.themeVersion === 'v2' && this.props.size && this.props.size.value) {
	      style = { width: this.props.size.value + 'px' };
	    }
	    var minValue = null;
	    var maxValue = null;
	    var dataType = null;
	    if (this.props.minValue || this.props.maxValue) {
	      minValue = this.props.minValue.value && !(0, _Utils.strip)(this.props.minValue.value) !== '' ? this.props.minValue.value : null;
	      maxValue = this.props.maxValue.value && !(0, _Utils.strip)(this.props.maxValue.value) !== '' ? this.props.maxValue.value : null;
	      dataType = 'input-number';
	    }
	    var qidValue = this.props.qid.value;

	    var subLabelObj = (0, _Utils.subLabelSingle)(this.props, qidValue);
	    var step = this.props.step ? this.props.step : 'any';
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'subLabel',
	        labelValue: subLabelObj,
	        'for': qidValue,
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        qid: qidValue,
	        qname: this.props.qname.value,
	        type: 'number',
	        additionalClass: additionalClass,
	        style: style,
	        componentDataType: dataType,
	        dataNumberMin: minValue,
	        dataNumberMax: maxValue,
	        dataComponent: 'number',
	        minValue: null,
	        maxValue: null,
	        step: step,
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, subLabelObj)
	      }))
	    );
	  };

	  return NumberField;
	}(_react.Component);

	exports.default = NumberField;


	NumberField.getState = function () {
	  return {};
	};

	NumberField.propTypes = {
	  size: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  minValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  maxValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape(),
	  step: _propTypes2.default.string,
	  themeVersion: _propTypes2.default.string
	};

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Onebip = function (_Component) {
	  _inherits(Onebip, _Component);

	  function Onebip() {
	    _classCallCheck(this, Onebip);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Onebip.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_onebip'
	    }));
	  };

	  return Onebip;
	}(_react.Component);

	exports.default = Onebip;


	Onebip.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Onebip.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Onebip.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Pagseguro = function (_Component) {
	  _inherits(Pagseguro, _Component);

	  function Pagseguro() {
	    _classCallCheck(this, Pagseguro);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Pagseguro.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_pagseguro' }));
	    // const paymentCreditCardAndAddress = null;
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_pagseguro'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Pagseguro;
	}(_react.Component);

	exports.default = Pagseguro;


	Pagseguro.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Pagseguro.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Pagseguro.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PasswordBox = function (_Component) {
	  _inherits(PasswordBox, _Component);

	  function PasswordBox() {
	    _classCallCheck(this, PasswordBox);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  PasswordBox.prototype.render = function render() {
	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);

	    return _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	      qid: this.props.qid.value,
	      qname: this.props.qname.value,
	      additionalClass: className,
	      type: 'password',
	      dataComponent: 'passwordBox',
	      readOnly: this.props.readOnly,
	      size: this.props.size,
	      defaultValue: this.props.defaultValue,
	      maxsize: this.props.maxsize
	    }));
	  };

	  return PasswordBox;
	}(_react.Component);

	exports.default = PasswordBox;


	PasswordBox.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  size: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  maxsize: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  description: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  readOnly: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Payjunction = function (_Component) {
	  _inherits(Payjunction, _Component);

	  function Payjunction() {
	    _classCallCheck(this, Payjunction);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Payjunction.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_payjunction' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_payjunction'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Payjunction;
	}(_react.Component);

	exports.default = Payjunction;


	Payjunction.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Payjunction.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Payjunction.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Payment = function (_Component) {
	  _inherits(Payment, _Component);

	  function Payment() {
	    _classCallCheck(this, Payment);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Payment.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_payment'
	    }));
	  };

	  return Payment;
	}(_react.Component);

	exports.default = Payment;


	Payment.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Payment.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Payment.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 441 */,
/* 442 */,
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _PaypalCommercePlatform = __webpack_require__(444);

	var _PaypalCommercePlatform2 = _interopRequireDefault(_PaypalCommercePlatform);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document window */


	var PaymentMethods = function (_Component) {
	  _inherits(PaymentMethods, _Component);

	  function PaymentMethods(props) {
	    _classCallCheck(this, PaymentMethods);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	    _this.checkRenderStatus = _this.checkRenderStatus.bind(_this);
	    _this.renderPaymentMethods = _this.renderPaymentMethods.bind(_this);
	    return _this;
	  }

	  PaymentMethods.prototype.checkRenderStatus = function checkRenderStatus() {
	    if (typeof window !== 'undefined') return true;
	    var opts = this.props.formProperties.products || false;
	    var payment = this.props.activePaymentQuestion;
	    if (!payment.inlineEditClass && payment.paymentType.value !== 'donation' && (opts === false || opts.length === 0)) {
	      return false;
	    }
	    return true;
	  };

	  PaymentMethods.prototype.renderPPCP = function renderPPCP() {
	    var _props = this.props,
	        activePaymentQuestion = _props.activePaymentQuestion,
	        order = _props.order;

	    if (!activePaymentQuestion) return null;
	    return _react2.default.createElement(_PaypalCommercePlatform2.default, _extends({}, activePaymentQuestion, { pmOrder: order }));
	  };

	  PaymentMethods.prototype.renderPaymentMethods = function renderPaymentMethods() {
	    if (!this.props.paymentFieldType) {
	      return null;
	    }
	    var rendered = null;

	    switch (this.props.paymentFieldType.value) {
	      case 'control_paypalcomplete':
	        rendered = this.renderPPCP();
	        break;
	      default:
	        rendered = _react2.default.createElement(
	          'div',
	          null,
	          ' Payment methods preparing... '
	        );
	        break;
	    }

	    return rendered;
	  };

	  PaymentMethods.prototype.render = function render() {
	    if (!this.checkRenderStatus()) {
	      PaymentMethods.staticVars.hidden = true;
	      return null;
	    }

	    return _react2.default.createElement(
	      'div',
	      { className: 'payment-methods-area' },
	      this.renderPaymentMethods(),
	      _react2.default.createElement(_BaseInput2.default, {
	        type: 'hidden',
	        qname: this.props.qname.value + '[payment_method]',
	        qid: this.props.qid.value + '_payment_method',
	        size: { value: '0' },
	        dataComponent: 'payment_method',
	        inlineEditClass: false
	      })
	    );
	  };

	  return PaymentMethods;
	}(_react.Component);

	exports.default = PaymentMethods;


	PaymentMethods.propTypes = {
	  activePaymentQuestion: _propTypes2.default.shape({}),
	  paymentFieldType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  formProperties: _propTypes2.default.shape({
	    products: _propTypes2.default.array
	  }),
	  order: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	PaymentMethods.staticVars = {};

	PaymentMethods.getHidden = function () {
	  return PaymentMethods.staticVars.hidden;
	};

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(424);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	var _PaypalMessages = __webpack_require__(445);

	var _PaypalMessages2 = _interopRequireDefault(_PaypalMessages);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document window */


	var styleSizes = { small: 25, medium: 48, large: 55 };

	var PaypalCommercePlatform = function (_Component) {
	  _inherits(PaypalCommercePlatform, _Component);

	  function PaypalCommercePlatform(props) {
	    _classCallCheck(this, PaypalCommercePlatform);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	    _this.loadPaypalSPBScript = _this.loadPaypalSPBScript.bind(_this);
	    _this.renderPaypalSPB = _this.renderPaypalSPB.bind(_this);
	    _this.paypalSwitchHandler = _this.paypalSwitchHandler.bind(_this);

	    _this.state = {
	      paymentMethodType: '',
	      scriptLoaded: false
	    };
	    return _this;
	  }

	  PaypalCommercePlatform.prototype.componentDidMount = function componentDidMount() {
	    this.loadPaypalSPBScript(false);
	  };

	  PaypalCommercePlatform.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var checkArr = ['merchantId', 'sandbox', 'currency', 'authOnly', 'payLaterEnabled'];
	    if (this.checkProps.call(this, checkArr, nextProps)) {
	      this.loadPaypalSPBScript(nextProps);
	    }
	  };

	  PaypalCommercePlatform.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
	    var checkArr = ['merchantId', 'sandbox', 'currency', 'showSPB', 'showCardFields', 'authOnly', 'paymentType', 'styleColor', 'styleLabel', 'styleLayout', 'styleShape', 'styleSize', 'payLaterEnabled', 'payLaterLayout', 'payLaterLogoType', 'payLaterLogoPosition', 'payLaterTextColor', 'payLaterTextSize', 'payLaterBackgroundColor', 'payLaterRatio'];

	    if (this.checkProps.call(this, checkArr, nextProps)) {
	      return true;
	    }

	    if (JSON.stringify(this.state) !== JSON.stringify(nextState)) {
	      return true;
	    }

	    return false;
	  };

	  PaypalCommercePlatform.prototype.componentWillUnmount = function componentWillUnmount() {
	    try {
	      if (global.paypalSDK) {
	        global.paypalSDK.__internal_destroy__();
	      }
	    } catch (error) {
	      global.console.error('Error occured on PayPal', error);
	    }
	  };

	  PaypalCommercePlatform.prototype.checkProps = function checkProps(checkArr, nextProps) {
	    var _this2 = this;

	    var isChanged = [];

	    checkArr.forEach(function (prop) {
	      if (!_this2.props[prop] && nextProps[prop] || _this2.props[prop] && nextProps[prop].value !== _this2.props[prop].value) {
	        isChanged.push(true);
	      } else {
	        isChanged.push(false);
	      }
	    });

	    return isChanged.find(function (p) {
	      return p === true;
	    });
	  };

	  PaypalCommercePlatform.prototype.paypalSwitchHandler = function paypalSwitchHandler(event) {
	    var pmType = event.target.getAttribute('data-id') ? event.target.getAttribute('data-id') : event.target.parentNode.getAttribute('data-id');

	    this.setState({
	      paymentMethodType: pmType
	    });
	  };

	  PaypalCommercePlatform.prototype.loadPaypalSPBScript = function loadPaypalSPBScript(nextProps) {
	    var _this3 = this;

	    var _props = this.props,
	        sandbox = _props.sandbox,
	        merchantId = _props.merchantId,
	        currency = _props.currency,
	        authOnly = _props.authOnly,
	        payLaterEnabled = _props.payLaterEnabled;


	    if (global.paypalSDK) {
	      global.paypalSDK.__internal_destroy__();
	    }

	    // Load the script again by next props.
	    if (nextProps) {
	      merchantId = nextProps.merchantId;
	      sandbox = nextProps.sandbox;
	      currency = nextProps.currency;
	      authOnly = nextProps.authOnly;
	      payLaterEnabled = nextProps.payLaterEnabled;
	    }

	    var clientId = sandbox.value === 'enabled' ? 'AbO4nZJsmfTgf8GbpnV-AY4382evohAYeDcuwqoAvvrKDDN_qOYa3K5biPFub70U40iPcpl0wtwkkMp2' : 'Afo1LVZtoaCSq5HI_naZpUMjB2C0_OiB6nNHlGaNe7jwBTunPXnbodmCr4ZTtpL3WT-4RkNG6DQFvX03';

	    var options = '\n      components=' + (payLaterEnabled.value === 'Yes' ? 'buttons,messages' : 'buttons') + '\n      &client-id=' + clientId + '\n      &commit=true\n      &intent=' + (authOnly && authOnly.value === 'Yes' ? 'authorize' : 'capture') + '\n      ' + (merchantId && merchantId.value ? '&merchant-id=' + merchantId.value : '') + '\n      ' + (currency && currency.value ? '&currency=' + currency.value : '') + '\n      &disable-funding=card\n    ';

	    // Remove loaded scripts.
	    var addedPaypalScript = document.querySelector('.paypalScript');
	    if (addedPaypalScript) addedPaypalScript.remove();

	    var script = document.createElement('script');
	    script.src = 'https://www.paypal.com/sdk/js?' + options.replace(/\s/g, '');
	    script.async = true;
	    script.className = 'paypalScript';
	    script.setAttribute('data-namespace', 'paypalSDK');
	    document.body.appendChild(script);

	    script.onload = function () {
	      _this3.setState({
	        scriptLoaded: true
	      }, function () {
	        _this3.setState({
	          scriptLoaded: false
	        });

	        // Notice:: The dom does not exist in React Virtual DOM.
	        if (payLaterEnabled && payLaterEnabled.value === 'Yes' && typeof window !== 'undefined') {
	          var iframe = global.document.querySelector('.paypal-paylater-messages iframe');
	          if (!iframe) {
	            return;
	          }
	          if (iframe.style.opacity === '0' || iframe.style.pointerEvents === 'none') {
	            iframe.style.setProperty('opacity', '1', 'important');
	            iframe.style.setProperty('pointer-events', 'unset', 'important');
	          }
	        }
	      });
	    };
	  };

	  PaypalCommercePlatform.prototype.renderPaypalSPB = function renderPaypalSPB() {
	    try {
	      var _props2 = this.props,
	          styleColor = _props2.styleColor,
	          styleLabel = _props2.styleLabel,
	          styleLayout = _props2.styleLayout,
	          styleShape = _props2.styleShape,
	          styleSize = _props2.styleSize;


	      if (global.paypalSDK && global.paypalSDK.Buttons) {
	        var onAuthorize = function onAuthorize() {
	          global.alert('Smart payment buttons demo');
	          return;
	        };

	        var onError = function onError(err) {
	          global.console.error('Error Occurred:', err);
	          return;
	        };

	        var style = {
	          color: styleColor && styleColor.value || 'gold',
	          label: styleLabel && styleLabel.value || 'checkout',
	          layout: styleLayout && styleLayout.value || 'vertical',
	          shape: styleShape && styleShape.value || 'rect',
	          height: styleSize && styleSize.value ? styleSizes[styleSize.value] : 48
	        };

	        var PayPalButton = global.paypalSDK.Buttons.driver('react', { React: _react2.default, ReactDOM: _reactDom2.default });

	        return _react2.default.createElement(PayPalButton, {
	          key: String(Math.random()),
	          createOrder: onAuthorize,
	          onError: onError,
	          style: style
	        });
	      }
	    } catch (err) {
	      console.err('Error Occurred', err);
	    }
	  };

	  PaypalCommercePlatform.prototype.render = function render() {
	    var paymentMethodType = this.state.paymentMethodType;

	    var showSPB = this.props.showSPB && this.props.showSPB.value !== 'No' || !this.props.showSPB;
	    var showCardFields = this.props.showCardFields && this.props.showCardFields.value !== 'No' || !this.props.showCardFields;
	    var hideToggleArea = !(showSPB && showCardFields);

	    if (showSPB && !showCardFields) {
	      paymentMethodType = 'paypal-smart-buttons';
	    } else if (!showSPB && showCardFields) {
	      paymentMethodType = 'paypal-card-fields';
	    }

	    var rndNumber = 0;

	    if (this.state.scriptLoaded) {
	      rndNumber = Math.random();
	    }

	    return _react2.default.createElement(
	      'div',
	      {
	        'data-wrapper-react': 'true',
	        className: 'paypalcomplete-payment-wrapper',
	        'data-sandbox': this.props.sandbox && this.props.sandbox.value,
	        'data-currency': this.props.currency && this.props.currency.value,
	        'data-merchantid': this.props.merchantId && this.props.merchantId.value,
	        'data-billing-address': this.props.billToAddress && this.props.billToAddress.value,
	        'data-auth-only': this.props.authOnly && this.props.authOnly.value,
	        'data-show-spb': showSPB,
	        'data-show-card-fields': showCardFields
	      },
	      _react2.default.createElement(
	        'div',
	        { id: 'paypal-commerce-platform-container' },
	        _react2.default.createElement(
	          'div',
	          { className: 'paypal-toggle-buttons', hidden: hideToggleArea },
	          _react2.default.createElement(
	            'div',
	            { className: 'paypal-toggle' },
	            _react2.default.createElement(
	              'div',
	              { id: 'paypal-card-fields' },
	              _react2.default.createElement(
	                'div',
	                { className: 'payment-method-container', 'data-id': 'paypal-card-fields', onClick: this.paypalSwitchHandler },
	                _react2.default.createElement('input', {
	                  className: 'form-radio', type: 'radio', name: 'paypal-payment-method', 'data-id': 'paypal-card-fields',
	                  id: 'paypal-card-fields-input', checked: paymentMethodType === 'paypal-card-fields'
	                }),
	                _react2.default.createElement(
	                  'label',
	                  { htmlFor: 'paypal-card-fields-input' },
	                  _react2.default.createElement('span', { className: 'CC_ico' }),
	                  'Debit or Credit Card'
	                )
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { id: 'paypal-smart-buttons' },
	              _react2.default.createElement(
	                'div',
	                { className: 'payment-method-container', 'data-id': 'paypal-smart-buttons', onClick: this.paypalSwitchHandler },
	                _react2.default.createElement('input', {
	                  className: 'form-radio', type: 'radio', name: 'paypal-payment-method', 'data-id': 'paypal-smart-buttons',
	                  id: 'paypal-smart-buttons-input', checked: paymentMethodType === 'paypal-smart-buttons'
	                }),
	                _react2.default.createElement('label', { htmlFor: 'paypal-smart-buttons-input' })
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'paypal-toggle-content ' + (hideToggleArea ? 'single-payment-method' : ''), 'render-paypal-type': paymentMethodType },
	          _react2.default.createElement(
	            'div',
	            { className: 'content-area' },
	            _react2.default.createElement(
	              'div',
	              { id: 'paypal-credit-card-fields' },
	              _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, {
	                controlPaymentType: 'control_paypalcomplete'
	              }))
	            ),
	            _react2.default.createElement(
	              'div',
	              { id: 'paypal-spb-area' },
	              _react2.default.createElement(
	                'p',
	                null,
	                'Please click one of the PayPal options to complete payment and ',
	                _react2.default.createElement(
	                  'b',
	                  null,
	                  'submit'
	                ),
	                ' the form.'
	              ),
	              _react2.default.createElement(
	                'div',
	                { id: 'paypal-button-container', style: { pointerEvents: typeof window !== 'undefined' ? 'none' : '' } },
	                global.paypalSDK && global.paypalSDK.Buttons && this.renderPaypalSPB()
	              )
	            )
	          ),
	          _react2.default.createElement(_PaypalMessages2.default, _extends({}, this.props, { showMessage: { value: paymentMethodType !== 'paypal-card-fields' ? 'Yes' : 'No' }, key: rndNumber, loadPaypalSPBScript: this.loadPaypalSPBScript }))
	        )
	      )
	    );
	  };

	  return PaypalCommercePlatform;
	}(_react.Component);

	exports.default = PaypalCommercePlatform;


	PaypalCommercePlatform.propTypes = {
	  currency: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paymentType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  sandbox: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  merchantId: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  billToAddress: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  authOnly: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  showSPB: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  showCardFields: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  styleColor: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  styleLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  styleLayout: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  styleShape: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  styleHeight: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  styleSize: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterEnabled: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document window */


	var PaypalMessages = function (_Component) {
	  _inherits(PaypalMessages, _Component);

	  function PaypalMessages() {
	    _classCallCheck(this, PaypalMessages);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  PaypalMessages.prototype.componentDidMount = function componentDidMount() {
	    if (typeof window !== 'undefined') {
	      this.handlePaymentMessagesByScript();

	      setTimeout(this.checkVisiblity, 1000);
	      setTimeout(this.checkVisiblity, 2000);
	      setTimeout(this.checkVisiblity, 4000);
	    }
	  };

	  PaypalMessages.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var _props = this.props,
	        payLaterLayout = _props.payLaterLayout,
	        paypalButton = _props.paypalButton;

	    if (nextProps.payLaterLayout && payLaterLayout && nextProps.payLaterLayout.value !== payLaterLayout.value && nextProps.payLaterLayout.value === 'text' && !paypalButton) {
	      this.props.loadPaypalSPBScript();
	    }

	    var checkArr = ['payLaterEnabled', 'payLaterLayout', 'payLaterLogoType', 'payLaterLogoPosition', 'payLaterTextColor', 'payLaterTextSize', 'payLaterBackgroundColor', 'payLaterRatio', 'showMessage', 'paypalButton'];

	    var isChanged = this.checkProps.call(this, checkArr, nextProps);
	    if (isChanged && typeof window !== 'undefined') {
	      this.handlePaymentMessagesByScript.call(this, nextProps);
	      setTimeout(this.checkVisiblity, 1000);
	      setTimeout(this.checkVisiblity, 2000);
	      setTimeout(this.checkVisiblity, 4000);
	    }
	  };

	  PaypalMessages.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
	    var checkArr = ['merchantId', 'sandbox', 'currency', 'authOnly', 'showMessage', 'paymentType', 'paypalButton', 'payLaterEnabled', 'payLaterLayout', 'payLaterLogoType', 'payLaterLogoPosition', 'payLaterTextColor', 'payLaterTextSize', 'payLaterBackgroundColor', 'payLaterRatio'];

	    if (this.checkProps.call(this, checkArr, nextProps)) {
	      return true;
	    }

	    if (JSON.stringify(this.state) !== JSON.stringify(nextState)) {
	      return true;
	    }

	    return false;
	  };

	  PaypalMessages.prototype.checkProps = function checkProps(checkArr, nextProps) {
	    var _this2 = this;

	    var isChanged = [];

	    checkArr.forEach(function (prop) {
	      if (!_this2.props[prop] && nextProps[prop] || _this2.props[prop] && nextProps[prop].value !== _this2.props[prop].value) {
	        isChanged.push(true);
	      } else {
	        isChanged.push(false);
	      }
	    });

	    return isChanged.find(function (p) {
	      return p === true;
	    });
	  };

	  PaypalMessages.prototype.checkVisiblity = function checkVisiblity() {
	    var iframe = global.document.querySelector('.paypal-paylater-messages iframe');
	    if (!iframe) {
	      return;
	    }
	    if (iframe.style.opacity === '0' || iframe.style.pointerEvents === 'none') {
	      iframe.style.setProperty('opacity', '1', 'important');
	      iframe.style.setProperty('pointer-events', 'unset', 'important');
	    }
	  };

	  PaypalMessages.prototype.handlePaymentMessagesByScript = function handlePaymentMessagesByScript(nextProps) {
	    var _this3 = this;

	    setTimeout(function () {
	      var payLaterEnabled = nextProps ? nextProps.payLaterEnabled : _this3.props.payLaterEnabled;
	      if (payLaterEnabled && payLaterEnabled.value !== 'Yes') {
	        return;
	      }
	      if (!global.paypalCheckoutSDK || global.paypalCheckoutSDK && typeof global.paypalCheckoutSDK.Messages !== 'function') {
	        return;
	      }

	      var activeProps = {};
	      var payLaterProps = ['payLaterLayout', 'payLaterLogoType', 'payLaterLogoPosition', 'payLaterTextColor', 'payLaterTextSize', 'payLaterBackgroundColor', 'payLaterRatio', 'showMessage'];

	      payLaterProps.forEach(function (prop) {
	        if (nextProps && nextProps[prop]) {
	          activeProps[prop] = nextProps[prop];
	        } else {
	          activeProps[prop] = _this3.props[prop];
	        }
	      });

	      // eslint-disable-next-line new-cap
	      global.paypalCheckoutSDK.Messages({
	        placement: 'payment',
	        style: {
	          layout: activeProps.payLaterLayout ? activeProps.payLaterLayout.value : '',
	          text: {
	            color: activeProps.payLaterTextColor ? activeProps.payLaterTextColor.value : '',
	            size: activeProps.payLaterTextSize ? activeProps.payLaterTextSize.value : ''
	          },
	          logo: {
	            type: activeProps.payLaterLogoType ? activeProps.payLaterLogoType.value : '',
	            position: activeProps.payLaterLogoPosition ? activeProps.payLaterLogoPosition.value : ''
	          },
	          color: activeProps.payLaterBackgroundColor ? activeProps.payLaterBackgroundColor.value : '',
	          ratio: activeProps.payLaterRatio ? activeProps.payLaterRatio.value : ''
	        }
	      }).render('.paypal-paylater-messages .message-area');
	    }, 0);
	  };

	  PaypalMessages.prototype.render = function render() {
	    var _props2 = this.props,
	        payLaterEnabled = _props2.payLaterEnabled,
	        payLaterLayout = _props2.payLaterLayout,
	        payLaterLogoType = _props2.payLaterLogoType,
	        payLaterLogoPosition = _props2.payLaterLogoPosition,
	        payLaterTextColor = _props2.payLaterTextColor,
	        payLaterTextSize = _props2.payLaterTextSize,
	        payLaterBackgroundColor = _props2.payLaterBackgroundColor,
	        payLaterRatio = _props2.payLaterRatio,
	        paymentType = _props2.paymentType,
	        showMessage = _props2.showMessage,
	        paypalButton = _props2.paypalButton;


	    var isEnabled = payLaterEnabled && payLaterEnabled.value === 'Yes' && paymentType && paymentType.value === 'product' && showMessage && showMessage.value === 'Yes';

	    // For end-user area.
	    if (typeof window === 'undefined') {
	      isEnabled = true;

	      if (paymentType && paymentType.value !== 'product') {
	        return null;
	      }
	    }

	    if (paypalButton) {
	      // For PayPal Checkout
	      if (paypalButton.value === 'Yes') {
	        return null;
	      }

	      return _react2.default.createElement(
	        'div',
	        { className: 'paypal-paylater-messages', style: { display: isEnabled ? 'block' : 'none', paddingTop: 12 } },
	        _react2.default.createElement('div', { className: 'message-area' })
	      );
	    }

	    var messageArea = _react2.default.createElement('div', {
	      className: 'message-area',
	      'data-pp-message': true,
	      'data-pp-style-layout': payLaterLayout ? payLaterLayout.value : '',
	      'data-pp-style-logo-type': payLaterLogoType ? payLaterLogoType.value : '',
	      'data-pp-style-logo-position': payLaterLogoPosition ? payLaterLogoPosition.value : '',
	      'data-pp-style-text-color': payLaterTextColor ? payLaterTextColor.value : '',
	      'data-pp-style-text-size': payLaterTextSize ? payLaterTextSize.value : '',
	      'data-pp-style-color': payLaterBackgroundColor ? payLaterBackgroundColor.value : '',
	      'data-pp-style-ratio': payLaterRatio ? payLaterRatio.value : '',
	      'data-pp-placement': 'payment'
	    });

	    return _react2.default.createElement(
	      'div',
	      { className: 'paypal-paylater-messages', style: { display: isEnabled ? 'block' : 'none', paddingTop: 12 } },
	      messageArea
	    );
	  };

	  return PaypalMessages;
	}(_react.Component);

	exports.default = PaypalMessages;


	PaypalMessages.propTypes = {
	  sandbox: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterEnabled: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterLayout: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterLogoType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterLogoPosition: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterTextColor: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterTextSize: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterBackgroundColor: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterRatio: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paymentType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  showMessage: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paypalButton: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  loadPaypalSPBScript: _propTypes2.default.func
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Paymentwall = function (_Component) {
	  _inherits(Paymentwall, _Component);

	  function Paymentwall() {
	    _classCallCheck(this, Paymentwall);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Paymentwall.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_paymentwall'
	    }));
	  };

	  return Paymentwall;
	}(_react.Component);

	exports.default = Paymentwall;


	Paymentwall.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Paymentwall.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Paymentwall.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Payoneer = function (_Component) {
	  _inherits(Payoneer, _Component);

	  function Payoneer() {
	    _classCallCheck(this, Payoneer);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Payoneer.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_payoneer'
	    }));
	  };

	  return Payoneer;
	}(_react.Component);

	exports.default = Payoneer;


	Payoneer.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Payoneer.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Payoneer.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Paypal = function (_Component) {
	  _inherits(Paypal, _Component);

	  function Paypal() {
	    _classCallCheck(this, Paypal);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Paypal.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_paypal'
	    }));
	  };

	  return Paypal;
	}(_react.Component);

	exports.default = Paypal;


	Paypal.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Paypal.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Paypal.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PaypalInvoicing = function (_Component) {
	  _inherits(PaypalInvoicing, _Component);

	  function PaypalInvoicing() {
	    _classCallCheck(this, PaypalInvoicing);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  PaypalInvoicing.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_paypalInvoicing'
	    }));
	  };

	  return PaypalInvoicing;
	}(_react.Component);

	exports.default = PaypalInvoicing;


	PaypalInvoicing.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	PaypalInvoicing.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	PaypalInvoicing.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaypalSPBButtons = __webpack_require__(451);

	var _PaypalSPBButtons2 = _interopRequireDefault(_PaypalSPBButtons);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document window */


	var PaypalSPB = function (_Component) {
	  _inherits(PaypalSPB, _Component);

	  function PaypalSPB() {
	    _classCallCheck(this, PaypalSPB);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  PaypalSPB.prototype.render = function render() {
	    return _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_paypalSPB'
	      })),
	      _react2.default.createElement(_PaypalSPBButtons2.default, this.props)
	    );
	  };

	  return PaypalSPB;
	}(_react.Component);

	exports.default = PaypalSPB;


	PaypalSPB.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	PaypalSPB.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	PaypalSPB.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(424);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _Utils = __webpack_require__(16);

	var _PaypalMessages = __webpack_require__(445);

	var _PaypalMessages2 = _interopRequireDefault(_PaypalMessages);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document window */


	var styleSizes = { small: 30, medium: 48, large: 55, responsive: 48 };

	var PaypalSmartPaymentButtons = function (_Component) {
	  _inherits(PaypalSmartPaymentButtons, _Component);

	  function PaypalSmartPaymentButtons(props) {
	    _classCallCheck(this, PaypalSmartPaymentButtons);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	    _this.state = {};
	    _this.loadPaypalScript = _this.loadPaypalScript.bind(_this);
	    return _this;
	  }

	  PaypalSmartPaymentButtons.prototype.componentDidMount = function componentDidMount() {
	    if (_typeof(window.paypalCheckoutSDK) !== 'object') {
	      this.loadPaypalScript();
	    }
	  };

	  PaypalSmartPaymentButtons.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var checkArr = ['merchantId', 'fundingCard', 'fundingCredit', 'currency', 'environment', 'payLaterEnabled'];

	    if (this.checkProps.call(this, checkArr, nextProps)) {
	      this.loadPaypalScript(nextProps);
	    }
	  };

	  PaypalSmartPaymentButtons.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
	    var checkArr = ['merchantId', 'fundingCard', 'fundingCredit', 'currency', 'environment', 'clientID', 'styleColor', 'styleShape', 'styleSize', 'styleLabel', 'styleLayout', 'paymentType', 'paypalButtonQid', 'payLaterEnabled', 'payLaterLayout', 'payLaterLogoType', 'payLaterLogoPosition', 'payLaterTextColor', 'payLaterTextSize', 'payLaterBackgroundColor', 'payLaterRatio', 'showMessage', 'paypalButton', 'order', 'submitButtonOrder'];

	    if (this.checkProps.call(this, checkArr, nextProps)) {
	      return true;
	    }

	    if (JSON.stringify(this.state) !== JSON.stringify(nextState)) {
	      return true;
	    }

	    return false;
	  };

	  PaypalSmartPaymentButtons.prototype.checkProps = function checkProps(checkArr, nextProps) {
	    var _this2 = this;

	    var isChanged = [];

	    checkArr.forEach(function (prop) {
	      if (!_this2.props[prop] && nextProps[prop] || _this2.props[prop] && nextProps[prop].value !== _this2.props[prop].value) {
	        isChanged.push(true);
	      } else {
	        isChanged.push(false);
	      }
	    });

	    return isChanged.find(function (p) {
	      return p === true;
	    });
	  };

	  PaypalSmartPaymentButtons.prototype.loadPaypalScript = function loadPaypalScript() {
	    var _this3 = this;

	    var nextProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	    var _props = this.props,
	        environment = _props.environment,
	        currency = _props.currency,
	        merchantId = _props.merchantId,
	        fundingCard = _props.fundingCard,
	        fundingCredit = _props.fundingCredit,
	        payLaterEnabled = _props.payLaterEnabled;


	    if (global.paypalCheckoutSDK) {
	      global.paypalCheckoutSDK.__internal_destroy__();
	    }

	    if (nextProps) {
	      environment = nextProps.environment;
	      currency = nextProps.currency;
	      merchantId = nextProps.merchantId;
	      fundingCard = nextProps.fundingCard;
	      fundingCredit = nextProps.fundingCredit;
	      payLaterEnabled = nextProps.payLaterEnabled;
	    }

	    var clientId = environment.value === 'sandbox' ? 'AbO4nZJsmfTgf8GbpnV-AY4382evohAYeDcuwqoAvvrKDDN_qOYa3K5biPFub70U40iPcpl0wtwkkMp2' : 'Afo1LVZtoaCSq5HI_naZpUMjB2C0_OiB6nNHlGaNe7jwBTunPXnbodmCr4ZTtpL3WT-4RkNG6DQFvX03';

	    var disallowed = '\n      ' + (fundingCard.value === 'disabled' && fundingCredit.value === 'disabled' ? 'credit,card' : '') + '\n      ' + (fundingCard.value === 'disabled' && fundingCredit.value !== 'disabled' ? 'card' : '') + '\n      ' + (fundingCard.value !== 'disabled' && fundingCredit.value === 'disabled' ? 'credit' : '') + '\n      ' + (fundingCard.value !== 'disabled' && fundingCredit.value !== 'disabled' ? '' : '') + '\n    ';

	    var options = '\n      components=buttons,messages\n      &client-id=' + clientId + '\n      &commit=true\n      ' + (merchantId.value ? '&merchant-id=' + merchantId.value : '') + '\n      ' + (currency.value ? '&currency=' + currency.value : '') + '\n      ' + (disallowed.trim() ? '&disable-funding=' + disallowed : '') + '\n    ';

	    if (payLaterEnabled && payLaterEnabled.value === 'Yes' && disallowed.indexOf('credit') === -1 && disallowed.indexOf('card') === -1) {
	      options += '&disable-funding=card';
	    }

	    var script = document.createElement('script');
	    script.src = 'https://www.paypal.com/sdk/js?' + options.replace(/\s/g, '');
	    script.async = true;
	    script.setAttribute('data-namespace', 'paypalCheckoutSDK');
	    document.body.appendChild(script);

	    script.onload = function () {
	      _this3.setState({
	        scriptLoaded: true
	      }, function () {
	        _this3.setState({
	          scriptLoaded: false
	        });

	        // Notice:: The dom does not exist in React Virtual DOM.
	        if (payLaterEnabled && payLaterEnabled.value === 'Yes' && typeof window !== 'undefined') {
	          _this3.clearPaypalMessagesFromDOM();
	          var iframe = global.document.querySelector('.paypal-paylater-messages iframe');
	          if (!iframe) {
	            return;
	          }
	          if (iframe.style.opacity === '0' || iframe.style.pointerEvents === 'none') {
	            iframe.style.setProperty('opacity', '1', 'important');
	            iframe.style.setProperty('pointer-events', 'unset', 'important');
	          }
	        }
	      });
	    };
	  };

	  PaypalSmartPaymentButtons.prototype.clearPaymentButtons = function clearPaymentButtons() {
	    // Remove other buttons for preventing dublicate.
	    var paypalButtons = Array.from(document.querySelectorAll('.paypal-buttons.paypal-buttons-context-iframe'));

	    if (paypalButtons.length >= 1) {
	      paypalButtons.map(function (button) {
	        button.remove();
	        return '';
	      });
	    }
	  };

	  PaypalSmartPaymentButtons.prototype.clearPaypalMessagesFromDOM = function clearPaypalMessagesFromDOM() {
	    // Notice:: The dom does not exist in React Virtual DOM.
	    var messageAreas = document.querySelectorAll('.paypal-paylater-messages .message-area *');

	    if (messageAreas.length > 0) {
	      messageAreas.forEach(function (messageArea) {
	        messageArea.remove();
	      });
	    }
	  };

	  PaypalSmartPaymentButtons.prototype.renderSmartButtons = function renderSmartButtons(place) {
	    var _this4 = this;

	    if (place === 'builder' && _typeof(window.paypalCheckoutSDK) === 'object') {
	      var _props2 = this.props,
	          styleColor = _props2.styleColor,
	          styleShape = _props2.styleShape,
	          styleSize = _props2.styleSize,
	          styleLabel = _props2.styleLabel,
	          styleLayout = _props2.styleLayout,
	          paypalButton = _props2.paypalButton,
	          paypalButtonQid = _props2.paypalButtonQid;

	      var returnButton = null;

	      var onAuthorize = function onAuthorize() {
	        window.alert('Smart payment buttons demo');
	        return;
	      };

	      var style = {
	        color: styleColor.value ? styleColor.value : 'gold',
	        shape: styleShape.value ? styleShape.value : 'rect',
	        height: styleSize && styleSize.value ? styleSizes[styleSize.value] : 48,
	        label: styleLabel.value ? styleLabel.value : 'checkout',
	        layout: styleLayout.value ? styleLayout.value : 'vertical'
	      };

	      if (paypalButton && paypalButton.value === 'Yes') {
	        setTimeout(function () {
	          if (paypalButtonQid && paypalButtonQid.value) {
	            var selector = '.form-line#id_' + paypalButtonQid.value + ' .paypal-submit-button-wrapper';
	            var submitButtonWrapper = document.querySelector(selector);

	            if (submitButtonWrapper) {
	              submitButtonWrapper.style.pointerEvents = 'none';

	              try {
	                _this4.clearPaymentButtons();
	              } catch (err) {
	                console.error(err);
	              }

	              /* eslint-disable */
	              window.paypalCheckoutSDK.Buttons({
	                createOrder: onAuthorize,
	                style: style
	              }).render(selector);
	              /* eslint-enable */

	              returnButton = _react2.default.createElement('div', null);
	            }
	          } else {
	            var key = String(Math.random());
	            var PayPalButton = window.paypalCheckoutSDK.Buttons.driver('react', { React: _react2.default, ReactDOM: _reactDom2.default });

	            try {
	              _this4.clearPaymentButtons();
	            } catch (err) {
	              console.error(err);
	            }

	            returnButton = _react2.default.createElement(
	              'div',
	              { className: 'paypal-smart-payment-buttons-wrapper', style: { pointerEvents: 'none' } },
	              _react2.default.createElement(PayPalButton, {
	                createOrder: onAuthorize,
	                style: style,
	                key: key
	              })
	            );
	          }
	        }, 0);
	      } else {
	        var key = String(Math.random());
	        var PayPalButtonDOM = window.paypalCheckoutSDK.Buttons.driver('react', { React: _react2.default, ReactDOM: _reactDom2.default });

	        try {
	          this.clearPaymentButtons();
	        } catch (err) {
	          console.error(err);
	        }

	        returnButton = _react2.default.createElement(
	          'div',
	          { className: 'paypal-smart-payment-buttons-wrapper', style: { pointerEvents: 'none' } },
	          _react2.default.createElement(PayPalButtonDOM, {
	            createOrder: onAuthorize,
	            style: style,
	            key: key
	          })
	        );
	      }

	      return returnButton;
	    }

	    if (this.props.clientID.value || this.props.merchantId.value) {
	      return _react2.default.createElement(
	        'div',
	        {
	          className: 'paypal-smart-payment-buttons-wrapper',
	          'data-merchantid': this.props.merchantId && this.props.merchantId.value,
	          'data-paypal-button': this.props.paypalButton ? this.props.paypalButton.value : 'No',
	          'data-paypal-button-qid': this.props.paypalButtonQid ? this.props.paypalButtonQid.value : '',
	          'data-clientid': this.props.clientID ? this.props.clientID.value : '',
	          'data-environment': this.props.environment.value ? this.props.environment.value : 'production',
	          'data-currency': this.props.currency.value ? this.props.currency.value : 'USD',
	          'data-style-color': this.props.styleColor.value ? this.props.styleColor.value : 'gold',
	          'data-style-shape': this.props.styleShape.value ? this.props.styleShape.value : 'rect',
	          'data-style-size': this.props.styleSize.value ? this.props.styleSize.value : 'medium',
	          'data-style-label': this.props.styleLabel.value ? this.props.styleLabel.value : 'checkout',
	          'data-style-layout': this.props.styleLayout.value ? this.props.styleLayout.value : 'vertical',
	          'data-funding-credit': this.props.fundingCredit.value ? this.props.fundingCredit.value : 'default',
	          'data-funding-card': this.props.fundingCard.value ? this.props.fundingCard.value : 'default',
	          'data-funding-elv': this.props.fundingElv.value ? this.props.fundingElv.value : 'default'
	        },
	        'loading smart payment buttons...'
	      );
	    }
	  };

	  PaypalSmartPaymentButtons.prototype.render = function render() {
	    var isLoggedIn = false;

	    if (this.props.clientID.value || this.props.merchantId.value) {
	      isLoggedIn = true;
	    }

	    var className = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);

	    var rndNumber = 0;

	    if (this.state.scriptLoaded) {
	      rndNumber = Math.random();
	    }

	    return _react2.default.createElement(
	      _react.Fragment,
	      null,
	      _react2.default.createElement('input', {
	        type: 'text',
	        name: 'cc_paypalSPB_orderID',
	        id: 'cc_paypalSPB_orderID',
	        className: className,
	        readOnly: true,
	        tabIndex: '-1',
	        style: {
	          opacity: 0,
	          zIndex: '-1',
	          pointerEvents: 'none',
	          position: 'absolute',
	          width: 0,
	          height: 0,
	          left: '-400px',
	          top: '-400px',
	          padding: 0,
	          border: 'none',
	          margin: 0
	        }
	      }),
	      _react2.default.createElement('input', {
	        type: 'text',
	        name: 'cc_paypalSPB_payerID',
	        id: 'cc_paypalSPB_payerID',
	        className: className,
	        readOnly: true,
	        tabIndex: '-1',
	        style: {
	          opacity: 0,
	          zIndex: '-1',
	          pointerEvents: 'none',
	          position: 'absolute',
	          width: 0,
	          height: 0,
	          left: '-400px',
	          top: '-400px',
	          padding: 0,
	          border: 'none',
	          margin: 0
	        }
	      }),
	      isLoggedIn && _react2.default.createElement('hr', null),
	      typeof window !== 'undefined' && this.renderSmartButtons.call(this, 'builder'),
	      typeof window === 'undefined' && this.renderSmartButtons.call(this, 'form'),
	      _react2.default.createElement(_PaypalMessages2.default, _extends({}, this.props, { key: rndNumber, loadPaypalSPBScript: this.loadPaypalScript, showMessage: { value: 'Yes' } })),
	      _react2.default.createElement(
	        'div',
	        { className: 'complete-payment-prompt', style: { display: 'none' } },
	        'The payment is ready! It will be completed once you submit the form.'
	      )
	    );
	  };

	  return PaypalSmartPaymentButtons;
	}(_react.Component);

	exports.default = PaypalSmartPaymentButtons;


	PaypalSmartPaymentButtons.propTypes = {
	  styleColor: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  styleLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  styleLayout: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  styleShape: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  styleSize: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  currency: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  clientID: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  environment: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  fundingCard: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  fundingCredit: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  fundingElv: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  merchantId: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paypalButton: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paypalButtonQid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  payLaterEnabled: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global document window */


	var PaypalComplete = function (_Component) {
	  _inherits(PaypalComplete, _Component);

	  function PaypalComplete() {
	    _classCallCheck(this, PaypalComplete);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  PaypalComplete.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }

	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, { controlPaymentType: 'control_paypalcomplete' }))
	    );
	  };

	  return PaypalComplete;
	}(_react.Component);

	exports.default = PaypalComplete;


	PaypalComplete.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	PaypalComplete.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	PaypalComplete.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Paypalexpress = function (_Component) {
	  _inherits(Paypalexpress, _Component);

	  function Paypalexpress() {
	    _classCallCheck(this, Paypalexpress);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Paypalexpress.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_paypalexpress'
	    }));
	  };

	  return Paypalexpress;
	}(_react.Component);

	exports.default = Paypalexpress;


	Paypalexpress.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Paypalexpress.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Paypalexpress.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentTypeContainer = __webpack_require__(455);

	var _PaymentTypeContainer2 = _interopRequireDefault(_PaymentTypeContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Paypalpro = function (_Component) {
	  _inherits(Paypalpro, _Component);

	  function Paypalpro() {
	    _classCallCheck(this, Paypalpro);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Paypalpro.prototype.render = function render() {
	    return _react2.default.createElement(
	      'div',
	      {
	        'data-wrapper-react': 'true',
	        id: 'payment-wrapper-songbird',
	        'data-currency': this.props.currency && this.props.currency.value,
	        'data-paymentType': this.props.paymentType && this.props.paymentType.value,
	        'data-sandbox': this.props.sandbox && this.props.sandbox.value,
	        'data-sca': this.props.sca && this.props.sca.value,
	        'data-cardinalAPIkey': this.props.cardinalAPIkey && this.props.cardinalAPIkey.value,
	        'data-cardinalAPIindentifier': this.props.cardinalAPIindentifier && this.props.cardinalAPIindentifier.value,
	        'data-cardinalOrgUnitID': this.props.cardinalOrgUnitID && this.props.cardinalOrgUnitID.value
	      },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, { controlPaymentType: 'control_paypalpro' })),
	      _react2.default.createElement(_PaymentTypeContainer2.default, this.props),
	      _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_paypalpro' }))
	    );
	  };

	  return Paypalpro;
	}(_react.Component);

	exports.default = Paypalpro;


	Paypalpro.propTypes = {
	  currency: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paymentType: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  sandbox: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  sca: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  cardinalAPIkey: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  cardinalAPIindentifier: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  cardinalOrgUnitID: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	Paypalpro.getState = function () {
	  var paymentLabels = [];
	  return paymentLabels;
	};

	Paypalpro.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PaymentTypeContainer = function (_Component) {
	  _inherits(PaymentTypeContainer, _Component);

	  function PaymentTypeContainer() {
	    _classCallCheck(this, PaymentTypeContainer);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  PaymentTypeContainer.prototype.render = function render() {
	    var showPaypalStandard = this.props.showPaypalStandard;

	    var hasPaypalStandard = !(showPaypalStandard && showPaypalStandard.value === 'No');

	    var paymentMethodStr = (0, _Utils.subLabel)('paymentMethod');
	    if (!paymentMethodStr) {
	      paymentMethodStr = 'Payment Method';
	    } else {
	      paymentMethodStr = paymentMethodStr.text;
	    }

	    var ccHTML = null;
	    if (this.props.acceptedCc) {
	      var ccType = ['visa', 'mc', 'amex', 'dc'];
	      var ccArray = !this.props.acceptedCc.value ? ccType : this.props.acceptedCc.value.split('|');

	      var ccHTMLImages = [];
	      for (var ci = 0; ci < ccType.length; ci += 1) {
	        var imageStyle = ccArray.indexOf(ccType[ci]) === -1 ? { display: 'none' } : { display: 'inline-block' };
	        imageStyle.verticalAlign = 'middle';
	        var ccImage = _react2.default.createElement('img', {
	          src: this.props.cdnconfig.CDN + 'images/blank.gif',
	          className: 'paypalpro_img paypalpro_' + ccType[ci],
	          style: imageStyle,
	          alt: '' + ccType[ci]
	        });
	        ccHTMLImages.push(ccImage);
	      }

	      ccHTML = _react2.default.createElement(
	        'div',
	        { style: { display: 'inline-block', paddingRight: '4px' } },
	        ccHTMLImages
	      );
	    }

	    // let tableStyle = this.props.passive ? {} : { display: 'none' };
	    var paypalRadio = false;
	    var creditRadio = false;

	    if (this.props.paymentMethod && this.props.paymentMethod.value !== 'none') {
	      if (this.props.paymentMethod.value === 'paypal' && hasPaypalStandard) {
	        paypalRadio = true;
	      } else {
	        creditRadio = true;
	        // tableStyle = {};
	      }
	    }

	    var paypalLinkHTML = null;
	    if (this.props.paypalLink && this.props.paypalLink.value === 'Yes') {
	      var paypalLinkTag = null;
	      if (this.props.passive) {
	        paypalLinkTag = _react2.default.createElement(
	          'p',
	          { style: { fontSize: '9px', marginLeft: '6px', textDecoration: 'underline' } },
	          'What is PayPal?'
	        );
	      } else {
	        paypalLinkTag = _react2.default.createElement(
	          'a',
	          { style: { fontSize: '9px' }, target: '_blank', href: 'https://www.paypal.com/webapps/mpp/paypal-popup' },
	          'What is PayPal?'
	        );
	      }

	      paypalLinkHTML = _react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'td',
	          { style: { verticalAlign: 'top' } },
	          paypalLinkTag
	        )
	      );
	    }

	    return _react2.default.createElement(
	      'table',
	      {
	        className: 'form-address-table payment-form-table',
	        style: { border: 0 },
	        cellPadding: '4',
	        cellSpacing: '0'
	      },
	      _react2.default.createElement(
	        'tbody',
	        null,
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'th',
	            { colSpan: '2', style: { textAlign: 'left' } },
	            paymentMethodStr.locale()
	          )
	        ),
	        _react2.default.createElement(
	          'tr',
	          null,
	          _react2.default.createElement(
	            'td',
	            { valign: 'top', style: { minWidth: '50px', verticalAlign: 'top' }, rowSpan: '2' },
	            _react2.default.createElement('input', {
	              type: 'radio',
	              className: 'paymentTypeRadios',
	              id: this.props.qid.value + '_paymentType_credit',
	              name: this.props.qname.value + '[paymentType]',
	              checked: creditRadio, value: 'credit'
	            }),
	            _react2.default.createElement(
	              'label',
	              { htmlFor: this.props.qid.value + '_paymentType_credit' },
	              ccHTML
	            )
	          ),
	          hasPaypalStandard ? _react2.default.createElement(
	            'td',
	            { align: 'left', valign: 'top', style: { paddingBottom: '2px !important', textAlign: 'left', verticalAlign: 'top' } },
	            _react2.default.createElement('input', {
	              type: 'radio',
	              className: 'paymentTypeRadios',
	              id: this.props.qid.value + '_paymentType_express',
	              name: this.props.qname.value + '[paymentType]',
	              checked: paypalRadio,
	              value: 'express'
	            }),
	            _react2.default.createElement(
	              'label',
	              { htmlFor: this.props.qid.value + '_paymentType_express' },
	              _react2.default.createElement('img', { style: { verticalAlign: 'middle' }, src: 'https://www.paypalobjects.com/webstatic/en_US/i/buttons/pp-acceptance-small.png', alt: 'PayPal' })
	            )
	          ) : null
	        ),
	        paypalLinkHTML
	      )
	    );
	  };

	  return PaymentTypeContainer;
	}(_react.Component);

	exports.default = PaymentTypeContainer;


	PaymentTypeContainer.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paymentMethod: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  acceptedCc: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  paypalLink: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  cdnconfig: _propTypes2.default.shape({
	    CDN: _propTypes2.default.string
	  }),
	  passive: _propTypes2.default.bool,
	  showPaypalStandard: _propTypes2.default.shape()
	};

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Paysafe = function (_Component) {
	  _inherits(Paysafe, _Component);

	  function Paysafe() {
	    _classCallCheck(this, Paysafe);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Paysafe.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_paysafe',
	      compoundHint: { value: ',,,State Abbreviation' }
	    }));
	    // const paymentCreditCardAndAddress = null;
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_paysafe'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Paysafe;
	}(_react.Component);

	exports.default = Paysafe;


	Paysafe.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Paysafe.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Paysafe.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Payu = function (_Component) {
	  _inherits(Payu, _Component);

	  function Payu() {
	    _classCallCheck(this, Payu);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Payu.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_payu'
	    }));
	  };

	  return Payu;
	}(_react.Component);

	exports.default = Payu;


	Payu.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Payu.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Payu.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Phone = function (_Component) {
	  _inherits(Phone, _Component);

	  function Phone() {
	    _classCallCheck(this, Phone);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Phone.prototype.renderCountryCode = function renderCountryCode(hint) {
	    var props = this.props;

	    if (this.props.countryCode && this.props.countryCode.value === 'Yes') {
	      var subLabelObj = (0, _Utils.subLabel)(props, 'country', props.id.value);
	      var additionalClass = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);

	      return _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: subLabelObj,
	          'for': this.props.qid.value + '_country',
	          propPath: 'sublabels.country',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.country,
	          dataComponent: 'countryCode'
	        }),
	        _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	          qid: this.props.qid.value + '_country',
	          qname: this.props.qname.value + '[country]',
	          hint: { value: hint },
	          type: 'tel',
	          additionalClass: additionalClass,
	          dataComponent: 'countryCode',
	          ariaLabelledBy: (0, _Utils.ariaLabelledBy)(props, subLabelObj)
	        })),
	        _react2.default.createElement(
	          'span',
	          { className: 'phone-separate', 'aria-hidden': 'true' },
	          '\xA0-'
	        )
	      );
	    }

	    return null;
	  };

	  Phone.prototype.renderAreaCode = function renderAreaCode(hint) {
	    var props = this.props;

	    var additionalClass = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    var subLabelObj = (0, _Utils.subLabel)(props, 'area', props.id.value);

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: subLabelObj,
	        'for': this.props.qid.value + '_area',
	        propPath: 'sublabels.area',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.area,
	        dataComponent: 'areaCode'
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        qid: this.props.qid.value + '_area',
	        qname: this.props.qname.value + '[area]',
	        hint: { value: hint },
	        type: 'tel',
	        additionalClass: additionalClass,
	        dataComponent: 'areaCode',
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(props, subLabelObj)
	      })),
	      _react2.default.createElement(
	        'span',
	        { className: 'phone-separate', 'aria-hidden': 'true' },
	        '\xA0-'
	      )
	    );
	  };

	  Phone.prototype.renderPhoneNumber = function renderPhoneNumber(hint) {
	    var props = this.props;

	    var additionalClass = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);
	    var subLabelObj = (0, _Utils.subLabel)(props, 'phone', props.id.value);

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: subLabelObj,
	        'for': this.props.qid.value + '_phone',
	        propPath: 'sublabels.phone',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.phone,
	        dataComponent: 'phone'
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        qid: this.props.qid.value + '_phone',
	        qname: this.props.qname.value + '[phone]',
	        hint: { value: hint },
	        type: 'tel',
	        additionalClass: additionalClass,
	        dataComponent: 'phone',
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(props, subLabelObj)
	      }))
	    );
	  };

	  Phone.prototype.render = function render() {
	    var hasInputMask = this.props.inputMask && this.props.inputMask.value !== 'enable';
	    var hintList = this.props.compoundHint && this.props.compoundHint.value && this.props.compoundHint.value.length > 0 ? this.props.compoundHint.value.split(',') : [];
	    var compoundHint = this.props.compoundHint && this.props.compoundHint.value ? this.props.compoundHint.value : null;
	    var hintIndex = 0;
	    if (hasInputMask) {
	      var countryCodePart = this.renderCountryCode(hintList[hintIndex]);
	      if (countryCodePart) hintIndex++;
	      var areaCodePart = this.renderAreaCode(hintList[hintIndex]);
	      if (areaCodePart) hintIndex++;
	      var phoneNumberPart = this.renderPhoneNumber(hintList[hintIndex]);

	      return _react2.default.createElement(
	        'div',
	        { 'data-wrapper-react': 'true', className: this.props.countryCode && this.props.countryCode.value === 'Yes' ? 'extended' : null },
	        countryCodePart,
	        areaCodePart,
	        phoneNumberPart
	      );
	    }

	    var maskVal = this.props.inputMaskValue && this.props.inputMaskValue.value ? this.props.inputMaskValue.value : null;
	    var props = this.props;
	    if (maskVal) {
	      props.validation.value = 'Fill Mask';
	    }

	    var additionalClass = (0, _Utils.addValidation)(_Utils.classNames.textbox, props);
	    var subLabelObj = (0, _Utils.subLabel)(props, 'masked', props.id.value);
	    var isNewTheme = props.themeVersion && props.themeVersion === 'v2';
	    var maskValue = this.props.passive ? maskVal : null;
	    var placeholderPhoneV2 = '(000) 000-0000';
	    if (maskVal) {
	      placeholderPhoneV2 = maskVal.replace(/#/g, 0);
	    }
	    var compoundHintv2 = compoundHint || placeholderPhoneV2;
	    // TODO : move the width value into question properties
	    var style = isNewTheme ? { width: '310px' } : {};

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: subLabelObj,
	        'for': this.props.qid.value + '_full',
	        propPath: 'sublabels.masked',
	        defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.masked
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        qid: this.props.qid.value + '_full',
	        qname: this.props.qname.value + '[full]',
	        type: 'tel',
	        additionalClass: 'mask-phone-number ' + additionalClass,
	        autocomplete: isNewTheme ? null : { value: 'off' },
	        masked: 'true',
	        dataComponent: 'phone',
	        componentDataType: 'mask-number',
	        defaultValue: { value: isNewTheme ? null : maskValue },
	        hint: { value: isNewTheme ? compoundHintv2 : compoundHint },
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(props, subLabelObj),
	        style: style
	      }))
	    );
	  };

	  return Phone;
	}(_react.Component);

	exports.default = Phone;


	Phone.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  sublabels: _propTypes2.default.shape({
	    value: _propTypes2.default.shape()
	  }),
	  countryCode: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inputMask: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape(),
	  inputMaskValue: _propTypes2.default.shape(),
	  compoundHint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  passive: _propTypes2.default.bool
	};

/***/ },
/* 459 */,
/* 460 */,
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _OptionsBase = __webpack_require__(110);

	var _OptionsBase2 = _interopRequireDefault(_OptionsBase);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Radio = function Radio(props) {
	  return _react2.default.createElement(_OptionsBase2.default, _extends({}, props, { type: 'control_radio' }));
	};

	Radio.getScript = function (prop) {
	  if (prop.shuffle && prop.shuffle.value === 'Yes') {
	    return '      JotForm.shuffleOptions("' + prop.id.value + '");\n';
	  }

	  return '';
	};

	exports.default = Radio;

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-eval:0 */


	var Range = function (_Component) {
	  _inherits(Range, _Component);

	  function Range() {
	    _classCallCheck(this, Range);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Range.prototype.componentDidMount = function componentDidMount() {
	    eval(Range.getScript(this.props));
	  };

	  Range.prototype.componentDidUpdate = function componentDidUpdate() {
	    eval(Range.getScript(this.props));
	  };

	  Range.prototype.render = function render() {
	    var qid = this.props.qid.value;
	    var qname = this.props.qname.value;
	    var markup = [];

	    markup.push(_react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: (0, _Utils.subLabel)(this.props, 'from'),
	        propPath: 'sublabels.from',
	        'for': qid + '_from',
	        defaultValue: _QuestionProps2.default.control_range.sublabels.value.from
	      }),
	      _react2.default.createElement('input', { disabled: this.props.inlineEditClass, 'data-component': 'range', className: (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props), type: 'number', id: qid + '_from', name: qname + '[from]' })
	    ));

	    markup.push(_react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: (0, _Utils.subLabel)(this.props, 'to'),
	        propPath: 'sublabels.to',
	        'for': qid + '_to',
	        defaultValue: _QuestionProps2.default.control_range.sublabels.value.to
	      }),
	      _react2.default.createElement('input', { disabled: this.props.inlineEditClass, 'data-component': 'range', className: (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props), type: 'number', id: qid + '_to', name: qname + '[to]' })
	    ));

	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      markup
	    );
	  };

	  return Range;
	}(_react.Component);

	exports.default = Range;


	Range.getState = function (prop) {
	  return {
	    addAmount: prop.addAmount.value,
	    allowMinus: prop.allowMinus.value === 'Yes' ? 'true' : 'false',
	    defaultTo: prop.defaultTo.value,
	    defaultFrom: prop.defaultFrom.value
	  };
	};

	Range.getScript = function (prop) {
	  var state = Range.getState(prop);
	  var qid = prop.qid.value;
	  /* eslint max-len:0 */
	  var script = '      $(\'' + qid + '_to\').spinner({ imgPath:\'' + prop.cdnconfig.CDN + 'images/\', width: \'60\', allowNegative: ' + state.allowMinus + ', addAmount: ' + (0, _Utils.fixNumbers)(state.addAmount) + ', value:\'' + (0, _Utils.fixNumbers)(state.defaultTo) + '\' });\n';
	  script += '      $(\'' + qid + '_from\').spinner({ imgPath:\'' + prop.cdnconfig.CDN + 'images/\', width: \'60\', allowNegative: ' + state.allowMinus + ', addAmount: ' + (0, _Utils.fixNumbers)(state.addAmount) + ', value:\'' + (0, _Utils.fixNumbers)(state.defaultFrom) + '\' });\n';
	  /* eslint max-len:1 */
	  return script;
	};

	Range.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func
	};

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Ratingv = __webpack_require__(464);

	var _Ratingv2 = _interopRequireDefault(_Ratingv);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-eval:0 */

	var Rating = function (_Component) {
	  _inherits(Rating, _Component);

	  function Rating() {
	    _classCallCheck(this, Rating);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Rating.prototype.componentDidMount = function componentDidMount() {
	    this.comp = eval(Rating.getScript(this.props));
	  };

	  Rating.prototype.componentDidUpdate = function componentDidUpdate() {
	    this.comp = eval(Rating.getScript(this.props));
	  };

	  Rating.prototype.render = function render() {
	    var _this2 = this;

	    if (this.props.themeVersion && this.props.themeVersion === 'v2') {
	      return _react2.default.createElement(_Ratingv2.default, this.props);
	    }
	    var ratingOptions = [];

	    for (var i = 1; i <= this.props.stars.value; i++) {
	      ratingOptions.push(_react2.default.createElement(
	        'option',
	        { key: i, value: i },
	        i
	      ));
	    }

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: this.props.subLabel && this.props.subLabel.value !== '' ? this.props.subLabel.value : null,
	        'for': this.props.qid.value,
	        propPath: 'subLabel',
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      _react2.default.createElement(
	        'div',
	        {
	          ref: function ref(_ref) {
	            _this2.comp = _ref;
	          },
	          id: this.props.qid.value,
	          name: this.props.qname.value,
	          key: this.props.passive ? '' + Math.round(Math.random() * 100000) : null,
	          'data-component': 'rating'
	        },
	        _react2.default.createElement(
	          'select',
	          { readOnly: this.props.inlineEditClass, name: this.props.qname.value },
	          ratingOptions
	        )
	      )
	    );
	  };

	  return Rating;
	}(_react.Component);

	exports.default = Rating;


	Rating.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  stars: _propTypes2.default.shape({
	    value: _propTypes2.default.integer
	  }),
	  starStyle: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape(),
	  passive: _propTypes2.default.bool,
	  inlineEditClass: _propTypes2.default.func,
	  themeVersion: _propTypes2.default.string,
	  type: _propTypes2.default.shape()
	};

	Rating.getState = function (prop) {
	  var stars = 'stars';

	  var typeMap = {
	    Hearts: 'hearts',
	    'Stars 2': 'stars2',
	    Lightnings: 'lightnings',
	    'Light Bulps': 'bulps',
	    Shields: 'shields',
	    Flags: 'flags',
	    Pluses: 'pluses'
	  };
	  var starsV2 = 'stars_v2';
	  var typeMapV2 = {
	    Hearts: 'hearts_v2',
	    'Stars 2': 'stars2_v2',
	    Lightnings: 'lightnings_v2',
	    'Light Bulps': 'bulps_v2',
	    Shields: 'shields_v2',
	    Flags: 'flags_v2',
	    Pluses: 'pluses_v2'
	  };

	  if (typeof typeMap[prop.starStyle.value] !== 'undefined') {
	    stars = typeMap[prop.starStyle.value];
	  }

	  if (typeof typeMap[prop.starStyle.value] !== 'undefined') {
	    starsV2 = typeMapV2[prop.starStyle.value];
	  }

	  return {
	    stars: prop.themeVersion === 'v2' ? starsV2 : stars
	  };
	};

	Rating.getScript = function (prop) {
	  var state = Rating.getState(prop);
	  var script = '\n    $(\'' + prop.qid.value + '\').rating({stars:\'' + prop.stars.value + '\',\n    inputClassName:\'' + (0, _Utils.addValidation)(_Utils.classNames.textbox, prop) + '\',\n    imagePath: \'' + prop.cdnconfig.CDN + 'images/' + state.stars + '.png\',\n    cleanFirst:true, value:\'' + prop.defaultValue.value + '\'});\n';
	  script += '$(\'' + prop.qid.value + '\').setAttribute(\'role\',\'group\');\n';

	  if (prop.id && prop.id.value) {
	    script += '$(\'' + prop.qid.value + '\').setAttribute(\'aria-labelledby\',\'label_' + prop.id.value + '\');\n';
	  }

	  script += '\n    Array.from($(\'' + prop.qid.value + '\').children).map(function(e, i){e.setAttribute(\'tabindex\',0);\n    if(i<' + (prop.stars.value || 0) + ') {e.setAttribute(\'aria-label\',(i+1)+\' out of ' + (prop.stars.value || 0) + '\');}\n    e.setAttribute(\'role\',\'radio\');\n    e.classList.add(\'form-star-rating-star\', \'' + prop.starStyle.value.replace(/\s/g, '') + '\');\n    e.onkeypress = function(k){if(k.keyCode == 13 || k.keyCode == 32)e.click()}});\n';

	  return script;
	};

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-eval:0 */

	var Rating = function (_Component) {
	  _inherits(Rating, _Component);

	  function Rating() {
	    _classCallCheck(this, Rating);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Rating.prototype.render = function render() {
	    var _this2 = this;

	    var ratingOptions = [];

	    for (var i = 1; i <= this.props.stars.value; i++) {
	      ratingOptions.push(_react2.default.createElement(
	        'option',
	        { key: i, value: i },
	        i
	      ));
	    }

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: this.props.subLabel && this.props.subLabel.value !== '' ? this.props.subLabel.value : null,
	        'for': this.props.qid.value,
	        propPath: 'subLabel',
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      _react2.default.createElement(
	        'div',
	        {
	          ref: function ref(_ref) {
	            _this2.comp = _ref;
	          },
	          id: this.props.qid.value,
	          name: this.props.qname.value,
	          key: this.props.passive ? '' + Math.round(Math.random() * 100000) : null,
	          'data-component': 'rating',
	          'data-version': 'v2'
	        },
	        _react2.default.createElement(
	          'select',
	          { readOnly: this.props.inlineEditClass, name: this.props.qname.value },
	          ratingOptions
	        )
	      )
	    );
	  };

	  return Rating;
	}(_react.Component);

	exports.default = Rating;


	Rating.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  stars: _propTypes2.default.shape({
	    value: _propTypes2.default.integer
	  }),
	  starStyle: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape(),
	  passive: _propTypes2.default.bool,
	  inlineEditClass: _propTypes2.default.func,
	  type: _propTypes2.default.shape()
	};

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Scalev = __webpack_require__(466);

	var _Scalev2 = _interopRequireDefault(_Scalev);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Scale = function (_Component) {
	  _inherits(Scale, _Component);

	  function Scale() {
	    _classCallCheck(this, Scale);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Scale.prototype.render = function render() {
	    if (this.props.themeVersion && this.props.themeVersion === 'v2') {
	      return _react2.default.createElement(_Scalev2.default, this.props);
	    }

	    var THs = [];
	    var TDs = [];

	    var lowest = this.props.scaleFrom ? parseInt(this.props.scaleFrom.value, 10) : NaN;
	    lowest = isNaN(lowest) ? 1 : lowest;

	    var required = this.props.required && this.props.required.value === 'Yes' ? true : null;

	    for (var x = lowest; x <= this.props.scaleAmount.value; x++) {
	      THs.push(_react2.default.createElement(
	        'th',
	        { key: x, style: { textAlign: 'center' } },
	        _react2.default.createElement(
	          'label',
	          { htmlFor: this.props.qid.value + '_' + x },
	          x
	        )
	      ));

	      TDs.push(_react2.default.createElement(
	        'td',
	        { key: x, style: { textAlign: 'center' } },
	        _react2.default.createElement('input', { className: (0, _Utils.addValidation)(_Utils.classNames.radio, this.props), type: 'radio', name: this.props.qname.value, value: x, title: x, id: this.props.qid.value + '_' + x, required: required })
	      ));
	    }

	    var fromText = void 0;
	    var toText = void 0;

	    if (this.props.inlineEditClass) {
	      fromText = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'fromText',
	        text: this.props.fromText.value,
	        defaultValue: _QuestionProps2.default[this.props.type.value].fromText.value,
	        placeholder: 'Type worst text'
	      });
	      toText = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'toText',
	        text: this.props.toText.value,
	        defaultValue: _QuestionProps2.default[this.props.type.value].toText.value,
	        placeholder: 'Type best text'
	      });
	    } else {
	      fromText = _react2.default.createElement(
	        'label',
	        { htmlFor: this.props.qid.value + '_worst', 'aria-hidden': 'true' },
	        (0, _Utils.htmlDecode)((0, _Utils.sanitize)(this.props.fromText.value))
	      );
	      toText = _react2.default.createElement(
	        'label',
	        { htmlFor: this.props.qid.value + '_best', 'aria-hidden': 'true' },
	        (0, _Utils.htmlDecode)((0, _Utils.sanitize)(this.props.toText.value))
	      );
	    }
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      {
	        hidePartLabelA11Y: true,
	        labelValue: { text: lowest + ' is ' + this.props.fromText.value + ', ' + this.props.scaleAmount.value + ' is ' + this.props.toText.value, id: this.props.qid.value + '_description' }
	      },
	      _react2.default.createElement(
	        'table',
	        {
	          role: 'radiogroup',
	          'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, (0, _Utils.subLabel)(this.props)) + ' sublabel_' + this.props.qid.value + '_description',
	          cellPadding: '4', cellSpacing: '0', className: 'form-scale-table', 'data-component': 'scale'
	        },
	        _react2.default.createElement(
	          'tbody',
	          null,
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'th',
	              null,
	              '\xA0'
	            ),
	            THs,
	            _react2.default.createElement(
	              'th',
	              null,
	              '\xA0'
	            )
	          ),
	          _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	              'td',
	              null,
	              fromText
	            ),
	            TDs,
	            _react2.default.createElement(
	              'td',
	              null,
	              toText
	            )
	          )
	        )
	      )
	    );
	  };

	  return Scale;
	}(_react.Component);

	exports.default = Scale;


	Scale.propTypes = {
	  id: _propTypes2.default.shape(),
	  qid: _propTypes2.default.shape(),
	  qname: _propTypes2.default.shape(),
	  toText: _propTypes2.default.shape(),
	  fromText: _propTypes2.default.shape(),
	  scaleAmount: _propTypes2.default.shape(),
	  scaleFrom: _propTypes2.default.shape(),
	  type: _propTypes2.default.shape(),
	  inlineEditClass: _propTypes2.default.func,
	  required: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  themeVersion: _propTypes2.default.string
	};

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Scale = function (_Component) {
	  _inherits(Scale, _Component);

	  function Scale() {
	    _classCallCheck(this, Scale);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Scale.prototype.render = function render() {
	    var TDs = [];

	    var fromText = void 0;
	    var toText = void 0;

	    if (this.props.inlineEditClass) {
	      fromText = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'fromText',
	        text: this.props.fromText.value,
	        defaultValue: _QuestionProps2.default[this.props.type.value].fromText.value,
	        placeholder: 'Type worst text'
	      });
	      toText = _react2.default.createElement(this.props.inlineEditClass, {
	        id: this.props.id.value,
	        propPath: 'toText',
	        text: this.props.toText.value,
	        defaultValue: _QuestionProps2.default[this.props.type.value].toText.value,
	        placeholder: 'Type best text'
	      });
	    } else {
	      fromText = _react2.default.createElement(
	        'label',
	        { htmlFor: this.props.qid.value + '_worst', 'aria-hidden': 'true' },
	        (0, _Utils.htmlDecode)((0, _Utils.sanitize)(this.props.fromText.value))
	      );
	      toText = _react2.default.createElement(
	        'label',
	        { htmlFor: this.props.qid.value + '_best', 'aria-hidden': 'true' },
	        (0, _Utils.htmlDecode)((0, _Utils.sanitize)(this.props.toText.value))
	      );
	    }

	    var lowest = this.props.scaleFrom ? parseInt(this.props.scaleFrom.value, 10) : NaN;
	    lowest = isNaN(lowest) ? 1 : lowest;

	    var required = this.props.required && this.props.required.value === 'Yes' ? true : null;

	    for (var x = lowest; x <= this.props.scaleAmount.value; x++) {
	      TDs.push(_react2.default.createElement(
	        'div',
	        { className: 'rating-item', key: x },
	        x === lowest && _react2.default.createElement(
	          'span',
	          { className: 'rating-item-title for-from' },
	          fromText
	        ),
	        x === parseInt(this.props.scaleAmount.value, 0) && _react2.default.createElement(
	          'span',
	          { className: 'rating-item-title for-to' },
	          toText
	        ),
	        _react2.default.createElement('input', { className: (0, _Utils.addValidation)(_Utils.classNames.radio, this.props), type: 'radio', name: this.props.qname.value, value: x, title: x, id: this.props.qid.value + '_' + x, required: required }),
	        _react2.default.createElement(
	          'label',
	          { htmlFor: this.props.qid.value + '_' + x },
	          x
	        )
	      ));
	    }

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      {
	        hidePartLabelA11Y: true,
	        labelValue: { text: lowest + ' is ' + this.props.fromText.value + ', ' + this.props.scaleAmount.value + ' is ' + this.props.toText.value, id: this.props.qid.value + '_description' }
	      },
	      _react2.default.createElement(
	        'div',
	        {
	          role: 'radiogroup',
	          'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, (0, _Utils.subLabel)(this.props)) + ' sublabel_' + this.props.qid.value + '_description',
	          cellPadding: '4', cellSpacing: '0', className: 'form-scale-table', 'data-component': 'scale'
	        },
	        _react2.default.createElement(
	          'div',
	          { className: 'rating-item-group' },
	          TDs
	        )
	      )
	    );
	  };

	  return Scale;
	}(_react.Component);

	exports.default = Scale;


	Scale.propTypes = {
	  id: _propTypes2.default.shape(),
	  qid: _propTypes2.default.shape(),
	  qname: _propTypes2.default.shape(),
	  toText: _propTypes2.default.shape(),
	  fromText: _propTypes2.default.shape(),
	  scaleAmount: _propTypes2.default.shape(),
	  scaleFrom: _propTypes2.default.shape(),
	  type: _propTypes2.default.shape(),
	  inlineEditClass: _propTypes2.default.func,
	  required: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Screenshot = function Screenshot(prop) {
	  var markup = [];
	  var qid = prop.qid.value;
	  var qname = prop.qname.value;
	  var id = prop.id.value;

	  markup.push(_react2.default.createElement('textarea', { name: qname + '[data]', id: 'data_' + id, style: { display: 'none' } }));

	  markup.push(_react2.default.createElement(
	    'div',
	    { className: 'form-screenshot-plate', style: { display: 'none', width: parseFloat(prop.width.value) + 'px' } },
	    _react2.default.createElement('div', { id: 'screen_' + id, className: 'form-screenshot-img', style: { maxWidth: parseFloat(prop.width.value) + 'px' } })
	  ));

	  var txWidth = parseFloat(prop.width.value) + 'px';
	  var textArea = _react2.default.createElement(
	    'div',
	    { style: { position: 'relative', width: parseFloat(prop.width.value) + 'px' } },
	    _react2.default.createElement('textarea', {
	      disabled: prop.inlineEditClass,
	      className: (0, _Utils.addValidation)(_Utils.classNames.textarea, prop) + ' form-screen-message',
	      name: qname + '[message]',
	      id: qid,
	      style: { width: txWidth, maxWidth: txWidth, minWidth: txWidth, height: prop.height.value + 'px' },
	      'data-component': 'screenshot'
	    }),
	    _react2.default.createElement(
	      'button',
	      { style: { display: 'none' }, className: 'form-screen-button', id: 'button_' + id, type: 'button' },
	      _react2.default.createElement(
	        'div',
	        null,
	        '\xA0'
	      )
	    )
	  );

	  markup.push(textArea);

	  if (prop.entryLimit && prop.entryLimit.value) {
	    var l = prop.entryLimit.value.split('-');
	    if (l[0] !== 'None' && l[1] > 1) {
	      markup = _react2.default.createElement(
	        'div',
	        { className: 'form-textarea-limit' },
	        _react2.default.createElement(
	          'span',
	          null,
	          markup,
	          _react2.default.createElement(
	            'div',
	            { className: 'form-textarea-limit-indicator' },
	            _react2.default.createElement(
	              'label',
	              { htmlFor: qid, style: { float: 'left' } },
	              prop.subLabel.value
	            ),
	            _react2.default.createElement(
	              'span',
	              { type: l[0], 'data-limit': l[1], id: qid + '-limit' },
	              '0/' + l[1]
	            )
	          )
	        )
	      );
	    } else if (prop.subLabel && prop.subLabel.value) {
	      markup = _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, prop, {
	          labelValue: prop.subLabel.value,
	          defaultValue: _QuestionProps2.default.control_screenshot.subLabel.value,
	          propPath: 'sublabel',
	          'for': qid
	        }),
	        markup
	      );
	    } else {
	      markup = _react2.default.createElement(
	        'div',
	        { 'data-wrapper-react': 'true' },
	        markup
	      );
	    }
	  } else if (prop.subLabel && prop.subLabel.value) {
	    markup = _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, prop, {
	        labelValue: prop.subLabel.value,
	        defaultValue: _QuestionProps2.default.control_screenshot.subLabel.value,
	        propPath: 'sublabel',
	        'for': qid
	      }),
	      markup
	    );
	  } else {
	    markup = _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      markup
	    );
	  }

	  return markup;
	};

	exports.default = Screenshot;

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Separator = function Separator(prop) {
	  var borderColor = 'rgb(0,0,0)';
	  var borderWidth = '1px';
	  var borderStyle = 'solid';

	  if (prop.borderWidth && prop.borderWidth.value) {
	    borderWidth = prop.borderWidth.value;
	  }
	  if (prop.borderStyle && prop.borderStyle.value) {
	    borderStyle = prop.borderStyle.value;
	  }
	  if (prop.borderColor && prop.borderColor.value) {
	    borderColor = prop.borderColor.value;
	  }

	  var separatorStyle = {
	    borderTop: borderWidth + ' ' + borderStyle + ' ' + borderColor,
	    clear: 'both'
	  };

	  return _react2.default.createElement('div', { 'data-component': 'separator', style: separatorStyle });
	};

	exports.default = Separator;

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Signature = function Signature(prop) {
	  var id = prop.id.value;
	  var passive = prop.inlineEditClass;
	  var ids = 'signature_pad_' + id;

	  var markup = [];

	  if (passive) {
	    var div = _react2.default.createElement(
	      'div',
	      { className: 'signature-pad-passive', style: { width: prop.width.value + 'px', height: prop.height.value + 'px' } },
	      _react2.default.createElement('div', { className: 'signature-line' })
	    );

	    if (prop.subLabel && prop.subLabel.value) {
	      div = _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, prop, {
	          labelValue: prop.subLabel.value,
	          defaultValue: _QuestionProps2.default.control_signature.subLabel
	        }),
	        div
	      );
	    }

	    markup.push(div);
	  } else {
	    var script = '<!--[if IE 7]>' + '<script type="text/javascript" src="/js/vendor/json2.js"></script>' + '<![endif]-->';

	    var scriptDiv = _react2.default.createElement('div', { 'data-wrapper-react': 'true', dangerouslySetInnerHTML: { __html: script } });

	    var required = prop.required.value === 'Yes';

	    var sigWidth = parseInt(prop.width.value, 10) + 2;
	    var sigHeight = parseInt(prop.height.value, 10) + 2;

	    var _div = _react2.default.createElement(
	      'div',
	      { className: 'signature-line signature-wrapper signature-placeholder', 'data-component': 'signature', style: { width: sigWidth + 'px', height: sigHeight + 'px' } },
	      _react2.default.createElement('div', {
	        id: 'sig_pad_' + id,
	        'data-width': prop.width.value,
	        'data-height': prop.height.value,
	        'data-id': id,
	        'data-required': required,
	        className: 'pad ' + (required ? 'validate[required]' : '')
	      }),
	      _react2.default.createElement('input', { type: 'hidden', name: 'q' + id + '_' + prop.name.value, className: 'output4', id: 'input_' + id })
	    );

	    if (prop.subLabel && prop.subLabel.value) {
	      _div = _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, prop, {
	          labelValue: prop.subLabel.value,
	          'for': 'sig_pad_' + id,
	          wrapAlways: true,
	          defaultValue: _QuestionProps2.default.control_signature.subLabel
	        }),
	        scriptDiv,
	        _div
	      );
	    } else {
	      _div = [scriptDiv, _div];
	    }

	    _div = _react2.default.createElement(
	      'div',
	      { id: ids, className: 'signature-pad-wrapper', style: { width: sigWidth + 'px', height: sigHeight + 'px' } },
	      _div,
	      ' ',
	      _react2.default.createElement(
	        'span',
	        { className: 'clear-pad-btn clear-pad', role: 'button', tabIndex: '0' },
	        'Clear'.locale()
	      )
	    );

	    markup.push(_div);
	    markup.push(_react2.default.createElement('div', { 'data-wrapper-react': 'true', dangerouslySetInnerHTML: { __html: '<script type="text/javascript">window.signatureForm = true</script>' } }));
	  }

	  return _react2.default.createElement(
	    'div',
	    { 'data-wrapper-react': 'true' },
	    markup
	  );
	};

	exports.default = Signature;

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Skrill = function (_Component) {
	  _inherits(Skrill, _Component);

	  function Skrill() {
	    _classCallCheck(this, Skrill);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Skrill.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_skrill'
	    }));
	  };

	  return Skrill;
	}(_react.Component);

	exports.default = Skrill;


	Skrill.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Skrill.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Skrill.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-eval:0 */


	var Slider = function (_Component) {
	  _inherits(Slider, _Component);

	  function Slider() {
	    _classCallCheck(this, Slider);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Slider.prototype.componentDidMount = function componentDidMount() {
	    eval(Slider.getScript(this.props));
	  };

	  Slider.prototype.componentDidUpdate = function componentDidUpdate() {
	    // disabled this for now
	    // this component is being rendered twice
	    // I guess its parent should use shouldComponentUpdate
	    // to handle rerenders
	    // when the scripts evaluated twice
	    // two sliders will be appened
	    // eval(Slider.getScript(this.props));
	  };

	  Slider.prototype.render = function render() {
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement('input', {
	        disabled: this.props.inlineEditClass,
	        'data-component': 'slider',
	        type: 'range',
	        className: (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props),
	        id: this.props.qid.value,
	        name: this.props.qname.value
	      })
	    );
	  };

	  return Slider;
	}(_react.Component);

	exports.default = Slider;


	Slider.getState = function (prop) {
	  return {
	    qid: prop.qid.value,
	    width: prop.width.value,
	    maxValue: prop.maxValue.value,
	    defaultValue: prop.defaultValue.value
	  };
	};

	Slider.getScript = function (prop) {
	  var state = Slider.getState(prop);
	  /* eslint max-len:0 */
	  return '    $(\'' + state.qid + '\').slider({width:\'' + state.width + '\', maxValue: \'' + state.maxValue + '\', value: \'' + state.defaultValue.trim() + '\'});\n';
	  /* eslint max-len:1 */
	};

	Slider.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func
	};

/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Sofort = function (_Component) {
	  _inherits(Sofort, _Component);

	  function Sofort() {
	    _classCallCheck(this, Sofort);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Sofort.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_sofort'
	    }));
	  };

	  return Sofort;
	}(_react.Component);

	exports.default = Sofort;


	Sofort.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Sofort.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Sofort.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-eval:0 */

	var Spinner = function (_Component) {
	  _inherits(Spinner, _Component);

	  function Spinner() {
	    _classCallCheck(this, Spinner);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Spinner.prototype.componentDidMount = function componentDidMount() {
	    eval(Spinner.getScript(this.props));
	  };

	  Spinner.prototype.componentDidUpdate = function componentDidUpdate() {
	    eval(Spinner.getScript(this.props));
	  };

	  Spinner.prototype.render = function render() {
	    var additionalClass = (0, _Utils.addValidation)(_Utils.classNames.textbox, this.props);

	    var minValue = this.props.minValue && this.props.minValue.value ? this.props.minValue.value : null;
	    var maxValue = this.props.maxValue && this.props.maxValue.value ? this.props.maxValue.value : null;

	    var decimalClass = this.props.disallowDecimals && this.props.disallowDecimals.value && this.props.disallowDecimals.value === 'Yes' ? 'disallowDecimals' : '';
	    var qidValue = this.props.qid.value;

	    var subLabelObj = (0, _Utils.subLabelSingle)(this.props, qidValue);
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        key: Math.random(),
	        labelValue: subLabelObj,
	        'for': qidValue,
	        propPath: 'subLabel',
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        qid: qidValue,
	        qname: this.props.qname.value,
	        type: 'number',
	        componentDataType: 'input-spinner',
	        minValue: minValue,
	        maxValue: maxValue,
	        additionalClass: 'form-spinner-input ' + decimalClass + ' ' + additionalClass,
	        dataComponent: 'spinner',
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, subLabelObj)
	      }))
	    );
	  };

	  return Spinner;
	}(_react.Component);

	exports.default = Spinner;


	Spinner.getState = function (prop) {
	  return {
	    imgPath: 'images/',
	    width: prop.width.value,
	    maxValue: prop.maxValue.value,
	    minValue: prop.minValue.value,
	    allowNegative: prop.allowMinus.value === 'Yes',
	    addAmount: prop.addAmount.value,
	    value: prop.defaultValue.value,
	    disallowDecimals: prop.disallowDecimals.value === 'Yes'
	  };
	};

	Spinner.getScript = function (prop) {
	  var state = Spinner.getState(prop);
	  var script = '    if(typeof $(\'' + prop.qid.value + '\').spinner !== \'undefined\') {$(\'' + prop.qid.value + '\').spinner({ imgPath:\'' + prop.cdnconfig.CDN + 'images/\', width: \'' + state.width + '\', maxValue:\'' + state.maxValue + '\', minValue:\'' + state.minValue + '\', allowNegative: ' + (state.allowNegative ? 'true' : 'false') + ', addAmount: ' + (parseFloat(state.addAmount) || 1) + ', value:\'' + state.value + '\' });}\n';
	  script += '    $(\'' + prop.qid.value + '\').up(2).setAttribute(\'tabindex\',\'\');\n';
	  /* eslint max-len:0 */
	  return script;
	  /* eslint max-len:1 */
	};

	Spinner.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  minValue: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  maxValue: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  decimalClass: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  addAmount: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  disallowDecimals: _propTypes2.default.shape(),
	  type: _propTypes2.default.shape()
	};

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Square = function (_Component) {
	  _inherits(Square, _Component);

	  function Square() {
	    _classCallCheck(this, Square);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Square.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_square' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true', className: 'square-payment-wrapper', 'data-square-currency': this.props.currency && this.props.currency.value },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_square'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Square;
	}(_react.Component);

	exports.default = Square;


	Square.propTypes = {
	  currency: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	Square.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Square.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Square.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Stripe = function (_Component) {
	  _inherits(Stripe, _Component);

	  function Stripe() {
	    _classCallCheck(this, Stripe);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Stripe.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_stripe' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true', className: 'stripe-payment-wrapper', 'data-stripe-currency': this.props.currency && this.props.currency.value },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_stripe'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Stripe;
	}(_react.Component);

	exports.default = Stripe;


	Stripe.propTypes = {
	  currency: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	Stripe.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Stripe.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Stripe.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _BaseButton = __webpack_require__(100);

	var _BaseButton2 = _interopRequireDefault(_BaseButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var StripeACH = function (_Component) {
	  _inherits(StripeACH, _Component);

	  function StripeACH() {
	    _classCallCheck(this, StripeACH);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  StripeACH.prototype.renderBankInfo = function renderBankInfo() {
	    return _react2.default.createElement(
	      'table',
	      {
	        style: { border: 0, marginTop: '20px' },
	        className: 'plaid_area',
	        cellPadding: '0',
	        cellSpacing: '0',
	        id: 'plaid-payload',
	        'data-environment': this.props.environment.value
	      },
	      _react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'th',
	          { className: 'plaid_bank_account_title' },
	          'Select Bank Account'
	        )
	      ),
	      _react2.default.createElement(
	        'tr',
	        null,
	        _react2.default.createElement(
	          'td',
	          { className: 'plaid_description' },
	          ' Please select the bank account to make a payment.'
	        ),
	        _react2.default.createElement(
	          'td',
	          { className: 'plaid_select_btn' },
	          _react2.default.createElement(
	            'button',
	            { id: 'open-plaid-link', type: 'button', className: 'open-plaid-link', 'data-component': 'button' },
	            'Select'
	          )
	        ),
	        _react2.default.createElement(
	          'td',
	          { className: 'plaid-bank-details', style: { display: 'none' } },
	          _react2.default.createElement(
	            'table',
	            null,
	            _react2.default.createElement(
	              'tr',
	              { className: 'plaid-bank-detail' },
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'b',
	                  null,
	                  'Institution'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                ':'
	              ),
	              _react2.default.createElement(
	                'td',
	                { id: 'plaid-institution-name' },
	                'institution'
	              )
	            ),
	            _react2.default.createElement(
	              'tr',
	              { className: 'plaid-bank-detail' },
	              _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                  'b',
	                  null,
	                  'Account Name'
	                )
	              ),
	              _react2.default.createElement(
	                'td',
	                null,
	                ':'
	              ),
	              _react2.default.createElement(
	                'td',
	                { id: 'plaid-account-name' },
	                'account_name'
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'td',
	          { className: 'plaid-bank-buttons', style: { display: 'none' } },
	          _react2.default.createElement(_BaseButton2.default, {
	            id: 'plaid-remove-token',
	            additionalClass: 'plaid-remove-bank',
	            buttonText: 'Remove',
	            type: 'button'
	          }),
	          _react2.default.createElement(_BaseButton2.default, {
	            id: 'plaid-change-bank',
	            additionalClass: 'plaid-remove-bank',
	            buttonText: 'Change',
	            type: 'button'
	          })
	        )
	      )
	    );
	  };

	  StripeACH.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_stripeACH'
	      })),
	      this.renderBankInfo()
	    );
	  };

	  return StripeACH;
	}(_react.Component);

	exports.default = StripeACH;


	StripeACH.propTypes = {
	  plaidPublic: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  environment: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

	StripeACH.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	StripeACH.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	StripeACH.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var StripeACHManual = function (_Component) {
	  _inherits(StripeACHManual, _Component);

	  function StripeACHManual() {
	    _classCallCheck(this, StripeACHManual);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  StripeACHManual.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_stripeACHManual' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_stripeACHManual'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return StripeACHManual;
	}(_react.Component);

	exports.default = StripeACHManual;


	StripeACHManual.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	StripeACHManual.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	StripeACHManual.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {'use strict';

	exports.__esModule = true;

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-eval:0 */

	var Text = function (_Component) {
	  _inherits(Text, _Component);

	  function Text() {
	    _classCallCheck(this, Text);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Text.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (!nextProps.isEditing && this.props.isEditing && this.props.richTextEditor) {
	      this.props.richTextEditor.onSave();
	    }
	  };

	  Text.prototype.handleClick = function handleClick() {
	    if (this.props.passive) {
	      this.props.toggleRichTextEditorForQuestion(this.props.id.value, true);
	    }
	  };

	  Text.prototype.render = function render() {
	    var _this2 = this;

	    if (!this.props.richTextEditor || !this.props.isEditing) {
	      var txt = (this.props.text.value || '').replace(/<script|&lt;script|script>|script&gt;/ig, ' ');
	      var content = void 0;
	      txt = (0, _Utils.htmlDecode)(txt);
	      if (this.props.passive) {
	        content = global.document.createElement('div');
	        content = (0, _Utils.stripSlashes)(txt || this.props.emptyText || '');
	        content = (0, _Utils.sanitize)(txt);
	      } else {
	        content = (0, _Utils.sanitize)((0, _Utils.stripSlashes)(txt));
	      }
	      if (content === '' && this.props.passive) {
	        content = '' + 'Click to edit this text...'.locale();
	      }
	      return _react2.default.createElement('div', {
	        id: 'text_' + this.props.id.value,
	        className: 'form-html',
	        'data-component': 'text',
	        dangerouslySetInnerHTML: { __html: content },
	        onClick: function onClick() {
	          return _this2.handleClick();
	        }
	      });
	    }

	    return _react2.default.createElement(this.props.richTextEditor.type, {
	      key: 'richTextEditor' + this.props.id.value,
	      content: this.props.text.value,
	      config: {
	        menubar: '',
	        plugins: 'autolink link image lists print preview textcolor table code paste searchreplace charactercount',
	        paste_as_text: true,
	        height: this.props.richTextEditor.editorHeight,
	        toolbar: 'code hr removeformat | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent table | link customimage preview | fontselect fontsizeselect styleselect | forecolor backcolor | questionlist', // eslint-disable-line
	        language_url: this.props.richTextEditor.languageUrl
	      },
	      containerClass: 'mainCard',
	      imagePickerModalClass: 'disable-drag',
	      containerStyle: { padding: '10px' },
	      addFormFields: true,
	      filterPostData: true,
	      questions: this.props.richTextEditor.questions,
	      onChange: function onChange() {},
	      onInit: function onInit() {}
	    });
	  };

	  return Text;
	}(_react.Component);

	exports.default = Text;


	Text.getState = function () {
	  return {};
	};

	Text.propTypes = {
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  passive: _propTypes2.default.bool,
	  toggleRichTextEditorForQuestion: _propTypes2.default.func,
	  emptyText: _propTypes2.default.string,
	  richTextEditor: _propTypes2.default.shape(),
	  isEditing: _propTypes2.default.bool
	};
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-eval:0 */

	var Textarea = function (_Component) {
	  _inherits(Textarea, _Component);

	  function Textarea() {
	    _classCallCheck(this, Textarea);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Textarea.prototype.componentDidMount = function componentDidMount() {
	    eval(Textarea.getScript(this.props));
	  };

	  Textarea.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (this.props.hint && this.props.hint.value) {
	      if (nextProps.hint.value !== this.props.hint.value) {
	        eval(Textarea.getScript(nextProps));
	      }
	    } else {
	      eval(Textarea.getScript(nextProps));
	    }
	  };

	  Textarea.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var _props = this.props,
	        hint = _props.hint,
	        wysiwyg = _props.wysiwyg;


	    var isEditorModeChanged = prevProps.wysiwyg && wysiwyg && prevProps.wysiwyg.value !== wysiwyg.value;
	    if (hint && hint.value && isEditorModeChanged) {
	      eval(Textarea.getScript(this.props));
	    }
	  };

	  Textarea.prototype.render = function render() {
	    var wideArea = this.props.wysiwyg && this.props.wysiwyg.value === 'Widearea';
	    var richText = this.props.wysiwyg && this.props.wysiwyg.value === 'Enable';
	    var qidValue = this.props.qid.value;

	    var subLabelObj = (0, _Utils.subLabelSingle)(this.props, qidValue);
	    var extraStyle = {};
	    if (wideArea && !this.props.inlineEditClass) {
	      // add script
	      extraStyle = { overflowY: 'hidden' };
	    } else if (wideArea && this.props.inlineEditClass) {
	      extraStyle = { overflow: 'auto', backgroundImage: 'url(/images/textAreaFullScreen.png)', backgroundRepeat: 'no-repeat', backgroundPosition: 'right 2px top 2px' };
	    } else if (richText && !this.props.inlineEditClass) {
	      extraStyle = { minWidth: '353px', minHeight: '150px', backgroundColor: 'white' };
	    }

	    if (this.props.themeVersion === 'v2' && this.props.cols && this.props.cols.value && this.props.rows && this.props.rows.value) {
	      extraStyle.width = this.props.cols.value + 'px';
	      extraStyle.height = this.props.rows.value + 'px';
	    }

	    var className = '';
	    var hasSubLabel = subLabelObj && subLabelObj.text;
	    // const maxLength = this.props.maxsize && this.props.maxsize.value && this.props.maxsize.value > 0;

	    var maxEntry = this.props.entryLimit.value.split('-');
	    var minEntry = this.props.entryLimitMin.value.split('-');
	    var addLimits = minEntry[1] > 1 && minEntry[0] !== 'None' || maxEntry[1] > 1 && maxEntry[0] !== 'None';

	    var limit = maxEntry[1] && maxEntry[1] > 1 ? maxEntry[1] : -1;
	    var minimum = minEntry[1] && minEntry[1] > 1 ? minEntry[1] : -1;

	    var readOnly = null;
	    var required = null;
	    var tabIndex = null;

	    if (this.props.readonly && this.props.readonly.value === 'Yes') {
	      readOnly = 'readOnly';
	      tabIndex = -1;
	      className += 'form-readonly ';
	    }

	    if (this.props.required && this.props.required.value === 'Yes') {
	      required = 'required';
	    }

	    className += (0, _Utils.addValidation)('form-textarea', this.props);

	    var defaultValue = null;
	    if (this.props.defaultValue && this.props.defaultValue.value) {
	      defaultValue = this.props.passive === true ? this.props.defaultValue.value : (0, _Utils.htmlDecode)((0, _Utils.newlineToEntities)(this.props.defaultValue.value));
	    } else if (this.props.passive) {
	      defaultValue = '';
	    }

	    if (addLimits) {
	      return _react2.default.createElement(
	        'div',
	        { className: 'form-textarea-limit' },
	        _react2.default.createElement(
	          'span',
	          null,
	          richText && this.props.inlineEditClass ? _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement('img', { src: '/images/wysiwygTextArea.png' }),
	            _react2.default.createElement('textarea', { id: qidValue, style: { display: 'none' } })
	          ) : _react2.default.createElement('textarea', {
	            id: qidValue,
	            className: className,
	            name: this.props.qname.value,
	            cols: this.props.themeVersion !== 'v2' ? this.props.cols.value : null,
	            rows: this.props.themeVersion !== 'v2' ? this.props.rows.value : null,
	            style: extraStyle,
	            'data-widearea': wideArea && !this.props.inlineEditClass ? 'enable' : null,
	            'data-richtext': richText && !this.props.inlineEditClass ? 'Yes' : null,
	            'data-component': 'textarea'
	            // maxLength={maxLength ? this.props.maxsize.value : null}
	            , readOnly: readOnly,
	            required: required,
	            tabIndex: tabIndex,
	            value: defaultValue
	          }),
	          _react2.default.createElement(
	            'div',
	            { className: 'form-textarea-limit-indicator' },
	            hasSubLabel ? _react2.default.createElement(
	              'label',
	              { htmlFor: qidValue, style: { float: 'left' }, id: 'sublabel_' + subLabelObj.id },
	              (0, _Utils.sanitize)((0, _Utils.htmlDecode)(subLabelObj.text))
	            ) : null,
	            _react2.default.createElement(
	              'span',
	              { 'data-limit': limit, type: maxEntry[0], 'data-minimum': minimum, 'data-typeminimum': minEntry[0], id: qidValue + '-limit' },
	              '0/' + maxEntry[1]
	            )
	          )
	        )
	      );
	    }

	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        labelValue: subLabelObj,
	        propPath: 'subLabel',
	        'for': qidValue,
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      richText && this.props.inlineEditClass ? _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement('img', { src: '/images/wysiwygTextArea.png' }),
	        _react2.default.createElement('textarea', { id: qidValue, style: { display: 'none' } })
	      ) : _react2.default.createElement('textarea', {
	        id: qidValue,
	        className: className,
	        name: this.props.qname.value,
	        cols: this.props.themeVersion !== 'v2' ? this.props.cols.value : null,
	        rows: this.props.themeVersion !== 'v2' ? this.props.rows.value : null,
	        style: extraStyle,
	        'data-widearea': wideArea && !this.props.inlineEditClass ? 'enable' : null,
	        'data-richtext': richText && !this.props.inlineEditClass ? 'Yes' : null,
	        tabIndex: tabIndex,
	        'data-component': 'textarea',
	        readOnly: readOnly,
	        required: required,
	        value: defaultValue,
	        'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, subLabelObj)
	      })
	    );
	  };

	  return Textarea;
	}(_react.Component);

	exports.default = Textarea;


	Textarea.getState = function () {
	  return {};
	};

	Textarea.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  labelAlign: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  required: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  cols: _propTypes2.default.shape({
	    value: _propTypes2.default.int
	  }),
	  rows: _propTypes2.default.shape({
	    value: _propTypes2.default.int
	  }),
	  validation: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  wysiwyg: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  maxsize: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  entryLimit: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  entryLimitMin: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  readonly: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  hint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  passive: _propTypes2.default.bool,
	  themeVersion: _propTypes2.default.string
	};

	Textarea.escapeUnicodeChars = function (string) {
	  return string.replace(/[^\0-~]/g, function (ch) {
	    var escaped = '000' + ch.charCodeAt().toString(16);
	    return '\\u' + escaped.slice(-4);
	  });
	};

	Textarea.getScript = function (prop) {
	  var script = '';
	  var richText = prop.wysiwyg && prop.wysiwyg.value === 'Enable';

	  if (prop.wysiwyg && prop.wysiwyg.value === 'Widearea' && !prop.inlineEditClass) {
	    script += ' if (typeof wideArea !== \'undefined\') { wideArea(\'#id_' + prop.qid.value.split('_')[1] + '\'); }\n';
	  }

	  if (prop.defaultValue && prop.defaultValue.value) {
	    script += '      $$("#' + prop.qid.value + '")[0].setValue($$(\'#' + prop.qid.value + '\')[0].value.replace(/&#13;&#10;/g, \'\\n\'));\n';
	  }

	  if (prop.passive && !richText) {
	    var hintVal = prop.hint.value.replace(/\\/gim, '\\\\').replace(/\n\r?/g, '\\n').replace(/'/gim, "\\'");
	    script += 'if ($$("#' + prop.qid.value + '")[0]) {  $$("#' + prop.qid.value + '")[0].placeholder = \'' + Textarea.escapeUnicodeChars(hintVal) + '\'; }';
	  }

	  script += 'if (window.JotForm && JotForm.accessible) $(\'' + prop.qid.value + '\').setAttribute(\'tabindex\',0);\n';

	  return script;
	};

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _BaseInput = __webpack_require__(85);

	var _BaseInput2 = _interopRequireDefault(_BaseInput);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Textbox = function (_Component) {
	  _inherits(Textbox, _Component);

	  function Textbox() {
	    _classCallCheck(this, Textbox);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Textbox.prototype.componentDidMount = function componentDidMount() {
	    eval(Textbox.getScript(this.props)); // eslint-disable-line
	  };

	  Textbox.prototype.renderInputMaskWarning = function renderInputMaskWarning() {
	    return _react2.default.createElement(
	      'div',
	      { className: 'hidden-field-warning' },
	      _react2.default.createElement('img', { src: 'images/information-middle.png', align: 'top', alt: '' }),
	      ' This field contains Input Mask: ',
	      this.props.inputTextMask.value
	    );
	  };

	  Textbox.prototype.render = function render() {
	    var className = (0, _Utils.addValidation)('form-textbox', this.props);
	    var qidValue = this.props.qid.value;

	    var subLabelObj = (0, _Utils.subLabelSingle)(this.props, qidValue);
	    var inputTextMask = this.props.inputTextMask && this.props.inputTextMask.value.length > 0;
	    var hasInputMask = inputTextMask && this.props.inlineEditClass;
	    var maskVal = inputTextMask ? 'true' : null;
	    var hasDefaultValue = this.props.defaultValue && this.props.defaultValue.value.length > 0;
	    var textVal = hasInputMask ? this.props.inputTextMask.value : '';
	    textVal = hasDefaultValue ? this.props.defaultValue.value : textVal;
	    var tempDefaultValue = {};
	    if (textVal !== '') {
	      tempDefaultValue.value = textVal;
	    }
	    var style = {};
	    if (this.props.themeVersion && this.props.themeVersion === 'v2' && this.props.size && this.props.size.value) {
	      style = { width: this.props.size.value + 'px' };
	    }
	    return _react2.default.createElement(
	      _SubLabel2.default,
	      _extends({}, this.props, {
	        propPath: 'subLabel',
	        labelValue: subLabelObj,
	        'for': qidValue,
	        defaultValue: _QuestionProps2.default[this.props.type.value].subLabel.value
	      }),
	      _react2.default.createElement(_BaseInput2.default, _extends({}, this.props, {
	        qid: qidValue,
	        qname: this.props.qname.value,
	        componentDataType: 'input-textbox',
	        type: 'text',
	        masked: maskVal,
	        defaultValue: tempDefaultValue,
	        additionalClass: className,
	        dataComponent: 'textbox',
	        ariaLabelledBy: (0, _Utils.ariaLabelledBy)(this.props, subLabelObj),
	        style: style
	      })),
	      hasInputMask && hasDefaultValue && this.props.inlineEditClass ? _react2.default.createElement('br', null) : null,
	      hasInputMask && hasDefaultValue && this.props.inlineEditClass ? this.renderInputMaskWarning() : null
	    );
	  };

	  return Textbox;
	}(_react.Component);

	exports.default = Textbox;


	Textbox.getScript = function (prop) {
	  var script = '';

	  script += 'if (window.JotForm && JotForm.accessible) $(\'' + prop.qid.value + '\').setAttribute(\'tabindex\',0);\n';

	  return script;
	};

	Textbox.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  hasInputMask: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inputTextMask: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  confirmationHint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  type: _propTypes2.default.shape(),
	  themeVersion: _propTypes2.default.string,
	  size: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  })
	};

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	var _QuestionProps = __webpack_require__(84);

	var _QuestionProps2 = _interopRequireDefault(_QuestionProps);

	var _SubLabel = __webpack_require__(80);

	var _SubLabel2 = _interopRequireDefault(_SubLabel);

	var _Timev = __webpack_require__(118);

	var _Timev2 = _interopRequireDefault(_Timev);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Time = function (_Component) {
	  _inherits(Time, _Component);

	  function Time() {
	    _classCallCheck(this, Time);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Time.prototype.getTimeOptions = function getTimeOptions(cur, defaultTime) {
	    var range = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	    var ampmFormat = arguments[3];

	    var displayTime = defaultTime !== 'none';

	    var hourOptions = [];
	    var hour = range ? cur.hourRange : cur.hour;
	    for (var i = cur.start; i <= cur.limit; i++) {
	      var hourSelected = displayTime && i === parseInt(hour, 10) ? 'selected' : null;
	      hourOptions.push(_react2.default.createElement(
	        'option',
	        {
	          selected: hourSelected,
	          value: i,
	          key: range ? 'range_hour_' + i : 'hour_' + i
	        },
	        ampmFormat ? i : (0, _Utils.addZeros)(i, 2)
	      ));
	    }

	    var minOptions = [];
	    // const min = range ? cur.minRange : cur.min;
	    for (var _i = 0; _i < 60; _i += Number(cur.step)) {
	      var selected = displayTime && _i === parseInt(cur.min, 10) ? 'selected' : null;
	      minOptions.push(_react2.default.createElement(
	        'option',
	        {
	          selected: selected,
	          value: (0, _Utils.addZeros)(_i, 2),
	          key: range ? 'range_min_' + _i : 'min_' + _i
	        },
	        (0, _Utils.addZeros)(_i, 2)
	      ));
	    }
	    var amPm = [];
	    var currentAmPm = range ? cur.currentAmpmRange : cur.currentAmpm;
	    if (!this.props.showDayPeriods || this.props.showDayPeriods.value !== 'pmOnly') {
	      var _selected = currentAmPm === 'AM' ? 'selected' : null;
	      amPm.push(_react2.default.createElement(
	        'option',
	        {
	          selected: _selected,
	          value: 'AM',
	          key: range ? 'range_am' : 'am'
	        },
	        'AM'.locale()
	      ));
	    }

	    if (!this.props.showDayPeriods || this.props.showDayPeriods.value !== 'amOnly') {
	      var _selected2 = currentAmPm === 'PM' ? 'selected' : null;
	      amPm.push(_react2.default.createElement(
	        'option',
	        {
	          selected: _selected2,
	          value: 'PM',
	          key: range ? 'range_pm' : 'pm'
	        },
	        'PM'.locale()
	      ));
	    }

	    return { hourOptions: hourOptions, minOptions: minOptions, amPm: amPm };
	  };

	  Time.prototype.render = function render() {
	    if (this.props.themeVersion && this.props.themeVersion === 'v2') {
	      return _react2.default.createElement(_Timev2.default, this.props);
	    }

	    // const date = new Date();
	    // const hour = date.getHours();
	    // const min = date.getMinutes();
	    // manipulate prop ?
	    var disabled = this.props.readonly && this.props.readonly.value === 'Yes' ? ' disabled' : '';
	    var showTimeDiff = this.props.timeDiff && this.props.timeDiff.value === 'Yes';
	    var rangeVal = this.props.range && this.props.range.value === 'Yes';
	    var hourSubLabel = (0, _Utils.subLabel)(this.props, 'hour', this.props.id.value);
	    var minSubLabel = (0, _Utils.subLabel)(this.props, 'minutes', this.props.id.value);
	    var ampmSubLabel = (0, _Utils.subLabelSingle)({ subLabel: { value: 'AM/PM Option' } }, 'ampm', this.props.id.value);
	    // const until = this.props.until;
	    var ampmFormat = this.props.timeFormat && this.props.timeFormat.value === 'AM/PM';

	    var defaultTime = this.props.defaultTime.value;
	    // if(defaultTime === 'Yes') { defaultTime = 'current'; }
	    // else if(defaultTime === 'No') { defaultTime = 'none'; }

	    var defaultClassName = defaultTime === 'current' ? 'currentTime ' : '';

	    var cur = void 0;
	    if (this.props.defaultTime.value.indexOf('custom_') > -1) {
	      var toCustomHour = false;
	      var toCustomMinute = false;
	      var fromD = this.props.defaultTime.value.split('custom_')[1];
	      if (fromD.indexOf('-') > -1) {
	        // time range
	        var range = fromD.split('-');
	        var to = range[1];
	        fromD = range[0];
	        var toSplit = to.split(':');
	        toCustomHour = toSplit[0];
	        toCustomMinute = toSplit[1];
	      }
	      cur = (0, _Utils.getCurrentTime)(this.props, fromD.split(':')[0], fromD.split(':')[1], toCustomHour, toCustomMinute);
	    } else {
	      cur = (0, _Utils.getCurrentTime)(this.props);
	    }

	    var rangeMarkup = [];

	    var untilSpan = this.props.inlineEditClass ? _react2.default.createElement(this.props.inlineEditClass, {
	      id: this.props.id.value,
	      propPath: 'until',
	      text: this.props.until ? this.props.until.value : 'until',
	      defaultValue: this.props.until ? this.props.until.value : 'until',
	      placeholder: 'Type a range indicator.'
	    }) : this.props.until && this.props.until.value || 'until';

	    if (rangeVal) {
	      rangeMarkup.push(_react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          propPath: 'sublabels.until',
	          wrapAlways: true,
	          editable: false,
	          'for': 'until_' + this.props.id.value,
	          labelValue: 'until',
	          containerClasses: 'until-wrapper',
	          hidePartLabelA11Y: true,
	          key: 'until_range'
	        }),
	        _react2.default.createElement(
	          'div',
	          {
	            id: 'until_' + this.props.id.value,
	            className: 'until-text'
	          },
	          ' ',
	          untilSpan
	        )
	      ));
	      var hrRangeSubLabel = (0, _Utils.subLabel)(this.props, 'hourRange', this.props.id.value);
	      rangeMarkup.push(_react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: hrRangeSubLabel,
	          propPath: 'sublabels.hourRange',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.hourRange,
	          link: _react2.default.createElement(
	            'span',
	            { className: 'date-separate' },
	            '\xA0:'
	          ),
	          'for': this.props.qid.value + '_hourSelectRange',
	          key: 'hour_range'
	        }),
	        _react2.default.createElement(
	          'select',
	          {
	            disabled: disabled,
	            readOnly: this.props.inlineEditClass,
	            className: 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props),
	            id: 'input_' + this.props.id.value + '_hourSelectRange',
	            name: this.props.qname.value + '[hourSelectRange]',
	            'data-component': 'time-hour-range',
	            required: this.props.required && this.props.required.value === 'Yes' ? true : null,
	            'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, hrRangeSubLabel)
	          },
	          _react2.default.createElement('option', null),
	          this.getTimeOptions(cur, defaultTime, true, ampmFormat).hourOptions
	        )
	      ));
	      var minRangeSubLabel = (0, _Utils.subLabel)(this.props, 'minutesRange', this.props.id.value);
	      rangeMarkup.push(_react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: minRangeSubLabel,
	          propPath: 'sublabels.minutesRange',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.minutesRange,
	          'for': this.props.qid.value + '_minuteSelectRange',
	          key: 'minute_range'
	        }),
	        _react2.default.createElement(
	          'select',
	          {
	            disabled: disabled,
	            className: 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props),
	            id: 'input_' + this.props.id.value + '_minuteSelectRange',
	            name: this.props.qname.value + '[minuteSelectRange]',
	            'data-component': 'time-minute-range',
	            required: this.props.required && this.props.required.value === 'Yes' ? true : null,
	            'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, minRangeSubLabel)
	          },
	          _react2.default.createElement('option', null),
	          this.getTimeOptions(cur, defaultTime, true).minOptions
	        )
	      ));
	      var ampmRangeSubLabel = (0, _Utils.subLabelSingle)({ subLabel: { value: 'AM/PM Option' } }, 'ampmRange', this.props.id.value);
	      if (ampmFormat) {
	        rangeMarkup.push(_react2.default.createElement(
	          _SubLabel2.default,
	          _extends({}, this.props, {
	            wrapAlways: true,
	            editable: false,
	            'for': this.props.qid.value + '_ampmRange',
	            labelValue: ampmRangeSubLabel,
	            hidePartLabelA11Y: true,
	            key: 'ampm_range'
	          }),
	          _react2.default.createElement(
	            'select',
	            {
	              disabled: disabled,
	              className: 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props),
	              id: 'input_' + this.props.id.value + '_ampmRange',
	              name: this.props.qname.value + '[ampmRange]',
	              'data-component': 'time-ampm-range',
	              required: this.props.required && this.props.required.value === 'Yes' ? true : null,
	              'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, ampmRangeSubLabel)
	            },
	            this.getTimeOptions(cur, defaultTime, true).amPm
	          )
	        ));
	      }
	    }

	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: hourSubLabel,
	          propPath: 'sublabels.hour',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.hour,
	          link: _react2.default.createElement(
	            'span',
	            { className: 'date-separate' },
	            '\xA0:'
	          ),
	          'for': this.props.qid.value + '_hourSelect',
	          key: 'hour'
	        }),
	        _react2.default.createElement(
	          'select',
	          {
	            disabled: disabled,
	            className: defaultClassName + 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props),
	            id: 'input_' + this.props.id.value + '_hourSelect',
	            name: this.props.qname.value + '[hourSelect]',
	            'data-component': 'time-hour',
	            required: this.props.required && this.props.required.value === 'Yes' ? true : null,
	            'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, hourSubLabel)
	          },
	          _react2.default.createElement('option', null),
	          this.getTimeOptions(cur, defaultTime, false, ampmFormat).hourOptions
	        )
	      ),
	      _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          labelValue: minSubLabel,
	          propPath: 'sublabels.minutes',
	          defaultValue: _QuestionProps2.default[this.props.type.value].sublabels.value.minutes,
	          'for': this.props.qid.value + '_minuteSelect',
	          key: 'minute'
	        }),
	        _react2.default.createElement(
	          'select',
	          {
	            disabled: disabled,
	            className: 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props),
	            id: 'input_' + this.props.id.value + '_minuteSelect',
	            name: this.props.qname.value + '[minuteSelect]',
	            'data-component': 'time-minute',
	            required: this.props.required && this.props.required.value === 'Yes' ? true : null,
	            'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, minSubLabel)
	          },
	          _react2.default.createElement('option', null),
	          this.getTimeOptions(cur, defaultTime).minOptions
	        )
	      ),
	      ampmFormat ? _react2.default.createElement(
	        _SubLabel2.default,
	        _extends({}, this.props, {
	          wrapAlways: true,
	          editable: false,
	          'for': this.props.qid.value + '_ampm',
	          labelValue: ampmSubLabel,
	          hidePartLabelA11Y: true,
	          key: 'ampm'
	        }),
	        _react2.default.createElement(
	          'select',
	          {
	            disabled: disabled,
	            className: 'time-dropdown ' + (0, _Utils.addValidation)(_Utils.classNames.dropdown, this.props),
	            id: 'input_' + this.props.id.value + '_ampm',
	            name: this.props.qname.value + '[ampm]',
	            'data-component': 'time-ampm',
	            required: this.props.required && this.props.required.value === 'Yes' ? true : null,
	            'aria-labelledby': (0, _Utils.ariaLabelledBy)(this.props, ampmSubLabel)
	          },
	          this.getTimeOptions(cur, defaultTime).amPm
	        )
	      ) : null,
	      rangeMarkup,
	      showTimeDiff ? _react2.default.createElement('input', {
	        type: 'hidden',
	        id: 'duration_' + this.props.id.value + '_ampmRange',
	        name: this.props.qname.value + '[timeRangeDuration]',
	        value: ''
	      }) : null,
	      !ampmFormat && showTimeDiff ? _react2.default.createElement(
	        _SubLabel2.default,
	        {
	          labelValue: (0, _Utils.subLabel)(this.props, ''),
	          wrapAlways: true,
	          editable: false,
	          'for': 'input_' + this.props.id.value + '_dummy'
	        },
	        _react2.default.createElement(
	          'span',
	          {
	            id: 'input_' + this.props.id.value + '_dummy'
	          },
	          '\xA0'
	        )
	      ) : null
	    );
	  };

	  return Time;
	}(_react.Component);

	exports.default = Time;


	Time.getScript = function (props) {
	  var script = '';
	  var id = props.id.value;
	  if (props.range && props.range.value === 'Yes' && props.timeDiff && props.timeDiff.value === 'Yes') {
	    script += '      JotForm.displayTimeRangeDuration(' + id + ');\n';
	  }

	  var fixAmPm = props.timeFormat && props.timeFormat.value === 'AM/PM' && props.showDayPeriods && props.showDayPeriods.value === 'both' && props.defaultTime && props.defaultTime.value === 'none';
	  if (!props.inlineEditClass && props.defaultTime && (props.defaultTime.value === 'current' || fixAmPm)) {
	    if (props.themeVersion && props.themeVersion === 'v2') {
	      script += '      JotForm.displayLocalTime("input_' + id + '_hourSelect", "input_' + id + '_minuteSelect","input_' + id + '_ampm", "input_' + id + '_timeInput", ' + fixAmPm + ');\n';
	    } else {
	      script += '      JotForm.displayLocalTime("input_' + id + '_hourSelect", "input_' + id + '_minuteSelect","input_' + id + '_ampm", null, ' + fixAmPm + ');\n';
	    }
	  }
	  return script;
	};

	Time.getState = function () {
	  return {};
	};

	Time.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  id: _propTypes2.default.shape({
	    value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  text: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  type: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  required: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  range: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  timeFormat: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  showDayPeriods: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultTime: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  step: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  description: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  timeDiff: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  until: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabels: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  readonly: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inlineEditClass: _propTypes2.default.func,
	  themeVersion: _propTypes2.default.string
	};

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Wepay = function (_Component) {
	  _inherits(Wepay, _Component);

	  function Wepay() {
	    _classCallCheck(this, Wepay);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Wepay.prototype.render = function render() {
	    if (!_ProductContainer2.default.checkRenderStatus(this.props)) {
	      _ProductContainer2.default.staticVars.hidden = true;
	      return '';
	    }
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_wepay' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_wepay'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Wepay;
	}(_react.Component);

	exports.default = Wepay;


	Wepay.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Wepay.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Wepay.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _propTypes = __webpack_require__(4);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Utils = __webpack_require__(16);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-eval:0 */


	var Widget = function (_Component) {
	  _inherits(Widget, _Component);

	  function Widget() {
	    _classCallCheck(this, Widget);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Widget.prototype.componentDidMount = function componentDidMount() {
	    eval(Widget.getScript(this.props));
	  };

	  Widget.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	    var _this2 = this;

	    var shouldUpdate = false;
	    var ignoredProps = ['inlineEditFocusToElement', 'isTempQuestion', 'name'];
	    var props = Object.keys(this.props);

	    props.forEach(function (prop, i) {
	      var key = props[i];
	      if (JSON.stringify(_this2.props[key]) !== JSON.stringify(nextProps[key]) && ignoredProps.indexOf(key) < 0) {
	        shouldUpdate = true;
	      }
	    });

	    return shouldUpdate;
	  };

	  Widget.prototype.componentDidUpdate = function componentDidUpdate() {
	    eval(Widget.getScript(this.props));
	  };

	  Widget.prototype.renderWidget = function renderWidget() {
	    var themeVersion = this.props.themeVersion;

	    var isNewDefaultTheme = themeVersion && themeVersion === 'v2';
	    var frameWidth = !isNewDefaultTheme && this.props.frameWidth !== undefined && this.props.frameWidth.value !== undefined && this.props.frameWidth.value !== 0 ? parseInt(this.props.frameWidth.value, 10) + 'px' : '100%';
	    var frameHeight = this.props.frameHeight !== undefined && this.props.frameHeight.value !== undefined && this.props.frameHeight.value !== 0 ? parseInt(this.props.frameHeight.value, 10) + 'px' : '100%';

	    var content = void 0;

	    if (this.props.URL !== undefined && this.props.URL.value !== undefined) {
	      if (this.props.passive) {
	        var maxWidth = void 0;
	        if (['Left', 'Right', 'Auto'].indexOf(this.props.labelAlign.value) !== -1 && this.props.label.value === 'Yes' && !isNewDefaultTheme) {
	          maxWidth = this.props.formWidth - this.props.labelWidth - 100;
	        } else {
	          maxWidth = this.props.formWidth - 100;
	        }

	        this.props.maxWidth.value = maxWidth;
	        this.props.finalSrc.value = 'https://widgets-cache.jotform.io/' + this.props.formID + '/' + this.props.id.value;

	        content = _react2.default.createElement(
	          'div',
	          { style: { maxWidth: this.props.maxWidth.value + 'px', width: '100 %', textAlign: '' + this.props.boxAlign.value }, 'data-component': 'widget-widget' },
	          _react2.default.createElement('iframe', {
	            title: '' + this.props.cfname.value,
	            'data-type': 'oembed',
	            scrolling: 'no',
	            className: 'custom-field-frame widget-frame',
	            id: 'customFieldFrame_' + this.props.id.value + '\'',
	            src: 'https://embed.jotform.io/render?refresh=1&url=' + encodeURIComponent(this.props.URL.value) + '&qid=' + this.props.id.value + '&formID=' + this.props.formID + '&maxWidth=' + maxWidth,
	            style: { width: '' + frameWidth, height: '' + frameHeight, border: 0, maxWidth: maxWidth + 'px' },
	            allowFullScreen: 'true',
	            allow: 'autoplay; fullscreen'
	          })
	        );
	      } else {
	        if (this.props.maxWidth === undefined) {
	          this.prop.maxWidth = { value: frameWidth };
	        }

	        var widgetIframe = void 0;
	        if (this.props.finalSrc.value) {
	          // apply client force caching for embed widgets
	          var now = new Date();
	          this.props.finalSrc.value += '?v=' + now.getTime();

	          widgetIframe = _react2.default.createElement('iframe', {
	            title: '' + this.props.cfname.value,
	            'data-type': 'oembed',
	            scrolling: 'no',
	            className: 'custom-field-frame widget-frame',
	            id: 'customFieldFrame_' + this.props.id.value,
	            src: this.props.finalSrc.value,
	            style: { width: '' + frameWidth, height: '' + frameHeight, border: 0, maxWidth: this.props.maxWidth.value + 'px' },
	            allowFullScreen: 'true',
	            allow: 'autoplay; fullscreen'
	          });
	        } else {
	          var srcLink = 'https://widgets-cache.jotform.io/' + this.props.formID + '/' + this.props.id.value;
	          if (this.props.enterprise.value) {
	            var host = this.props.cdnconfig.CDN;
	            if (typeof host !== 'undefined' && host !== '') {
	              srcLink = host.replace(/\/$/, '') + '/opt/widget-cache.php?slug=' + this.props.formID + '/' + this.props.id.value;
	            }
	          }

	          widgetIframe = _react2.default.createElement('iframe', {
	            title: '' + this.props.cfname.value,
	            'data-type': 'oembed',
	            scrolling: 'no',
	            className: 'custom-field-frame widget-frame',
	            id: 'customFieldFrame_' + this.props.id.value,
	            src: '' + srcLink,
	            style: { width: '' + frameWidth, height: '' + frameHeight, border: 0, maxWidth: this.props.maxWidth.value + 'px' },
	            allowFullScreen: 'true',
	            allow: 'autoplay; fullscreen'
	          });
	        }

	        content = _react2.default.createElement(
	          'div',
	          { style: { width: '100%', textAlign: '' + this.props.boxAlign.value }, 'data-component': 'widget-widget' },
	          widgetIframe
	        );
	      }
	    } else {
	      content = _react2.default.createElement(
	        'div',
	        null,
	        'Please run the wizard'
	      );
	    }

	    return content;
	  };

	  Widget.prototype.renderEmbedWidget = function renderEmbedWidget() {
	    var frameWidth = void 0;
	    if (this.props.frameWidth !== undefined && this.props.frameWidth.value !== undefined && this.props.frameWidth.value !== 0) {
	      frameWidth = parseInt(this.props.frameWidth.value, 10) + 10;
	    } else {
	      frameWidth = '100%';
	    }

	    var frameHeight = void 0;
	    if (this.props.frameHeight !== undefined && this.props.frameHeight.value !== undefined && this.props.frameHeight.value !== 0) {
	      frameHeight = parseInt(this.props.frameHeight.value, 10) + 10;
	    } else {
	      frameHeight = '100%';
	    }

	    return _react2.default.createElement(
	      'div',
	      { style: { width: '100%', textAlign: '' + this.props.boxAlign.value } },
	      _react2.default.createElement('iframe', {
	        title: '' + this.props.cfname.value,
	        className: 'embed-widget-frame',
	        'data-type': 'embed',
	        id: 'widget-' + this.props.id.value,
	        src: '/widget/' + this.props.formID + '/' + this.props.id.value + '?boxAlign=' + this.props.boxAlign.value + '&width=' + (frameWidth - 10),
	        style: { width: frameWidth + 'px', height: frameHeight + 'px', border: 0 }
	      })
	    );
	  };

	  Widget.prototype.renderFieldWidget = function renderFieldWidget() {
	    var _this3 = this;

	    var params = [];

	    // fixed single checkbox value
	    // "true" is now being converted as "1" because of the API usage
	    var fieldParameters = this.props.fieldParameters;

	    if (fieldParameters && Array.isArray(fieldParameters.value)) {
	      fieldParameters.value.forEach(function (param) {
	        if (param.type === 'checkbox') {
	          var name = param.name;
	          /* eslint guard-for-in:0 */

	          if (name in _this3.props && _this3.props[name].value === '1') {
	            _this3.props[name].value = 'true';
	          }
	          /* eslint guard-for-in:1 */
	        }
	      });
	    }

	    // if tab exist get values from each tab
	    if ('widgetTabs' in this.props) {
	      var tabproplist = this.props.widgetTabs.value;

	      for (var x = 0; x < tabproplist.length; x++) {
	        if (typeof tabproplist[x][1] !== 'undefined') {
	          params = (0, _Utils.buildParams)(params, this.props[tabproplist[x][1]].value.split(','), this.props);
	        }
	      }
	    } else if (this.props.settingNames.value !== '') {
	      params = (0, _Utils.buildParams)(params, this.props.settingNames.value.split(','), this.props);
	    }

	    // get the data settings
	    var dataSettings = encodeURIComponent(JSON.stringify(params));
	    var widgetRequired = this.props.required.value === 'Yes' ? 'widget-required' : '';
	    var widgetStatic = 'static' in this.props && this.props.static.value === 'Yes' ? 'widget-static' : '';

	    return _react2.default.createElement(
	      'div',
	      { 'data-widget-name': this.props.cfname.value, style: { width: '100%', textAlign: '' + this.props.boxAlign.value, overflowX: 'auto' }, 'data-component': 'widget-field' },
	      _react2.default.createElement('iframe', {
	        'data-client-id': this.props.selectedField.value || '',
	        title: '' + this.props.cfname.value,
	        frameBorder: '0',
	        scrolling: 'no',
	        allowtransparency: 'true',
	        allow: 'geolocation; microphone; camera; autoplay; encrypted-media; fullscreen',
	        'data-type': 'iframe',
	        className: 'custom-field-frame',
	        id: 'customFieldFrame_' + this.props.id.value,
	        src: '',
	        style: { maxWidth: this.props.frameWidth.value + 'px', border: 'none', width: '100%', height: this.props.frameHeight.value + 'px' },
	        'data-width': this.props.frameWidth.value,
	        'data-height': this.props.frameHeight.value
	      }),
	      _react2.default.createElement(
	        'div',
	        { className: 'widget-inputs-wrapper' },
	        _react2.default.createElement('input', {
	          id: 'input_' + this.props.id.value,
	          className: 'form-hidden form-widget ' + widgetRequired + ' ' + widgetStatic,
	          type: 'hidden',
	          name: this.props.qname.value,
	          value: ''
	        }),
	        _react2.default.createElement('input', {
	          id: 'widget_settings_' + this.props.id.value,
	          className: 'form-hidden form-widget-settings',
	          type: 'hidden',
	          value: dataSettings,
	          'data-version': '2'
	        })
	      ),
	      !this.props.passive && _react2.default.createElement('script', { type: 'text/javascript', dangerouslySetInnerHTML: { __html: Widget.getEmbeddedScript(this.props) } })
	    );
	  };

	  Widget.prototype.renderDirectEmbedWidget = function renderDirectEmbedWidget() {
	    var _this4 = this;

	    var content = void 0;
	    var widgetName = this.props.cfname.value + ' Widget';
	    var widgetClassName = widgetName ? widgetName.replace(/\s+/g, '-').toLowerCase() : '';
	    var defaultContent = typeof this.props.builderDescription !== 'undefined' && this.props.builderDescription.value && this.props.builderDescription.value.length > 0 && _react2.default.createElement(
	      'p',
	      null,
	      this.props.builderDescription.value.trim().locale()
	    );

	    if (this.props.passive) {
	      content = _react2.default.createElement(
	        'div',
	        { className: widgetClassName, style: { width: '100%', textAlign: '' + this.props.boxAlign.value }, 'data-component': 'widget-directEmbed' },
	        _react2.default.createElement(
	          'p',
	          null,
	          _react2.default.createElement(
	            'strong',
	            { style: { marginBottom: '10px' } },
	            widgetName.locale()
	          ),
	          this.props.required.value === 'Yes' ? _react2.default.createElement(
	            'div',
	            { style: { color: 'red', display: 'inline-block', textIndent: '9px', fontWeight: 'bold' } },
	            '*'
	          ) : ''
	        ),
	        this.renderDirectEmbedWidgetCustomContent || defaultContent,
	        _react2.default.createElement('input', { id: 'input_' + this.props.id.value, type: 'hidden', className: 'form-widget', value: '' })
	      );
	    } else if (this.props.finalHTML && this.props.finalHTML.value !== '') {
	      // parse special embed parameters
	      // these parameters should be serve uniquely to avoid errors
	      // specially when widget duplication occurs
	      var specialParams = {
	        qname: this.props.qname.value,
	        qid: this.props.qid.value.split('input_')[1]
	      };

	      Object.keys(specialParams).forEach(function (skey) {
	        if ({}.hasOwnProperty.call(specialParams, skey)) {
	          var specialParam = specialParams[skey];
	          _this4.props.finalHTML.value = _this4.props.finalHTML.value.replace(new RegExp('\\{' + skey + '\\}', 'gim'), specialParam);
	        }
	      });
	      var widgetStatic = 'static' in this.props && this.props.static.value === 'Yes' ? 'widget-static' : '';
	      var directEmbedHTML = _react2.default.createElement('div', {
	        className: 'direct-embed-widgets ' + widgetClassName + ' ' + widgetStatic,
	        'data-type': 'direct-embed',
	        style: { width: this.props.frameWidth.value + 'px', minHeight: this.props.frameHeight.value + 'px' },
	        dangerouslySetInnerHTML: { __html: this.props.finalHTML.value }
	      });

	      // patch for specific widgets that already disabled
	      // and shouldnt appear on the form, use their client_id
	      var disabledWidgets = ['52bd9113e8e18b8b76000070'];

	      if ('selectedField' in this.props && disabledWidgets.indexOf(this.props.selectedField.value) > -1) {
	        directEmbedHTML = '';
	      }

	      content = _react2.default.createElement(
	        'div',
	        { style: { width: '100%', textAlign: '' + this.props.boxAlign.value }, 'data-component': 'widget-directEmbed' },
	        directEmbedHTML
	      );
	    }
	    return content;
	  };

	  Widget.prototype.renderWebComponents = function renderWebComponents() {
	    return _react2.default.createElement(
	      'div',
	      { style: { width: '100%', textAlign: '' + this.props.boxAlign.value } },
	      this.props.finalHTML && this.props.finalHTML.value !== '' && _react2.default.createElement('link', { rel: 'import', href: this.props.webComponentURL.value }),
	      this.props.finalHTML && this.props.finalHTML.value !== '' && _react2.default.createElement(
	        'div',
	        { style: { width: this.props.frameWidth.value + 'px', height: this.props.frameHeight.value + 'px' } },
	        this.props.finalHTML.value
	      )
	    );
	  };

	  Widget.prototype.render = function render() {
	    // let widgetHTML = '<div style="width:100%; text-align:' + this.props.prop.boxAlign.value + ';">';
	    // if (this.props.passive && !((!this.props.text.nolabel && !(this.props.label && this.props.label.value != "Yes"))) && (this.props.required && this.props.required.value !== "No")) {
	    //   widgetHTML += '<span class="form-required" style="float:left">*</span>';
	    // }

	    if (this.props.isOfflineModeEnabled) {
	      return _react2.default.createElement(
	        'div',
	        { className: 'hidden-field-warning display-warning' },
	        _react2.default.createElement('span', { name: 'cw_moreinfo', className: 'ji ji-cw_moreinfo' }),
	        _react2.default.createElement(
	          'span',
	          null,
	          'You can\u2019t use widgets in offline mode.'
	        )
	      );
	    }

	    var content = void 0;
	    switch (this.props.widgetType.value) {
	      case 'widget':
	        content = this.renderWidget();
	        break;
	      case 'embed':
	        content = this.renderEmbedWidget();
	        break;
	      case 'field':
	        if (this.props.frameSrc.value !== '') {
	          content = this.renderFieldWidget();
	        } else {
	          content = null;
	        }
	        break;
	      case 'direct_embed':
	        content = this.renderDirectEmbedWidget();
	        break;
	      case 'webcomponents':
	        content = this.renderWebComponents();
	        break;
	      default:
	        break;
	    }
	    return content;
	  };

	  _createClass(Widget, [{
	    key: 'renderDirectEmbedWidgetCustomContent',
	    get: function get() {
	      var value = this.props.selectedField.value;


	      var customContentMap = {
	        // Adobe Sign, Echo Sign
	        '53bfd5c2ec70ec9f25000005': _react2.default.createElement(
	          'div',
	          { className: 'widget-customContentPanel-wrapper' },
	          _react2.default.createElement(
	            'div',
	            { className: 'widget-customContentPanel' },
	            _react2.default.createElement('input', { className: 'echoSign-input widget-customContentPanel-input form-textbox email-input', placeholder: 'myname@example.com', size: '30', tabIndex: '-1' })
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'widget-customContentPanel' },
	            _react2.default.createElement(
	              'button',
	              { className: 'echoSign-button widget-customContentPanel-input', type: 'button', id: 'signButton' },
	              'Sign with Adobe Sign'.locale()
	            )
	          )
	        ),
	        // Accessibility Enhancer widget
	        '591bfab2b81b39d90500089b': _react2.default.createElement(
	          _react.Fragment,
	          null,
	          _react2.default.createElement('img', { src: '/assets/img/uncategorized/access-enhancer.svg' }),
	          _react2.default.createElement(
	            'p',
	            { className: 'content' },
	            // eslint-disable-next-line
	            'This widget enhances the accessibility of your forms by modifying how error messages are displayed and adding ARIA (Accessible Rich Internet Applications Suite) attributes to your forms.'.locale(),
	            _react2.default.createElement('br', null),
	            _react2.default.createElement(
	              'b',
	              null,
	              'Note: This widget will not be shown on your form.'.locale()
	            )
	          )
	        )
	      };

	      return customContentMap[value];
	    }
	  }]);

	  return Widget;
	}(_react.Component);

	exports.default = Widget;


	Widget.propTypes = {
	  qid: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  qname: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  hasInputMask: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  inputTextMask: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  confirmationHint: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  defaultValue: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  subLabel: _propTypes2.default.shape({
	    value: _propTypes2.default.string
	  }),
	  formID: _propTypes2.default.string,
	  frameSrc: _propTypes2.default.shape(),
	  widgetType: _propTypes2.default.shape(),
	  finalHTML: _propTypes2.default.shape(),
	  frameWidth: _propTypes2.default.shape(),
	  frameHeight: _propTypes2.default.shape(),
	  webComponentURL: _propTypes2.default.shape(),
	  boxAlign: _propTypes2.default.shape(),
	  selectedField: _propTypes2.default.shape(),
	  static: _propTypes2.default.shape(),
	  builderDescription: _propTypes2.default.shape(),
	  id: _propTypes2.default.shape(),
	  passive: _propTypes2.default.bool,
	  required: _propTypes2.default.shape(),
	  cfname: _propTypes2.default.shape(),
	  fieldParameters: _propTypes2.default.shape(),
	  settingNames: _propTypes2.default.shape(),
	  widgetTabs: _propTypes2.default.shape(),
	  maxWidth: _propTypes2.default.shape(),
	  finalSrc: _propTypes2.default.shape(),
	  URL: _propTypes2.default.shape(),
	  labelWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
	  formWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
	  labelAlign: _propTypes2.default.shape(),
	  label: _propTypes2.default.shape(),
	  isOfflineModeEnabled: _propTypes2.default.bool,
	  themeVersion: _propTypes2.default.string,
	  cdnconfig: _propTypes2.default.shape({
	    CDN: _propTypes2.default.string
	  }),
	  enterprise: _propTypes2.default.shape({
	    value: _propTypes2.default.bool
	  })
	};

	Widget.getEmbeddedScript = function (props) {
	  var state = Widget.getState(props);
	  var widgetArray = ['529467003477f3512000001f', // 'Smooth Signature',
	  '52948fb29322cd302b00000c', // 'Terms & Conditions',
	  // '533946093c1ad0c45d000070', // 'Configurable List'
	  '528ee7cf8d5a5fc76a000004'];

	  if (props.widgetType.value === 'field') {
	    var widgetParameter = props.themeVersion === 'v2' && widgetArray.indexOf(props.selectedField.value) > -1 ? '&ndt=1' : '';
	    var isBuilder = props.passive && props.themeVersion === 'v2' && widgetArray.indexOf(props.selectedField.value) > -1 ? '&passive=1' : '';
	    return 'setTimeout(function(){\n            var _cFieldFrame = document.getElementById("customFieldFrame_' + props.id.value + '");\n            if (_cFieldFrame) {\n            _cFieldFrame.onload = function(){ if (typeof widgetFrameLoaded !== \'undefined\') { widgetFrameLoaded(' + props.id.value + ', ' + JSON.stringify(state.formProps) + ') } };\n            _cFieldFrame.src = "' + state.frameSrc + 'qid=' + props.id.value + '&ref=" + encodeURIComponent(window.location.protocol + "//" + window.location.host) + \'' + widgetParameter + '\' + \'' + isBuilder + '\'\n            +\'&injectCSS=\' + encodeURIComponent(window.location.search.indexOf("ndt=1") > -1);\n            _cFieldFrame.addClassName("custom-field-frame-rendered");\n            }\n        }, 0);';
	  }

	  return '';
	};

	Widget.getScript = function (props) {
	  // only load script on builder and not on the live form
	  if (props.passive) {
	    return Widget.getEmbeddedScript(props);
	  }

	  return '';
	};

	Widget.getState = function (props) {
	  var defaultState = {
	    formProps: {
	      formID: props.formID,
	      formBackground: props.formBackground !== '' ? props.formBackground : '#fff',
	      formFont: props.formFont
	    }
	  };
	  if (props.widgetType.value !== 'field') {
	    return defaultState;
	  }
	  var seperator = '?';
	  if (props.frameSrc.value.indexOf('?') > -1) {
	    seperator = '&';
	  }

	  // get frame src and normalize
	  var frameSrc = props.frameSrc.value + seperator;
	  frameSrc = frameSrc.trim().replace(/^(https?|ftp):/, '');

	  // fix htmlEscape bug, with single/multiple &amp; on a string
	  frameSrc = frameSrc.replace(/&(amp;)+/gi, '&');

	  // correct widget folder URLs w/o slash (prevent http redirect)
	  if (!frameSrc.match(/\.(html|php)\?/)) {
	    frameSrc = frameSrc.replace(/(\w)\?/, '$1/?');
	  }
	  return Object.assign(defaultState, { frameSrc: frameSrc });
	};

/***/ },
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Worldpay = function (_Component) {
	  _inherits(Worldpay, _Component);

	  function Worldpay() {
	    _classCallCheck(this, Worldpay);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Worldpay.prototype.render = function render() {
	    return _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	      controlPaymentType: 'control_worldpay'
	    }));
	  };

	  return Worldpay;
	}(_react.Component);

	exports.default = Worldpay;


	Worldpay.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Worldpay.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Worldpay.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _ProductContainer = __webpack_require__(3);

	var _ProductContainer2 = _interopRequireDefault(_ProductContainer);

	var _PaymentCreditCardAndAddress = __webpack_require__(92);

	var _PaymentCreditCardAndAddress2 = _interopRequireDefault(_PaymentCreditCardAndAddress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Worldpayus = function (_Component) {
	  _inherits(Worldpayus, _Component);

	  function Worldpayus() {
	    _classCallCheck(this, Worldpayus);

	    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	  }

	  Worldpayus.prototype.render = function render() {
	    var paymentCreditCardAndAddress = _react2.default.createElement(_PaymentCreditCardAndAddress2.default, _extends({}, this.props, { controlPaymentType: 'control_worldpayus' }));
	    return _react2.default.createElement(
	      'div',
	      { 'data-wrapper-react': 'true' },
	      _react2.default.createElement(_ProductContainer2.default, _extends({}, this.props, {
	        controlPaymentType: 'control_worldpayus'
	      })),
	      paymentCreditCardAndAddress
	    );
	  };

	  return Worldpayus;
	}(_react.Component);

	exports.default = Worldpayus;


	Worldpayus.getState = function (prop) {
	  return _ProductContainer2.default.getState(prop);
	};

	Worldpayus.getScript = function (prop) {
	  return _ProductContainer2.default.getScript(prop);
	};

	Worldpayus.getHidden = function (prop) {
	  return _ProductContainer2.default.getHidden(prop);
	};

/***/ }
/******/ ])
});
;